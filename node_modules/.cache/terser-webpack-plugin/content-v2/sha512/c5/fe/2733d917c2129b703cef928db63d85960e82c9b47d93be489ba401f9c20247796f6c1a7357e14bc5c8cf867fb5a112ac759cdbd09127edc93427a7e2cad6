{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/home/akshayk/jitsi/Meetings/node_modules/@tensorflow/tfjs-core/dist/tf-core.esm.js\",\"/home/akshayk/jitsi/Meetings/node_modules/webpack/buildin/global.js\",\"/home/akshayk/jitsi/Meetings/node_modules/node-libs-browser/node_modules/process/browser.js\",\"/home/akshayk/jitsi/Meetings/node_modules/node-libs-browser/node_modules/buffer/index.js\",\"/home/akshayk/jitsi/Meetings/node_modules/@tensorflow/tfjs-converter/dist/tf-converter.esm.js\",\"/home/akshayk/jitsi/Meetings/node_modules/base64-js/index.js\",\"/home/akshayk/jitsi/Meetings/node_modules/ieee754/index.js\",\"/home/akshayk/jitsi/Meetings/node_modules/node-libs-browser/node_modules/isarray/index.js\",\"/home/akshayk/jitsi/Meetings/node_modules/timers-browserify/main.js\",\"/home/akshayk/jitsi/Meetings/node_modules/setimmediate/setImmediate.js\",\"/home/akshayk/jitsi/Meetings/node_modules/@tensorflow-models/body-pix/dist/body-pix.esm.js\",\"/home/akshayk/jitsi/Meetings/react/features/stream-effects/blur/TimerWorker.js\",\"/home/akshayk/jitsi/Meetings/react/features/stream-effects/blur/JitsiStreamBlurEffect.js\",\"/home/akshayk/jitsi/Meetings/react/features/stream-effects/blur/index.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"__webpack_exports__\",\"global\",\"process\",\"Buffer\",\"setImmediate\",\"xp\",\"bp\",\"wp\",\"Cp\",\"Jr\",\"Zr\",\"Rp\",\"yp\",\"Ip\",\"pt\",\"Sc\",\"Ep\",\"ct\",\"it\",\"ht\",\"Es\",\"Rs\",\"Is\",\"Ru\",\"Iu\",\"ku\",\"zl\",\"Gl\",\"Hl\",\"ql\",\"ks\",\"Ns\",\"Ss\",\"Nu\",\"As\",\"_l\",\"Ml\",\"Qe\",\"xo\",\"sc\",\"du\",\"vu\",\"mu\",\"gu\",\"fu\",\"cu\",\"hu\",\"pu\",\"er\",\"sl\",\"ap\",\"Zn\",\"nr\",\"Ts\",\"Ds\",\"rr\",\"mn\",\"Mn\",\"Bn\",\"Pn\",\"Ln\",\"Wn\",\"pl\",\"fl\",\"vl\",\"ml\",\"xl\",\"dl\",\"bl\",\"_s\",\"Os\",\"or\",\"jr\",\"Be\",\"ar\",\"gl\",\"bc\",\"Me\",\"Ve\",\"Pe\",\"Su\",\"Au\",\"Cl\",\"wc\",\"Zl\",\"Fe\",\"Oe\",\"u\",\"qu\",\"$u\",\"Fs\",\"Ms\",\"ir\",\"Bs\",\"sr\",\"fc\",\"Tn\",\"je\",\"Xe\",\"Ps\",\"Tu\",\"Ic\",\"Zc\",\"al\",\"xc\",\"$e\",\"Gr\",\"Hr\",\"Ku\",\"ju\",\"Xu\",\"Yu\",\"Rc\",\"Ec\",\"dc\",\"yn\",\"Yc\",\"Ac\",\"ep\",\"mc\",\"Xs\",\"js\",\"Ks\",\"ze\",\"tc\",\"Qu\",\"Ju\",\"Zu\",\"tl\",\"Gc\",\"Dn\",\"ac\",\"Ls\",\"Ws\",\"Us\",\"Qr\",\"$l\",\"yu\",\"xu\",\"bu\",\"wu\",\"Wc\",\"wl\",\"rp\",\"Kl\",\"Dl\",\"Fl\",\"Du\",\"_u\",\"jl\",\"Le\",\"Xl\",\"Ou\",\"Fu\",\"Mu\",\"Bu\",\"Yl\",\"lc\",\"Pu\",\"Lu\",\"uc\",\"ur\",\"Vs\",\"Ap\",\"ic\",\"el\",\"nl\",\"lr\",\"Sn\",\"On\",\"vn\",\"El\",\"cr\",\"hr\",\"pr\",\"fr\",\"dr\",\"Ol\",\"Wu\",\"Uu\",\"ec\",\"tr\",\"Jl\",\"We\",\"vr\",\"gr\",\"mr\",\"yr\",\"_n\",\"qe\",\"gn\",\"zs\",\"Ye\",\"nc\",\"Ke\",\"xr\",\"Rl\",\"Il\",\"kl\",\"Nl\",\"Sl\",\"vc\",\"Gs\",\"Hs\",\"wn\",\"pc\",\"rc\",\"yl\",\"lp\",\"He\",\"Je\",\"kr\",\"qs\",\"$s\",\"Nc\",\"Ys\",\"Qs\",\"Bl\",\"Pl\",\"Ll\",\"Wl\",\"Ul\",\"Yr\",\"Js\",\"br\",\"yc\",\"gc\",\"Un\",\"Zs\",\"tu\",\"Vu\",\"zu\",\"wr\",\"Cr\",\"eu\",\"kc\",\"cc\",\"Gu\",\"Hu\",\"Ql\",\"nu\",\"ru\",\"xn\",\"Cn\",\"En\",\"Rn\",\"In\",\"kn\",\"Nn\",\"It\",\"vp\",\"Ue\",\"Er\",\"Ge\",\"hc\",\"Np\",\"oc\",\"Rr\",\"il\",\"Ir\",\"Y\",\"qr\",\"$r\",\"gt\",\"Kr\",\"mp\",\"gp\",\"Cu\",\"Eu\",\"An\",\"Fn\",\"e\",\"setPrototypeOf\",\"__proto__\",\"Array\",\"this\",\"constructor\",\"Promise\",\"a\",\"next\",\"throw\",\"done\",\"then\",\"apply\",\"label\",\"sent\",\"trys\",\"ops\",\"return\",\"iterator\",\"TypeError\",\"pop\",\"length\",\"push\",\"flags\",\"flagRegistry\",\"urlFlags\",\"populateURLFlags\",\"setPlatform\",\"platform\",\"console\",\"warn\",\"platformName\",\"registerFlag\",\"evaluationFn\",\"setHook\",\"set\",\"evaluateFlag\",\"getNumber\",\"getBool\",\"getFlags\",\"configurable\",\"Error\",\"setFlags\",\"assign\",\"reset\",\"location\",\"search\",\"tfjsflags\",\"split\",\"forEach\",\"toLowerCase\",\"replace\",\"arguments\",\"decodeURIComponent\",\"join\",\"freeze\",\"Environment\",\"getQueryParams\",\"ENV\",\"setEnvironmentGlobal\",\"Math\",\"random\",\"max\",\"min\",\"h\",\"f\",\"y\",\"v\",\"isArray\",\"_\",\"g\",\"x\",\"b\",\"tanh\",\"exp\",\"w\",\"ceil\",\"sqrt\",\"C\",\"repeat\",\"E\",\"setTimeout\",\"R\",\"slice\",\"I\",\"map\",\"concat\",\"every\",\"k\",\"sort\",\"newShape\",\"keptDims\",\"N\",\"Float32Array\",\"Int32Array\",\"Uint8Array\",\"S\",\"A\",\"isNaN\",\"isFinite\",\"T\",\"D\",\"O\",\"F\",\"M\",\"String\",\"B\",\"P\",\"L\",\"W\",\"U\",\"V\",\"z\",\"round\",\"G\",\"reduce\",\"H\",\"q\",\"$\",\"now\",\"K\",\"Number\",\"isInteger\",\"j\",\"encode\",\"X\",\"decode\",\"shuffle\",\"clamp\",\"nearestLargerEven\",\"sum\",\"randUniform\",\"distSquared\",\"assert\",\"assertShapesMatch\",\"assertNonNull\",\"flatten\",\"sizeFromShape\",\"isScalarShape\",\"arraysEqual\",\"isInt\",\"sizeToSquarishShape\",\"createShuffledIndices\",\"Uint32Array\",\"rightPad\",\"repeatedTry\",\"inferFromImplicitShape\",\"parseAxisParam\",\"squeezeShape\",\"getTypedArrayFromDType\",\"getArrayFromDType\",\"checkConversionForErrors\",\"isValidDtype\",\"hasEncodingLoss\",\"isTypedArray\",\"bytesPerElement\",\"bytesFromStringArray\",\"isString\",\"isBoolean\",\"isNumber\",\"inferDtype\",\"isFunction\",\"nearestDivisor\",\"computeStrides\",\"toTypedArray\",\"toNestedArray\",\"makeOnesTypedArray\",\"makeZerosTypedArray\",\"assertNonNegativeIntegerDimensions\",\"fetch\",\"encodeString\",\"decodeString\",\"Q\",\"backendTimer\",\"logger\",\"J\",\"profileKernel\",\"time\",\"data\",\"dtype\",\"getExtraProfileInfo\",\"logKernelProfile\",\"kernelMs\",\"rank\",\"size\",\"shape\",\"toString\",\"log\",\"Z\",\"tt\",\"et\",\"rt\",\"parseFloat\",\"toFixed\",\"ot\",\"at\",\"values\",\"strides\",\"locToIndex\",\"indexToLoc\",\"floor\",\"toTensor\",\"make\",\"st\",\"ut\",\"lt\",\"kept\",\"isDisposedInternal\",\"dataId\",\"id\",\"nextTensorId\",\"rankType\",\"registerTensor\",\"write\",\"throwIfDisposed\",\"as1D\",\"asScalar\",\"reshape\",\"as2D\",\"as3D\",\"as4D\",\"as5D\",\"asType\",\"cast\",\"buffer\",\"bufferSync\",\"dataSync\",\"array\",\"arraySync\",\"read\",\"readSync\",\"bytes\",\"dispose\",\"isDisposed\",\"disposeTensor\",\"toFloat\",\"toInt\",\"toBool\",\"print\",\"reshapeAs\",\"expandDims\",\"cumsum\",\"squeeze\",\"clone\",\"oneHot\",\"fill\",\"from\",\"nt\",\"tile\",\"gather\",\"matMul\",\"dot\",\"norm\",\"reverse\",\"stack\",\"unstack\",\"pad\",\"batchNormalization\",\"batchNorm\",\"all\",\"any\",\"logSumExp\",\"prod\",\"mean\",\"argMin\",\"argMax\",\"add\",\"addStrict\",\"atan2\",\"sub\",\"subStrict\",\"pow\",\"powStrict\",\"mul\",\"mulStrict\",\"div\",\"floorDiv\",\"divStrict\",\"minimum\",\"minimumStrict\",\"maximum\",\"maximumStrict\",\"mod\",\"modStrict\",\"squaredDifference\",\"squaredDifferenceStrict\",\"transpose\",\"notEqual\",\"notEqualStrict\",\"less\",\"lessStrict\",\"equal\",\"equalStrict\",\"lessEqual\",\"lessEqualStrict\",\"greater\",\"greaterStrict\",\"greaterEqual\",\"greaterEqualStrict\",\"logicalAnd\",\"logicalOr\",\"logicalNot\",\"logicalXor\",\"where\",\"neg\",\"sign\",\"isInf\",\"expm1\",\"log1p\",\"rsqrt\",\"square\",\"reciprocal\",\"abs\",\"clipByValue\",\"relu\",\"elu\",\"selu\",\"leakyRelu\",\"prelu\",\"sigmoid\",\"logSigmoid\",\"softplus\",\"zerosLike\",\"onesLike\",\"sin\",\"cos\",\"tan\",\"asin\",\"acos\",\"atan\",\"sinh\",\"cosh\",\"asinh\",\"acosh\",\"atanh\",\"erf\",\"step\",\"softmax\",\"logSoftmax\",\"resizeBilinear\",\"image\",\"resizeNearestNeighbor\",\"conv1d\",\"conv2d\",\"conv2dTranspose\",\"depthwiseConv2D\",\"depthwiseConv2d\",\"separableConv2d\",\"avgPool\",\"maxPool\",\"localResponseNormalization\",\"pool\",\"variable\",\"unsortedSegmentSum\",\"batchToSpaceND\",\"spaceToBatchND\",\"topk\",\"stridedSlice\",\"depthToSpace\",\"fft\",\"spectral\",\"ifft\",\"rfft\",\"irfft\",\"hasInstance\",\"trainable\",\"nextVariableId\",\"registerVariable\",\"disposeVariable\",\"Function\",\"ft\",\"dt\",\"vt\",\"mt\",\"R0\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R6\",\"float32\",\"int32\",\"bool\",\"complex64\",\"yt\",\"xt\",\"bt\",\"wt\",\"Ct\",\"Et\",\"has\",\"Set\",\"Rt\",\"makeTypesMatch\",\"assertTypesMatch\",\"isTensorInList\",\"getTensorsInContainer\",\"kt\",\"registeredVariables\",\"nextTapeNodeId\",\"numBytes\",\"numTensors\",\"numStringTensors\",\"numDataBuffers\",\"gradientDepth\",\"kernelDepth\",\"scopeStack\",\"nextScopeId\",\"tensorInfo\",\"WeakMap\",\"profiling\",\"activeProfile\",\"newBytes\",\"newTensors\",\"peakBytes\",\"kernels\",\"result\",\"Nt\",\"registry\",\"registryFactory\",\"pendingBackendInitId\",\"state\",\"ready\",\"pendingBackendInit\",\"backendInstance\",\"getSortedBackends\",\"initializeBackend\",\"success\",\"setBackend\",\"backendName\",\"initializeBackendsAndReturnBest\",\"asyncInit\",\"backendNames\",\"keys\",\"findBackend\",\"findBackendFactory\",\"factory\",\"registerBackend\",\"priority\",\"profiler\",\"resolve\",\"catch\",\"message\",\"removeBackend\",\"moveData\",\"tidy\",\"scopedRun\",\"startScope\",\"endScope\",\"error\",\"addTapeNode\",\"runKernel\",\"isTapeOn\",\"activeScope\",\"keep\",\"backend\",\"inputs\",\"outputs\",\"saved\",\"gradient\",\"activeTape\",\"bytesAdded\",\"totalBytesSnapshot\",\"tensorsAdded\",\"totalTensorsSnapshot\",\"inputShapes\",\"outputShape\",\"refCount\",\"register\",\"track\",\"disposeData\",\"delete\",\"disposeVariables\",\"memory\",\"unreliable\",\"reasons\",\"profile\",\"startTape\",\"endTape\",\"scopeId\",\"gradients\",\"grads\",\"customGrad\",\"gradFunc\",\"fromPixels\",\"wallMs\",\"St\",\"window\",\"self\",\"_tfengine\",\"At\",\"document\",\"WorkerGlobalScope\",\"versions\",\"node\",\"navigator\",\"userAgent\",\"test\",\"vendor\",\"Tt\",\"Dt\",\"_t\",\"Ot\",\"alpha\",\"antialias\",\"premultipliedAlpha\",\"preserveDrawingBuffer\",\"depth\",\"stencil\",\"failIfMajorPerformanceCaveat\",\"Ft\",\"Mt\",\"Bt\",\"addEventListener\",\"preventDefault\",\"getContext\",\"isContextLost\",\"disable\",\"DEPTH_TEST\",\"STENCIL_TEST\",\"BLEND\",\"DITHER\",\"POLYGON_OFFSET_FILL\",\"SAMPLE_COVERAGE\",\"enable\",\"SCISSOR_TEST\",\"CULL_FACE\",\"cullFace\",\"BACK\",\"OffscreenCanvas\",\"createElement\",\"Pt\",\"Lt\",\"Wt\",\"Ut\",\"R32F\",\"R16F\",\"RGBA16F\",\"RGBA32F\",\"RED\",\"HALF_FLOAT\",\"FLOAT\",\"RGBA\",\"HALF_FLOAT_OES\",\"internalFormatFloat\",\"internalFormatHalfFloat\",\"internalFormatPackedHalfFloat\",\"internalFormatPackedFloat\",\"textureFormatFloat\",\"downloadTextureFormat\",\"downloadUnpackNumChannels\",\"defaultNumChannels\",\"textureTypeHalfFloat\",\"textureTypeFloat\",\"Vt\",\"getError\",\"NO_ERROR\",\"qt\",\"RENDER\",\"UPLOAD\",\"PIXELS\",\"DOWNLOAD\",\"UNPACKED_FLOAT16\",\"UNPACKED_FLOAT32\",\"PACKED_4X1_UNSIGNED_BYTE\",\"PACKED_2X2_FLOAT32\",\"PACKED_2X2_FLOAT16\",\"zt\",\"Gt\",\"Ht\",\"INVALID_ENUM\",\"INVALID_VALUE\",\"INVALID_OPERATION\",\"INVALID_FRAMEBUFFER_OPERATION\",\"OUT_OF_MEMORY\",\"CONTEXT_LOST_WEBGL\",\"$t\",\"ve\",\"getExtension\",\"Kt\",\"createShader\",\"VERTEX_SHADER\",\"shaderSource\",\"compileShader\",\"getShaderParameter\",\"COMPILE_STATUS\",\"getShaderInfoLog\",\"jt\",\"FRAGMENT_SHADER\",\"Qt\",\"exec\",\"Xt\",\"Yt\",\"Jt\",\"createProgram\",\"Zt\",\"linkProgram\",\"getProgramParameter\",\"LINK_STATUS\",\"getProgramInfoLog\",\"te\",\"validateProgram\",\"VALIDATE_STATUS\",\"ee\",\"createBuffer\",\"bindBuffer\",\"ARRAY_BUFFER\",\"bufferData\",\"STATIC_DRAW\",\"ne\",\"ELEMENT_ARRAY_BUFFER\",\"re\",\"createTexture\",\"oe\",\"ae\",\"createFramebuffer\",\"ie\",\"getAttribLocation\",\"vertexAttribPointer\",\"enableVertexAttribArray\",\"se\",\"me\",\"activeTexture\",\"TEXTURE0\",\"bindTexture\",\"TEXTURE_2D\",\"ue\",\"getUniformLocation\",\"le\",\"ce\",\"uniform1i\",\"he\",\"bindFramebuffer\",\"FRAMEBUFFER\",\"framebufferTexture2D\",\"COLOR_ATTACHMENT0\",\"pe\",\"fe\",\"checkFramebufferStatus\",\"FRAMEBUFFER_COMPLETE\",\"de\",\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\",\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\",\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\",\"FRAMEBUFFER_UNSUPPORTED\",\"MAX_COMBINED_TEXTURE_IMAGE_UNITS\",\"ge\",\"ye\",\"xe\",\"be\",\"we\",\"Ce\",\"Ee\",\"getParameter\",\"MAX_TEXTURE_SIZE\",\"Re\",\"MAX_TEXTURE_IMAGE_UNITS\",\"Ie\",\"ke\",\"Ne\",\"Se\",\"Te\",\"Ae\",\"texImage2D\",\"deleteTexture\",\"deleteFramebuffer\",\"De\",\"fenceSync\",\"_e\",\"callAndCheck\",\"canBeRepresented\",\"getWebGLErrorMessage\",\"getExtensionOrThrow\",\"createVertexShader\",\"createFragmentShader\",\"createStaticVertexBuffer\",\"createStaticIndexBuffer\",\"getNumChannels\",\"validateTextureSize\",\"bindVertexBufferToProgramAttribute\",\"bindTextureUnit\",\"unbindTextureUnit\",\"getProgramUniformLocationOrThrow\",\"getProgramUniformLocation\",\"bindTextureToProgramUniformSampler\",\"bindCanvasToFramebuffer\",\"viewport\",\"canvas\",\"width\",\"height\",\"scissor\",\"bindColorTextureToFramebuffer\",\"unbindColorTextureFromFramebuffer\",\"validateFramebuffer\",\"getFramebufferErrorMessage\",\"getBatchDim\",\"getRowsCols\",\"getShapeAs3D\",\"getTextureShapeFromLogicalShape\",\"isReshapeFree\",\"getWebGLMaxTextureSize\",\"resetMaxTextureSize\",\"resetMaxTexturesInShader\",\"getMaxTexturesInShader\",\"getWebGLDisjointQueryTimerVersion\",\"hasExtension\",\"isWebGLVersionEnabled\",\"isCapableOfRenderingToFloatTexture\",\"isDownloadFloatTextureEnabled\",\"isWebGLFenceEnabled\",\"Ze\",\"tn\",\"en\",\"nn\",\"indexOf\",\"rn\",\"on\",\"an\",\"sn\",\"un\",\"ln\",\"cn\",\"hn\",\"pn\",\"fn\",\"dn\",\"endsWith\",\"substring\",\"opera\",\"substr\",\"complex_\",\"complex\",\"$real\",\"$imag\",\"real_\",\"real\",\"$input\",\"imag_\",\"imag\",\"bn\",\"linspace\",\"onesLike_\",\"$x\",\"zerosLike_\",\"concat_\",\"filter\",\"concat1d_\",\"concat2d_\",\"concat3d_\",\"concat4d_\",\"split_\",\"Vn\",\"globalThis\",\"zn\",\"charCodeAt\",\"s0\",\"s1\",\"s2\",\"double\",\"quick\",\"alea\",\"Gn\",\"xor128\",\"Hn\",\"xorwow\",\"qn\",\"Date\",\"xorshift7\",\"$n\",\"xor4096\",\"Kn\",\"tychei\",\"jn\",\"entropy\",\"randomBytes\",\"crypto\",\"msCrypto\",\"getRandomValues\",\"plugins\",\"screen\",\"pass\",\"fromCharCode\",\"Xn\",\"Yn\",\"stdDev\",\"nextVal\",\"NaN\",\"truncated\",\"upper\",\"lower\",\"nextValue\",\"isValidTruncated\",\"convertValue\",\"Qn\",\"beta\",\"randu\",\"randn\",\"Jn\",\"canReturnFloat\",\"range\",\"batchToSpaceND_\",\"cast_\",\"clone_\",\"cumsum_\",\"permutedX\",\"depthToSpace_\",\"expandDims_\",\"splice\",\"eye_\",\"multinomial_\",\"multinomial\",\"logits2D\",\"oneHot_\",\"$indices\",\"pad_\",\"pad1d_\",\"pad2d_\",\"pad3d_\",\"pad4d_\",\"rand_\",\"randomNormal_\",\"randomGamma_\",\"randomUniform_\",\"reshape_\",\"spaceToBatchND_\",\"squeeze_\",\"stack_\",\"tile_\",\"truncatedNormal_\",\"unstack_\",\"Nr\",\"Sr\",\"Ar\",\"Tr\",\"Dr\",\"_r\",\"Or\",\"Fr\",\"Br\",\"sliceRank\",\"numUpdates\",\"sliceSize\",\"outputSize\",\"Pr\",\"Lr\",\"Wr\",\"MIN_SAFE_INTEGER\",\"MAX_SAFE_INTEGER\",\"Ur\",\"Vr\",\"zr\",\"Xr\",\"grad\",\"some\",\"softmax_\",\"logSoftmax_\",\"dataMover\",\"floatPrecision\",\"epsilon\",\"batchMatMul\",\"fusedBatchMatMul\",\"transposeA\",\"transposeB\",\"bias\",\"activation\",\"preluActivationWeights\",\"addN\",\"subtract\",\"multiply\",\"realDivide\",\"select\",\"eluDer\",\"int\",\"clip\",\"complexAbs\",\"fusedConv2d\",\"conv2dDerInput\",\"conv2dDerFilter\",\"depthwiseConv2DDerInput\",\"depthwiseConv2DDerFilter\",\"conv3d\",\"conv3dDerInput\",\"conv3dDerFilter\",\"maxPoolBackprop\",\"avgPoolBackprop\",\"avgPool3d\",\"avgPool3dBackprop\",\"maxPool3d\",\"maxPool3dBackprop\",\"gatherND\",\"scatterND\",\"resizeBilinearBackprop\",\"resizeNearestNeighborBackprop\",\"localResponseNormalization4D\",\"LRNGrad\",\"nonMaxSuppression\",\"cropAndResize\",\"sparseToDense\",\"diag\",\"to\",\"unshift\",\"eo\",\"no\",\"ro\",\"uo\",\"ao\",\"oo\",\"lo\",\"io\",\"co\",\"top\",\"bottom\",\"left\",\"right\",\"type\",\"so\",\"ho\",\"padInfo\",\"outHeight\",\"outWidth\",\"batchSize\",\"dataFormat\",\"inHeight\",\"inWidth\",\"inChannels\",\"outChannels\",\"strideHeight\",\"strideWidth\",\"filterHeight\",\"filterWidth\",\"effectiveFilterHeight\",\"effectiveFilterWidth\",\"dilationHeight\",\"dilationWidth\",\"inShape\",\"outShape\",\"filterShape\",\"front\",\"back\",\"outDepth\",\"inDepth\",\"strideDepth\",\"filterDepth\",\"effectiveFilterDepth\",\"dilationDepth\",\"po\",\"fo\",\"vo\",\"mo\",\"go\",\"yo\",\"castTensor\",\"reshapeTensor\",\"linspaceImpl\",\"upcastType\",\"axesAreInnerMostDims\",\"combineLocations\",\"computeOutAndReduceShapes\",\"expandShapeToKeepDim\",\"assertAxesAreInnerMostDims\",\"getAxesPermutation\",\"getUndoAxesPermutation\",\"getInnerMostAxes\",\"getBroadcastDims\",\"getReductionAxes\",\"assertAndGetBroadcastShape\",\"assertParamsConsistent\",\"computeOutShape\",\"computePool2DInfo\",\"computePool3DInfo\",\"computeConv2DInfo\",\"computeConv3DInfo\",\"computeDefaultPad\",\"tupleValuesAreOne\",\"eitherStridesOrDilationsAreOne\",\"convertConv2DDataFormat\",\"bo\",\"wo\",\"Co\",\"Eo\",\"PI\",\"Ro\",\"score\",\"boxIndex\",\"Io\",\"subarray\",\"ko\",\"No\",\"So\",\"index\",\"Ao\",\"To\",\"variableNames\",\"userCode\",\"Do\",\"usesPackedTextures\",\"_o\",\"windowSize\",\"inSize\",\"Oo\",\"Fo\",\"Mo\",\"version\",\"attribute\",\"varyingVs\",\"varyingFs\",\"texture2D\",\"output\",\"defineOutput\",\"defineSpecialNaN\",\"defineSpecialInf\",\"defineRound\",\"Bo\",\"Po\",\"Lo\",\"Wo\",\"shapeInfo\",\"logicalShape\",\"isUniform\",\"Vo\",\"charAt\",\"toUpperCase\",\"texShape\",\"Xo\",\"Yo\",\"Uo\",\"$o\",\"Ko\",\"flatOffset\",\"jo\",\"zo\",\"Go\",\"Ho\",\"isPacked\",\"qo\",\"JSON\",\"parse\",\"stringify\",\"Qo\",\"Jo\",\"Zo\",\"ta\",\"ea\",\"oa\",\"aa\",\"ia\",\"sa\",\"ua\",\"la\",\"ca\",\"ha\",\"supportsBroadcasting\",\"pa\",\"getCustomSetupFunc\",\"minLoc\",\"getUniformLocationNoThrow\",\"maxLoc\",\"uniform1f\",\"fa\",\"da\",\"va\",\"ma\",\"ga\",\"ya\",\"xa\",\"ba\",\"wa\",\"Ca\",\"Ea\",\"Ra\",\"Ia\",\"ka\",\"Na\",\"Sa\",\"Aa\",\"Ta\",\"Da\",\"_a\",\"blockSize\",\"getHeightCoordString\",\"getWidthCoordString\",\"getDepthCoordString\",\"getOutputDepthSize\",\"getInputSamplingString\",\"Oa\",\"Fa\",\"Ma\",\"Ba\",\"Pa\",\"Ua\",\"Va\",\"valueLoc\",\"za\",\"Ga\",\"Ha\",\"qa\",\"sliceDim\",\"$a\",\"Ka\",\"ja\",\"Uint16Array\",\"Xa\",\"texParameteri\",\"TEXTURE_WRAP_S\",\"CLAMP_TO_EDGE\",\"TEXTURE_WRAP_T\",\"TEXTURE_MIN_FILTER\",\"NEAREST\",\"TEXTURE_MAG_FILTER\",\"Ya\",\"Qa\",\"Ja\",\"UNSIGNED_BYTE\",\"Za\",\"ti\",\"ei\",\"ni\",\"ri\",\"oi\",\"PIXEL_PACK_BUFFER\",\"STREAM_READ\",\"readPixels\",\"ai\",\"getBufferSubData\",\"ii\",\"si\",\"ui\",\"li\",\"createVertexBuffer\",\"createIndexBuffer\",\"createFloat32MatrixTexture\",\"createFloat16MatrixTexture\",\"createUnsignedBytesMatrixTexture\",\"createPackedMatrixTexture\",\"createFloat16PackedMatrixTexture\",\"bindVertexProgramAttributeStreams\",\"uploadDenseMatrixToTexture\",\"uploadPixelDataToTexture\",\"createBufferFromOutputTexture\",\"downloadFloat32MatrixFromBuffer\",\"downloadByteEncodedFloatMatrixFromOutputTexture\",\"downloadPackedMatrixFromBuffer\",\"downloadMatrixFromPackedOutputTexture\",\"ci\",\"outputTexture\",\"program\",\"disposed\",\"vertexAttrsAreBound\",\"itemsToPoll\",\"textureFloatExtension\",\"debug\",\"colorBufferFloatExtension\",\"textureHalfFloatExtension\",\"colorBufferHalfFloatExtension\",\"vertexBuffer\",\"indexBuffer\",\"framebuffer\",\"textureConfig\",\"finish\",\"deleteBuffer\",\"deleteMatrixTexture\",\"downloadMatrixDriver\",\"createBufferFromTexture\",\"bindTextureToFrameBuffer\",\"unbindTextureToFrameBuffer\",\"createAndWaitForFence\",\"createFence\",\"pollFence\",\"SYNC_GPU_COMMANDS_COMPLETE\",\"flush\",\"clientWaitSync\",\"ALREADY_SIGNALED\",\"CONDITION_SATISFIED\",\"beginQuery\",\"endQuery\",\"isQueryAvailable\",\"query\",\"isFencePassed\",\"downloadMatrixFromPackedTexture\",\"attachShader\",\"setProgram\",\"deleteProgram\",\"useProgram\",\"getAttributeLocation\",\"setInputMatrixTexture\",\"throwIfNoProgram\",\"setOutputMatrixTexture\",\"setOutputMatrixTextureDriver\",\"setOutputPackedMatrixTexture\",\"setOutputMatrixWriteRegion\",\"setOutputMatrixWriteRegionDriver\",\"setOutputPackedMatrixWriteRegion\",\"debugValidate\",\"executeProgram\",\"drawElements\",\"TRIANGLES\",\"UNSIGNED_SHORT\",\"blockUntilAllProgramsCompleted\",\"getQueryTimerExtension\",\"disjointQueryTimerExtension\",\"getQueryTimerExtensionWebGL2\",\"getQueryTimerExtensionWebGL1\",\"createQuery\",\"TIME_ELAPSED_EXT\",\"createQueryEXT\",\"beginQueryEXT\",\"endQueryEXT\",\"waitForQueryAndGetTime\",\"getQueryTime\",\"getQueryParameter\",\"QUERY_RESULT\",\"getQueryObjectEXT\",\"QUERY_RESULT_EXT\",\"QUERY_RESULT_AVAILABLE\",\"disjoint\",\"GPU_DISJOINT_EXT\",\"QUERY_RESULT_AVAILABLE_EXT\",\"addItemToPoll\",\"pollItems\",\"isDoneFn\",\"resolveFn\",\"hi\",\"texData\",\"pi\",\"fi\",\"di\",\"depthRadius\",\"vi\",\"mi\",\"gi\",\"yi\",\"xi\",\"seedLoc\",\"bi\",\"wi\",\"Ci\",\"Ei\",\"Ri\",\"Ii\",\"ki\",\"Ni\",\"Si\",\"Ai\",\"Ti\",\"Di\",\"_i\",\"Oi\",\"Fi\",\"Mi\",\"Bi\",\"numSegments\",\"Pi\",\"Li\",\"Wi\",\"startLoc\",\"uniform1iv\",\"Ui\",\"Vi\",\"zi\",\"gpgpu\",\"numUsedTextures\",\"numFreeTextures\",\"freeTextures\",\"logEnabled\",\"usedTextures\",\"acquireTexture\",\"Gi\",\"Hi\",\"shift\",\"releaseTexture\",\"getNumUsedTextures\",\"getNumFreeTextures\",\"qi\",\"$i\",\"Ki\",\"ji\",\"Xi\",\"Yi\",\"Qi\",\"Ji\",\"Zi\",\"ts\",\"es\",\"rs\",\"os\",\"as\",\"is\",\"ss\",\"fs\",\"ds\",\"vs\",\"ms\",\"gs\",\"ys\",\"xs\",\"bs\",\"ws\",\"Cs\",\"pendingRead\",\"pendingDisposal\",\"WeakSet\",\"dataRefCount\",\"numBytesInGPU\",\"uploadWaitMs\",\"downloadWaitMs\",\"warnedAboutMemory\",\"binaryCache\",\"gpgpuCreatedLocally\",\"textureManager\",\"numMBBeforeWarning\",\"devicePixelRatio\",\"HTMLCanvasElement\",\"ImageData\",\"HTMLVideoElement\",\"HTMLImageElement\",\"videoWidth\",\"videoHeight\",\"fromPixels2DContext\",\"drawImage\",\"makeTensorHandle\",\"usage\",\"getTexture\",\"makePackedTensor\",\"compileAndRun\",\"releaseGPUData\",\"complexTensors\",\"convertAndCacheOnCPU\",\"activeTimers\",\"getValuesFromTexture\",\"texture\",\"programTimersStack\",\"startTimer\",\"startMs\",\"endMs\",\"endTimer\",\"origDataId\",\"computeBytes\",\"uploadToGPU\",\"getDataInfo\",\"getCPUBackend\",\"cpuBackend\",\"shouldExecuteOnCPU\",\"getGPGPUContext\",\"makeOutputArray\",\"shallowSlice\",\"packedUnaryOp\",\"makeComplexComponentTensorHandle\",\"packedBinaryOp\",\"argReduce\",\"argReducePacked\",\"segOpCompute\",\"argMinMaxReduce\",\"complexSeparableBinaryOp\",\"conv2dByMatMul\",\"conv2dWithIm2Row\",\"packedReshape\",\"fftImpl\",\"unpackTensor\",\"packTensor\",\"uniformValues\",\"getAndSaveBinary\",\"source\",\"webGLProgram\",\"uniformLocations\",\"inShapeInfos\",\"outShapeInfo\",\"infLoc\",\"nanLoc\",\"uniform1fv\",\"getTextureManager\",\"remove\",\"floatPrecisionValue\",\"abs_\",\"acos_\",\"acosh_\",\"asin_\",\"asinh_\",\"atan_\",\"atanh_\",\"ceil_\",\"clipByValue_\",\"cos_\",\"cosh_\",\"erf_\",\"exp_\",\"expm1_\",\"floor_\",\"log_\",\"log1p_\",\"logSigmoid_\",\"neg_\",\"reciprocal_\",\"round_\",\"rsqrt_\",\"sigmoid_\",\"sign_\",\"isNaN_\",\"isInf_\",\"isFinite_\",\"sin_\",\"sinh_\",\"softplus_\",\"sqrt_\",\"square_\",\"step_\",\"tan_\",\"tanh_\",\"ou\",\"su\",\"au\",\"iu\",\"uu\",\"$mean\",\"$variance\",\"$scale\",\"$offset\",\"lu\",\"batchNormalization2d_\",\"batchNormalization3d_\",\"batchNormalization4d_\",\"batchNormalization_\",\"batchNorm_\",\"batchNorm2d_\",\"batchNorm3d_\",\"batchNorm4d_\",\"logicalAnd_\",\"$b\",\"logicalNot_\",\"logicalOr_\",\"logicalXor_\",\"where_\",\"$condition\",\"add_\",\"addN_\",\"addStrict_\",\"atan2_\",\"div_\",\"divStrict_\",\"floorDiv_\",\"maximum_\",\"maximumStrict_\",\"minimum_\",\"minimumStrict_\",\"mod_\",\"modStrict_\",\"mul_\",\"mulStrict_\",\"pow_\",\"$base\",\"$exp\",\"powStrict_\",\"squaredDifference_\",\"squaredDifferenceStrict_\",\"sub_\",\"subStrict_\",\"equal_\",\"equalStrict_\",\"greater_\",\"greaterEqual_\",\"greaterEqualStrict_\",\"greaterStrict_\",\"less_\",\"lessEqual_\",\"lessEqualStrict_\",\"lessStrict_\",\"notEqual_\",\"notEqualStrict_\",\"rl\",\"ol\",\"gather_\",\"dimSize\",\"unsortedSegmentSum_\",\"ul\",\"dy4D\",\"ll\",\"x4D\",\"cl\",\"hl\",\"dy5D\",\"conv1d_\",\"conv2d_\",\"$filter\",\"conv3d_\",\"x5D\",\"conv2dDerFilter_\",\"conv2dDerInput_\",\"depthwiseConv2d_\",\"separableConv2d_\",\"conv2dTranspose_\",\"conv3dTranspose_\",\"matMul_\",\"dot_\",\"outerProduct_\",\"reverse_\",\"reverse1d_\",\"reverse2d_\",\"reverse3d_\",\"reverse4d_\",\"Al\",\"$dy\",\"Tl\",\"input4D\",\"maxPool_\",\"avgPool_\",\"pool_\",\"maxPool3d_\",\"input5D\",\"avgPool3d_\",\"slice_\",\"slice1d_\",\"slice2d_\",\"slice3d_\",\"slice4d_\",\"Vl\",\"all_\",\"any_\",\"argMax_\",\"argMin_\",\"logSumExp_\",\"max_\",\"mean_\",\"min_\",\"moments_\",\"variance\",\"sum_\",\"prod_\",\"elu_\",\"dy\",\"leakyRelu_\",\"prelu_\",\"$alpha\",\"relu_\",\"selu_\",\"transpose_\",\"localResponseNormalization_\",\"norm_\",\"basicLSTMCell_\",\"multiRNNCell_\",\"movingAverage_\",\"stridedSlice_\",\"topk_\",\"indices\",\"scatterND_\",\"Mr\",\"$updates\",\"fft_\",\"input\",\"ifft_\",\"rfft_\",\"irfft_\",\"sparseToDense_\",\"$sparseIndices\",\"$sparseValues\",\"$defaultValue\",\"gatherND_\",\"diag_\",\"dropout_\",\"Cc\",\"hannWindow_\",\"hammingWindow_\",\"frame_\",\"stft_\",\"hannWindow\",\"hammingWindow\",\"frame\",\"stft\",\"NONE\",\"MEAN\",\"SUM\",\"SUM_BY_NONZERO_WEIGHTS\",\"Tc\",\"absoluteDifference_\",\"Dc\",\"computeWeightedLoss_\",\"_c\",\"cosineDistance_\",\"Oc\",\"hingeLoss_\",\"Fc\",\"huberLoss_\",\"Mc\",\"logLoss_\",\"Bc\",\"meanSquaredError_\",\"Pc\",\"sigmoidCrossEntropy_\",\"Lc\",\"softmaxCrossEntropy_\",\"Reduction\",\"absoluteDifference\",\"computeWeightedLoss\",\"cosineDistance\",\"hingeLoss\",\"huberLoss\",\"logLoss\",\"meanSquaredError\",\"sigmoidCrossEntropy\",\"softmaxCrossEntropy\",\"Uc\",\"Vc\",\"gramSchmidt_\",\"zc\",\"qr_\",\"gramSchmidt\",\"Hc\",\"NEGATIVE_INFINITY\",\"maxOutputSize\",\"iouThreshold\",\"scoreThreshold\",\"qc\",\"resizeBilinear_\",\"batchImages\",\"$c\",\"resizeNearestNeighbor_\",\"Kc\",\"nonMaxSuppression_\",\"$boxes\",\"Xc\",\"cropAndResize_\",\"$image\",\"nonMaxSuppressionAsync\",\"Qc\",\"$bias\",\"$preluActivationWeights\",\"Jc\",\"dilations\",\"dimRoundingMode\",\"th\",\"linalg\",\"losses\",\"fused\",\"signal\",\"op\",\"batchNormalization2d\",\"batchNormalization3d\",\"batchNormalization4d\",\"batchNorm2d\",\"batchNorm3d\",\"batchNorm4d\",\"booleanMaskAsync\",\"concat1d\",\"concat2d\",\"concat3d\",\"concat4d\",\"conv3dTranspose\",\"outerProduct\",\"reverse1d\",\"reverse2d\",\"reverse3d\",\"reverse4d\",\"slice1d\",\"slice2d\",\"slice3d\",\"slice4d\",\"moments\",\"whereAsync\",\"eye\",\"pad1d\",\"pad2d\",\"pad3d\",\"pad4d\",\"rand\",\"randomNormal\",\"randomGamma\",\"randomUniform\",\"truncatedNormal\",\"setdiff1dAsync\",\"ones\",\"scalar\",\"tensor\",\"tensor1d\",\"tensor2d\",\"tensor3d\",\"tensor4d\",\"tensor5d\",\"tensor6d\",\"zeros\",\"basicLSTMCell\",\"multiRNNCell\",\"movingAverage\",\"dropout\",\"inTopKAsync\",\"eh\",\"linear\",\"nh\",\"firstUse\",\"getImageData\",\"assertNotComplex\",\"broadcastedBinaryComplexOp\",\"broadcastedBinaryOp\",\"hypot\",\"trunc\",\"POSITIVE_INFINITY\",\"maxPoolPositions\",\"pool3d\",\"maxPool3dPositions\",\"fftBatch\",\"isExponentOf2\",\"fftRadix2\",\"fourierTransformByMatmul\",\"scatter\",\"rh\",\"textEncoder\",\"TextEncoder\",\"performance\",\"TextDecoder\",\"oh\",\"ih\",\"util\",\"hrtime\",\"sh\",\"uint16\",\"uint8\",\"uh\",\"lh\",\"quantization\",\"scale\",\"ch\",\"byteLength\",\"hh\",\"Blob\",\"atob\",\"btoa\",\"ph\",\"fh\",\"dh\",\"trim\",\"vh\",\"modelTopology\",\"ArrayBuffer\",\"dateSaved\",\"modelTopologyType\",\"modelTopologyBytes\",\"weightSpecsBytes\",\"weightSpecs\",\"weightDataBytes\",\"weightData\",\"mh\",\"saveRouters\",\"loadRouters\",\"getInstance\",\"instance\",\"registerSaveRouter\",\"registerLoadRouter\",\"getSaveHandlers\",\"getHandlers\",\"getLoadHandlers\",\"gh\",\"yh\",\"managers\",\"registerManager\",\"getManager\",\"getSchemes\",\"xh\",\"scheme\",\"path\",\"bh\",\"load\",\"removeModel\",\"save\",\"modelArtifactsInfo\",\"wh\",\"Ch\",\"Eh\",\"indexedDB\",\"mozIndexedDB\",\"webkitIndexedDB\",\"msIndexedDB\",\"shimIndexedDB\",\"Rh\",\"createObjectStore\",\"keyPath\",\"Ih\",\"modelPath\",\"databaseAction\",\"open\",\"onupgradeneeded\",\"onsuccess\",\"transaction\",\"objectStore\",\"close\",\"modelArtifacts\",\"onerror\",\"oncomplete\",\"put\",\"URL_SCHEME\",\"kh\",\"startsWith\",\"Nh\",\"listModels\",\"getAll\",\"Sh\",\"Ah\",\"Th\",\"Dh\",\"_h\",\"Oh\",\"Fh\",\"Mh\",\"info\",\"topology\",\"modelMetadata\",\"Bh\",\"Ph\",\"localStorage\",\"LS\",\"setItem\",\"format\",\"generatedBy\",\"convertedBy\",\"removeItem\",\"getItem\",\"byteOffset\",\"Lh\",\"Wh\",\"Uh\",\"Vh\",\"zh\",\"Gh\",\"Hh\",\"modelTopologyFileName\",\"weightDataFileName\",\"URL\",\"createObjectURL\",\"paths\",\"weights\",\"weightsManifest\",\"jsonAnchor\",\"download\",\"href\",\"dispatchEvent\",\"MouseEvent\",\"weightDataAnchor\",\"qh\",\"files\",\"FileReader\",\"onload\",\"target\",\"checkManifestAndWeightFiles\",\"readAsArrayBuffer\",\"readAsText\",\"$h\",\"Kh\",\"fetchFunc\",\"requestInit\",\"isBinary\",\"onProgress\",\"arrayBuffer\",\"jh\",\"manifestEntry\",\"groupOffset\",\"sizeBytes\",\"Xh\",\"DEFAULT_METHOD\",\"weightPathPrefix\",\"body\",\"method\",\"FormData\",\"append\",\"ok\",\"responses\",\"status\",\"json\",\"loadWeights\",\"lastIndexOf\",\"URL_SCHEME_REGEX\",\"Yh\",\"match\",\"Qh\",\"Jh\",\"Zh\",\"tp\",\"saveHandler\",\"browserFiles\",\"browserHTTPRequest\",\"concatenateArrayBuffers\",\"decodeWeights\",\"encodeWeights\",\"group\",\"specs\",\"fromMemory\",\"trainingConfig\",\"getModelArtifactsInfoForJSON\",\"http\",\"isHTTPScheme\",\"weightsLoaderFactory\",\"withSaveHandler\",\"copyModel\",\"moveModel\",\"np\",\"confusionMatrix_\",\"confusionMatrix\",\"fromPixels_\",\"readyState\",\"toPixels\",\"Uint8ClampedArray\",\"putImageData\",\"ip\",\"getClassName\",\"className\",\"fromConfig\",\"sp\",\"classNameMap\",\"getMap\",\"up\",\"Serializable\",\"SerializationMap\",\"registerClass\",\"cp\",\"hp\",\"pp\",\"fp\",\"dp\",\"TEST_EPSILON_FLOAT16\",\"expectArraysClose\",\"testEpsilon\",\"expectPromiseToFail\",\"fail\",\"expectArraysEqual\",\"expectNumbersClose\",\"expectValuesInRange\",\"expectArrayBuffersEqual\",\"expect\",\"toEqual\",\"gpgpu_util\",\"webgl_util\",\"forceHalfFloat\",\"MathBackendWebGL\",\"setWebGLContext\",\"GPGPUContext\",\"minimize\",\"computeGradients\",\"applyGradients\",\"iterations_\",\"incrementIterations\",\"iterations\",\"saveIterations\",\"getWeights\",\"setWeights\",\"extractIterations\",\"learningRate\",\"rho\",\"accumulatedGrads\",\"accumulatedUpdates\",\"originalName\",\"getConfig\",\"initialAccumulatorValue\",\"beta1\",\"beta2\",\"accumulatedFirstMoment\",\"accumulatedSecondMoment\",\"accBeta1\",\"accBeta2\",\"decay\",\"accumulatedWeightedInfNorm\",\"iteration\",\"setLearningRate\",\"momentum\",\"useNesterov\",\"accumulations\",\"setMomentum\",\"accumulatedMeanSquares\",\"accumulatedMoments\",\"accumulatedMeanGrads\",\"centered\",\"kp\",\"sgd\",\"rmsprop\",\"adam\",\"adadelta\",\"adamax\",\"adagrad\",\"Sp\",\"requestAnimationFrame\",\"cachedSetTimeout\",\"cachedClearTimeout\",\"defaultSetTimout\",\"defaultClearTimeout\",\"runTimeout\",\"fun\",\"clearTimeout\",\"currentQueue\",\"queue\",\"draining\",\"queueIndex\",\"cleanUpNextTick\",\"drainQueue\",\"timeout\",\"len\",\"run\",\"marker\",\"runClearTimeout\",\"Item\",\"noop\",\"nextTick\",\"args\",\"title\",\"browser\",\"env\",\"argv\",\"addListener\",\"once\",\"off\",\"removeListener\",\"removeAllListeners\",\"emit\",\"prependListener\",\"prependOnceListener\",\"listeners\",\"binding\",\"cwd\",\"chdir\",\"dir\",\"umask\",\"base64\",\"ieee754\",\"kMaxLength\",\"TYPED_ARRAY_SUPPORT\",\"that\",\"RangeError\",\"arg\",\"encodingOrOffset\",\"allocUnsafe\",\"undefined\",\"fromArrayLike\",\"fromArrayBuffer\",\"string\",\"encoding\",\"isEncoding\",\"actual\",\"fromString\",\"obj\",\"isBuffer\",\"checked\",\"copy\",\"val\",\"fromObject\",\"assertSize\",\"isView\",\"loweredCase\",\"utf8ToBytes\",\"base64ToBytes\",\"swap\",\"bidirectionalIndexOf\",\"arrayIndexOf\",\"arr\",\"indexSize\",\"arrLength\",\"valLength\",\"buf\",\"readUInt16BE\",\"foundIndex\",\"found\",\"hexWrite\",\"offset\",\"remaining\",\"strLen\",\"parsed\",\"parseInt\",\"utf8Write\",\"blitBuffer\",\"asciiWrite\",\"str\",\"byteArray\",\"asciiToBytes\",\"latin1Write\",\"base64Write\",\"ucs2Write\",\"units\",\"utf16leToBytes\",\"base64Slice\",\"start\",\"end\",\"fromByteArray\",\"utf8Slice\",\"res\",\"secondByte\",\"thirdByte\",\"fourthByte\",\"tempCodePoint\",\"firstByte\",\"codePoint\",\"bytesPerSequence\",\"codePoints\",\"MAX_ARGUMENTS_LENGTH\",\"decodeCodePointsArray\",\"SlowBuffer\",\"alloc\",\"INSPECT_MAX_BYTES\",\"foo\",\"typedArraySupport\",\"poolSize\",\"_augment\",\"species\",\"allocUnsafeSlow\",\"_isBuffer\",\"compare\",\"list\",\"pos\",\"swap16\",\"swap32\",\"swap64\",\"hexSlice\",\"asciiSlice\",\"latin1Slice\",\"utf16leSlice\",\"equals\",\"inspect\",\"thisStart\",\"thisEnd\",\"thisCopy\",\"targetCopy\",\"includes\",\"toJSON\",\"_arr\",\"ret\",\"out\",\"toHex\",\"checkOffset\",\"ext\",\"checkInt\",\"objectWriteUInt16\",\"littleEndian\",\"objectWriteUInt32\",\"checkIEEE754\",\"writeFloat\",\"noAssert\",\"writeDouble\",\"newBuf\",\"sliceLen\",\"readUIntLE\",\"readUIntBE\",\"readUInt8\",\"readUInt16LE\",\"readUInt32LE\",\"readUInt32BE\",\"readIntLE\",\"readIntBE\",\"readInt8\",\"readInt16LE\",\"readInt16BE\",\"readInt32LE\",\"readInt32BE\",\"readFloatLE\",\"readFloatBE\",\"readDoubleLE\",\"readDoubleBE\",\"writeUIntLE\",\"writeUIntBE\",\"writeUInt8\",\"writeUInt16LE\",\"writeUInt16BE\",\"writeUInt32LE\",\"writeUInt32BE\",\"writeIntLE\",\"limit\",\"writeIntBE\",\"writeInt8\",\"writeInt16LE\",\"writeInt16BE\",\"writeInt32LE\",\"writeInt32BE\",\"writeFloatLE\",\"writeFloatBE\",\"writeDoubleLE\",\"writeDoubleBE\",\"targetStart\",\"code\",\"INVALID_BASE64_RE\",\"Infinity\",\"leadSurrogate\",\"toByteArray\",\"stringtrim\",\"base64clean\",\"src\",\"dst\",\"loadGraphModel\",\"DataType\",\"SaverDef\",\"_tensorflow_tfjs_core__WEBPACK_IMPORTED_MODULE_0__\",\"__assign\",\"__awaiter\",\"__generator\",\"DT_INVALID\",\"DT_FLOAT\",\"DT_DOUBLE\",\"DT_INT32\",\"DT_UINT8\",\"DT_INT16\",\"DT_INT8\",\"DT_STRING\",\"DT_COMPLEX64\",\"DT_INT64\",\"DT_BOOL\",\"DT_QINT8\",\"DT_QUINT8\",\"DT_QINT32\",\"DT_BFLOAT16\",\"DT_FLOAT_REF\",\"DT_DOUBLE_REF\",\"DT_INT32_REF\",\"DT_UINT8_REF\",\"DT_INT16_REF\",\"DT_INT8_REF\",\"DT_STRING_REF\",\"DT_COMPLEX64_REF\",\"DT_INT64_REF\",\"DT_BOOL_REF\",\"DT_QINT8_REF\",\"DT_QUINT8_REF\",\"DT_QINT32_REF\",\"DT_BFLOAT16_REF\",\"LEGACY\",\"V1\",\"V2\",\"CheckpointFormatVersion\",\"CUSTOM_OPS\",\"getRegisteredOp\",\"getParamValue\",\"inputParams\",\"inputIndexStart\",\"inputIndexEnd\",\"getTensor\",\"inputNames\",\"attrParams\",\"parseNodeName\",\"currentContextIds\",\"find\",\"getNodeNameWithContextId\",\"getNodeNameAndIndex\",\"currentContextId\",\"split$1\",\"arithmetic\",\"tfOpName\",\"category\",\"attrs\",\"tfName\",\"notSupported\",\"basicMath\",\"defaultValue\",\"control\",\"convolution\",\"creation\",\"dynamic\",\"evaluation\",\"graph\",\"image$1\",\"logical\",\"matrices\",\"normalization\",\"reduction\",\"sliceJoin\",\"transformation\",\"tfDeprecatedName\",\"OperationMapper\",\"opMappers\",\"_instance\",\"transformGraph\",\"mapNode\",\"children\",\"nodes\",\"placeholders\",\"attr\",\"rawAttrs\",\"getStringParam\",\"getStringArrayParam\",\"getNumberParam\",\"getNumericArrayParam\",\"getBoolParam\",\"getBoolArrayParam\",\"getTensorShapeParam\",\"getTensorShapeArrayParam\",\"getDtypeParam\",\"getDtypeArrayParam\",\"parseStringParam\",\"decodeBase64\",\"parseDtypeParam\",\"parseTensorShapeParam\",\"unknownRank\",\"dim\",\"NodeValueImpl\",\"tensorMap\",\"context\",\"getInput\",\"getAttr\",\"executeOp\",\"executeOp$1\",\"TensorArray\",\"maxSize\",\"elementShape\",\"identicalElementShapes\",\"dynamicSize\",\"clearAfterRead\",\"tensors\",\"closed_\",\"nextId\",\"clearAndClose\",\"cleared\",\"readMany\",\"assertShapesMatchAllowUndefinedSize\",\"written\",\"writeMany\",\"shapesEqualAllowUndefinedSize\",\"executeOp$3\",\"executeOp$4\",\"executeOp$6\",\"executeOp$7\",\"executeOp$8\",\"executeOp$9\",\"executeOp$10\",\"executeOp$11\",\"executeOp$12\",\"executeOp$13\",\"executeOp$14\",\"executeOp$15\",\"executeOp$16\",\"enterFrame\",\"exitFrame\",\"nextIteration\",\"addTensorArray\",\"getTensorArray\",\"executeOp$2\",\"executeOp$5\",\"customExecutor\",\"ExecutionContext\",\"weightMap\",\"tensorArrayMap\",\"rootContext\",\"frameName\",\"iterationId\",\"contexts\",\"lastId\",\"generateCurrentContextIds\",\"newFrame\",\"_currentContextIds\",\"contextIdforContexts\",\"getWeight\",\"getExecutionSubgraph\",\"isControlFlow\",\"isDynamicShape\",\"usedNodes\",\"missingInputs\",\"dynamicNode\",\"syncInputs\",\"CONTROL_FLOW_OPS\",\"DYNAMIC_SHAPE_OPS\",\"GraphExecutor\",\"compiledMap\",\"Map\",\"_weightMap\",\"SEPERATOR\",\"_outputs\",\"weightIds\",\"getCompilationKey\",\"compile\",\"getNodesInTopologicalOrder\",\"execute\",\"checkInputs\",\"checkInputShapeAndType\",\"checkOutputs\",\"getFrozenTensorIds\",\"checkTensorForDisposal\",\"getTensorsForCurrentContenxt\",\"executeAsync\",\"executeWithControlFlow\",\"currentContext\",\"processStack\",\"processChildNodes\",\"TFHUB_SEARCH_PARAM\",\"DEFAULT_MODEL_NAME\",\"GraphModel\",\"modelUrl\",\"loadOptions\",\"executor\",\"inputNodes\",\"outputNodes\",\"findIOHandler\",\"handler\",\"producer\",\"minConsumer\",\"Instance\",\"convertTensorMapToTensorsMap\",\"predict\",\"normalizeInputs\",\"normalizeOutputs\",\"fromTFHub\",\"b64\",\"placeHoldersCount\",\"tmp\",\"placeHolders\",\"Arr\",\"revLookup\",\"extraBytes\",\"parts\",\"len2\",\"encodeChunk\",\"lookup\",\"num\",\"isLE\",\"mLen\",\"nBytes\",\"eLen\",\"eMax\",\"eBias\",\"nBits\",\"LN2\",\"scope\",\"Timeout\",\"clearFn\",\"_id\",\"_clearFn\",\"setInterval\",\"clearInterval\",\"unref\",\"ref\",\"enroll\",\"item\",\"msecs\",\"_idleTimeoutId\",\"_idleTimeout\",\"unenroll\",\"_unrefActive\",\"active\",\"_onTimeout\",\"clearImmediate\",\"registerImmediate\",\"html\",\"channel\",\"messagePrefix\",\"onGlobalMessage\",\"nextHandle\",\"tasksByHandle\",\"currentlyRunningATask\",\"doc\",\"attachTo\",\"getPrototypeOf\",\"handle\",\"runIfPresent\",\"postMessage\",\"importScripts\",\"postMessageIsAsynchronous\",\"oldOnMessage\",\"onmessage\",\"canUsePostMessage\",\"MessageChannel\",\"port1\",\"event\",\"port2\",\"documentElement\",\"script\",\"onreadystatechange\",\"removeChild\",\"appendChild\",\"attachEvent\",\"callback\",\"task\",\"mobileNet50Architecture\",\"VALID_OUTPUT_STRIDES\",\"assertValidOutputStride\",\"tf_core_esm\",\"mobileNetArchitectures\",\"100\",\"75\",\"50\",\"25\",\"MobileNet\",\"PREPROCESS_DIVISOR\",\"ONE\",\"modelWeights\",\"convolutionDefinitions\",\"blockId\",\"convType\",\"stride\",\"rate\",\"outputStride\",\"toOutputStridedLayers\",\"conv\",\"separableConv\",\"convToOutput\",\"convBias\",\"depthwiseWeights\",\"depthwiseBias\",\"BASE_URL\",\"checkpoints\",\"1\",\"url\",\"architecture\",\"0.75\",\"0.5\",\"0.25\",\"toMask\",\"decodePartSegmentation\",\"toFlattenedOneHotPartMap\",\"clipByMask2d\",\"ModelWeights\",\"graphModel\",\"getVariable\",\"toInputTensor\",\"resizeAndPadTo\",\"resizedAndPadded\",\"paddedBy\",\"scaleAndCropToInputTensorShape\",\"removePaddingAndResizeBack\",\"segmentationModelImageDimensions\",\"BodyPix\",\"mobileNet\",\"predictForSegmentation\",\"predictForPartMap\",\"segmentScores\",\"partHeatmapScores\",\"estimatePersonSegmentationActivation\",\"estimatePersonSegmentation\",\"estimatePartSegmentationActivation\",\"estimatePartSegmentation\",\"mobilenetLoader\",\"tf_converter_esm\",\"offScreenCanvases\",\"assertSameDimensions\",\"flipCanvasHorizontal\",\"translate\",\"drawWithCompositing\",\"globalCompositeOperation\",\"ensureOffscreenCanvasCreated\",\"drawAndBlurImageOnCanvas\",\"clearRect\",\"globalAlpha\",\"cpuBlur\",\"restore\",\"drawAndBlurImageOnOffScreenCanvas\",\"renderImageToCanvas\",\"renderImageDataToOffScreenCanvas\",\"renderImageDataToCanvas\",\"CANVAS_NAMES\",\"blurred\",\"blurredMask\",\"mask\",\"lowresPartMask\",\"createPersonMask\",\"toMaskImageData\",\"SET_INTERVAL\",\"CLEAR_INTERVAL\",\"INTERVAL_TIMEOUT\",\"timerWorkerScript\",\"JitsiStreamBlurEffect\",\"bpModel\",\"_bpModel\",\"_onMaskFrameTimer\",\"_onVideoFrameTimer\",\"_outputCanvasElement\",\"_maskCanvasElement\",\"_inputVideoElement\",\"_videoFrameTimerWorker\",\"Worker\",\"_maskFrameTimerWorker\",\"response\",\"_renderVideo\",\"_renderMask\",\"startEffect\",\"stream\",\"firstVideoTrack\",\"getVideoTracks\",\"frameRate\",\"getSettings\",\"getConstraints\",\"_frameRate\",\"_height\",\"_width\",\"_maskCanvasContext\",\"autoplay\",\"srcObject\",\"timeMs\",\"captureStream\",\"stopEffect\",\"_segmentationData\",\"drawBokehEffect\",\"isEnabled\",\"jitsiLocalTrack\",\"isVideoTrack\",\"videoType\",\"createBlurEffect\",\"bpModelPromise\",\"webGlBackend\",\"MediaStreamTrack\",\"reject\",\"tfc\",\"bpmodel\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"/libs/\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 13);\\n\",\"/**\\n * @license\\n * Copyright 2019 Google LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n * =============================================================================\\n */\\nvar t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(e,n)};function e(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}function n(t,e,n,r){return new(n||(n=Promise))(function(o,a){function i(t){try{u(r.next(t))}catch(t){a(t)}}function s(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){t.done?o(t.value):new n(function(e){e(t.value)}).then(i,s)}u((r=r.apply(t,e||[])).next())})}function r(t,e){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},\\\"function\\\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError(\\\"Generator is already executing.\\\");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}}var o=function(){function t(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}return t.prototype.setPlatform=function(t,e){null!=this.platform&&console.warn(\\\"Platform \\\"+this.platformName+\\\" has already been set. Overwriting the platform with \\\"+e+\\\".\\\"),this.platformName=t,this.platform=e},t.prototype.registerFlag=function(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){var r=this.urlFlags[t];console.warn(\\\"Setting feature override from URL \\\"+t+\\\": \\\"+r+\\\".\\\"),this.set(t,r)}},t.prototype.get=function(t){return t in this.flags?this.flags[t]:(this.flags[t]=this.evaluateFlag(t),this.flags[t])},t.prototype.getNumber=function(t){return this.get(t)},t.prototype.getBool=function(t){return this.get(t)},t.prototype.getFlags=function(){return this.flags},Object.defineProperty(t.prototype,\\\"features\\\",{get:function(){return this.flags},enumerable:!0,configurable:!0}),t.prototype.set=function(t,e){if(null==this.flagRegistry[t])throw new Error(\\\"Cannot set flag \\\"+t+\\\" as it has not been registered.\\\");this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)},t.prototype.evaluateFlag=function(t){if(null==this.flagRegistry[t])throw new Error(\\\"Cannot evaluate flag '\\\"+t+\\\"': no evaluation function found.\\\");return this.flagRegistry[t].evaluationFn()},t.prototype.setFlags=function(t){this.flags=Object.assign({},t)},t.prototype.reset=function(){this.flags={},this.urlFlags={},this.populateURLFlags()},t.prototype.populateURLFlags=function(){var t=this;if(void 0!==this.global&&void 0!==this.global.location&&void 0!==this.global.location.search){var e=a(this.global.location.search);if(\\\"tfjsflags\\\"in e)e.tfjsflags.split(\\\",\\\").forEach(function(e){var n=e.split(\\\":\\\"),r=n[0],o=n[1];t.urlFlags[r]=function(t,e){if(\\\"true\\\"===(e=e.toLowerCase())||\\\"false\\\"===e)return\\\"true\\\"===e;if(\\\"\\\"+ +e===e)return+e;throw new Error(\\\"Could not parse value flag value \\\"+e+\\\" for flag \\\"+t+\\\".\\\")}(r,o)})}},t}();function a(t){var e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,function(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];return function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||\\\"\\\")}(e,n[0],n[1]),n.join(\\\"=\\\")}),e}var i=null;function s(t){i=t}var u=Object.freeze({Environment:o,getQueryParams:a,get ENV(){return i},setEnvironmentGlobal:s});function l(t){for(var e=t.length,n=0,r=0;e>0;)r=Math.random()*e|0,n=t[--e],t[e]=t[r],t[r]=n}function c(t,e,n){return Math.max(t,Math.min(e,n))}function h(t){return t%2==0?t:t+1}function p(t){for(var e=0,n=0;n<t.length;n++)e+=t[n];return e}function f(t,e){if(!t)throw new Error(\\\"string\\\"==typeof e?e:e())}function d(t,e,n){void 0===n&&(n=\\\"\\\"),f(y(t,e),function(){return n+\\\" Shapes \\\"+t+\\\" and \\\"+e+\\\" must match\\\"})}function v(t){f(null!=t,function(){return\\\"The input to the tensor constructor must be a non-null value.\\\"})}function m(t,e,n){if(void 0===e&&(e=[]),void 0===n&&(n=!1),null==e&&(e=[]),Array.isArray(t)||_(t)&&!n)for(var r=0;r<t.length;++r)m(t[r],e,n);else e.push(t);return e}function g(t){if(0===t.length)return 1;for(var e=t[0],n=1;n<t.length;n++)e*=t[n];return e}function y(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function x(t){return t%1==0}function b(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;var e=Math.exp(2*t);return(e-1)/(e+1)}function w(t){var e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function C(t,e){return e<=t.length?t:t+\\\" \\\".repeat(e-t.length)}function E(t,e,n){return void 0===e&&(e=function(t){return 0}),new Promise(function(r,o){var a=0,i=function(){if(t())r();else{var s=e(++a);null!=n&&a>=n?o():setTimeout(i,s)}};i()})}function R(t,e){for(var n=1,r=-1,o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(-1===t[o]){if(-1!==r)throw Error(\\\"Shapes can only have 1 implicit size. Found -1 at dim \\\"+r+\\\" and dim \\\"+o);r=o}else if(t[o]<0)throw Error(\\\"Shapes can not be < 0. Found \\\"+t[o]+\\\" at dim \\\"+o);if(-1===r){if(e>0&&e!==n)throw Error(\\\"Size(\\\"+e+\\\") must match the product of shape \\\"+t);return t}if(0===n)throw Error(\\\"Cannot infer the missing size in [\\\"+t+\\\"] when there are 0 elements\\\");if(e%n!=0)throw Error(\\\"The implicit shape can't be a fractional number. Got \\\"+e+\\\" / \\\"+n);var a=t.slice();return a[r]=e/n,a}function I(t,e){var n=e.length;return f((t=null==t?e.map(function(t,e){return e}):[].concat(t)).every(function(t){return t>=-n&&t<n}),function(){return\\\"All values in axis param must be in range [-\\\"+n+\\\", \\\"+n+\\\") but got axis \\\"+t}),f(t.every(function(t){return x(t)}),function(){return\\\"All values in axis param must be integers but got axis \\\"+t}),t.map(function(t){return t<0?n+t:t})}function k(t,e){for(var n=[],r=[],o=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||o?null:I(e,t).sort(),i=0,s=0;s<t.length;++s){if(null!=a){if(a[i]===s&&1!==t[s])throw new Error(\\\"Can't squeeze axis \\\"+s+\\\" since its dim '\\\"+t[s]+\\\"' is not 1\\\");(null==a[i]||a[i]>s)&&1===t[s]&&(n.push(t[s]),r.push(s)),a[i]<=s&&i++}1!==t[s]&&(n.push(t[s]),r.push(s))}return{newShape:n,keptDims:r}}function N(t,e){var n=null;if(null==t||\\\"float32\\\"===t)n=new Float32Array(e);else if(\\\"int32\\\"===t)n=new Int32Array(e);else{if(\\\"bool\\\"!==t)throw new Error(\\\"Unknown data type \\\"+t);n=new Uint8Array(e)}return n}function S(t,e){var n=null;if(null==t||\\\"float32\\\"===t)n=new Float32Array(e);else if(\\\"int32\\\"===t)n=new Int32Array(e);else if(\\\"bool\\\"===t)n=new Uint8Array(e);else{if(\\\"string\\\"!==t)throw new Error(\\\"Unknown data type \\\"+t);n=new Array(e)}return n}function A(t,e){for(var n=0;n<t.length;n++){var r=t[n];if(isNaN(r)||!isFinite(r))throw Error(\\\"A tensor of type \\\"+e+\\\" being uploaded contains \\\"+r+\\\".\\\")}}function T(t){return\\\"bool\\\"===t||\\\"complex64\\\"===t||\\\"float32\\\"===t||\\\"int32\\\"===t||\\\"string\\\"===t}function D(t,e){return\\\"complex64\\\"!==e&&((\\\"float32\\\"!==e||\\\"complex64\\\"===t)&&((\\\"int32\\\"!==e||\\\"float32\\\"===t||\\\"complex64\\\"===t)&&(\\\"bool\\\"!==e||\\\"bool\\\"!==t)))}function _(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function O(t){if(\\\"float32\\\"===t||\\\"int32\\\"===t)return 4;if(\\\"complex64\\\"===t)return 8;if(\\\"bool\\\"===t)return 1;throw new Error(\\\"Unknown dtype \\\"+t)}function F(t){if(null==t)return 0;var e=0;return t.forEach(function(t){return e+=t.length}),e}function M(t){return\\\"string\\\"==typeof t||t instanceof String}function B(t){return\\\"boolean\\\"==typeof t}function P(t){return\\\"number\\\"==typeof t}function L(t){return Array.isArray(t)?L(t[0]):t instanceof Float32Array?\\\"float32\\\":t instanceof Int32Array||t instanceof Uint8Array?\\\"int32\\\":P(t)?\\\"float32\\\":M(t)?\\\"string\\\":B(t)?\\\"bool\\\":\\\"float32\\\"}function W(t){return!!(t&&t.constructor&&t.call&&t.apply)}function U(t,e){for(var n=e;n<t;++n)if(t%n==0)return n;return t}function V(t){var e=t.length;if(e<2)return[];var n=new Array(e-1);n[e-2]=t[e-1];for(var r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function z(t,e,n){if(\\\"string\\\"===e)throw new Error(\\\"Cannot convert a string[] to a TypedArray\\\");if(Array.isArray(t)&&(t=m(t)),n&&A(t,e),function(t,e){return t instanceof Float32Array&&\\\"float32\\\"===e||t instanceof Int32Array&&\\\"int32\\\"===e||t instanceof Uint8Array&&\\\"bool\\\"===e}(t,e))return t;if(null==e||\\\"float32\\\"===e||\\\"complex64\\\"===e)return new Float32Array(t);if(\\\"int32\\\"===e)return new Int32Array(t);if(\\\"bool\\\"===e){for(var r=new Uint8Array(t.length),o=0;o<r.length;++o)0!==Math.round(t[o])&&(r[o]=1);return r}throw new Error(\\\"Unknown data type \\\"+e)}function G(t,e){if(0===t.length)return e[0];var n=t.reduce(function(t,e){return t*e});if(0===n)return[];if(n!==e.length)throw new Error(\\\"[\\\"+t+\\\"] does not match the input size.\\\");return function t(e,n,r){var o=new Array;if(1===n.length)for(var a=n[0],i=0;i<a;i++)o[i]=r[e+i];else{a=n[0];var s=n.slice(1),u=s.reduce(function(t,e){return t*e});for(i=0;i<a;i++)o[i]=t(e+i*u,s,r)}return o}(0,t,e)}function H(t,e){for(var n=q(t,e),r=0;r<n.length;r++)n[r]=1;return n}function q(t,e){if(null==e||\\\"float32\\\"===e||\\\"complex64\\\"===e)return new Float32Array(t);if(\\\"int32\\\"===e)return new Int32Array(t);if(\\\"bool\\\"===e)return new Uint8Array(t);throw new Error(\\\"Unknown data type \\\"+e)}function $(){return i.platform.now()}function K(t){t.forEach(function(e){f(Number.isInteger(e)&&e>=0,function(){return\\\"Tensor must have a shape comprised of positive integers but got shape [\\\"+t+\\\"].\\\"})})}function j(t,e){return void 0===e&&(e=\\\"utf-8\\\"),e=e||\\\"utf-8\\\",i.platform.encode(t,e)}function X(t,e){return void 0===e&&(e=\\\"utf-8\\\"),e=e||\\\"utf-8\\\",i.platform.decode(t,e)}var Y=Object.freeze({shuffle:l,clamp:c,nearestLargerEven:h,sum:p,randUniform:function(t,e){var n=Math.random();return e*n+(1-n)*t},distSquared:function(t,e){for(var n=0,r=0;r<t.length;r++){var o=Number(t[r])-Number(e[r]);n+=o*o}return n},assert:f,assertShapesMatch:d,assertNonNull:v,flatten:m,sizeFromShape:g,isScalarShape:function(t){return 0===t.length},arraysEqual:y,isInt:x,tanh:b,sizeToSquarishShape:w,createShuffledIndices:function(t){for(var e=new Uint32Array(t),n=0;n<t;++n)e[n]=n;return l(e),e},rightPad:C,repeatedTry:E,inferFromImplicitShape:R,parseAxisParam:I,squeezeShape:k,getTypedArrayFromDType:N,getArrayFromDType:S,checkConversionForErrors:A,isValidDtype:T,hasEncodingLoss:D,isTypedArray:_,bytesPerElement:O,bytesFromStringArray:F,isString:M,isBoolean:B,isNumber:P,inferDtype:L,isFunction:W,nearestDivisor:U,computeStrides:V,toTypedArray:z,toNestedArray:G,makeOnesTypedArray:H,makeZerosTypedArray:q,now:$,assertNonNegativeIntegerDimensions:K,fetch:function(t,e){return i.platform.fetch(t,e)},encodeString:j,decodeString:X}),Q=function(){function t(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new J)}return t.prototype.profileKernel=function(t,e,n){var r,o=this,a=this.backendTimer.time(function(){r=n()});return(Array.isArray(r)?r:[r]).forEach(function(n){n.data().then(function(r){!function(t,e,n){if(\\\"float32\\\"!==e)return!1;for(var r=0;r<t.length;r++){var o=t[r];if(isNaN(o)||!isFinite(o))return console.warn(\\\"Found \\\"+o+\\\" in the result of '\\\"+n+\\\"'\\\"),!0}}(r,n.dtype,t),a.then(function(a){var i=\\\"\\\";null!=a.getExtraProfileInfo&&(i=a.getExtraProfileInfo()),o.logger.logKernelProfile(t,n,r,a.kernelMs,e,i)})})}),r},t}();var J=function(){function t(){}return t.prototype.logKernelProfile=function(t,e,n,r,o,a){var i=C(r+\\\"ms\\\",9),s=C(t,25),u=e.rank,l=e.size,c=C(e.shape.toString(),14),h=\\\"\\\";for(var p in o){var f=o[p].shape,d=f.length;h+=p+\\\": \\\"+d+\\\"D \\\"+(d>0?f:\\\"\\\")+\\\" \\\"}console.log(\\\"%c\\\"+s+\\\"\\\\t%c\\\"+i+\\\"\\\\t%c\\\"+u+\\\"D \\\"+c+\\\"\\\\t%c\\\"+l+\\\"\\\\t%c\\\"+h+\\\"\\\\t%c\\\"+a,\\\"font-weight:bold\\\",\\\"color:red\\\",\\\"color:blue\\\",\\\"color: orange\\\",\\\"color: green\\\",\\\"color: steelblue\\\")},t}(),Z=20,tt=3,et=7;function nt(t,e,n,r){var o=V(e),a=function(t,e,n,r){var o=g(e),a=r[r.length-1],i=new Array(a).fill(0),s=e.length,u=\\\"complex64\\\"===n?at(t):t;if(s>1)for(var l=0;l<o/a;l++)for(var c=l*a,h=0;h<a;h++)i[h]=Math.max(i[h],rt(u[c+h],0,n).length);return i}(t,e,n,o),i=e.length,s=function t(e,n,r,o,a,i){void 0===i&&(i=!0);var s=\\\"complex64\\\"===r?2:1;var u=n[0];var l=n.length;if(0===l){if(\\\"complex64\\\"===r){var c=at(e);return[rt(c[0],0,r)]}return\\\"bool\\\"===r?[ot(e[0])]:[e[0].toString()]}if(1===l){if(u>Z){var h=tt*s,p=Array.from(e.slice(0,h)),f=Array.from(e.slice(u-tt*s,u));return\\\"complex64\\\"===r&&(p=at(p),f=at(f)),[\\\"[\\\"+p.map(function(t,e){return rt(t,a[e],r)}).join(\\\", \\\")+\\\", ..., \\\"+f.map(function(t,e){return rt(t,a[u-tt+e],r)}).join(\\\", \\\")+\\\"]\\\"]}var d=\\\"complex64\\\"===r?at(e):Array.from(e);return[\\\"[\\\"+d.map(function(t,e){return rt(t,a[e],r)}).join(\\\", \\\")+\\\"]\\\"]}var v=n.slice(1);var m=o.slice(1);var g=o[0]*s;var y=[];if(u>Z){for(var x=0;x<tt;x++){var b=x*g,w=b+g;y.push.apply(y,t(e.slice(b,w),v,r,m,a,!1))}y.push(\\\"...\\\");for(var x=u-tt;x<u;x++){var b=x*g,w=b+g;y.push.apply(y,t(e.slice(b,w),v,r,m,a,x===u-1))}}else for(var x=0;x<u;x++){var b=x*g,w=b+g;y.push.apply(y,t(e.slice(b,w),v,r,m,a,x===u-1))}var C=2===l?\\\",\\\":\\\"\\\";y[0]=\\\"[\\\"+y[0]+C;for(var x=1;x<y.length-1;x++)y[x]=\\\" \\\"+y[x]+C;var E=\\\",\\\\n\\\";for(var x=2;x<l;x++)E+=\\\"\\\\n\\\";y[y.length-1]=\\\" \\\"+y[y.length-1]+\\\"]\\\"+(i?\\\"\\\":E);return y}(t,e,n,o,a),u=[\\\"Tensor\\\"];return r&&(u.push(\\\"  dtype: \\\"+n),u.push(\\\"  rank: \\\"+i),u.push(\\\"  shape: [\\\"+e+\\\"]\\\"),u.push(\\\"  values:\\\")),u.push(s.map(function(t){return\\\"    \\\"+t}).join(\\\"\\\\n\\\")),u.join(\\\"\\\\n\\\")}function rt(t,e,n){return C(Array.isArray(t)?parseFloat(t[0].toFixed(et))+\\\" + \\\"+parseFloat(t[1].toFixed(et))+\\\"j\\\":M(t)?\\\"'\\\"+t+\\\"'\\\":\\\"bool\\\"===n?ot(t):parseFloat(t.toFixed(et)).toString(),e)}function ot(t){return 0===t?\\\"false\\\":\\\"true\\\"}function at(t){for(var e=[],n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var it=function(){function t(t,e,n){var r=this;if(this.dtype=e,this.shape=t.slice(),this.size=g(t),null!=n){var o=n.length;f(o===this.size,function(){return\\\"Length of values '\\\"+o+\\\"' does not match the size inferred by the shape '\\\"+r.size+\\\"'.\\\"})}if(\\\"complex64\\\"===e)throw new Error(\\\"complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).\\\");this.values=n||S(e,this.size),this.strides=V(t)}return t.prototype.set=function(t){for(var e=this,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),f(n.length===this.rank,function(){return\\\"The number of provided coordinates (\\\"+n.length+\\\") must match the rank (\\\"+e.rank+\\\")\\\"});var o=this.locToIndex(n);this.values[o]=t},t.prototype.get=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];0===t.length&&(t=[0]);for(var n=0,r=0,o=t;r<o.length;r++){var a=o[r];if(a<0||a>=this.shape[n]){var i=\\\"Requested out of range element at \\\"+t+\\\".   Buffer shape=\\\"+this.shape;throw new Error(i)}n++}for(var s=t[t.length-1],u=0;u<t.length-1;++u)s+=this.strides[u]*t[u];return this.values[s]},t.prototype.locToIndex=function(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];for(var e=t[t.length-1],n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e},t.prototype.indexToLoc=function(t){if(0===this.rank)return[];if(1===this.rank)return[t];for(var e=new Array(this.shape.length),n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e},Object.defineProperty(t.prototype,\\\"rank\\\",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),t.prototype.toTensor=function(){return ct.make(this.shape,{values:this.values},this.dtype)},t}(),st=null,ut=null,lt=null;var ct=function(){function t(t,e,n,r,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||\\\"float32\\\",this.size=g(t),this.strides=V(t),this.dataId=null!=r?r:{},this.id=st().nextTensorId(),this.rankType=this.rank<5?this.rank.toString():\\\"higher\\\",st().registerTensor(this,o),null!=n&&st().write(o,this.dataId,n)}return t.make=function(e,n,r,o){var a=n.values;return null!=n.values&&\\\"string\\\"===r&&M(n.values[0])&&(a=n.values.map(function(t){return j(t)})),new t(e,r,a,n.dataId,o)},t.prototype.flatten=function(){return this.throwIfDisposed(),this.as1D()},t.prototype.asScalar=function(){return this.throwIfDisposed(),f(1===this.size,function(){return\\\"The array must have only 1 element.\\\"}),this.reshape([])},t.prototype.as1D=function(){return this.throwIfDisposed(),this.reshape([this.size])},t.prototype.as2D=function(t,e){return this.throwIfDisposed(),this.reshape([t,e])},t.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),this.reshape([t,e,n])},t.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),this.reshape([t,e,n,r])},t.prototype.as5D=function(t,e,n,r,o){return this.throwIfDisposed(),this.reshape([t,e,n,r,o])},t.prototype.asType=function(t){return this.throwIfDisposed(),ut.cast(this,t)},Object.defineProperty(t.prototype,\\\"rank\\\",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),t.prototype.buffer=function(){return n(this,void 0,void 0,function(){var t;return r(this,function(e){switch(e.label){case 0:return[4,this.data()];case 1:return t=e.sent(),[2,ut.buffer(this.shape,this.dtype,t)]}})})},t.prototype.bufferSync=function(){return ut.buffer(this.shape,this.dtype,this.dataSync())},t.prototype.array=function(){return n(this,void 0,void 0,function(){var t;return r(this,function(e){switch(e.label){case 0:return[4,this.data()];case 1:return t=e.sent(),[2,G(this.shape,t)]}})})},t.prototype.arraySync=function(){return G(this.shape,this.dataSync())},t.prototype.data=function(){return n(this,void 0,void 0,function(){var t,e;return r(this,function(n){switch(n.label){case 0:return this.throwIfDisposed(),t=st().read(this.dataId),\\\"string\\\"!==this.dtype?[3,2]:[4,t];case 1:e=n.sent();try{return[2,e.map(function(t){return X(t)})]}catch(t){throw new Error(\\\"Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().\\\")}n.label=2;case 2:return[2,t]}})})},t.prototype.dataSync=function(){this.throwIfDisposed();var t=st().readSync(this.dataId);if(\\\"string\\\"===this.dtype)try{return t.map(function(t){return X(t)})}catch(t){throw new Error(\\\"Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().\\\")}return t},t.prototype.bytes=function(){return n(this,void 0,void 0,function(){var t;return r(this,function(e){switch(e.label){case 0:return this.throwIfDisposed(),[4,st().read(this.dataId)];case 1:return t=e.sent(),\\\"string\\\"===this.dtype?[2,t]:[2,new Uint8Array(t.buffer)]}})})},t.prototype.dispose=function(){this.isDisposed||(st().disposeTensor(this),this.isDisposedInternal=!0)},Object.defineProperty(t.prototype,\\\"isDisposed\\\",{get:function(){return this.isDisposedInternal},enumerable:!0,configurable:!0}),t.prototype.throwIfDisposed=function(){if(this.isDisposed)throw new Error(\\\"Tensor is disposed.\\\")},t.prototype.toFloat=function(){return this.asType(\\\"float32\\\")},t.prototype.toInt=function(){return this.asType(\\\"int32\\\")},t.prototype.toBool=function(){return this.asType(\\\"bool\\\")},t.prototype.print=function(t){return void 0===t&&(t=!1),ut.print(this,t)},t.prototype.reshape=function(t){return this.throwIfDisposed(),ut.reshape(this,t)},t.prototype.reshapeAs=function(t){return this.throwIfDisposed(),this.reshape(t.shape)},t.prototype.expandDims=function(t){return void 0===t&&(t=0),ut.expandDims(this,t)},t.prototype.cumsum=function(t,e,n){return void 0===t&&(t=0),void 0===e&&(e=!1),void 0===n&&(n=!1),ut.cumsum(this,t,e,n)},t.prototype.squeeze=function(t){return this.throwIfDisposed(),ut.squeeze(this,t)},t.prototype.clone=function(){return this.throwIfDisposed(),ut.clone(this)},t.prototype.oneHot=function(t,e,n){return this.throwIfDisposed(),ut.oneHot(this,t,e,n)},t.prototype.toString=function(t){return void 0===t&&(t=!1),nt(this.dataSync(),this.shape,this.dtype,t)},t.prototype.tile=function(t){return this.throwIfDisposed(),ut.tile(this,t)},t.prototype.gather=function(t,e){return void 0===e&&(e=0),this.throwIfDisposed(),ut.gather(this,t,e)},t.prototype.matMul=function(t,e,n){return void 0===e&&(e=!1),void 0===n&&(n=!1),this.throwIfDisposed(),ut.matMul(this,t,e,n)},t.prototype.dot=function(t){return this.throwIfDisposed(),ut.dot(this,t)},t.prototype.norm=function(t,e,n){return void 0===t&&(t=\\\"euclidean\\\"),void 0===e&&(e=null),void 0===n&&(n=!1),this.throwIfDisposed(),ut.norm(this,t,e,n)},t.prototype.slice=function(t,e){return this.throwIfDisposed(),ut.slice(this,t,e)},t.prototype.reverse=function(t){return this.throwIfDisposed(),ut.reverse(this,t)},t.prototype.concat=function(e,n){return void 0===n&&(n=0),this.throwIfDisposed(),e instanceof t&&(e=[e]),ut.concat([this].concat(e),n)},t.prototype.split=function(t,e){return void 0===e&&(e=0),this.throwIfDisposed(),ut.split(this,t,e)},t.prototype.stack=function(t,e){return void 0===e&&(e=0),ut.stack([this,t],e)},t.prototype.unstack=function(t){return void 0===t&&(t=0),ut.unstack(this,t)},t.prototype.pad=function(t,e){return void 0===e&&(e=0),ut.pad(this,t,e)},t.prototype.batchNormalization=function(t,e,n,r,o){return void 0===n&&(n=.001),lt(\\\"tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon\\\"),this.batchNorm(t,e,o,r,n)},t.prototype.batchNorm=function(t,e,n,r,o){return void 0===o&&(o=.001),this.throwIfDisposed(),ut.batchNorm(this,t,e,n,r,o)},t.prototype.all=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ut.all(this,t,e)},t.prototype.any=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ut.any(this,t,e)},t.prototype.logSumExp=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ut.logSumExp(this,t,e)},t.prototype.sum=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ut.sum(this,t,e)},t.prototype.prod=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ut.prod(this,t,e)},t.prototype.mean=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ut.mean(this,t,e)},t.prototype.min=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ut.min(this,t,e)},t.prototype.max=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ut.max(this,t,e)},t.prototype.argMin=function(t){return void 0===t&&(t=null),this.throwIfDisposed(),ut.argMin(this,t)},t.prototype.argMax=function(t){return void 0===t&&(t=null),this.throwIfDisposed(),ut.argMax(this,t)},t.prototype.cast=function(t){return this.throwIfDisposed(),ut.cast(this,t)},t.prototype.add=function(t){return this.throwIfDisposed(),ut.add(this,t)},t.prototype.addStrict=function(t){return this.throwIfDisposed(),ut.addStrict(this,t)},t.prototype.atan2=function(t){return this.throwIfDisposed(),ut.atan2(this,t)},t.prototype.sub=function(t){return this.throwIfDisposed(),ut.sub(this,t)},t.prototype.subStrict=function(t){return this.throwIfDisposed(),ut.subStrict(this,t)},t.prototype.pow=function(t){return this.throwIfDisposed(),ut.pow(this,t)},t.prototype.powStrict=function(t){return this.throwIfDisposed(),ut.powStrict(this,t)},t.prototype.mul=function(t){return this.throwIfDisposed(),ut.mul(this,t)},t.prototype.mulStrict=function(t){return this.throwIfDisposed(),ut.mulStrict(this,t)},t.prototype.div=function(t){return this.throwIfDisposed(),ut.div(this,t)},t.prototype.floorDiv=function(t){return this.throwIfDisposed(),ut.floorDiv(this,t)},t.prototype.divStrict=function(t){return this.throwIfDisposed(),ut.divStrict(this,t)},t.prototype.minimum=function(t){return this.throwIfDisposed(),ut.minimum(this,t)},t.prototype.minimumStrict=function(t){return this.throwIfDisposed(),ut.minimumStrict(this,t)},t.prototype.maximum=function(t){return this.throwIfDisposed(),ut.maximum(this,t)},t.prototype.maximumStrict=function(t){return this.throwIfDisposed(),ut.maximumStrict(this,t)},t.prototype.mod=function(t){return this.throwIfDisposed(),ut.mod(this,t)},t.prototype.modStrict=function(t){return this.throwIfDisposed(),ut.modStrict(this,t)},t.prototype.squaredDifference=function(t){return this.throwIfDisposed(),ut.squaredDifference(this,t)},t.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),ut.squaredDifferenceStrict(this,t)},t.prototype.transpose=function(t){return this.throwIfDisposed(),ut.transpose(this,t)},t.prototype.notEqual=function(t){return this.throwIfDisposed(),ut.notEqual(this,t)},t.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),ut.notEqualStrict(this,t)},t.prototype.less=function(t){return this.throwIfDisposed(),ut.less(this,t)},t.prototype.lessStrict=function(t){return this.throwIfDisposed(),ut.lessStrict(this,t)},t.prototype.equal=function(t){return this.throwIfDisposed(),ut.equal(this,t)},t.prototype.equalStrict=function(t){return this.throwIfDisposed(),ut.equalStrict(this,t)},t.prototype.lessEqual=function(t){return this.throwIfDisposed(),ut.lessEqual(this,t)},t.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),ut.lessEqualStrict(this,t)},t.prototype.greater=function(t){return this.throwIfDisposed(),ut.greater(this,t)},t.prototype.greaterStrict=function(t){return this.throwIfDisposed(),ut.greaterStrict(this,t)},t.prototype.greaterEqual=function(t){return this.throwIfDisposed(),ut.greaterEqual(this,t)},t.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),ut.greaterEqualStrict(this,t)},t.prototype.logicalAnd=function(t){return this.throwIfDisposed(),ut.logicalAnd(this,t)},t.prototype.logicalOr=function(t){return this.throwIfDisposed(),ut.logicalOr(this,t)},t.prototype.logicalNot=function(){return this.throwIfDisposed(),ut.logicalNot(this)},t.prototype.logicalXor=function(t){return this.throwIfDisposed(),ut.logicalXor(this,t)},t.prototype.where=function(t,e){return this.throwIfDisposed(),ut.where(t,this,e)},t.prototype.neg=function(){return this.throwIfDisposed(),ut.neg(this)},t.prototype.ceil=function(){return this.throwIfDisposed(),ut.ceil(this)},t.prototype.floor=function(){return this.throwIfDisposed(),ut.floor(this)},t.prototype.sign=function(){return this.throwIfDisposed(),ut.sign(this)},t.prototype.isNaN=function(){return this.throwIfDisposed(),ut.isNaN(this)},t.prototype.isInf=function(){return this.throwIfDisposed(),ut.isInf(this)},t.prototype.isFinite=function(){return this.throwIfDisposed(),ut.isFinite(this)},t.prototype.exp=function(){return this.throwIfDisposed(),ut.exp(this)},t.prototype.expm1=function(){return this.throwIfDisposed(),ut.expm1(this)},t.prototype.log=function(){return this.throwIfDisposed(),ut.log(this)},t.prototype.log1p=function(){return this.throwIfDisposed(),ut.log1p(this)},t.prototype.sqrt=function(){return this.throwIfDisposed(),ut.sqrt(this)},t.prototype.rsqrt=function(){return this.throwIfDisposed(),ut.rsqrt(this)},t.prototype.square=function(){return this.throwIfDisposed(),ut.square(this)},t.prototype.reciprocal=function(){return this.throwIfDisposed(),ut.reciprocal(this)},t.prototype.abs=function(){return this.throwIfDisposed(),ut.abs(this)},t.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ut.clipByValue(this,t,e)},t.prototype.relu=function(){return this.throwIfDisposed(),ut.relu(this)},t.prototype.elu=function(){return this.throwIfDisposed(),ut.elu(this)},t.prototype.selu=function(){return this.throwIfDisposed(),ut.selu(this)},t.prototype.leakyRelu=function(t){return void 0===t&&(t=.2),this.throwIfDisposed(),ut.leakyRelu(this,t)},t.prototype.prelu=function(t){return this.throwIfDisposed(),ut.prelu(this,t)},t.prototype.sigmoid=function(){return this.throwIfDisposed(),ut.sigmoid(this)},t.prototype.logSigmoid=function(){return this.throwIfDisposed(),ut.logSigmoid(this)},t.prototype.softplus=function(){return this.throwIfDisposed(),ut.softplus(this)},t.prototype.zerosLike=function(){return this.throwIfDisposed(),ut.zerosLike(this)},t.prototype.onesLike=function(){return this.throwIfDisposed(),ut.onesLike(this)},t.prototype.sin=function(){return this.throwIfDisposed(),ut.sin(this)},t.prototype.cos=function(){return this.throwIfDisposed(),ut.cos(this)},t.prototype.tan=function(){return this.throwIfDisposed(),ut.tan(this)},t.prototype.asin=function(){return this.throwIfDisposed(),ut.asin(this)},t.prototype.acos=function(){return this.throwIfDisposed(),ut.acos(this)},t.prototype.atan=function(){return this.throwIfDisposed(),ut.atan(this)},t.prototype.sinh=function(){return this.throwIfDisposed(),ut.sinh(this)},t.prototype.cosh=function(){return this.throwIfDisposed(),ut.cosh(this)},t.prototype.tanh=function(){return this.throwIfDisposed(),ut.tanh(this)},t.prototype.asinh=function(){return this.throwIfDisposed(),ut.asinh(this)},t.prototype.acosh=function(){return this.throwIfDisposed(),ut.acosh(this)},t.prototype.atanh=function(){return this.throwIfDisposed(),ut.atanh(this)},t.prototype.erf=function(){return this.throwIfDisposed(),ut.erf(this)},t.prototype.round=function(){return this.throwIfDisposed(),ut.round(this)},t.prototype.step=function(t){return void 0===t&&(t=0),this.throwIfDisposed(),ut.step(this,t)},t.prototype.softmax=function(t){return void 0===t&&(t=-1),this.throwIfDisposed(),ut.softmax(this,t)},t.prototype.logSoftmax=function(t){return void 0===t&&(t=-1),this.throwIfDisposed(),ut.logSoftmax(this,t)},t.prototype.resizeBilinear=function(t,e){return void 0===e&&(e=!1),this.throwIfDisposed(),ut.image.resizeBilinear(this,t,e)},t.prototype.resizeNearestNeighbor=function(t,e){return void 0===e&&(e=!1),this.throwIfDisposed(),ut.image.resizeNearestNeighbor(this,t,e)},t.prototype.conv1d=function(t,e,n,r,o,a){return void 0===r&&(r=\\\"NWC\\\"),void 0===o&&(o=1),this.throwIfDisposed(),ut.conv1d(this,t,e,n,r,o,a)},t.prototype.conv2d=function(t,e,n,r,o,a){return void 0===r&&(r=\\\"NHWC\\\"),void 0===o&&(o=[1,1]),this.throwIfDisposed(),ut.conv2d(this,t,e,n,r,o,a)},t.prototype.conv2dTranspose=function(t,e,n,r,o){return this.throwIfDisposed(),ut.conv2dTranspose(this,t,e,n,r,o)},t.prototype.depthwiseConv2D=function(t,e,n,r,o,a){return void 0===r&&(r=\\\"NHWC\\\"),void 0===o&&(o=[1,1]),this.throwIfDisposed(),ut.depthwiseConv2d(this,t,e,n,r,o,a)},t.prototype.separableConv2d=function(t,e,n,r,o,a){return void 0===o&&(o=[1,1]),void 0===a&&(a=\\\"NHWC\\\"),this.throwIfDisposed(),ut.separableConv2d(this,t,e,n,r,o,a)},t.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),ut.avgPool(this,t,e,n,r)},t.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),ut.maxPool(this,t,e,n,r)},t.prototype.localResponseNormalization=function(t,e,n,r){return void 0===t&&(t=5),void 0===e&&(e=1),void 0===n&&(n=1),void 0===r&&(r=.5),ut.localResponseNormalization(this,t,e,n,r)},t.prototype.pool=function(t,e,n,r,o){return this.throwIfDisposed(),ut.pool(this,t,e,n,r,o)},t.prototype.variable=function(t,e,n){return void 0===t&&(t=!0),this.throwIfDisposed(),ht.variable(this,t,e,n)},t.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),ut.unsortedSegmentSum(this,t,e)},t.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),ut.batchToSpaceND(this,t,e)},t.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),ut.spaceToBatchND(this,t,e)},t.prototype.topk=function(t,e){return void 0===t&&(t=1),void 0===e&&(e=!0),this.throwIfDisposed(),ut.topk(this,t,e)},t.prototype.stridedSlice=function(t,e,n,r,o,a,i,s){return void 0===r&&(r=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===i&&(i=0),void 0===s&&(s=0),this.throwIfDisposed(),ut.stridedSlice(this,t,e,n,r,o,a,i,s)},t.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),ut.depthToSpace(this,t,e)},t.prototype.fft=function(){return this.throwIfDisposed(),ut.spectral.fft(this)},t.prototype.ifft=function(){return this.throwIfDisposed(),ut.spectral.ifft(this)},t.prototype.rfft=function(){return this.throwIfDisposed(),ut.spectral.rfft(this)},t.prototype.irfft=function(){return this.throwIfDisposed(),ut.spectral.irfft(this)},t}();Object.defineProperty(ct,Symbol.hasInstance,{value:function(t){return!!t&&null!=t.dataId&&null!=t.shape&&null!=t.dtype}});var ht=function(t){function n(e,n,r){void 0===n&&(n=!0);var o=t.call(this,e.shape,e.dtype,null,e.dataId)||this;o.trainable=n,o.name=r,null==o.name&&(o.name=st().nextVariableId().toString());try{st().registerVariable(o)}catch(t){throw st().disposeTensor(o),t}return o}return e(n,t),n.variable=function(t,e,r,o){return void 0===e&&(e=!0),null!=o&&o!==t.dtype&&(t=t.asType(o)),new n(t,e,r)},n.prototype.assign=function(t){if(t.dtype!==this.dtype)throw new Error(\\\"dtype of the new value (\\\"+t.dtype+\\\") and previous value (\\\"+this.dtype+\\\") must match\\\");if(!y(t.shape,this.shape))throw new Error(\\\"shape of the new value (\\\"+t.shape+\\\") and previous value (\\\"+this.shape+\\\") must match\\\");st().disposeTensor(this),this.dataId=t.dataId,st().registerTensor(this)},n.prototype.dispose=function(){st().disposeVariable(this),this.isDisposedInternal=!0},n}(ct);Object.defineProperty(ht,Symbol.hasInstance,{value:function(t){return t instanceof ct&&null!=t.assign&&t.assign instanceof Function}});var pt,ft,dt,vt,mt,gt=ht.variable;!function(t){t.R0=\\\"R0\\\",t.R1=\\\"R1\\\",t.R2=\\\"R2\\\",t.R3=\\\"R3\\\",t.R4=\\\"R4\\\",t.R5=\\\"R5\\\",t.R6=\\\"R6\\\"}(pt||(pt={})),function(t){t.float32=\\\"float32\\\",t.int32=\\\"int32\\\",t.bool=\\\"int32\\\",t.complex64=\\\"complex64\\\"}(ft||(ft={})),function(t){t.float32=\\\"float32\\\",t.int32=\\\"int32\\\",t.bool=\\\"bool\\\",t.complex64=\\\"complex64\\\"}(dt||(dt={})),function(t){t.float32=\\\"float32\\\",t.int32=\\\"float32\\\",t.bool=\\\"float32\\\",t.complex64=\\\"complex64\\\"}(vt||(vt={})),function(t){t.float32=\\\"complex64\\\",t.int32=\\\"complex64\\\",t.bool=\\\"complex64\\\",t.complex64=\\\"complex64\\\"}(mt||(mt={}));var yt={float32:vt,int32:ft,bool:dt,complex64:mt};function xt(t,e){if(\\\"string\\\"===t||\\\"string\\\"===e){if(\\\"string\\\"===t&&\\\"string\\\"===e)return\\\"string\\\";throw new Error(\\\"Can not upcast \\\"+t+\\\" with \\\"+e)}return yt[t][e]}function bt(t){return xt(t,\\\"int32\\\")}function wt(t,e){if(t.dtype===e.dtype)return[t,e];var n=xt(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Ct(t,e){f(t.dtype===e.dtype,function(){return\\\"The dtypes of the first(\\\"+t.dtype+\\\") and second(\\\"+e.dtype+\\\") input must match\\\"})}function Et(t){var e=[];return function t(e,n,r){if(null==e)return;if(e instanceof ct)return void n.push(e);if(o=e,!Array.isArray(o)&&\\\"object\\\"!=typeof o)return;var o;var a=e;for(var i in a){var s=a[i];r.has(s)||(r.add(s),t(s,n,r))}}(t,e,new Set),e}var Rt,It=Object.freeze({makeTypesMatch:wt,assertTypesMatch:Ct,isTensorInList:function(t,e){for(var n=0;n<e.length;n++)if(e[n].id===t.id)return!0;return!1},getTensorsInContainer:Et}),kt=function(){function t(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}return t.prototype.dispose=function(){for(var t in this.registeredVariables)this.registeredVariables[t].dispose()},t}(),Nt=function(){function t(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new kt}return t.prototype.ready=function(){return n(this,void 0,void 0,function(){var t,e,n;return r(this,function(r){switch(r.label){case 0:if(null!=this.pendingBackendInit)return[2,this.pendingBackendInit.then(function(){})];if(null!=this.backendInstance)return[2];t=this.getSortedBackends(),e=0,r.label=1;case 1:return e<t.length?(n=t[e],[4,this.initializeBackend(n).success]):[3,5];case 2:return r.sent()?[4,this.setBackend(n)]:[3,4];case 3:return r.sent(),[2];case 4:return e++,[3,1];case 5:throw new Error(\\\"Could not initialize any backends, all backend initializations failed.\\\")}})})},Object.defineProperty(t.prototype,\\\"backend\\\",{get:function(){if(null!=this.pendingBackendInit)throw new Error(\\\"Backend '\\\"+this.backendName+\\\"' has not yet been initialized. Make sure to await tf.ready() before calling other methods\\\");if(null==this.backendInstance){var t=this.initializeBackendsAndReturnBest(),e=t.name;if(t.asyncInit)throw new Error(\\\"The highest priority backend '\\\"+e+\\\"' has not yet been initialized. Make sure to await tf.ready() before calling other methods\\\");this.setBackend(e)}return this.backendInstance},enumerable:!0,configurable:!0}),t.prototype.backendNames=function(){return Object.keys(this.registryFactory)},t.prototype.findBackend=function(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;if(this.initializeBackend(t).asyncInit)return null}return this.registry[t]},t.prototype.findBackendFactory=function(t){return t in this.registryFactory?this.registryFactory[t].factory:null},t.prototype.registerBackend=function(t,e,n){return void 0===n&&(n=1),t in this.registryFactory?(console.warn(t+\\\" backend was already registered. Reusing existing backend factory.\\\"),!1):(this.registryFactory[t]={factory:e,priority:n},!0)},t.prototype.setBackend=function(t){return n(this,void 0,void 0,function(){var e,n,o;return r(this,function(r){switch(r.label){case 0:if(null==this.registryFactory[t])throw new Error(\\\"Backend name '\\\"+t+\\\"' not found in registry\\\");return this.backendName=t,null!=this.registry[t]?[3,4]:(this.backendInstance=null,e=this.initializeBackend(t),n=e.success,e.asyncInit?[4,n]:[3,2]);case 1:return o=r.sent(),[3,3];case 2:o=n,r.label=3;case 3:if(!o)return[2,!1];r.label=4;case 4:return this.backendInstance=this.registry[t],this.profiler=new Q(this.backendInstance),[2,!0]}})})},t.prototype.initializeBackend=function(t){var e=this,n=this.registryFactory[t];if(null==n)throw new Error(\\\"Cannot initialize backend \\\"+t+\\\", no registration found.\\\");try{var r=n.factory();if(Promise.resolve(r)===r){var o=++this.pendingBackendInitId,a=r.then(function(n){return!(o<e.pendingBackendInitId)&&(e.registry[t]=n,e.pendingBackendInit=null,!0)}).catch(function(n){return!(o<e.pendingBackendInitId)&&(e.pendingBackendInit=null,console.warn(\\\"Initialization of backend \\\"+t+\\\" failed\\\"),console.warn(n.stack||n.message),!1)});return this.pendingBackendInit=a,{success:a,asyncInit:!0}}return this.registry[t]=r,{success:!0,asyncInit:!1}}catch(e){return console.warn(\\\"Initialization of backend \\\"+t+\\\" failed\\\"),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}},t.prototype.removeBackend=function(t){if(!(t in this.registryFactory))throw new Error(t+\\\" backend not found in registry\\\");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)},t.prototype.getSortedBackends=function(){var t=this;if(0===Object.keys(this.registryFactory).length)throw new Error(\\\"No backend found in registry.\\\");return Object.keys(this.registryFactory).sort(function(e,n){return t.registryFactory[n].priority-t.registryFactory[e].priority})},t.prototype.initializeBackendsAndReturnBest=function(){for(var t=this.getSortedBackends(),e=0;e<t.length;e++){var n=t[e],r=this.initializeBackend(n),o=r.success,a=r.asyncInit;if(a||o)return{name:n,asyncInit:a}}throw new Error(\\\"Could not initialize any backends, all backend initializations failed.\\\")},t.prototype.moveData=function(t,e){this.write(t,e,this.readSync(e))},t.prototype.tidy=function(t,e){var n,r=this,o=null;if(null==e){if(\\\"function\\\"!=typeof t)throw new Error(\\\"Please provide a function to tidy()\\\");e=t}else{if(\\\"string\\\"!=typeof t&&!(t instanceof String))throw new Error(\\\"When calling with two arguments, the first argument to tidy() must be a string\\\");if(\\\"function\\\"!=typeof e)throw new Error(\\\"When calling with two arguments, the 2nd argument to tidy() must be a function\\\");o=t}return this.scopedRun(function(){return r.startScope(o)},function(){return r.endScope(n)},function(){return(n=e())instanceof Promise&&console.error(\\\"Cannot return a Promise inside of tidy.\\\"),n})},t.prototype.scopedRun=function(t,e,n){t();try{var r=n();return e(),r}catch(t){throw e(),t}},t.prototype.nextTensorId=function(){return t.nextTensorId++},t.prototype.nextVariableId=function(){return t.nextVariableId++},t.prototype.clone=function(t){var e=ct.make(t.shape,{dataId:t.dataId},t.dtype);return this.addTapeNode([t],e,function(t){return[t.toFloat()]}),e},t.prototype.runKernel=function(t,e,n){var r,o=this,a=[],i=this.isTapeOn(),s=null!=this.state.activeScope?this.state.activeScope.name:\\\"\\\",u=function(t){i&&(a=t.map(function(t){return o.keep(o.clone(t))}))},l=this.state.numBytes,c=this.state.numTensors;if(this.scopedRun(function(){return o.state.kernelDepth++},function(){return o.state.kernelDepth--},function(){r=o.ENV.getBool(\\\"DEBUG\\\")?o.profiler.profileKernel(s,e,function(){return t(o.backend,u)}):t(o.backend,u)}),i){var h={id:this.state.nextTapeNodeId++,name:s,inputs:e,outputs:Array.isArray(r)?r:[r],saved:a};null!=n&&(h.gradient=function(t){return n(t,a)}),this.state.activeTape.push(h)}return this.state.profiling&&this.state.activeProfile.kernels.push({name:s,bytesAdded:this.state.numBytes-l,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-c,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(function(t){return e[t].shape}),outputShape:Array.isArray(r)?r.map(function(t){return t.shape}):r.shape}),r},t.prototype.registerTensor=function(t,e){var n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,\\\"string\\\"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;var r=0;\\\"complex64\\\"!==t.dtype&&\\\"string\\\"!==t.dtype&&(r=t.size*O(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:null!=e?e:this.backend,dtype:t.dtype,shape:t.shape,bytes:r,refCount:0}),this.state.numBytes+=r,null!=e?e.register(t.dataId,t.shape,t.dtype):this.backend.register(t.dataId,t.shape,t.dtype)}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof ht||this.track(t)},t.prototype.registerVariable=function(t){if(null!=this.state.registeredVariables[t.name])throw new Error(\\\"Variable with name \\\"+t.name+\\\" was already registered\\\");this.state.registeredVariables[t.name]=t},t.prototype.disposeTensor=function(t){if(this.state.tensorInfo.has(t.dataId)){this.state.numTensors--,\\\"string\\\"===t.dtype&&this.state.numStringTensors--;var e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?(\\\"complex64\\\"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}},t.prototype.disposeVariables=function(){for(var t in this.state.registeredVariables){var e=this.state.registeredVariables[t];this.disposeVariable(e)}},t.prototype.disposeVariable=function(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]},t.prototype.memory=function(){var t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push(\\\"Memory usage by string tensors is approximate (2 bytes per character)\\\")),t},t.prototype.profile=function(t){return n(this,void 0,void 0,function(){var e,n;return r(this,function(r){return this.state.profiling=!0,e=this.state.numBytes,n=this.state.numTensors,this.state.activeProfile.kernels=[],this.state.activeProfile.result=t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max.apply(Math,this.state.activeProfile.kernels.map(function(t){return t.totalBytesSnapshot})),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n,[2,this.state.activeProfile]})})},t.prototype.isTapeOn=function(){return this.state.gradientDepth>0&&0===this.state.kernelDepth},t.prototype.addTapeNode=function(t,e,n){var r={};t.forEach(function(t,e){r[e]=t});var o={id:this.state.nextTapeNodeId++,name:this.state.activeScope.name,inputs:r,outputs:[e],gradient:function(t){var e=n(t),r={};return e.forEach(function(t,e){r[e]=function(){return t}}),r}};this.state.activeTape.push(o)},t.prototype.keep=function(t){return t.kept=!0,t},t.prototype.startTape=function(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++},t.prototype.endTape=function(){this.state.gradientDepth--},t.prototype.startScope=function(t){var e={track:[],name:\\\"unnamed scope\\\",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e},t.prototype.endScope=function(t){for(var e=this,n=Et(t),r=new Set(n.map(function(t){return t.id})),o=0;o<this.state.activeScope.track.length;o++){var a=this.state.activeScope.track[o];a.kept||r.has(a.id)||a.dispose()}var i=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(function(t){t.kept||t.scopeId!==i.id||e.track(t)})},t.prototype.gradients=function(t,e,n,r){var o=this;if(void 0===r&&(r=!1),f(e.length>0,function(){return\\\"gradients() received an empty list of xs.\\\"}),null!=n&&\\\"float32\\\"!==n.dtype)throw new Error(\\\"dy must have 'float32' dtype, but has '\\\"+n.dtype+\\\"'\\\");var a=this.scopedRun(function(){return o.startTape()},function(){return o.endTape()},function(){return o.tidy(\\\"forward\\\",t)});f(a instanceof ct,function(){return\\\"The result y returned by f() must be a tensor.\\\"});var i=function(t,e,n){for(var r={},o={},a=0;a<e.length;a++)r[e[a].id]=!0;for(a=0;a<t.length;a++){var i=(d=t[a]).inputs;for(var s in i){for(var u=i[s],l=!1,c=0;c<e.length;c++)if(r[u.id]){d.outputs.forEach(function(t){return r[t.id]=!0}),l=!0,o[d.id]=!0;break}if(l)break}}var h={};h[n.id]=!0;var p={};for(a=t.length-1;a>=0;a--)for(i=(d=t[a]).inputs,c=0;c<d.outputs.length;c++)if(h[d.outputs[c].id]){for(var s in i)h[i[s].id]=!0,p[d.id]=!0;break}var f=[];for(a=0;a<t.length;a++){var d;if(o[(d=t[a]).id]&&p[d.id]){var v={};for(var s in d.inputs){var m=d.inputs[s];r[m.id]&&(v[s]=m)}var g=Object.assign({},d);g.inputs=v,g.outputs=d.outputs,f.push(g)}}return f}(this.state.activeTape,e,a);if(!r&&0===i.length&&e.length>0)throw new Error(\\\"Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.\\\");return this.tidy(\\\"backward\\\",function(){var t,r,s={};s[a.id]=null==n?(t=a.shape,r=H(g(t),\\\"float32\\\"),ct.make(t,{values:r})):n,function(t,e,n){for(var r=function(r){var o=e[r],a=[];if(o.outputs.forEach(function(e){var n=t[e.id];if(null!=n)a.push(n);else{var r=ct.make(e.shape,{values:q(e.size,e.dtype)},e.dtype);a.push(r)}}),null==o.gradient)throw new Error(\\\"Cannot compute gradient: gradient function not found for \\\"+o.name+\\\".\\\");var i=o.gradient(1===o.outputs.length?a[0]:a),s=function(e){if(!(e in i))throw new Error(\\\"Cannot backprop through input \\\"+e+\\\". Available gradients found: \\\"+Object.keys(i)+\\\".\\\");var r=n(function(){return i[e]()});if(\\\"float32\\\"!==r.dtype)throw new Error(\\\"Error in gradient for op \\\"+o.name+\\\". The gradient of input \\\"+e+\\\" must have 'float32' dtype, but has '\\\"+r.dtype+\\\"'\\\");var a=o.inputs[e];if(!y(r.shape,a.shape))throw new Error(\\\"Error in gradient for op \\\"+o.name+\\\". The gradient of input '\\\"+e+\\\"' has shape '\\\"+r.shape+\\\"', which does not match the shape of the input '\\\"+a.shape+\\\"'\\\");if(null==t[a.id])t[a.id]=r;else{var s=t[a.id];t[a.id]=s.add(r),s.dispose()}};for(var u in o.inputs)s(u)},o=e.length-1;o>=0;o--)r(o)}(s,i,function(t){return o.tidy(t)});var u=e.map(function(t){return s[t.id]});return 0===o.state.gradientDepth&&(o.state.activeTape.forEach(function(t){for(var e in t.saved)t.saved[e].dispose()}),o.state.activeTape=null),{value:a,grads:u}})},t.prototype.customGrad=function(t){var e=this;return f(W(t),function(){return\\\"The f passed in customGrad(f) must be a function.\\\"}),function(){for(var n,r=[],o=0;o<arguments.length;o++)r[o]=arguments[o];f(r.every(function(t){return t instanceof ct}),function(){return\\\"The args passed in customGrad(f)(x1, x2,...) must all be tensors\\\"});var a={};return r.forEach(function(t,e){a[e]=t}),e.runKernel(function(e,o){return f((n=t.apply(void 0,r.concat([o]))).value instanceof ct,function(){return\\\"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor\\\"}),f(W(n.gradFunc),function(){return\\\"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.\\\"}),n.value},a,function(t,e){var o=n.gradFunc(t,e),a=Array.isArray(o)?o:[o];f(a.length===r.length,function(){return\\\"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).\\\"}),f(a.every(function(t){return t instanceof ct}),function(){return\\\"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.\\\"});var i={};return a.forEach(function(t,e){i[e]=function(){return t}}),i})}},t.prototype.write=function(t,e,n){var r=this.state.tensorInfo.get(e),o=r.backend;if(t=t||this.backend,\\\"string\\\"===r.dtype){var a=F(n);this.state.numBytes+=a-r.bytes,r.bytes=a}t!==o&&(o.disposeData(e),r.backend=t,t.register(e,r.shape,r.dtype)),t.write(e,n)},t.prototype.readSync=function(t){return this.state.tensorInfo.get(t).backend.readSync(t)},t.prototype.read=function(t){return this.state.tensorInfo.get(t).backend.read(t)},t.prototype.fromPixels=function(t,e){return this.backend.fromPixels(t,e)},t.prototype.time=function(t){return n(this,void 0,void 0,function(){var e,n;return r(this,function(r){switch(r.label){case 0:return e=$(),[4,this.backend.time(t)];case 1:return(n=r.sent()).wallMs=$()-e,[2,n]}})})},t.prototype.track=function(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t},Object.defineProperty(t.prototype,\\\"registeredVariables\\\",{get:function(){return this.state.registeredVariables},enumerable:!0,configurable:!0}),t.prototype.reset=function(){for(var t in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new kt,this.registry)this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null},t.nextTensorId=0,t.nextVariableId=0,t}();var St=function(){var t=function(){if(null==Rt){var t=void 0;if(\\\"undefined\\\"!=typeof window)t=window;else if(\\\"undefined\\\"!=typeof global)t=global;else if(\\\"undefined\\\"!=typeof process)t=process;else{if(\\\"undefined\\\"==typeof self)throw new Error(\\\"Could not find a global object\\\");t=self}Rt=t}return Rt}();if(null==t._tfengine){var e=new o(t);t._tfengine=new Nt(e)}return s(t._tfengine.ENV),st=function(){return t._tfengine},t._tfengine}();function At(){return\\\"undefined\\\"!=typeof window&&null!=window.document||\\\"undefined\\\"!=typeof WorkerGlobalScope}i.registerFlag(\\\"DEBUG\\\",function(){return!1},function(t){t&&console.warn(\\\"Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.\\\")}),i.registerFlag(\\\"IS_BROWSER\\\",function(){return At()}),i.registerFlag(\\\"IS_NODE\\\",function(){return\\\"undefined\\\"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node}),i.registerFlag(\\\"IS_CHROME\\\",function(){return\\\"undefined\\\"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)}),i.registerFlag(\\\"PROD\\\",function(){return!1}),i.registerFlag(\\\"TENSORLIKE_CHECK_SHAPE_CONSISTENCY\\\",function(){return i.getBool(\\\"DEBUG\\\")}),i.registerFlag(\\\"DEPRECATION_WARNINGS_ENABLED\\\",function(){return!0}),i.registerFlag(\\\"IS_TEST\\\",function(){return!1});var Tt,Dt,_t={},Ot={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Ft(t,e){_t[t]=e}function Mt(t){t in _t||(_t[t]=function(t){if(1!==t&&2!==t)throw new Error(\\\"Cannot get WebGL rendering context, WebGL is disabled.\\\");var e=Bt(t);if(e.addEventListener(\\\"webglcontextlost\\\",function(e){e.preventDefault(),delete _t[t]},!1),1===t)return e.getContext(\\\"webgl\\\",Ot)||e.getContext(\\\"experimental-webgl\\\",Ot);return e.getContext(\\\"webgl2\\\",Ot)}(t));var e=_t[t];return e.isContextLost()?(delete _t[t],Mt(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),_t[t])}function Bt(t){if(\\\"undefined\\\"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if(\\\"undefined\\\"!=typeof document)return document.createElement(\\\"canvas\\\");throw new Error(\\\"Cannot create a canvas in this context\\\")}function Pt(t,e){return[e,t]}function Lt(t){var e=g(t);return w(Math.ceil(e/4))}function Wt(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Ut(t,e){var n,r,o,a,s,u,l,c,h,p=t;return 2===i.getNumber(\\\"WEBGL_VERSION\\\")?(n=p.R32F,r=p.R16F,o=p.RGBA16F,a=p.RGBA32F,s=p.RED,u=4,l=1,c=p.HALF_FLOAT,h=p.FLOAT):(n=t.RGBA,r=t.RGBA,o=t.RGBA,a=p.RGBA,s=t.RGBA,u=4,l=4,c=null!=e?e.HALF_FLOAT_OES:null,h=t.FLOAT),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:s,downloadTextureFormat:t.RGBA,downloadUnpackNumChannels:u,defaultNumChannels:l,textureTypeHalfFloat:c,textureTypeFloat:h}}function Vt(t,e,n){var r=n();return e&&function(t){var e=t.getError();if(e!==t.NO_ERROR)throw new Error(\\\"WebGL Error: \\\"+qt(t,e))}(t),r}!function(t){t[t.RENDER=0]=\\\"RENDER\\\",t[t.UPLOAD=1]=\\\"UPLOAD\\\",t[t.PIXELS=2]=\\\"PIXELS\\\",t[t.DOWNLOAD=3]=\\\"DOWNLOAD\\\"}(Tt||(Tt={})),function(t){t[t.UNPACKED_FLOAT16=0]=\\\"UNPACKED_FLOAT16\\\",t[t.UNPACKED_FLOAT32=1]=\\\"UNPACKED_FLOAT32\\\",t[t.PACKED_4X1_UNSIGNED_BYTE=2]=\\\"PACKED_4X1_UNSIGNED_BYTE\\\",t[t.PACKED_2X2_FLOAT32=3]=\\\"PACKED_2X2_FLOAT32\\\",t[t.PACKED_2X2_FLOAT16=4]=\\\"PACKED_2X2_FLOAT16\\\"}(Dt||(Dt={}));var zt=5.96e-8,Gt=65504;function Ht(t){return!!(i.getBool(\\\"WEBGL_RENDER_FLOAT32_ENABLED\\\")||0===t||zt<Math.abs(t)&&Math.abs(t)<Gt)}function qt(t,e){switch(e){case t.NO_ERROR:return\\\"NO_ERROR\\\";case t.INVALID_ENUM:return\\\"INVALID_ENUM\\\";case t.INVALID_VALUE:return\\\"INVALID_VALUE\\\";case t.INVALID_OPERATION:return\\\"INVALID_OPERATION\\\";case t.INVALID_FRAMEBUFFER_OPERATION:return\\\"INVALID_FRAMEBUFFER_OPERATION\\\";case t.OUT_OF_MEMORY:return\\\"OUT_OF_MEMORY\\\";case t.CONTEXT_LOST_WEBGL:return\\\"CONTEXT_LOST_WEBGL\\\";default:return\\\"Unknown error code \\\"+e}}function $t(t,e,n){return ve(t,e,function(){return t.getExtension(n)},'Extension \\\"'+n+'\\\" not supported on this browser.')}function Kt(t,e,n){var r=ve(t,e,function(){return t.createShader(t.VERTEX_SHADER)},\\\"Unable to create vertex WebGLShader.\\\");if(Vt(t,e,function(){return t.shaderSource(r,n)}),Vt(t,e,function(){return t.compileShader(r)}),!1===t.getShaderParameter(r,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(r)),new Error(\\\"Failed to compile vertex shader.\\\");return r}function jt(t,e,n){var r=ve(t,e,function(){return t.createShader(t.FRAGMENT_SHADER)},\\\"Unable to create fragment WebGLShader.\\\");if(Vt(t,e,function(){return t.shaderSource(r,n)}),Vt(t,e,function(){return t.compileShader(r)}),!1===t.getShaderParameter(r,t.COMPILE_STATUS))throw function(t,e){var n=Qt.exec(e);if(null==n)return console.log(\\\"Couldn't parse line number in error: \\\"+e),void console.log(t);for(var r=+n[1],o=t.split(\\\"\\\\n\\\"),a=o.length.toString().length+2,i=o.map(function(t,e){return C((e+1).toString(),a)+t}),s=0,u=0;u<i.length;u++)s=Math.max(i[u].length,s);var l=i.slice(0,r-1),c=i.slice(r-1,r),h=i.slice(r);console.log(l.join(\\\"\\\\n\\\")),console.log(e.split(\\\"\\\\n\\\")[0]),console.log(\\\"%c \\\"+C(c[0],s),\\\"border:1px solid red; background-color:#e3d2d2; color:#a61717\\\"),console.log(h.join(\\\"\\\\n\\\"))}(n,t.getShaderInfoLog(r)),new Error(\\\"Failed to compile fragment shader.\\\");return r}var Xt,Yt,Qt=/ERROR: [0-9]+:([0-9]+):/g;function Jt(t,e){return ve(t,e,function(){return t.createProgram()},\\\"Unable to create WebGLProgram.\\\")}function Zt(t,e,n){if(Vt(t,e,function(){return t.linkProgram(n)}),!1===t.getProgramParameter(n,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(n)),new Error(\\\"Failed to link vertex and fragment shaders.\\\")}function te(t,e,n){if(Vt(t,e,function(){return t.validateProgram(n)}),!1===t.getProgramParameter(n,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(n)),new Error(\\\"Shader program validation failed.\\\")}function ee(t,e,n){var r=ve(t,e,function(){return t.createBuffer()},\\\"Unable to create WebGLBuffer\\\");return Vt(t,e,function(){return t.bindBuffer(t.ARRAY_BUFFER,r)}),Vt(t,e,function(){return t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW)}),r}function ne(t,e,n){var r=ve(t,e,function(){return t.createBuffer()},\\\"Unable to create WebGLBuffer\\\");return Vt(t,e,function(){return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r)}),Vt(t,e,function(){return t.bufferData(t.ELEMENT_ARRAY_BUFFER,n,t.STATIC_DRAW)}),r}function re(t,e){return ve(t,e,function(){return t.createTexture()},\\\"Unable to create WebGLTexture.\\\")}function oe(t,e){var n=i.getNumber(\\\"WEBGL_MAX_TEXTURE_SIZE\\\");if(t<=0||e<=0){var r=\\\"[\\\"+t+\\\"x\\\"+e+\\\"]\\\";throw new Error(\\\"Requested texture size \\\"+r+\\\" is invalid.\\\")}if(t>n||e>n){r=\\\"[\\\"+t+\\\"x\\\"+e+\\\"]\\\";throw new Error(\\\"Requested texture size \\\"+r+\\\" greater than WebGL maximum on this browser / GPU \\\"+(\\\"[\\\"+n+\\\"x\\\"+n+\\\"]\\\")+\\\".\\\")}}function ae(t,e){return ve(t,e,function(){return t.createFramebuffer()},\\\"Unable to create WebGLFramebuffer.\\\")}function ie(t,e,n,r,o,a,i,s){var u=t.getAttribLocation(n,r);return-1!==u&&(Vt(t,e,function(){return t.bindBuffer(t.ARRAY_BUFFER,o)}),Vt(t,e,function(){return t.vertexAttribPointer(u,a,t.FLOAT,!1,i,s)}),Vt(t,e,function(){return t.enableVertexAttribArray(u)}),!0)}function se(t,e,n,r){me(t,r),Vt(t,e,function(){return t.activeTexture(t.TEXTURE0+r)}),Vt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,n)})}function ue(t,e,n,r){return ve(t,e,function(){return t.getUniformLocation(n,r)},'uniform \\\"'+r+'\\\" not present in program.')}function le(t,e,n){return t.getUniformLocation(e,n)}function ce(t,e,n,r,o,a){Vt(t,e,function(){return se(t,e,r,a)}),Vt(t,e,function(){return t.uniform1i(o,a)})}function he(t,e,n,r){Vt(t,e,function(){return t.bindFramebuffer(t.FRAMEBUFFER,r)}),Vt(t,e,function(){return t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0)})}function pe(t,e,n){Vt(t,e,function(){return t.bindFramebuffer(t.FRAMEBUFFER,n)}),Vt(t,e,function(){return t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)})}function fe(t){var e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error(\\\"Error binding framebuffer: \\\"+de(t,e))}function de(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return\\\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\\\";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return\\\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\\\";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return\\\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\\\";case t.FRAMEBUFFER_UNSUPPORTED:return\\\"FRAMEBUFFER_UNSUPPORTED\\\";default:return\\\"unknown error \\\"+e}}function ve(t,e,n,r){var o=Vt(t,e,function(){return n()});if(null==o)throw new Error(r);return o}function me(t,e){var n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(\\\"textureUnit must be in \\\"+(\\\"[gl.TEXTURE0, gl.TEXTURE\\\"+n+\\\"]\\\")+\\\".\\\")}function ge(t,e){return void 0===e&&(e=2),g(t.slice(0,t.length-e))}function ye(t){if(0===t.length)throw Error(\\\"Cannot get rows and columns of an empty shape array.\\\");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function xe(t){var e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[ge(t)].concat(ye(t))),e}function be(t,e){var n;void 0===e&&(e=!1);var r=i.getNumber(\\\"WEBGL_MAX_TEXTURE_SIZE\\\");if(e&&(r*=2,1===(t=t.map(function(e,n){return n>=t.length-2?h(t[n]):t[n]})).length&&(t=[2,t[0]])),2!==t.length){var o=k(t);t=o.newShape}var a=g(t);if(t.length<=1&&a<=r)return[1,a];if(2===t.length&&t[0]<=r&&t[1]<=r)return t;if(3===t.length&&t[0]*t[1]<=r&&t[2]<=r)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=r&&t[1]*t[2]<=r)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=r&&t[3]<=r)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=r&&t[1]*t[2]*t[3]<=r)return[t[0],t[1]*t[2]*t[3]];if(e){var s=ge(t),u=2,l=2;return t.length&&(u=(n=ye(t))[0],l=n[1]),w(a=s*(u/2)*(l/2)).map(function(t){return 2*t})}return w(a)}function we(t){return t%2==0}function Ce(t,e){if(y(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){var n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(we(n)&&we(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&we(t[0])&&we(e[0])}function Ee(t){if(null==Xt){var e=Mt(t);Xt=e.getParameter(e.MAX_TEXTURE_SIZE)}return Xt}function Re(t){if(null==Yt){var e=Mt(t);Yt=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,Yt)}function Ie(t){if(0===t)return 0;var e=Mt(t);return ke(e,\\\"EXT_disjoint_timer_query_webgl2\\\")&&2===t?2:ke(e,\\\"EXT_disjoint_timer_query\\\")?1:0}function ke(t,e){return null!=t.getExtension(e)}function Ne(t){try{if(null!=Mt(t))return!0}catch(t){return!1}return!1}function Se(t){if(0===t)return!1;var e=Mt(t);if(1===t){if(!ke(e,\\\"OES_texture_float\\\"))return!1}else if(!ke(e,\\\"EXT_color_buffer_float\\\"))return!1;return Te(e)}function Ae(t){if(0===t)return!1;var e=Mt(t);if(1!==t){if(ke(e,\\\"EXT_color_buffer_float\\\"))return Te(e);if(ke(e,\\\"EXT_color_buffer_half_float\\\")){var n=e.getExtension(\\\"EXT_color_buffer_half_float\\\");return function(t,e){var n=Ut(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r);t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);var o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);var a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(o),a}(e,n)}return!1}return!!ke(e,\\\"OES_texture_float\\\")&&(!!ke(e,\\\"WEBGL_color_buffer_float\\\")&&Te(e))}function Te(t){var e=Ut(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n);t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);var r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);var o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),o}function De(t){return 2===t&&null!=Mt(t).fenceSync}var _e=Object.freeze({callAndCheck:Vt,canBeRepresented:Ht,getWebGLErrorMessage:qt,getExtensionOrThrow:$t,createVertexShader:Kt,createFragmentShader:jt,createProgram:Jt,linkProgram:Zt,validateProgram:te,createStaticVertexBuffer:ee,createStaticIndexBuffer:ne,getNumChannels:function(){return 2===i.getNumber(\\\"WEBGL_VERSION\\\")?1:4},createTexture:re,validateTextureSize:oe,createFramebuffer:ae,bindVertexBufferToProgramAttribute:ie,bindTextureUnit:se,unbindTextureUnit:function(t,e,n){me(t,n),Vt(t,e,function(){return t.activeTexture(t.TEXTURE0+n)}),Vt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,null)})},getProgramUniformLocationOrThrow:ue,getProgramUniformLocation:le,bindTextureToProgramUniformSampler:ce,bindCanvasToFramebuffer:function(t,e){Vt(t,e,function(){return t.bindFramebuffer(t.FRAMEBUFFER,null)}),Vt(t,e,function(){return t.viewport(0,0,t.canvas.width,t.canvas.height)}),Vt(t,e,function(){return t.scissor(0,0,t.canvas.width,t.canvas.height)})},bindColorTextureToFramebuffer:he,unbindColorTextureFromFramebuffer:pe,validateFramebuffer:fe,getFramebufferErrorMessage:de,getBatchDim:ge,getRowsCols:ye,getShapeAs3D:xe,getTextureShapeFromLogicalShape:be,isReshapeFree:Ce,getWebGLMaxTextureSize:Ee,resetMaxTextureSize:function(){Xt=null},resetMaxTexturesInShader:function(){Yt=null},getMaxTexturesInShader:Re,getWebGLDisjointQueryTimerVersion:Ie,hasExtension:ke,isWebGLVersionEnabled:Ne,isCapableOfRenderingToFloatTexture:Se,isDownloadFloatTextureEnabled:Ae,isWebGLFenceEnabled:De});function Oe(){i.set(\\\"PROD\\\",!0)}function Fe(){i.set(\\\"DEBUG\\\",!0)}function Me(){i.set(\\\"DEPRECATION_WARNINGS_ENABLED\\\",!1),console.warn(\\\"TensorFlow.js deprecation warnings have been disabled.\\\")}function Be(t){i.getBool(\\\"DEPRECATION_WARNINGS_ENABLED\\\")&&console.warn(t+\\\" You can disable deprecation warnings with tf.disableDeprecationWarnings().\\\")}function Pe(){St.disposeVariables()}function Le(){return St.memory()}function We(t){return St.profile(t)}function Ue(t,e){return St.tidy(t,e)}function Ve(t){Et(t).forEach(function(t){return t.dispose()})}function ze(t){return St.keep(t)}function Ge(t){return St.time(t)}function He(t){return St.setBackend(t)}function qe(){return St.ready()}function $e(){return St.backendName}function Ke(t){St.removeBackend(t)}function je(t){return St.findBackend(t)}function Xe(t){return St.findBackendFactory(t)}function Ye(t,e,n){return void 0===n&&(n=1),St.registerBackend(t,e,n)}function Qe(){return St.backend}function Je(t,e){i.setPlatform(t,e)}function Ze(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];i.getBool(\\\"IS_TEST\\\")||console.warn.apply(console,t)}function tn(t,e){var n=t;if(_(t))return\\\"string\\\"===e?[]:[t.length];if(!Array.isArray(t))return[];for(var r=[];Array.isArray(n)||_(n)&&\\\"string\\\"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&i.getBool(\\\"TENSORLIKE_CHECK_SHAPE_CONSISTENCY\\\")&&function t(e,n,r){r=r||[];if(!Array.isArray(e)&&!_(e))return void f(0===n.length,function(){return\\\"Element arr[\\\"+r.join(\\\"][\\\")+\\\"] is a primitive, but should be an array/TypedArray of \\\"+n[0]+\\\" elements\\\"});f(n.length>0,function(){return\\\"Element arr[\\\"+r.join(\\\"][\\\")+\\\"] should be a primitive, but is an array of \\\"+e.length+\\\" elements\\\"});f(e.length===n[0],function(){return\\\"Element arr[\\\"+r.join(\\\"][\\\")+\\\"] should have \\\"+n[0]+\\\" elements, but has \\\"+e.length+\\\" elements\\\"});var o=n.slice(1);for(var a=0;a<e.length;++a)t(e[a],o,r.concat(a))}(t,r,[]),r}function en(t,e,n,r){if(null!=t&&(\\\"numeric\\\"!==t&&t!==e||\\\"numeric\\\"===t&&\\\"string\\\"===e))throw new Error(\\\"Argument '\\\"+n+\\\"' passed to '\\\"+r+\\\"' must be \\\"+t+\\\" tensor, but got \\\"+e+\\\" tensor\\\")}function nn(t,e,n,r){if(void 0===r&&(r=\\\"numeric\\\"),t instanceof ct)return en(r,t.dtype,e,n),t;var o=L(t);if(\\\"string\\\"!==o&&[\\\"bool\\\",\\\"int32\\\",\\\"float32\\\"].indexOf(r)>=0&&(o=r),en(r,o,e,n),null==t||!_(t)&&!Array.isArray(t)&&\\\"number\\\"!=typeof t&&\\\"boolean\\\"!=typeof t&&\\\"string\\\"!=typeof t){var a=null==t?\\\"null\\\":t.constructor.name;throw new Error(\\\"Argument '\\\"+e+\\\"' passed to '\\\"+n+\\\"' must be a Tensor or TensorLike, but got '\\\"+a+\\\"'\\\")}var s=tn(t,o);_(t)||Array.isArray(t)||(t=[t]);var u=\\\"string\\\"!==o?z(t,o,i.getBool(\\\"DEBUG\\\")):m(t,[],!0);return ct.make(s,{values:u},o)}function rn(t,e,n,r){if(void 0===r&&(r=\\\"numeric\\\"),!Array.isArray(t))throw new Error(\\\"Argument \\\"+e+\\\" passed to \\\"+n+\\\" must be a `Tensor[]` or `TensorLike[]`\\\");return t.map(function(t,r){return nn(t,e+\\\"[\\\"+r+\\\"]\\\",n)},r)}function on(t,e){for(var n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function an(t,e,n){for(var r=t.length+e.length,o=[],a=0,i=0,s=0;s<r;s++)-1===n.indexOf(s)?o.push(t[a++]):o.push(e[i++]);return o}function sn(t,e){for(var n=[],r=t.length,o=0;o<r;o++)-1===e.indexOf(o)&&n.push(t[o]);return[n,e.map(function(e){return t[e]})]}function un(t,e){return an(t,e.map(function(t){return 1}),e)}function ln(t,e,n){f(on(e,n),function(){return t+\\\" supports only inner-most axes for now. Got axes \\\"+e+\\\" and rank-\\\"+n+\\\" input.\\\"})}function cn(t,e){if(on(t,e))return null;for(var n=[],r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(function(t){return n.push(t)}),n}function hn(t){return t.map(function(t,e){return[e,t]}).sort(function(t,e){return t[1]-e[1]}).map(function(t){return t[0]})}function pn(t,e){for(var n=[],r=e-t;r<e;++r)n.push(r);return n}function fn(t,e){var n=t[0].length;t.forEach(function(t,e){f(t.length===n,function(){return\\\"Error in concat\\\"+n+\\\"D: rank of tensors[\\\"+e+\\\"] must be the same as the rank of the rest (\\\"+n+\\\")\\\"})}),f(e>=0&&e<n,function(){return\\\"Error in concat\\\"+n+\\\"D: axis must be between 0 and \\\"+(n-1)+\\\".\\\"});var r=t[0];t.forEach(function(t,o){for(var a=0;a<n;a++)f(a===e||t[a]===r[a],function(){return\\\"Error in concat\\\"+n+\\\"D: Shape of tensors[\\\"+o+\\\"] (\\\"+t+\\\") does not match the shape of the rest (\\\"+r+\\\") along the non-concatenated axis \\\"+o+\\\".\\\"})})}function dn(t,e){for(var n=t[0].slice(),r=1;r<t.length;r++)n[e]+=t[r][e];return n}function vn(t){var e=Object.keys(t);if(1!==e.length)throw new Error(\\\"Please provide an object with a single key (operation name) mapping to a function. Got an object with \\\"+e.length+\\\" keys.\\\");var n=e[0],r=t[n];n.endsWith(\\\"_\\\")&&(n=n.substring(0,n.length-1));var o=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];St.startScope(n);try{var o=r.apply(void 0,t);return o instanceof Promise&&console.error(\\\"Cannot return a Promise inside of tidy.\\\"),St.endScope(o),o}catch(t){throw St.endScope(null),t}};return Object.defineProperty(o,\\\"name\\\",{value:n,configurable:!0}),o}i.registerFlag(\\\"HAS_WEBGL\\\",function(){return i.getNumber(\\\"WEBGL_VERSION\\\")>0}),i.registerFlag(\\\"WEBGL_VERSION\\\",function(){return Ne(2)?2:Ne(1)?1:0}),i.registerFlag(\\\"WEBGL_BUFFER_SUPPORTED\\\",function(){return 2===i.get(\\\"WEBGL_VERSION\\\")}),i.registerFlag(\\\"WEBGL_CPU_FORWARD\\\",function(){return!0}),i.registerFlag(\\\"WEBGL_FORCE_F16_TEXTURES\\\",function(){return!1}),i.registerFlag(\\\"WEBGL_PACK\\\",function(){return i.getBool(\\\"HAS_WEBGL\\\")}),i.registerFlag(\\\"WEBGL_PACK_NORMALIZATION\\\",function(){return i.getBool(\\\"WEBGL_PACK\\\")}),i.registerFlag(\\\"WEBGL_PACK_CLIP\\\",function(){return i.getBool(\\\"WEBGL_PACK\\\")}),i.registerFlag(\\\"WEBGL_PACK_DEPTHWISECONV\\\",function(){return!1}),i.registerFlag(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\",function(){return i.getBool(\\\"WEBGL_PACK\\\")}),i.registerFlag(\\\"WEBGL_PACK_UNARY_OPERATIONS\\\",function(){return i.getBool(\\\"WEBGL_PACK\\\")}),i.registerFlag(\\\"WEBGL_PACK_ARRAY_OPERATIONS\\\",function(){return i.getBool(\\\"WEBGL_PACK\\\")}),i.registerFlag(\\\"WEBGL_PACK_IMAGE_OPERATIONS\\\",function(){return i.getBool(\\\"WEBGL_PACK\\\")}),i.registerFlag(\\\"WEBGL_PACK_REDUCE\\\",function(){return i.getBool(\\\"WEBGL_PACK\\\")}),i.registerFlag(\\\"WEBGL_LAZILY_UNPACK\\\",function(){return i.getBool(\\\"WEBGL_PACK\\\")}),i.registerFlag(\\\"WEBGL_CONV_IM2COL\\\",function(){return i.getBool(\\\"WEBGL_PACK\\\")}),i.registerFlag(\\\"WEBGL_MAX_TEXTURE_SIZE\\\",function(){return Ee(i.getNumber(\\\"WEBGL_VERSION\\\"))}),i.registerFlag(\\\"WEBGL_MAX_TEXTURES_IN_SHADER\\\",function(){return Re(i.getNumber(\\\"WEBGL_VERSION\\\"))}),i.registerFlag(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\\\",function(){var t=i.getNumber(\\\"WEBGL_VERSION\\\");return 0===t?0:Ie(t)}),i.registerFlag(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE\\\",function(){return i.getNumber(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\\\")>0&&(t=navigator.userAgent||navigator.vendor||window.opera,!(/(android|bb\\\\d+|meego).+mobile|avantgo|bada\\\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\\\-(n|u)|c55\\\\/|capi|ccwa|cdm\\\\-|cell|chtm|cldc|cmd\\\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\\\-|_)|g1 u|g560|gene|gf\\\\-5|g\\\\-mo|go(\\\\.w|od)|gr(ad|un)|haie|hcit|hd\\\\-(m|p|t)|hei\\\\-|hi(pt|ta)|hp( i|ip)|hs\\\\-c|ht(c(\\\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\\\-(20|go|ma)|i230|iac( |\\\\-|\\\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\\\/)|klon|kpt |kwc\\\\-|kyo(c|k)|le(no|xi)|lg( g|\\\\/(k|l|u)|50|54|\\\\-[a-w])|libw|lynx|m1\\\\-w|m3ga|m50\\\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\\\-2|po(ck|rt|se)|prox|psio|pt\\\\-g|qa\\\\-a|qc(07|12|21|32|60|\\\\-[2-7]|i\\\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\\\-|oo|p\\\\-)|sdk\\\\/|se(c(\\\\-|0|1)|47|mc|nd|ri)|sgh\\\\-|shar|sie(\\\\-|m)|sk\\\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\\\-|v\\\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\\\-|tdg\\\\-|tel(i|m)|tim\\\\-|t\\\\-mo|to(pl|sh)|ts(70|m\\\\-|m3|m5)|tx\\\\-9|up(\\\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\\\-|your|zeto|zte\\\\-/i.test(t.substr(0,4))));var t}),i.registerFlag(\\\"WEBGL_RENDER_FLOAT32_CAPABLE\\\",function(){return Se(i.getNumber(\\\"WEBGL_VERSION\\\"))}),i.registerFlag(\\\"WEBGL_RENDER_FLOAT32_ENABLED\\\",function(){return!i.getBool(\\\"WEBGL_FORCE_F16_TEXTURES\\\")&&i.getBool(\\\"WEBGL_RENDER_FLOAT32_CAPABLE\\\")}),i.registerFlag(\\\"WEBGL_DOWNLOAD_FLOAT_ENABLED\\\",function(){return Ae(i.getNumber(\\\"WEBGL_VERSION\\\"))}),i.registerFlag(\\\"WEBGL_FENCE_API_ENABLED\\\",function(){return De(i.getNumber(\\\"WEBGL_VERSION\\\"))}),i.registerFlag(\\\"WEBGL_SIZE_UPLOAD_UNIFORM\\\",function(){return i.getBool(\\\"WEBGL_RENDER_FLOAT32_ENABLED\\\")?4:0}),lt=Be;var mn=vn({complex_:function(t,e){var n=nn(t,\\\"real\\\",\\\"complex\\\"),r=nn(e,\\\"imag\\\",\\\"complex\\\");return d(n.shape,r.shape,\\\"real and imag shapes, \\\"+n.shape+\\\" and \\\"+r.shape+\\\", must match in call to tf.complex().\\\"),St.runKernel(function(t){return t.complex(n,r)},{$real:n,$imag:r})}}),gn=vn({real_:function(t){var e=nn(t,\\\"input\\\",\\\"real\\\");return St.runKernel(function(t){return t.real(e)},{$input:e})}}),yn=vn({imag_:function(t){var e=nn(t,\\\"input\\\",\\\"imag\\\");return St.runKernel(function(t){return t.imag(e)},{$input:e})}});function xn(t,e,n){return bn(t,e,tn(t,n),n)}function bn(t,e,n,r){if(null==r&&(r=L(t)),\\\"complex64\\\"===r)throw new Error(\\\"Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).\\\");if(!_(t)&&!Array.isArray(t)&&\\\"number\\\"!=typeof t&&\\\"boolean\\\"!=typeof t&&\\\"string\\\"!=typeof t)throw new Error(\\\"values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray\\\");if(null!=e){K(e);var o=g(e),a=g(n);f(o===a,function(){return\\\"Based on the provided shape, [\\\"+e+\\\"], the tensor should have \\\"+o+\\\" values but has \\\"+a});for(var s=0;s<n.length;++s){var u=n[s],l=s!==n.length-1||u!==g(e.slice(s));f(n[s]===e[s]||!l,function(){return\\\"Error creating a new Tensor. Inferred shape (\\\"+n+\\\") does not match the provided shape (\\\"+e+\\\"). \\\"})}}return _(t)||Array.isArray(t)||(t=[t]),e=e||n,t=\\\"string\\\"!==r?z(t,r,i.getBool(\\\"DEBUG\\\")):m(t,[],!0),ct.make(e,{values:t},r)}function wn(t,e){if((_(t)&&\\\"string\\\"!==e||Array.isArray(t))&&\\\"complex64\\\"!==e)throw new Error(\\\"Error creating a new Scalar: value must be a primitive (number|boolean|string)\\\");if(\\\"string\\\"===e&&_(t)&&!(t instanceof Uint8Array))throw new Error(\\\"When making a scalar from encoded string, the value must be `Uint8Array`.\\\");return bn(t,[],[],e)}function Cn(t,e){v(t);var n=tn(t,e);if(1!==n.length)throw new Error(\\\"tensor1d() requires values to be a flat/TypedArray\\\");return bn(t,null,n,e)}function En(t,e,n){if(v(t),null!=e&&2!==e.length)throw new Error(\\\"tensor2d() requires shape to have two numbers\\\");var r=tn(t,n);if(2!==r.length&&1!==r.length)throw new Error(\\\"tensor2d() requires values to be number[][] or flat/TypedArray\\\");if(1===r.length&&null==e)throw new Error(\\\"tensor2d() requires shape to be provided when `values` are a flat/TypedArray\\\");return bn(t,e,r,n)}function Rn(t,e,n){if(v(t),null!=e&&3!==e.length)throw new Error(\\\"tensor3d() requires shape to have three numbers\\\");var r=tn(t,n);if(3!==r.length&&1!==r.length)throw new Error(\\\"tensor3d() requires values to be number[][][] or flat/TypedArray\\\");if(1===r.length&&null==e)throw new Error(\\\"tensor3d() requires shape to be provided when `values` are a flat array\\\");return bn(t,e,r,n)}function In(t,e,n){if(v(t),null!=e&&4!==e.length)throw new Error(\\\"tensor4d() requires shape to have four numbers\\\");var r=tn(t,n);if(4!==r.length&&1!==r.length)throw new Error(\\\"tensor4d() requires values to be number[][][][] or flat/TypedArray\\\");if(1===r.length&&null==e)throw new Error(\\\"tensor4d() requires shape to be provided when `values` are a flat array\\\");return bn(t,e,r,n)}function kn(t,e,n){if(v(t),null!=e&&5!==e.length)throw new Error(\\\"tensor5d() requires shape to have five numbers\\\");var r=tn(t,n);if(5!==r.length&&1!==r.length)throw new Error(\\\"tensor5d() requires values to be number[][][][][] or flat/TypedArray\\\");if(1===r.length&&null==e)throw new Error(\\\"tensor5d() requires shape to be provided when `values` are a flat array\\\");return bn(t,e,r,n)}function Nn(t,e,n){if(v(t),null!=e&&6!==e.length)throw new Error(\\\"tensor6d() requires shape to have six numbers\\\");var r=tn(t,n);if(6!==r.length&&1!==r.length)throw new Error(\\\"tensor6d() requires values to be number[][][][][][] or flat/TypedArray\\\");if(1===r.length&&null==e)throw new Error(\\\"tensor6d() requires shape to be provided when `values` are a flat array\\\");return bn(t,e=e||r,r,n)}function Sn(t,e){if(void 0===e&&(e=\\\"float32\\\"),\\\"complex64\\\"===e){var n=Sn(t,\\\"float32\\\"),r=An(t,\\\"float32\\\");return mn(n,r)}var o=H(g(t),e);return ct.make(t,{values:o},e)}function An(t,e){if(void 0===e&&(e=\\\"float32\\\"),\\\"complex64\\\"===e){var n=An(t,\\\"float32\\\"),r=An(t,\\\"float32\\\");return mn(n,r)}var o=q(g(t),e);return ct.make(t,{values:o},e)}function Tn(t,e,n){return St.runKernel(function(r){return r.fill(t,e,n)},{})}function Dn(t,e,n){if(n<=0)throw new Error(\\\"The number of values should be positive.\\\");return St.runKernel(function(r){return r.linspace(t,e,n)},{})}function _n(t,e,n,r){if(void 0===n&&(n=1),void 0===r&&(r=\\\"float32\\\"),0===n)throw new Error(\\\"Cannot have a step of zero\\\");if(t===e||t<e&&n<0||e<t&&n>1)return An([0],r);var o=q(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),o[0]=t;for(var a=1;a<o.length;a++)o[a]=o[a-1]+n;return Cn(o,r)}var On=vn({onesLike_:function(t){var e=nn(t,\\\"x\\\",\\\"onesLike\\\");if(\\\"complex64\\\"===e.dtype){var n=On(gn(e)),r=Fn(yn(e));return mn(n,r)}return St.runKernel(function(t){return t.onesLike(e)},{$x:e},function(t,e){return{$x:function(){return Fn(t)}}})}}),Fn=vn({zerosLike_:function(t){var e=nn(t,\\\"x\\\",\\\"zerosLike\\\");return St.runKernel(function(t){return t.zerosLike(e)},{$x:e},function(t,e){return{$x:function(){return Fn(t)}}})}});var Mn=vn({concat_:function(t,e){void 0===e&&(e=0),f(t.length>=1,function(){return\\\"Pass at least one tensor to concat\\\"});var n=rn(t,\\\"tensors\\\",\\\"concat\\\");\\\"complex64\\\"===n[0].dtype&&n.forEach(function(t){if(\\\"complex64\\\"!==t.dtype)throw new Error(\\\"Cannot concatenate complex64 tensors with a tensor\\\\n          with dtype \\\"+t.dtype+\\\". \\\")}),e=I(e,n[0].shape)[0];var r=dn(n.map(function(t){return t.shape}),e);if(0===g(r))return xn([],r);if(1===(n=n.filter(function(t){return t.size>0})).length)return n[0];var o=n.map(function(t){return t.shape});fn(o,e);var a=n;return St.runKernel(function(t){return t.concat(n,e)},a,function(t){var n=o.map(function(t){return t[e]});return Un(t,n,e).map(function(t){return function(){return t}})})}}),Bn=vn({concat1d_:function(t){return Mn(t,0)}}),Pn=vn({concat2d_:function(t,e){return Mn(t,e)}}),Ln=vn({concat3d_:function(t,e){return Mn(t,e)}}),Wn=vn({concat4d_:function(t,e){return Mn(t,e)}}),Un=vn({split_:function(t,e,n){void 0===n&&(n=0);var r,o=nn(t,\\\"x\\\",\\\"split\\\");return n=I(n,o.shape)[0],\\\"number\\\"==typeof e?(f(o.shape[n]%e==0,function(){return\\\"Number of splits must evenly divide the axis.\\\"}),r=new Array(e).fill(o.shape[n]/e)):(f(o.shape[n]===e.reduce(function(t,e){return t+e}),function(){return\\\"The sum of sizes must match the size of the axis dimension.\\\"}),r=e),St.runKernel(function(t){return t.split(o,r,n)},{$x:o},function(t){return{$x:function(){return Mn(t,n)}}})}});\\\"undefined\\\"!=typeof globalThis?globalThis:\\\"undefined\\\"!=typeof window?window:\\\"undefined\\\"!=typeof global?global:\\\"undefined\\\"!=typeof self&&self;function Vn(t,e){return t(e={exports:{}},e.exports),e.exports}var zn=Vn(function(t){!function(t,e,n){function r(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(\\\" \\\"),n.s1=r(\\\" \\\"),n.s2=r(\\\" \\\"),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function a(t,e){var n=new r(t),a=e&&e.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+1.1102230246251565e-16*(2097152*i()|0)},i.quick=i,a&&(\\\"object\\\"==typeof a&&o(a,n),i.state=function(){return o(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n(function(){return a}):this.alea=a}(0,t,!1)}),Gn=Vn(function(t){!function(t,e,n){function r(t){var e=this,n=\\\"\\\";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(\\\"object\\\"==typeof a&&o(a,n),i.state=function(){return o(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n(function(){return a}):this.xor128=a}(0,t,!1)}),Hn=Vn(function(t){!function(t,e,n){function r(t){var e=this,n=\\\"\\\";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(\\\"object\\\"==typeof a&&o(a,n),i.state=function(){return o(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n(function(){return a}):this.xorwow=a}(0,t,!1)}),qn=Vn(function(t){!function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.x,o=e.i;return t=r[o],n=(t^=t>>>7)^t<<24,n^=(t=r[o+1&7])^t>>>10,n^=(t=r[o+3&7])^t>>>3,n^=(t=r[o+4&7])^t<<7,t=r[o+7&7],n^=(t^=t<<13)^t<<9,r[o]=n,e.i=o+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=\\\"\\\"+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.x&&o(a,n),i.state=function(){return o(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n(function(){return a}):this.xorshift7=a}(0,t,!1)}),$n=Vn(function(t){!function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.w,o=e.X,a=e.i;return e.w=r=r+1640531527|0,n=o[a+34&127],t=o[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=o[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,o,a,i,s=[],u=128;for(e===(0|e)?(r=e,e=null):(e+=\\\"\\\\0\\\",r=0,u=Math.max(u,e.length)),o=0,a=-32;a<u;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,o=0==(n=s[127&a]^=r+i)?o+1:0);for(o>=128&&(s[127&(e&&e.length||0)]=-1),o=127,a=512;a>0;--a)r=s[o+34&127],n=s[o=o+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,s[o]=r^n;t.w=i,t.X=s,t.i=o}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.X&&o(a,n),i.state=function(){return o(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n(function(){return a}):this.xor4096=a}(0,t,!1)}),Kn=Vn(function(t){!function(t,e,n){function r(t){var e=this,n=\\\"\\\";e.next=function(){var t=e.b,n=e.c,r=e.d,o=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^o,o=o-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^o,e.a=o-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(\\\"object\\\"==typeof a&&o(a,n),i.state=function(){return o(n,{})}),i}e&&e.exports?e.exports=a:n&&n.amd?n(function(){return a}):this.tychei=a}(0,t,!1)}),jn=Vn(function(t){!function(e,n){var r,o=this,a=256,i=6,s=\\\"random\\\",u=n.pow(a,i),l=n.pow(2,52),c=2*l,h=a-1;function p(t,h,p){var g=[],y=v(function t(e,n){var r,o=[],a=typeof e;if(n&&\\\"object\\\"==a)for(r in e)try{o.push(t(e[r],n-1))}catch(t){}return o.length?o:\\\"string\\\"==a?e:e+\\\"\\\\0\\\"}((h=1==h?{entropy:!0}:h||{}).entropy?[t,m(e)]:null==t?function(){try{var t;return r&&(t=r.randomBytes)?t=t(a):(t=new Uint8Array(a),(o.crypto||o.msCrypto).getRandomValues(t)),m(t)}catch(t){var n=o.navigator,i=n&&n.plugins;return[+new Date,o,i,o.screen,m(e)]}}():t,3),g),x=new f(g),b=function(){for(var t=x.g(i),e=u,n=0;t<l;)t=(t+n)*a,e*=a,n=x.g(1);for(;t>=c;)t/=2,e/=2,n>>>=1;return(t+n)/e};return b.int32=function(){return 0|x.g(4)},b.quick=function(){return x.g(4)/4294967296},b.double=b,v(m(x.S),e),(h.pass||p||function(t,e,r,o){return o&&(o.S&&d(o,x),t.state=function(){return d(x,{})}),r?(n[s]=t,e):t})(b,y,\\\"global\\\"in h?h.global:this==n,h.state)}function f(t){var e,n=t.length,r=this,o=0,i=r.i=r.j=0,s=r.S=[];for(n||(t=[n++]);o<a;)s[o]=o++;for(o=0;o<a;o++)s[o]=s[i=h&i+t[o%n]+(e=s[o])],s[i]=e;(r.g=function(t){for(var e,n=0,o=r.i,i=r.j,s=r.S;t--;)e=s[o=h&o+1],n=n*a+s[h&(s[o]=s[i=h&i+e])+(s[i]=e)];return r.i=o,r.j=i,n})(a)}function d(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function v(t,e){for(var n,r=t+\\\"\\\",o=0;o<r.length;)e[h&o]=h&(n^=19*e[h&o])+r.charCodeAt(o++);return m(e)}function m(t){return String.fromCharCode.apply(0,t)}if(n[\\\"seed\\\"+s]=p,v(n.random(),e),t.exports){t.exports=p;try{r=require(\\\"crypto\\\")}catch(t){}}}([],Math)});jn.alea=zn,jn.xor128=Gn,jn.xorwow=Hn,jn.xorshift7=qn,jn.xor4096=$n,jn.tychei=Kn;var Xn=jn.alea,Yn=function(){function t(t,e,n,r,o){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);var a=o||Math.random();this.random=Xn(a.toString())}return t.prototype.nextValue=function(){if(!isNaN(this.nextVal)){var t=this.nextVal;return this.nextVal=NaN,t}for(var e,n,r=!1;!r;){var o=void 0,a=void 0,i=void 0;do{i=(o=2*this.random()-1)*o+(a=2*this.random()-1)*a}while(i>=1||0===i);var s=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*o*s,n=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(e)||(r=!0)}return this.truncated&&!this.isValidTruncated(n)||(this.nextVal=this.convertValue(n)),this.convertValue(e)},t.prototype.convertValue=function(t){return null==this.dtype||\\\"float32\\\"===this.dtype?t:Math.round(t)},t.prototype.isValidTruncated=function(t){return t<=this.upper&&t>=this.lower},t}(),Qn=function(){function t(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;var o=r||Math.random();this.randu=Xn(o.toString()),this.randn=new Yn(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}return t.prototype.nextValue=function(){for(var t,e,n,r,o,a;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=1-.331*(t=r*r)*t,n=.5*t+this.d*(1-a+Math.log(a)),(o=this.randu())<e||Math.log(o)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)},t.prototype.convertValue=function(t){return\\\"float32\\\"===this.dtype?t:Math.round(t)},t}(),Jn=function(){function t(t,e,n,r){var o=this;if(void 0===t&&(t=0),void 0===e&&(e=1),this.canReturnFloat=function(){return null==o.dtype||\\\"float32\\\"===o.dtype},this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),\\\"number\\\"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(\\\"The difference between \\\"+t+\\\" - \\\"+e+\\\" <= 1 and dtype is not float\\\");this.random=Xn(r)}return t.prototype.convertValue=function(t){return this.canReturnFloat()?t:Math.round(t)},t.prototype.nextValue=function(){return this.convertValue(this.min+this.range*this.random())},t}();function Zn(t,e,n){return void 0===e&&(e=\\\"float32\\\"),e=e||\\\"float32\\\",K(t),new it(t,e,n)}function tr(t,e){void 0===e&&(e=!1),console.log(t.toString(e))}var er=vn({batchToSpaceND_:function(t,e,n){var r=nn(t,\\\"x\\\",\\\"batchToSpaceND\\\"),o=e.reduce(function(t,e){return t*e});return f(r.rank>=1+e.length,function(){return\\\"input rank is \\\"+r.rank+\\\" but should be > than blockShape.length \\\"+e.length}),f(n.length===e.length,function(){return\\\"crops.length is \\\"+n.length+\\\" but should be equal to blockShape.length  \\\"+e.length}),f(r.shape[0]%o==0,function(){return\\\"input tensor batch is \\\"+r.shape[0]+\\\" but is not divisible by the product of the elements of blockShape \\\"+e.join(\\\" * \\\")+\\\" === \\\"+o}),St.runKernel(function(t){return t.batchToSpaceND(r,e,n)},{$x:r},function(t){return{$x:function(){return t.spaceToBatchND(e,n)}}})}}),nr=vn({cast_:function(t,e){var n=nn(t,\\\"x\\\",\\\"cast\\\");if(!T(e))throw new Error(\\\"Failed to cast to unknown dtype \\\"+e);if(\\\"string\\\"===e&&\\\"string\\\"!==n.dtype||\\\"string\\\"!==e&&\\\"string\\\"===n.dtype)throw new Error(\\\"Only strings can be casted to strings\\\");return St.runKernel(function(t){return t.cast(n,e)},{$x:n},function(t){return{$x:function(){return t.clone()}}})}}),rr=vn({clone_:function(t){var e=nn(t,\\\"x\\\",\\\"clone\\\",null);return St.runKernel(function(t){return ct.make(e.shape,{dataId:e.dataId},e.dtype)},{$x:e},function(t){return{$x:function(){return t.toFloat()}}})}}),or=vn({cumsum_:function(t,e,n,r){void 0===e&&(e=0),void 0===n&&(n=!1),void 0===r&&(r=!1);var o=nn(t,\\\"x\\\",\\\"cumsum\\\"),a=cn([e|=0],o.rank),i=o;null!=a&&(i=o.transpose(a));var s=pn(1,o.rank)[0],u=St.runKernel(function(t){return t.cumsum(i,s,n,r)},{permutedX:i},function(t){return{permutedX:function(){return t.cumsum(e,n,!r)}}});return null!=a&&(u=u.transpose(a)),u}}),ar=vn({depthToSpace_:function(t,e,n){void 0===n&&(n=\\\"NHWC\\\");var r=nn(t,\\\"x\\\",\\\"depthToSpace\\\"),o=\\\"NHWC\\\"===n?r.shape[1]:r.shape[2],a=\\\"NHWC\\\"===n?r.shape[2]:r.shape[3],i=\\\"NHWC\\\"===n?r.shape[3]:r.shape[1];return f(o*e>=0,function(){return\\\"Negative dimension size caused by overflow when multiplying\\\\n      \\\"+o+\\\" and \\\"+e+\\\"  for depthToSpace with input shape\\\\n      \\\"+r.shape}),f(a*e>=0,function(){return\\\"Negative dimension size caused by overflow when multiplying\\\\n      \\\"+a+\\\" and \\\"+e+\\\" for depthToSpace with input shape\\\\n          \\\"+r.shape}),f(i%(e*e)==0,function(){return\\\"Dimension size must be evenly divisible by \\\"+e*e+\\\" but is \\\"+i+\\\" for depthToSpace with input shape \\\"+r.shape}),St.runKernel(function(t){return t.depthToSpace(r,e,n)},{$x:r})}}),ir=vn({expandDims_:function(t,e){void 0===e&&(e=0);var n=nn(t,\\\"x\\\",\\\"expandDims\\\",null);f(e<=n.rank,function(){return\\\"Axis must be <= rank of the tensor\\\"});var r=n.shape.slice();return e<0&&(f(-(n.rank+1)<=e,function(){return\\\"Axis must be in the interval [\\\"+-(n.rank+1)+\\\", \\\"+n.rank+\\\"]\\\"}),e=n.rank+e+1),r.splice(e,0,1),xr(n,r)}}),sr=vn({eye_:function(t,e,n,r){void 0===r&&(r=\\\"float32\\\"),null==e&&(e=t);for(var o=Zn([t,e],r),a=t<=e?t:e,i=0;i<a;++i)o.set(1,i,i);var s=o.toTensor().as2D(t,e);if(null==n)return s;if(1===n.length)return Er(ir(s,0),[n[0],1,1]);if(2===n.length)return Er(ir(ir(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Er(ir(ir(ir(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(\\\"eye() currently supports only 1D and 2D batchShapes, but received \\\"+n.length+\\\"D.\\\")}}),ur=vn({multinomial_:function(t,e,n,r){void 0===r&&(r=!1);var o=nn(t,\\\"logits\\\",\\\"multinomial\\\"),a=o.size,i=o.rank;if(a<2)throw new Error(\\\"Error in multinomial: you need at least 2 outcomes, but got \\\"+a+\\\".\\\");if(i>2)throw new Error(\\\"Rank of probabilities must be 1 or 2, but is \\\"+i);n=n||Math.random();var s=1===i?o.as2D(1,-1):o,u=St.runKernel(function(t){return t.multinomial(s,r,e,n)},{logits2D:s});return 1===i?u.as1D():u}}),lr=vn({oneHot_:function(t,e,n,r){if(void 0===n&&(n=1),void 0===r&&(r=0),e<2)throw new Error(\\\"Error in oneHot: depth must be >=2, but it is \\\"+e);var o=nn(t,\\\"indices\\\",\\\"oneHot\\\",\\\"int32\\\"),a=o.shape.concat([e]);return o=o.flatten(),St.runKernel(function(t){return t.oneHot(o,e,n,r)},{$indices:o},function(t){return{$indices:function(){return An(o.shape,\\\"float32\\\")}}}).reshape(a)}}),cr=vn({pad_:function(t,e,n){void 0===n&&(n=0);var r=nn(t,\\\"x\\\",\\\"pad\\\");if(0===r.rank)throw new Error(\\\"pad(scalar) is not defined. Pass non-scalar to pad\\\");var o=e.map(function(t){return t[0]});return St.runKernel(function(t){return t.pad(r,e,n)},{$x:r},function(t){return{$x:function(){return t.slice(o,r.shape)}}})}}),hr=vn({pad1d_:function(t,e,n){return void 0===n&&(n=0),f(2===e.length,function(){return\\\"Invalid number of paddings. Must be length of 2.\\\"}),cr(t,[e],n)}}),pr=vn({pad2d_:function(t,e,n){return void 0===n&&(n=0),f(2===e.length&&2===e[0].length&&2===e[1].length,function(){return\\\"Invalid number of paddings. Must be length of 2 each.\\\"}),cr(t,e,n)}}),fr=vn({pad3d_:function(t,e,n){return void 0===n&&(n=0),f(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,function(){return\\\"Invalid number of paddings. Must be length of 2 each.\\\"}),cr(t,e,n)}}),dr=vn({pad4d_:function(t,e,n){return void 0===n&&(n=0),f(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,function(){return\\\"Invalid number of paddings. Must be length of 2 each.\\\"}),cr(t,e,n)}}),vr=vn({rand_:function(t,e,n){var r=g(t),o=null;if(null==n||\\\"float32\\\"===n)o=new Float32Array(r);else if(\\\"int32\\\"===n)o=new Int32Array(r);else{if(\\\"bool\\\"!==n)throw new Error(\\\"Unknown data type \\\"+n);o=new Uint8Array(r)}for(var a=0;a<r;a++)o[a]=e();return ct.make(t,{values:o},n)}}),mr=vn({randomNormal_:function(t,e,n,r,o){if(void 0===e&&(e=0),void 0===n&&(n=1),null!=r&&\\\"bool\\\"===r)throw new Error(\\\"Unsupported data type \\\"+r);for(var a=new Yn(e,n,r,!1,o),i=Zn(t,r),s=0;s<i.values.length;s++)i.values[s]=a.nextValue();return i.toTensor()}}),gr=vn({randomGamma_:function(t,e,n,r,o){if(void 0===n&&(n=1),void 0===r&&(r=\\\"float32\\\"),null==n&&(n=1),null==r&&(r=\\\"float32\\\"),\\\"float32\\\"!==r&&\\\"int32\\\"!==r)throw new Error(\\\"Unsupported data type \\\"+r);for(var a=new Qn(e,n,r,o),i=Zn(t,r),s=0;s<i.values.length;s++)i.values[s]=a.nextValue();return i.toTensor()}}),yr=vn({randomUniform_:function(t,e,n,r,o){void 0===e&&(e=0),void 0===n&&(n=1),void 0===r&&(r=\\\"float32\\\");for(var a=Zn(t,r),i=new Jn(e,n,null,o),s=0;s<a.values.length;s++)a.values[s]=i.nextValue();return a.toTensor()}}),xr=vn({reshape_:function(t,e){var n=nn(t,\\\"x\\\",\\\"reshape\\\",null);return e=R(e,n.size),f(n.size===g(e),function(){return\\\"new shape and old shape must have the same number of elements.\\\"}),St.runKernel(function(t){return t.reshape(n,e)},{$x:n},function(t){return{$x:function(){return t.reshape(n.shape)}}})}}),br=vn({spaceToBatchND_:function(t,e,n){var r=nn(t,\\\"x\\\",\\\"spaceToBatchND\\\");return f(r.rank>=1+e.length,function(){return\\\"input rank \\\"+r.rank+\\\" should be > than [blockShape] \\\"+e.length}),f(n.length===e.length,function(){return\\\"paddings.shape[0] \\\"+n.length+\\\" must be equal to [blockShape] \\\"+e.length}),f(r.shape.reduce(function(t,r,o){return o>0&&o<=e.length?t&&(r+n[o-1][0]+n[o-1][1])%e[o-1]==0:t},!0),function(){return\\\"input spatial dimensions \\\"+r.shape.slice(1)+\\\" with paddings \\\"+n.toString()+\\\" must be divisible by blockShapes \\\"+e.toString()}),St.runKernel(function(t){return t.spaceToBatchND(r,e,n)},{$x:r},function(t){return{$x:function(){return t.batchToSpaceND(e,n)}}})}}),wr=vn({squeeze_:function(t,e){var n=nn(t,\\\"x\\\",\\\"squeeze\\\");return xr(n,k(n.shape,e).newShape)}}),Cr=vn({stack_:function(t,e){void 0===e&&(e=0);var n=rn(t,\\\"tensors\\\",\\\"stack\\\");if(f(n.length>=1,function(){return\\\"Pass at least one tensor to tf.stack\\\"}),1===n.length)return n[0].expandDims(e);var r=n[0].rank,o=n[0].shape,a=n[0].dtype;f(e<=r,function(){return\\\"Axis must be <= rank of the tensor\\\"}),n.forEach(function(t){d(o,t.shape,\\\"All tensors passed to stack must have matching shapes\\\")}),n.forEach(function(t){f(a===t.dtype,function(){return\\\"All tensors passed to stack must have matching dtypes\\\"})});var i=n.map(function(t){return t.expandDims(e)});return Mn(i,e)}}),Er=vn({tile_:function(t,e){var n=nn(t,\\\"x\\\",\\\"tile\\\",null);return f(n.rank===e.length,function(){return\\\"Error in transpose: rank of input \\\"+n.rank+\\\" must match length of reps \\\"+e+\\\".\\\"}),St.runKernel(function(t,r){var o=t.tile(n,e);return r([n]),o},{$x:n},function(t,n){var r=n[0];return{$x:function(){var n=Fn(r);if(1===r.rank)for(var o=0;o<e[0];++o)n=n.add(t.slice([o*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(o=0;o<e[0];++o)for(var a=0;a<e[1];++a)n=n.add(t.slice([o*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(o=0;o<e[0];++o)for(a=0;a<e[1];++a)for(var i=0;i<e[2];++i)n=n.add(t.slice([o*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(\\\"Gradient for tile operation is not implemented for rank-\\\"+r.rank+\\\" tensors yet.\\\");for(o=0;o<e[0];++o)for(a=0;a<e[1];++a)for(i=0;i<e[2];++i)for(var s=0;s<e[3];++s)n=n.add(t.slice([o*r.shape[0],a*r.shape[1],i*r.shape[2],s*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return n}}})}}),Rr=vn({truncatedNormal_:function(t,e,n,r,o){if(void 0===e&&(e=0),void 0===n&&(n=1),null!=r&&\\\"bool\\\"===r)throw new Error(\\\"Unsupported data type \\\"+r);for(var a=new Yn(e,n,r,!0,o),i=Zn(t,r),s=0;s<i.values.length;s++)i.values[s]=a.nextValue();return i.toTensor()}}),Ir=vn({unstack_:function(t,e){void 0===e&&(e=0),e=e||0;var n=nn(t,\\\"x\\\",\\\"unstack\\\");return f(e>=-n.shape.length&&e<n.shape.length,function(){return\\\"Axis = \\\"+e+\\\" is not in [-\\\"+n.shape.length+\\\", \\\"+n.shape.length+\\\")\\\"}),e<0&&(e+=n.shape.length),St.runKernel(function(t){return t.unstack(n,e)},{$x:n},function(t){return{$x:function(){return Cr(t,e)}}})}}),kr=function(t,e){return n(this,void 0,void 0,function(){var n,o,a,i,s,u,l,c,h,p;return r(this,function(r){switch(r.label){case 0:return n=nn(t,\\\"x\\\",\\\"setdiff1d\\\"),o=nn(e,\\\"y\\\",\\\"setdiff1d\\\"),f(n.dtype===o.dtype,function(){return\\\"x and y should have the same dtype, but got x (\\\"+n.dtype+\\\") and y (\\\"+o.dtype+\\\").\\\"}),f(1===n.rank,function(){return\\\"x should be 1D tensor, but got x (\\\"+n.shape+\\\").\\\"}),f(1===o.rank,function(){return\\\"y should be 1D tensor, but got y (\\\"+o.shape+\\\").\\\"}),[4,n.data()];case 1:return a=r.sent(),[4,o.data()];case 2:for(i=r.sent(),s=new Set(i),u=0,h=0;h<a.length;h++)s.has(a[h])||u++;for(l=new it([u],n.dtype),c=new it([u],\\\"int32\\\"),h=0,p=0;h<a.length;h++)s.has(a[h])||(l.values[p]=a[h],c.values[p]=h,p++);return[2,[l.toTensor(),c.toTensor()]]}})})};function Nr(t,e,n,r){void 0===r&&(r=!0);var o=[];if(r)(o=o.concat(e.slice(0))).push(t[0]/n),o=o.concat(t.slice(1));else{o=o.concat(t[0]);for(var a=e.length,i=0;i<a;++i)o=o.concat([t[i+1]/e[i],e[i]]);o=o.concat(t.slice(a+1))}return o}function Sr(t,e,n){void 0===n&&(n=!0);var r=[];if(n){r.push(e);for(var o=e+1;o<t;++o)o<=2*e?(r.push(o),r.push(o-(e+1))):r.push(o)}else{var a=[],i=[];for(o=1;o<t;++o)o>=2*e+1||o%2==1?i.push(o):a.push(o);r.push.apply(r,a),r.push(0),r.push.apply(r,i)}return r}function Ar(t,e,n,r){void 0===r&&(r=!0);var o=[];r?o.push(t[0]/n):o.push(t[0]*n);for(var a=1;a<t.length;++a)a<=e.length?r?o.push(e[a-1]*t[a]):o.push(t[a]/e[a-1]):o.push(t[a]);return o}function Tr(t,e){for(var n=[0],r=0;r<e;++r)n.push(t[r][0]);return n}function Dr(t,e,n){for(var r=t.slice(0,1),o=0;o<n;++o)r.push(t[o+1]-e[o][0]-e[o][1]);return r}function _r(t,e){if(t.rank<1)throw new Error(\\\"tf.gatherND() expects the input to be rank 1 or higher, but the rank was \\\"+t.rank+\\\".\\\");if(e.rank<1)throw new Error(\\\"tf.gatherND() expects the indices to be rank 1 or higher, but the rank was \\\"+e.rank+\\\".\\\");if(\\\"int32\\\"!==e.dtype)throw new Error(\\\"tf.gatherND() expects the indices to be int32 type, but the dtype was \\\"+e.dtype+\\\".\\\");if(e.shape[e.rank-1]>t.rank)throw new Error(\\\"index innermost dimension length must be <= tensor rank; saw: \\\"+e.shape[e.rank-1]+\\\" vs. \\\"+t.rank);if(0===t.size)throw new Error(\\\"Requested more than 0 entries, but input is empty. Input shape: \\\"+t.shape+\\\".\\\");for(var n=e.shape,r=n[n.length-1],o=1,a=0;a<n.length-1;++a)o*=n[a];var i=t.shape,s=n.slice();s.pop();var u=1;for(a=r;a<t.rank;++a)u*=i[a],s.push(i[a]);var l=V(t.shape).map(function(t){return t/u}).concat([1]).slice(0,r);return[s,o,u,l]}var Or=30;function Fr(t){return t<=Or?t:U(t,Math.floor(Math.sqrt(t)))}function Mr(t,e,n){if(e.rank<1)throw new Error(\\\"tf.scatterND() expects the indices to be rank 1 or higher, but the rank was \\\"+e.rank+\\\".\\\");if(t.rank<1)throw new Error(\\\"tf.scatterND() expects the updates to be rank 1 or higher, but the rank was \\\"+t.rank+\\\".\\\");if(\\\"int32\\\"!==e.dtype)throw new Error(\\\"The dtype of 'indices' should be int32, but got dtype: \\\"+e.dtype);if(n.length<1)throw new Error(\\\"Output rank must be greater or equal to 1, but got shape: \\\"+n);if(0===n.length){if(0===e.size)throw new Error(\\\"Indices specified for empty output. indices shape: \\\"+e.shape);if(0===t.size)throw new Error(\\\"Updates specified for empty output. updates shape: \\\"+t.shape)}!function(t,e,n){var r=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,a=\\\"Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: \\\"+n.shape+\\\", indices.shape: \\\"+e.shape+\\\", shape: \\\"+t+\\\", sliceDim: \\\"+r+\\\", and batchDim: \\\"+o+\\\".\\\";if(n.rank<o)throw new Error(a+\\\" update.rank < \\\"+o+\\\". \\\");if(t.length<r+(n.rank-o))throw new Error(a+\\\" Output shape length < \\\"+(r+(n.rank-o)));if(n.rank!==o+t.length-r)throw new Error(a+\\\" update.rank != \\\"+(o+t.length-r));for(var i=0;i<o;++i)if(n.shape[i]!==e.shape[i])throw new Error(a+\\\" updates.shape[\\\"+i+\\\"] (\\\"+n.shape[i]+\\\") != indices.shape[\\\"+i+\\\"] (\\\"+e.shape[i]+\\\").\\\");for(i=0;i<n.rank-o;++i)if(n.shape[i+o]!==t[i+r])throw new Error(a+\\\" updates.shape[\\\"+(i+o)+\\\"] (\\\"+n.shape[i+o]+\\\") != shape[\\\"+(i+o)+\\\"] (\\\"+t[i+o]+\\\")\\\")}(n,e,t)}function Br(t,e,n){for(var r=e.rank>1?e.shape[e.rank-1]:1,o=n.length,a=1,i=r;i<o;++i)a*=n[i];var s=r<1?1:r;return{sliceRank:r,numUpdates:e.size/s,sliceSize:a,strides:V(n.slice(0,r)).concat([1]),outputSize:g(n)}}function Pr(t){for(var e=[],n=0;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Lr(t,e,n){for(var r=[],o=0;o<t.length;o++)r[o]=Math.ceil((e[o]-t[o])/n[o]);return r}function Wr(t,e,n,r,o){var a=e[o],i=n[o]||1;(t&1<<o||null==a)&&(a=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);var s=r[o];return a<0&&(a+=s),a=c(0,a,s-1)}function Ur(t,e,n,r,o){var a=e[o],i=n[o]||1;(t&1<<o||null==a)&&(a=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);var s=r[o];return a<0&&(a+=s),a=i>0?c(0,a,s):c(-1,a,s-1)}function Vr(t,e,n){for(var r=n.length,o=0;o<n.length;o++)if(n[o]>1){r=o;break}for(o=r+1;o<n.length;o++)if(e[o]>0||n[o]!==t[o])return!1;return!0}function zr(t,e){for(var n=t.length>0?t[t.length-1]:1,r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function Gr(t){return f(W(t),function(){return\\\"The f passed in grad(f) must be a function\\\"}),function(e,n){var r=nn(e,\\\"x\\\",\\\"tf.grad\\\",null),o=null!=n?nn(n,\\\"dy\\\",\\\"tf.grad\\\"):null;return St.tidy(function(){var e=St.gradients(function(){return t(r)},[r],o),n=e.value,a=e.grads;return null!=o&&d(n.shape,o.shape,\\\"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)\\\"),Xr(a),a[0]})}}function Hr(t){return f(W(t),function(){return\\\"The f passed in grads(f) must be a function\\\"}),function(e,n){f(Array.isArray(e),function(){return\\\"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s\\\"});var r=rn(e,\\\"args\\\",\\\"tf.grads\\\",null),o=null!=n?nn(n,\\\"dy\\\",\\\"tf.grads\\\"):null;return St.tidy(function(){var e=St.gradients(function(){return t.apply(void 0,r)},r,o),n=e.value,a=e.grads;return null!=o&&d(n.shape,o.shape,\\\"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])\\\"),Xr(a),a})}}function qr(t){return f(W(t),function(){return\\\"The f passed in valueAndGrad(f) must be a function\\\"}),function(e,n){f(e instanceof ct,function(){return\\\"The x passed in valueAndGrad(f)(x) must be a tensor\\\"}),f(null==n||n instanceof ct,function(){return\\\"The dy passed in valueAndGrad(f)(x, dy) must be a tensor\\\"});var r=St.gradients(function(){return t(e)},[e],n),o=r.grads,a=r.value;return Xr(o),{grad:o[0],value:a}}}function $r(t){return f(W(t),function(){return\\\"The f passed in valueAndGrads(f) must be a function\\\"}),function(e,n){f(Array.isArray(e)&&e.every(function(t){return t instanceof ct}),function(){return\\\"The args passed in valueAndGrads(f)(args) must be array of tensors\\\"}),f(null==n||n instanceof ct,function(){return\\\"The dy passed in valueAndGrads(f)(args, dy) must be a tensor\\\"});var r=St.gradients(function(){return t.apply(void 0,e)},e,n);return null!=n&&d(r.value.shape,n.shape,\\\"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])\\\"),Xr(r.grads),r}}function Kr(t,e){f(W(t),function(){return\\\"The f passed in variableGrads(f) must be a function\\\"}),f(null==e||Array.isArray(e)&&e.every(function(t){return t instanceof ht}),function(){return\\\"The varList passed in variableGrads(f, varList) must be an array of variables\\\"});var n=null!=e;if(!n)for(var r in e=[],St.registeredVariables)e.push(St.registeredVariables[r]);var o=n?e.filter(function(t){return!t.trainable}):null,a=e.length;f((e=e.filter(function(t){return t.trainable})).length>0,function(){return\\\"variableGrads() expects at least one of the input variables to be trainable, but none of the \\\"+a+\\\" variables is trainable.\\\"});var i=St.gradients(t,e,null,!0),s=i.value,u=i.grads;f(u.some(function(t){return null!=t}),function(){return\\\"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().\\\"}),f(0===s.rank,function(){return\\\"The f passed in variableGrads(f) must return a scalar, but it returned a rank-\\\"+s.rank+\\\" tensor\\\"});var l={};return e.forEach(function(t,e){null!=u[e]&&(l[t.name]=u[e])}),null!=o&&o.forEach(function(t){return l[t.name]=null}),{value:s,grads:l}}function jr(t){return St.customGrad(t)}function Xr(t){if(t.filter(function(t){return null==t}).length>0)throw new Error(\\\"Cannot compute gradient of y=f(x) with respect to x. Make sure that\\\\n    the f you passed encloses all operations that lead from x to y.\\\")}var Yr=vn({softmax_:function(t,e){void 0===e&&(e=-1);var n=nn(t,\\\"logits\\\",\\\"softmax\\\");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(\\\"Softmax along a non-last dimension is not yet supported. Logits was rank \\\"+n.rank+\\\" and dim was \\\"+e);return jr(function(t,n){var r=t.logSumExp([e],!0),o=t.toFloat().sub(r).exp();return n([o]),{value:o,gradFunc:function(t,n){var r=n[0],o=t.mul(r);return o.sub(o.sum([e],!0).mul(r))}}})(n)}}),Qr=vn({logSoftmax_:function(t,e){void 0===e&&(e=-1);var n=nn(t,\\\"logits\\\",\\\"logSoftmax\\\");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(\\\"Log Softmax along a non-last dimension is not yet supported. Logits was rank \\\"+n.rank+\\\" and axis was \\\"+e);return jr(function(t,n){var r=t.max(e,!0),o=t.sub(r),a=o.toFloat().sub(o.exp().sum(e,!0).log());return n([a]),{value:a,gradFunc:function(t,n){var r=n[0].exp();return t.sub(t.sum(e,!0).mul(r))}}})(n)}}),Jr=function(){function t(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap}return t.prototype.get=function(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)},t.prototype.set=function(t,e){this.data.set(t,e)},t.prototype.has=function(t){return this.data.has(t)},t.prototype.delete=function(t){return this.data.delete(t)},t}(),Zr=function(){function t(){}return t.prototype.time=function(t){throw new Error(\\\"Not yet implemented.\\\")},t.prototype.read=function(t){throw new Error(\\\"Not yet implemented.\\\")},t.prototype.readSync=function(t){throw new Error(\\\"Not yet implemented.\\\")},t.prototype.disposeData=function(t){throw new Error(\\\"Not yet implemented.\\\")},t.prototype.write=function(t,e){throw new Error(\\\"Not yet implemented.\\\")},t.prototype.fromPixels=function(t,e){throw new Error(\\\"Not yet implemented.\\\")},t.prototype.register=function(t,e,n){throw new Error(\\\"Not yet implemented.\\\")},t.prototype.memory=function(){throw new Error(\\\"Not yet implemented.\\\")},t.prototype.floatPrecision=function(){throw new Error(\\\"Not yet implemented\\\")},t.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},t.prototype.batchMatMul=function(t,e,n,r){throw new Error(\\\"Not yet implemented\\\")},t.prototype.fusedBatchMatMul=function(t){t.a,t.b,t.transposeA,t.transposeB,t.bias,t.activation,t.preluActivationWeights;throw new Error(\\\"Not yet implemented\\\")},t.prototype.slice=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.stridedSlice=function(t,e,n,r){throw new Error(\\\"Not yet implemented\\\")},t.prototype.unstack=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.reverse=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.concat=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.neg=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.add=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.addN=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.subtract=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.multiply=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.realDivide=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.floorDiv=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.sum=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.prod=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.unsortedSegmentSum=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.argMin=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.argMax=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.equal=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.notEqual=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.less=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.lessEqual=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.greater=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.greaterEqual=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.logicalNot=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.logicalAnd=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.logicalOr=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.where=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.select=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.topk=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.min=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.minimum=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.mod=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.max=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.maximum=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.all=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.any=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.squaredDifference=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.ceil=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.floor=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.round=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.sign=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.isNaN=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.isInf=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.isFinite=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.pow=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.exp=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.expm1=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.log=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.log1p=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.sqrt=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.rsqrt=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.square=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.reciprocal=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.relu=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.prelu=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.elu=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.eluDer=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.selu=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.int=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.clip=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.abs=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.complexAbs=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.sigmoid=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.softplus=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.sin=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.cos=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.tan=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.asin=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.acos=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.atan=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.atan2=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.sinh=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.cosh=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.tanh=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.asinh=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.acosh=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.atanh=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.erf=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.step=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.fusedConv2d=function(t,e,n,r,o,a){throw new Error(\\\"Not yet implemented\\\")},t.prototype.conv2d=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.conv2dDerInput=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.conv2dDerFilter=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.depthwiseConv2D=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.depthwiseConv2DDerInput=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.depthwiseConv2DDerFilter=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.conv3d=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.conv3dDerInput=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.conv3dDerFilter=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.maxPool=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.maxPoolBackprop=function(t,e,n,r){throw new Error(\\\"Not yet implemented\\\")},t.prototype.avgPool=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.avgPoolBackprop=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.avgPool3d=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.avgPool3dBackprop=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.maxPool3d=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.maxPool3dBackprop=function(t,e,n,r){throw new Error(\\\"Not yet implemented\\\")},t.prototype.reshape=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.cast=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.tile=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.pad=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.transpose=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.gather=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.gatherND=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.scatterND=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.batchToSpaceND=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.spaceToBatchND=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.resizeBilinear=function(t,e,n,r){throw new Error(\\\"Not yet implemented\\\")},t.prototype.resizeBilinearBackprop=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.resizeNearestNeighbor=function(t,e,n,r){throw new Error(\\\"Not yet implemented\\\")},t.prototype.resizeNearestNeighborBackprop=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.batchNormalization=function(t,e,n,r,o,a){throw new Error(\\\"Not yet implemented\\\")},t.prototype.localResponseNormalization4D=function(t,e,n,r,o){throw new Error(\\\"Not yet implemented\\\")},t.prototype.LRNGrad=function(t,e,n,r,o,a,i){throw new Error(\\\"Not yet implemented\\\")},t.prototype.multinomial=function(t,e,n,r){throw new Error(\\\"Not yet implemented\\\")},t.prototype.oneHot=function(t,e,n,r){throw new Error(\\\"Not yet implemented\\\")},t.prototype.cumsum=function(t,e,n,r){throw new Error(\\\"Not yet implemented\\\")},t.prototype.nonMaxSuppression=function(t,e,n,r,o){throw new Error(\\\"Not yet implemented\\\")},t.prototype.fft=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.ifft=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.complex=function(t,e){throw new Error(\\\"Not yet implemented\\\")},t.prototype.real=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.imag=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.cropAndResize=function(t,e,n,r,o,a){throw new Error(\\\"Not yet implemented\\\")},t.prototype.depthToSpace=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.split=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.sparseToDense=function(t,e,n,r){throw new Error(\\\"Not yet implemented\\\")},t.prototype.diag=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.fill=function(t,e,n){throw new Error(\\\"Not yet implemented.\\\")},t.prototype.onesLike=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.zerosLike=function(t){throw new Error(\\\"Not yet implemented\\\")},t.prototype.linspace=function(t,e,n){throw new Error(\\\"Not yet implemented\\\")},t.prototype.dispose=function(){throw new Error(\\\"Not yet implemented\\\")},t}();function to(t,e){for(var n=t.length,r=[],o=0;o<n;o++){var a=n-1-o,i=t[a]||1;(e[e.length-1-o]||1)>1&&1===i&&r.unshift(a)}return r}function eo(t,e){for(var n=[],r=0;r<e.length;r++){var o=t[t.length-r-1],a=e.length-r-1,i=e[a];(null==o||1===o&&i>1)&&n.unshift(a)}return n}function no(t,e){for(var n=[],r=Math.max(t.length,e.length),o=0;o<r;o++){var a=t[t.length-o-1];null==a&&(a=1);var i=e[e.length-o-1];if(null==i&&(i=1),1===a)n.unshift(i);else if(1===i)n.unshift(a);else{if(a!==i)throw Error(\\\"Operands could not be broadcast together with shapes \\\"+t+\\\" and \\\"+e+\\\".\\\");n.unshift(a)}}return n}function ro(t,e,n,r,o,a,i){void 0===i&&(i=\\\"channelsLast\\\");var s,u=uo(e),l=u[0],c=u[1];if(\\\"channelsLast\\\"===i)s=[l,c,t[3],t[3]];else{if(\\\"channelsFirst\\\"!==i)throw new Error(\\\"Unknown dataFormat \\\"+i);s=[l,c,t[1],t[1]]}return ao(t,s,n,r,o,a,!1,i)}function oo(t,e,n,r,o,a,i){void 0===i&&(i=\\\"NDHWC\\\");var s,u,l=lo(e),c=l[0],h=l[1],p=l[2];if(\\\"NDHWC\\\"===i)u=\\\"channelsLast\\\",s=[c,h,p,t[4],t[4]];else{if(\\\"NCDHW\\\"!==i)throw new Error(\\\"Unknown dataFormat \\\"+i);u=\\\"channelsFirst\\\",s=[c,h,p,t[1],t[1]]}return io(t,s,n,r,o,!1,u,a)}function ao(t,e,n,r,o,a,i,s){void 0===i&&(i=!1),void 0===s&&(s=\\\"channelsLast\\\");var u=[-1,-1,-1,-1],l=u[0],c=u[1],h=u[2],p=u[3];if(\\\"channelsLast\\\"===s)l=t[0],c=t[1],h=t[2],p=t[3];else{if(\\\"channelsFirst\\\"!==s)throw new Error(\\\"Unknown dataFormat \\\"+s);l=t[0],p=t[1],c=t[2],h=t[3]}var d,v=e[0],m=e[1],g=e[3],y=uo(n),b=y[0],w=y[1],C=uo(r),E=C[0],R=C[1],I=co(v,E),k=co(m,R),N=function(t,e,n,r,o,a,i,s){var u,l,c;if(\\\"number\\\"==typeof t){var h=0===t?\\\"VALID\\\":\\\"NUMBER\\\";u={top:t,bottom:t,left:t,right:t,type:h};var p=function(t,e,n,r,o){null==r&&(r=so(t,e,n));var a=t[0],i=t[1],s=ho((a-e+2*r)/n+1,o);f(x(s),function(){return\\\"The output # of rows (\\\"+s+\\\") must be an integer. Change the stride and/or zero pad parameters\\\"});var u=ho((i-e+2*r)/n+1,o);return f(x(u),function(){return\\\"The output # of columns (\\\"+u+\\\") must be an integer. Change the stride and/or zero pad parameters\\\"}),[s,u]}([e,n],a,r,t,s);l=p[0],c=p[1]}else if(\\\"same\\\"===t){l=Math.ceil(e/r),c=Math.ceil(n/o);var d=Math.max(0,(l-1)*r+a-e),v=Math.max(0,(c-1)*o+i-n),m=Math.floor(d/2),g=d-m,y=Math.floor(v/2),b=v-y;u={top:m,bottom:g,left:y,right:b,type:\\\"SAME\\\"}}else{if(\\\"valid\\\"!==t)throw Error(\\\"Unknown padding parameter: \\\"+t);u={top:0,bottom:0,left:0,right:0,type:\\\"VALID\\\"},l=Math.ceil((e-a+1)/r),c=Math.ceil((n-i+1)/o)}return{padInfo:u,outHeight:l,outWidth:c}}(o,c,h,b,w,I,k,a),S=N.padInfo,A=N.outHeight,T=N.outWidth,D=i?g*p:g;return\\\"channelsFirst\\\"===s?d=[l,D,A,T]:\\\"channelsLast\\\"===s&&(d=[l,A,T,D]),{batchSize:l,dataFormat:s,inHeight:c,inWidth:h,inChannels:p,outHeight:A,outWidth:T,outChannels:D,padInfo:S,strideHeight:b,strideWidth:w,filterHeight:v,filterWidth:m,effectiveFilterHeight:I,effectiveFilterWidth:k,dilationHeight:E,dilationWidth:R,inShape:t,outShape:d,filterShape:e}}function io(t,e,n,r,o,a,i,s){void 0===a&&(a=!1),void 0===i&&(i=\\\"channelsLast\\\");var u=[-1,-1,-1,-1,-1],l=u[0],c=u[1],h=u[2],p=u[3],d=u[4];if(\\\"channelsLast\\\"===i)l=t[0],c=t[1],h=t[2],p=t[3],d=t[4];else{if(\\\"channelsFirst\\\"!==i)throw new Error(\\\"Unknown dataFormat \\\"+i);l=t[0],d=t[1],c=t[2],h=t[3],p=t[4]}var v,m=e[0],g=e[1],y=e[2],b=e[4],w=lo(n),C=w[0],E=w[1],R=w[2],I=lo(r),k=I[0],N=I[1],S=I[2],A=co(m,k),T=co(g,N),D=co(y,S),_=function(t,e,n,r,o,a,i,s,u,l,c){var h,p,d,v;if(\\\"number\\\"==typeof t){var m=0===t?\\\"VALID\\\":\\\"NUMBER\\\";h={top:t,bottom:t,left:t,right:t,front:t,back:t,type:m};var g=function(t,e,n,r,o,a){null==o&&(o=so(t,e,r));var i=t[0],s=t[1],u=t[2],l=ho((i-e+2*o)/r+1,a);f(x(l),function(){return\\\"The output # of depths (\\\"+l+\\\") must be an integer. Change the stride and/or zero pad parameters\\\"});var c=ho((s-e+2*o)/r+1,a);f(x(c),function(){return\\\"The output # of rows (\\\"+c+\\\") must be an integer. Change the stride and/or zero pad parameters\\\"});var h=ho((u-e+2*o)/r+1,a);return f(x(h),function(){return\\\"The output # of columns (\\\"+h+\\\") must be an integer. Change the stride and/or zero pad parameters\\\"}),[l,c,h,n]}([e,n,r,1],s,1,o,t,c);p=g[0],d=g[1],v=g[2]}else if(\\\"same\\\"===t){p=Math.ceil(e/o),d=Math.ceil(n/a),v=Math.ceil(r/i);var y=(p-1)*o+s-e,b=(d-1)*a+u-n,w=(v-1)*i+l-r,C=Math.floor(y/2),E=y-C,R=Math.floor(b/2),I=b-R,k=Math.floor(w/2),N=w-k;h={top:R,bottom:I,left:k,right:N,front:C,back:E,type:\\\"SAME\\\"}}else{if(\\\"valid\\\"!==t)throw Error(\\\"Unknown padding parameter: \\\"+t);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:\\\"VALID\\\"},p=Math.ceil((e-s+1)/o),d=Math.ceil((n-u+1)/a),v=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:v}}(o,c,h,p,C,E,R,A,T,D,s),O=_.padInfo,F=_.outDepth,M=_.outHeight,B=_.outWidth,P=a?b*d:b;return\\\"channelsFirst\\\"===i?v=[l,P,F,M,B]:\\\"channelsLast\\\"===i&&(v=[l,F,M,B,P]),{batchSize:l,dataFormat:i,inDepth:c,inHeight:h,inWidth:p,inChannels:d,outDepth:F,outHeight:M,outWidth:B,outChannels:P,padInfo:O,strideDepth:C,strideHeight:E,strideWidth:R,filterDepth:m,filterHeight:g,filterWidth:y,effectiveFilterDepth:A,effectiveFilterHeight:T,effectiveFilterWidth:D,dilationDepth:k,dilationHeight:N,dilationWidth:S,inShape:t,outShape:v,filterShape:e}}function so(t,e,n,r){void 0===r&&(r=1);var o=co(e,r);return Math.floor((t[0]*(n-1)-n+o)/2)}function uo(t){return\\\"number\\\"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function lo(t){return\\\"number\\\"==typeof t?[t,t,t]:t}function co(t,e){return e<=1?t:t+(t-1)*(e-1)}function ho(t,e){if(!e)return t;switch(e){case\\\"round\\\":return Math.round(t);case\\\"ceil\\\":return Math.ceil(t);case\\\"floor\\\":return Math.floor(t);default:throw new Error(\\\"Unknown roundingMode \\\"+e)}}function po(t){var e=uo(t),n=e[0],r=e[1],o=e[2];return 1===n&&1===r&&1===o}function fo(t,e){return po(t)||po(e)}function vo(t){if(\\\"NHWC\\\"===t)return\\\"channelsLast\\\";if(\\\"NCHW\\\"===t)return\\\"channelsFirst\\\";throw new Error(\\\"Unknown dataFormat \\\"+t)}function mo(t,e,n){if(\\\"complex64\\\"===e){if(\\\"complex64\\\"===t.dtype)return t.clone();var r=An(t.shape),o=t.toFloat(),a=n.complex(o,r);return r.dispose(),o.dispose(),a}if(!D(t.dtype,e))return ct.make(t.shape,{dataId:t.dataId},e);if(\\\"complex64\\\"===t.dtype){var i=n.real(t);a=i.cast(e);return i.dispose(),a}if(\\\"int32\\\"===e)return n.int(t);if(\\\"bool\\\"===e){var s=wn(0,t.dtype);a=n.notEqual(t,s);return s.dispose(),a}throw new Error(\\\"Error in Cast: failed to cast \\\"+t.dtype+\\\" to \\\"+e)}function go(t,e){return ct.make(e,{dataId:t.dataId},t.dtype)}function yo(t,e,n){var r=(e-t)/(n-1),o=q(n,\\\"float32\\\");o[0]=t;for(var a=1;a<o.length;a++)o[a]=o[a-1]+r;return Cn(o,\\\"float32\\\")}var xo=Object.freeze({castTensor:mo,reshapeTensor:go,linspaceImpl:yo,upcastType:xt,axesAreInnerMostDims:on,combineLocations:an,computeOutAndReduceShapes:sn,expandShapeToKeepDim:un,assertAxesAreInnerMostDims:ln,getAxesPermutation:cn,getUndoAxesPermutation:hn,getInnerMostAxes:pn,getBroadcastDims:to,getReductionAxes:eo,assertAndGetBroadcastShape:no,assertParamsConsistent:fn,computeOutShape:dn,computePool2DInfo:ro,computePool3DInfo:oo,computeConv2DInfo:ao,computeConv3DInfo:io,computeDefaultPad:so,tupleValuesAreOne:po,eitherStridesOrDilationsAreOne:fo,convertConv2DDataFormat:vo});function bo(t,e){if(t.length!==e.length)throw new Error(\\\"Cannot merge real and imag arrays of different lengths. real:\\\"+t.length+\\\", imag: \\\"+e.length+\\\".\\\");for(var n=new Float32Array(2*t.length),r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function wo(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Co(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function Eo(t,e,n){var r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function Ro(t,e,n,r,o){for(var a=Array.from(e).map(function(t,e){return{score:t,boxIndex:e}}).filter(function(t){return t.score>o}).sort(function(t,e){return e.score-t.score}),i=[],s=0;s<a.length;s++){var u=a[s],l=u.score,c=u.boxIndex;if(l<o)break;for(var h=!1,p=i.length-1;p>=0;--p){if(Io(t,c,i[p])>=r){h=!0;break}}if(!h&&(i.push(c),i.length>=n))break}return Cn(i,\\\"int32\\\")}function Io(t,e,n){var r=t.subarray(4*e,4*e+4),o=t.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),s=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(o[0],o[2]),c=Math.min(o[1],o[3]),h=Math.max(o[0],o[2]),p=Math.max(o[1],o[3]),f=(s-a)*(u-i),d=(h-l)*(p-c);if(f<=0||d<=0)return 0;var v=Math.max(a,l),m=Math.max(i,c),g=Math.min(s,h),y=Math.min(u,p),x=Math.max(g-v,0)*Math.max(y-m,0);return x/(f+d-x)}function ko(t,e,n){var r=new Array(t.rank).fill(0),o=t.shape.slice();return e.map(function(e){o[n]=e;var a=t.slice(r,o);return r[n]+=e,a})}function No(t,e){for(var n=new Array(t.rank),r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];var o=Zn(n,t.dtype);for(r=0;r<o.values.length;++r){for(var a=o.indexToLoc(r),i=new Array(t.rank),s=0;s<i.length;s++)i[s]=a[s]%t.shape[s];var u=t.locToIndex(i);o.values[r]=t.values[u]}return o.toTensor()}function So(t,e,n,r,o){for(var a=e[e.length-1],i=[t.length/a,a],s=i[0],u=i[1],l=N(n,s*r),c=N(\\\"int32\\\",s*r),h=0;h<s;h++){for(var p=h*u,f=t.subarray(p,p+u),d=[],v=0;v<f.length;v++)d.push({value:f[v],index:v});d.sort(function(t,e){return e.value-t.value});var m=h*r,g=l.subarray(m,m+r),y=c.subarray(m,m+r);for(v=0;v<r;v++)g[v]=d[v].value,y[v]=d[v].index}var x=e.slice();return x[x.length-1]=r,[xn(l,x,n),xn(c,x,\\\"int32\\\")]}function Ao(t,e){for(var n=[],r=0;r<e.length;r++)e[r]&&n.push(r);var o=Zn(t,\\\"int32\\\"),a=Zn([n.length,t.length],\\\"int32\\\");for(r=0;r<n.length;r++){var i=o.indexToLoc(n[r]),s=r*t.length;a.values.set(i,s)}return a.toTensor()}var To=function(){return function(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(function(t,e){return\\\"T\\\"+e});var n=[];this.variableNames.forEach(function(t){n.push(\\\"float v\\\"+t+\\\" = get\\\"+t+\\\"AtOutCoords();\\\")});var r=this.variableNames.map(function(t){return\\\"v\\\"+t}).join(\\\" + \\\");this.userCode=\\\"\\\\n      void main() {\\\\n        \\\"+n.join(\\\"\\\\n        \\\")+\\\"\\\\n\\\\n        float result = \\\"+r+\\\";\\\\n        setOutput(result);\\\\n      }\\\\n    \\\"}}(),Do=function(){return function(t,e){this.outputShape=[],this.usesPackedTextures=!0,this.outputShape=t,this.variableNames=e.map(function(t,e){return\\\"T\\\"+e});var n=[];this.variableNames.forEach(function(t){n.push(\\\"vec4 v\\\"+t+\\\" = get\\\"+t+\\\"AtOutCoords();\\\")});var r=this.variableNames.map(function(t){return\\\"v\\\"+t}).join(\\\" + \\\");this.userCode=\\\"\\\\n      void main() {\\\\n        \\\"+n.join(\\\"\\\\n        \\\")+\\\"\\\\n\\\\n        vec4 result = \\\"+r+\\\";\\\\n        setOutput(result);\\\\n      }\\\\n    \\\"}}(),_o=function(){return function(t,e,n){this.variableNames=[\\\"A\\\"];var r=t.windowSize,o=t.batchSize,a=t.inSize,i=Math.ceil(a/r);n||this.variableNames.push(\\\"bestIndicesA\\\"),this.outputShape=[o,i];var s=\\\"max\\\"===e?\\\">\\\":\\\"<\\\",u=n?\\\"inOffset + i;\\\":\\\"round(getBestIndicesA(batch, inOffset + i));\\\";this.userCode=\\\"\\\\n      void main() {\\\\n        ivec2 coords = getOutputCoords();\\\\n        int batch = coords[0];\\\\n        int outIdx = coords[1];\\\\n        int inOffset = outIdx * \\\"+r+\\\";\\\\n\\\\n        int bestIndex = inOffset;\\\\n        float bestValue = getA(batch, bestIndex);\\\\n\\\\n        for (int i = 0; i < \\\"+r+\\\"; i++) {\\\\n          int inIdx = \\\"+u+\\\";\\\\n          float candidate = getA(batch, inIdx);\\\\n          if (candidate \\\"+s+\\\" bestValue) {\\\\n            bestValue = candidate;\\\\n            bestIndex = inIdx;\\\\n          }\\\\n        }\\\\n        setOutput(float(bestIndex));\\\\n      }\\\\n    \\\"}}();function Oo(t,e){return[\\\"x\\\",\\\"y\\\",\\\"z\\\",\\\"w\\\",\\\"u\\\",\\\"v\\\"].slice(0,e).map(function(e){return t+\\\".\\\"+e})}function Fo(t,e){return 1===e?[t]:Oo(t,e)}function Mo(){var t,e,n,r,o,a,s,u,l,c;return 2===i.getNumber(\\\"WEBGL_VERSION\\\")?(t=\\\"#version 300 es\\\",e=\\\"in\\\",n=\\\"out\\\",r=\\\"in\\\",o=\\\"texture\\\",a=\\\"outputColor\\\",s=\\\"out vec4 outputColor;\\\",u=\\\"\\\\n      bool isnan_custom(float val) {\\\\n        return (val > 0. || val < 0. || val == 0.) ? false : true;\\\\n      }\\\\n    \\\",l=\\\"\\\",c=\\\"\\\\n      #define round(value) newRound(value)\\\\n      int newRound(float value) {\\\\n        return int(floor(value + 0.5));\\\\n      }\\\\n\\\\n      ivec4 newRound(vec4 value) {\\\\n        return ivec4(floor(value + vec4(0.5)));\\\\n      }\\\\n    \\\"):(t=\\\"\\\",e=\\\"attribute\\\",n=\\\"varying\\\",r=\\\"varying\\\",o=\\\"texture2D\\\",a=\\\"gl_FragColor\\\",s=\\\"\\\",u=\\\"\\\\n      bool isnan_custom(float val) {\\\\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\\\\n      }\\\\n    \\\",l=\\\"\\\\n      uniform float INFINITY;\\\\n\\\\n      bool isinf(float val) {\\\\n        return abs(val) == INFINITY;\\\\n      }\\\\n      bvec4 isinf(vec4 val) {\\\\n        return equal(abs(val), vec4(INFINITY));\\\\n      }\\\\n    \\\",c=\\\"\\\\n      int round(float value) {\\\\n        return int(floor(value + 0.5));\\\\n      }\\\\n\\\\n      ivec4 round(vec4 value) {\\\\n        return ivec4(floor(value + vec4(0.5)));\\\\n      }\\\\n    \\\"),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:o,output:a,defineOutput:s,defineSpecialNaN:u,defineSpecialInf:l,defineRound:c}}function Bo(t,e,n){void 0===n&&(n=\\\"index\\\");var r=V(e);return r.map(function(e,o){return\\\"int \\\"+t[o]+\\\" = \\\"+n+\\\" / \\\"+e+\\\"; \\\"+(o===r.length-1?\\\"int \\\"+t[o+1]+\\\" = \\\"+n+\\\" - \\\"+t[o]+\\\" * \\\"+e:\\\"index -= \\\"+t[o]+\\\" * \\\"+e)+\\\";\\\"}).join(\\\"\\\")}function Po(t){var e=V(t).map(function(t){return t.toString()});return\\\"\\\\n  int getFlatIndex(ivec3 coords) {\\\\n    return coords.x * \\\"+e[0]+\\\" + coords.y * \\\"+e[1]+\\\" + coords.z;\\\\n  }\\\\n\\\"}var Lo=\\\"\\\\n  const float FLOAT_MAX = 1.70141184e38;\\\\n  const float FLOAT_MIN = 1.17549435e-38;\\\\n\\\\n  lowp vec4 encode_float(highp float v) {\\\\n    if (isnan(v)) {\\\\n      return vec4(255, 255, 255, 255);\\\\n    }\\\\n\\\\n    highp float av = abs(v);\\\\n\\\\n    if(av < FLOAT_MIN) {\\\\n      return vec4(0.0, 0.0, 0.0, 0.0);\\\\n    } else if(v > FLOAT_MAX) {\\\\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\\\\n    } else if(v < -FLOAT_MAX) {\\\\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\\\\n    }\\\\n\\\\n    highp vec4 c = vec4(0,0,0,0);\\\\n\\\\n    highp float e = floor(log2(av));\\\\n    highp float m = exp2(fract(log2(av))) - 1.0;\\\\n\\\\n    c[2] = floor(128.0 * m);\\\\n    m -= c[2] / 128.0;\\\\n    c[1] = floor(32768.0 * m);\\\\n    m -= c[1] / 32768.0;\\\\n    c[0] = floor(8388608.0 * m);\\\\n\\\\n    highp float ebias = e + 127.0;\\\\n    c[3] = floor(ebias / 2.0);\\\\n    ebias -= c[3] * 2.0;\\\\n    c[2] += floor(ebias) * 128.0;\\\\n\\\\n    c[3] += 128.0 * step(0.0, -v);\\\\n\\\\n    return c / 255.0;\\\\n  }\\\\n\\\";function Wo(t,e,n,r){var o=[];t.forEach(function(t){var e=g(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?o.push(\\\"uniform float \\\"+t.name+(e>1?\\\"[\\\"+e+\\\"]\\\":\\\"\\\")+\\\";\\\"):(o.push(\\\"uniform sampler2D \\\"+t.name+\\\";\\\"),o.push(\\\"uniform int offset\\\"+t.name+\\\";\\\"))});var a,i,s=o.join(\\\"\\\\n\\\"),u=t.map(function(t){return function(t,e,n){void 0===n&&(n=!1);var r=\\\"\\\";r+=n?Vo(t):Uo(t);var o=t.shapeInfo.logicalShape,a=e.logicalShape;o.length<=a.length&&(r+=n?function(t,e){var n,r=t.name,o=r.charAt(0).toUpperCase()+r.slice(1),a=\\\"get\\\"+o+\\\"AtOutCoords\\\",i=t.shapeInfo.logicalShape.length,s=e.logicalShape.length,u=to(t.shapeInfo.logicalShape,e.logicalShape),l=jo(s),c=s-i,h=[\\\"x\\\",\\\"y\\\",\\\"z\\\",\\\"w\\\",\\\"u\\\",\\\"v\\\"];n=0===i?\\\"\\\":s<2&&u.length>=1?\\\"coords = 0;\\\":u.map(function(t){return\\\"coords.\\\"+h[t+c]+\\\" = 0;\\\"}).join(\\\"\\\\n\\\");var p=\\\"\\\";p=s<2&&i>0?\\\"coords\\\":t.shapeInfo.logicalShape.map(function(t,e){return\\\"coords.\\\"+h[e+c]}).join(\\\", \\\");var f=\\\"return outputValue;\\\",d=1===g(t.shapeInfo.logicalShape),v=1===g(e.logicalShape);if(1!==i||d||v){if(d&&!v)f=1===s?\\\"\\\\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\\\\n      \\\":\\\"\\\\n        return vec4(outputValue.x);\\\\n      \\\";else if(u.length){var m=i-2,y=i-1;u.indexOf(m)>-1&&u.indexOf(y)>-1?f=\\\"return vec4(outputValue.x);\\\":u.indexOf(m)>-1?f=\\\"return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);\\\":u.indexOf(y)>-1&&(f=\\\"return vec4(outputValue.xx, outputValue.zz);\\\")}}else f=\\\"\\\\n      return vec4(outputValue.xy, outputValue.xy);\\\\n    \\\";return\\\"\\\\n    vec4 \\\"+a+\\\"() {\\\\n      \\\"+l+\\\" coords = getOutputCoords();\\\\n      \\\"+n+\\\"\\\\n      vec4 outputValue = get\\\"+o+\\\"(\\\"+p+\\\");\\\\n      \\\"+f+\\\"\\\\n    }\\\\n  \\\"}(t,e):function(t,e){var n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),o=\\\"get\\\"+r+\\\"AtOutCoords\\\",a=e.texShape,i=t.shapeInfo.texShape,s=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&s===u&&null==t.shapeInfo.flatOffset&&y(i,a))return\\\"\\\\n      float \\\"+o+\\\"() {\\\\n        return sampleTexture(\\\"+n+\\\", resultUV);\\\\n      }\\\\n    \\\";var l,c=jo(u),h=to(t.shapeInfo.logicalShape,e.logicalShape),p=u-s,f=[\\\"x\\\",\\\"y\\\",\\\"z\\\",\\\"w\\\",\\\"u\\\",\\\"v\\\"];l=0===s?\\\"\\\":u<2&&h.length>=1?\\\"coords = 0;\\\":h.map(function(t){return\\\"coords.\\\"+f[t+p]+\\\" = 0;\\\"}).join(\\\"\\\\n\\\");var d=\\\"\\\";d=u<2&&s>0?\\\"coords\\\":t.shapeInfo.logicalShape.map(function(t,e){return\\\"coords.\\\"+f[e+p]}).join(\\\", \\\");return\\\"\\\\n    float \\\"+o+\\\"() {\\\\n      \\\"+c+\\\" coords = getOutputCoords();\\\\n      \\\"+l+\\\"\\\\n      return get\\\"+r+\\\"(\\\"+d+\\\");\\\\n    }\\\\n  \\\"}(t,e));return r}(t,e,r)}).join(\\\"\\\\n\\\"),l=e.texShape,c=Mo(),h=function(t){return\\\"\\\\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\\\\n      return \\\"+t.texture2D+\\\"(textureSampler, uv).r;\\\\n    }\\\\n  \\\"}(c),p=function(t){return t.version+\\\"\\\\n    precision highp float;\\\\n    precision highp int;\\\\n    precision highp sampler2D;\\\\n    \\\"+t.varyingFs+\\\" vec2 resultUV;\\\\n    \\\"+t.defineOutput+\\\"\\\\n    const vec2 halfCR = vec2(0.5, 0.5);\\\\n\\\\n    struct ivec5\\\\n    {\\\\n      int x;\\\\n      int y;\\\\n      int z;\\\\n      int w;\\\\n      int u;\\\\n    };\\\\n\\\\n    struct ivec6\\\\n    {\\\\n      int x;\\\\n      int y;\\\\n      int z;\\\\n      int w;\\\\n      int u;\\\\n      int v;\\\\n    };\\\\n\\\\n    uniform float NAN;\\\\n    #define isnan(value) isnan_custom(value)\\\\n    \\\"+t.defineSpecialNaN+\\\"\\\\n    bvec4 isnan_custom(vec4 val) {\\\\n      return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\\\\n    }\\\\n\\\\n    \\\"+t.defineSpecialInf+\\\"\\\\n    \\\"+t.defineRound+\\\"\\\\n\\\\n    int imod(int x, int y) {\\\\n      return x - y * (x / y);\\\\n    }\\\\n\\\\n    int idiv(int a, int b, float sign) {\\\\n      int res = a / b;\\\\n      int mod = imod(a, b);\\\\n      if (sign < 0. && mod != 0) {\\\\n        res -= 1;\\\\n      }\\\\n      return res;\\\\n    }\\\\n\\\\n    //Based on the work of Dave Hoskins\\\\n    //https://www.shadertoy.com/view/4djSRW\\\\n    #define HASHSCALE1 443.8975\\\\n    float random(float seed){\\\\n      vec2 p = resultUV * seed;\\\\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\\\\n      p3 += dot(p3, p3.yzx + 19.19);\\\\n      return fract((p3.x + p3.y) * p3.z);\\\\n    }\\\\n\\\\n    \\\"+zo+\\\"\\\\n    \\\"+Go+\\\"\\\\n    \\\"+Ho+\\\"\\\\n  \\\"}(c);return e.isPacked?(a=function(t,e){switch(t.length){case 0:return\\\"\\\\n    int getOutputCoords() {\\\\n      return 0;\\\\n    }\\\\n  \\\";case 1:return function(t,e){var n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(1===n[0])return\\\"\\\\n      int getOutputCoords() {\\\\n        return 2 * int(resultUV.x * \\\"+n[1]+\\\".0);\\\\n      }\\\\n    \\\";if(1===n[1])return\\\"\\\\n      int getOutputCoords() {\\\\n        return 2 * int(resultUV.y * \\\"+n[0]+\\\".0);\\\\n      }\\\\n    \\\";return\\\"\\\\n    int getOutputCoords() {\\\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\\\n                             vec2(\\\"+n[0]+\\\", \\\"+n[1]+\\\"));\\\\n      return 2 * (resTexRC.x * \\\"+n[1]+\\\" + resTexRC.y);\\\\n    }\\\\n  \\\"}(0,e);case 2:return function(t,e){var n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(y(t,e))return\\\"\\\\n      ivec2 getOutputCoords() {\\\\n        return 2 * ivec2(resultUV.yx * vec2(\\\"+n[0]+\\\", \\\"+n[1]+\\\"));\\\\n      }\\\\n    \\\";var r=Math.ceil(t[1]/2);return\\\"\\\\n    ivec2 getOutputCoords() {\\\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\\\n                             vec2(\\\"+n[0]+\\\", \\\"+n[1]+\\\"));\\\\n\\\\n      int index = resTexRC.x * \\\"+n[1]+\\\" + resTexRC.y;\\\\n      int r = 2 * (index / \\\"+r+\\\");\\\\n      int c = imod(index, \\\"+r+\\\") * 2;\\\\n\\\\n      return ivec2(r, c);\\\\n    }\\\\n  \\\"}(t,e);case 3:return n=t,r=e,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=Math.ceil(n[2]/2),i=a*Math.ceil(n[1]/2),\\\"\\\\n    ivec3 getOutputCoords() {\\\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\\\n                             vec2(\\\"+o[0]+\\\", \\\"+o[1]+\\\"));\\\\n      int index = resTexRC.x * \\\"+o[1]+\\\" + resTexRC.y;\\\\n\\\\n      int b = index / \\\"+i+\\\";\\\\n      index -= b * \\\"+i+\\\";\\\\n\\\\n      int r = 2 * (index / \\\"+a+\\\");\\\\n      int c = imod(index, \\\"+a+\\\") * 2;\\\\n\\\\n      return ivec3(b, r, c);\\\\n    }\\\\n  \\\";default:return function(t,e){for(var n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),o=r*Math.ceil(t[t.length-2]/2),a=o,i=\\\"\\\",s=\\\"b, r, c\\\",u=2;u<t.length-1;u++)a*=t[t.length-u-1],i=\\\"\\\\n      int b\\\"+u+\\\" = index / \\\"+a+\\\";\\\\n      index -= b\\\"+u+\\\" * \\\"+a+\\\";\\\\n    \\\"+i,s=\\\"b\\\"+u+\\\", \\\"+s;return\\\"\\\\n    ivec\\\"+t.length+\\\" getOutputCoords() {\\\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\\\n                             vec2(\\\"+n[0]+\\\", \\\"+n[1]+\\\"));\\\\n      int index = resTexRC.x * \\\"+n[1]+\\\" + resTexRC.y;\\\\n\\\\n      \\\"+i+\\\"\\\\n\\\\n      int b = index / \\\"+o+\\\";\\\\n      index -= b * \\\"+o+\\\";\\\\n\\\\n      int r = 2 * (index / \\\"+r+\\\");\\\\n      int c = imod(index, \\\"+r+\\\") * 2;\\\\n\\\\n      return ivec\\\"+t.length+\\\"(\\\"+s+\\\");\\\\n    }\\\\n  \\\"}(t,e)}var n,r,o,a,i}(e.logicalShape,l),i=function(t){return\\\"\\\\n    void setOutput(vec4 val) {\\\\n      \\\"+t.output+\\\" = val;\\\\n    }\\\\n  \\\"}(c)):(a=function(t,e){switch(t.length){case 0:return\\\"\\\\n    int getOutputCoords() {\\\\n      return 0;\\\\n    }\\\\n  \\\";case 1:return function(t,e){if(1===e[0])return\\\"\\\\n      int getOutputCoords() {\\\\n        return int(resultUV.x * \\\"+e[1]+\\\".0);\\\\n      }\\\\n    \\\";if(1===e[1])return\\\"\\\\n      int getOutputCoords() {\\\\n        return int(resultUV.y * \\\"+e[0]+\\\".0);\\\\n      }\\\\n    \\\";return\\\"\\\\n    int getOutputCoords() {\\\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\\\n                             vec2(\\\"+e[0]+\\\", \\\"+e[1]+\\\"));\\\\n      return resTexRC.x * \\\"+e[1]+\\\" + resTexRC.y;\\\\n    }\\\\n  \\\"}(0,e);case 2:return function(t,e){if(y(t,e))return\\\"\\\\n      ivec2 getOutputCoords() {\\\\n        return ivec2(resultUV.yx * vec2(\\\"+e[0]+\\\", \\\"+e[1]+\\\"));\\\\n      }\\\\n    \\\";if(1===t[1])return\\\"\\\\n      ivec2 getOutputCoords() {\\\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\\\n                               vec2(\\\"+e[0]+\\\", \\\"+e[1]+\\\"));\\\\n        int index = resTexRC.x * \\\"+e[1]+\\\" + resTexRC.y;\\\\n        return ivec2(index, 0);\\\\n      }\\\\n    \\\";if(1===t[0])return\\\"\\\\n      ivec2 getOutputCoords() {\\\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\\\n                               vec2(\\\"+e[0]+\\\", \\\"+e[1]+\\\"));\\\\n        int index = resTexRC.x * \\\"+e[1]+\\\" + resTexRC.y;\\\\n        return ivec2(0, index);\\\\n      }\\\\n    \\\";return\\\"\\\\n    ivec2 getOutputCoords() {\\\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\\\n                             vec2(\\\"+e[0]+\\\", \\\"+e[1]+\\\"));\\\\n      int index = resTexRC.x * \\\"+e[1]+\\\" + resTexRC.y;\\\\n      int r = index / \\\"+t[1]+\\\";\\\\n      int c = index - r * \\\"+t[1]+\\\";\\\\n      return ivec2(r, c);\\\\n    }\\\\n  \\\"}(t,e);case 3:return n=e,r=Bo([\\\"r\\\",\\\"c\\\",\\\"d\\\"],t),\\\"\\\\n    ivec3 getOutputCoords() {\\\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\\\n                             vec2(\\\"+n[0]+\\\", \\\"+n[1]+\\\"));\\\\n      int index = resTexRC.x * \\\"+n[1]+\\\" + resTexRC.y;\\\\n      \\\"+r+\\\"\\\\n      return ivec3(r, c, d);\\\\n    }\\\\n  \\\";case 4:return function(t,e){var n=Bo([\\\"r\\\",\\\"c\\\",\\\"d\\\",\\\"d2\\\"],t);return\\\"\\\\n    ivec4 getOutputCoords() {\\\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\\\n        vec2(\\\"+e[0]+\\\", \\\"+e[1]+\\\"));\\\\n      int index = resTexRC.x * \\\"+e[1]+\\\" + resTexRC.y;\\\\n      \\\"+n+\\\"\\\\n      return ivec4(r, c, d, d2);\\\\n    }\\\\n  \\\"}(t,e);case 5:return function(t,e){var n=Bo([\\\"r\\\",\\\"c\\\",\\\"d\\\",\\\"d2\\\",\\\"d3\\\"],t);return\\\"\\\\n    ivec5 getOutputCoords() {\\\\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(\\\"+e[0]+\\\",\\\\n                             \\\"+e[1]+\\\"));\\\\n\\\\n      int index = resTexRC.x * \\\"+e[1]+\\\" + resTexRC.y;\\\\n\\\\n      \\\"+n+\\\"\\\\n\\\\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\\\\n      return outShape;\\\\n    }\\\\n  \\\"}(t,e);case 6:return function(t,e){var n=Bo([\\\"r\\\",\\\"c\\\",\\\"d\\\",\\\"d2\\\",\\\"d3\\\",\\\"d4\\\"],t);return\\\"\\\\n    ivec6 getOutputCoords() {\\\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\\\n        vec2(\\\"+e[0]+\\\", \\\"+e[1]+\\\"));\\\\n      int index = resTexRC.x * \\\"+e[1]+\\\" + resTexRC.y;\\\\n\\\\n      \\\"+n+\\\"\\\\n\\\\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\\\\n      return result;\\\\n    }\\\\n  \\\"}(t,e);default:throw new Error(t.length+\\\"-D output sampling is not yet supported\\\")}var n,r}(e.logicalShape,l),i=function(t){return\\\"\\\\n    void setOutput(float val) {\\\\n      \\\"+t.output+\\\" = vec4(val, 0, 0, 0);\\\\n    }\\\\n  \\\"}(c)),r&&(p+=qo),[p,h,i,s,a,u,n].join(\\\"\\\\n\\\")}function Uo(t){var e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){var e=t.name,n=\\\"get\\\"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return\\\"float \\\"+n+\\\"() {return \\\"+e+\\\";}\\\";var r=t.shapeInfo.texShape,o=r[0],a=r[1];if(1===o&&1===a)return\\\"\\\\n      float \\\"+n+\\\"() {\\\\n        return sampleTexture(\\\"+e+\\\", halfCR);\\\\n      }\\\\n    \\\";var i=t.shapeInfo.texShape,s=i[0],u=i[1],l=$o(e);return\\\"\\\\n    float \\\"+n+\\\"() {\\\\n      vec2 uv = uvFromFlat(\\\"+s+\\\", \\\"+u+\\\", \\\"+l+\\\");\\\\n      return sampleTexture(\\\"+e+\\\", uv);\\\\n    }\\\\n  \\\"}(t);case 1:return function(t){var e=t.name,n=\\\"get\\\"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return\\\"\\\\n      float \\\"+n+\\\"(int index) {\\\\n        \\\"+Ko(t)+\\\"\\\\n      }\\\\n    \\\";var r=t.shapeInfo.texShape,o=r[0],a=r[1];if(1===a&&1===o)return\\\"\\\\n      float \\\"+n+\\\"(int index) {\\\\n        return sampleTexture(\\\"+e+\\\", halfCR);\\\\n      }\\\\n    \\\";var i=$o(e);if(1===a)return\\\"\\\\n      float \\\"+n+\\\"(int index) {\\\\n        vec2 uv = vec2(0.5, (float(index + \\\"+i+\\\") + 0.5) / \\\"+o+\\\".0);\\\\n        return sampleTexture(\\\"+e+\\\", uv);\\\\n      }\\\\n    \\\";if(1===o)return\\\"\\\\n      float \\\"+n+\\\"(int index) {\\\\n        vec2 uv = vec2((float(index + \\\"+i+\\\") + 0.5) / \\\"+a+\\\".0, 0.5);\\\\n        return sampleTexture(\\\"+e+\\\", uv);\\\\n      }\\\\n    \\\";return\\\"\\\\n    float \\\"+n+\\\"(int index) {\\\\n      vec2 uv = uvFromFlat(\\\"+o+\\\", \\\"+a+\\\", index + \\\"+i+\\\");\\\\n      return sampleTexture(\\\"+e+\\\", uv);\\\\n    }\\\\n  \\\"}(t);case 2:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r=\\\"get\\\"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape;if(null!=o&&y(e,o)){var a=o[0],i=o[1];return\\\"\\\\n    float \\\"+r+\\\"(int row, int col) {\\\\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(\\\"+i+\\\".0, \\\"+a+\\\".0);\\\\n      return sampleTexture(\\\"+n+\\\", uv);\\\\n    }\\\\n  \\\"}var s=k(e),u=s.newShape,l=s.keptDims,c=u;if(c.length<e.length){var h=Xo(t,c);return\\\"\\\\n      \\\"+Uo(h)+\\\"\\\\n      float \\\"+r+\\\"(int row, int col) {\\\\n        return \\\"+r+\\\"(\\\"+Yo([\\\"row\\\",\\\"col\\\"],l)+\\\");\\\\n      }\\\\n    \\\"}if(t.shapeInfo.isUniform)return\\\"\\\\n      float \\\"+r+\\\"(int row, int col) {\\\\n        int index = round(dot(vec2(row, col), vec2(\\\"+e[1]+\\\", 1)));\\\\n        \\\"+Ko(t)+\\\"\\\\n      }\\\\n    \\\";var p=o[0],f=o[1],d=$o(n);if(1===f)return\\\"\\\\n    float \\\"+r+\\\"(int row, int col) {\\\\n      float index = dot(vec3(row, col, \\\"+d+\\\"), vec3(\\\"+e[1]+\\\", 1, 1));\\\\n      vec2 uv = vec2(0.5, (index + 0.5) / \\\"+p+\\\".0);\\\\n      return sampleTexture(\\\"+n+\\\", uv);\\\\n    }\\\\n  \\\";if(1===p)return\\\"\\\\n    float \\\"+r+\\\"(int row, int col) {\\\\n      float index = dot(vec3(row, col, \\\"+d+\\\"), vec3(\\\"+e[1]+\\\", 1, 1));\\\\n      vec2 uv = vec2((index + 0.5) / \\\"+f+\\\".0, 0.5);\\\\n      return sampleTexture(\\\"+n+\\\", uv);\\\\n    }\\\\n  \\\";return\\\"\\\\n  float \\\"+r+\\\"(int row, int col) {\\\\n    // Explicitly use integer operations as dot() only works on floats.\\\\n    int index = row * \\\"+e[1]+\\\" + col + \\\"+d+\\\";\\\\n    vec2 uv = uvFromFlat(\\\"+p+\\\", \\\"+f+\\\", index);\\\\n    return sampleTexture(\\\"+n+\\\", uv);\\\\n  }\\\\n\\\"}(t);case 3:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r=\\\"get\\\"+n.charAt(0).toUpperCase()+n.slice(1),o=e[1]*e[2],a=e[2],i=k(e),s=i.newShape,u=i.keptDims,l=s;if(l.length<e.length){var c=Xo(t,l);return\\\"\\\\n        \\\"+Uo(c)+\\\"\\\\n        float \\\"+r+\\\"(int row, int col, int depth) {\\\\n          return \\\"+r+\\\"(\\\"+Yo([\\\"row\\\",\\\"col\\\",\\\"depth\\\"],u)+\\\");\\\\n        }\\\\n      \\\"}if(t.shapeInfo.isUniform)return\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth) {\\\\n        int index = round(dot(vec3(row, col, depth),\\\\n                          vec3(\\\"+o+\\\", \\\"+a+\\\", 1)));\\\\n        \\\"+Ko(t)+\\\"\\\\n      }\\\\n    \\\";var h=t.shapeInfo.texShape,p=h[0],f=h[1],d=t.shapeInfo.flatOffset;if(f===o&&null==d)return\\\"\\\\n        float \\\"+r+\\\"(int row, int col, int depth) {\\\\n          float texR = float(row);\\\\n          float texC = dot(vec2(col, depth), vec2(\\\"+a+\\\", 1));\\\\n          vec2 uv = (vec2(texC, texR) + halfCR) /\\\\n                     vec2(\\\"+f+\\\".0, \\\"+p+\\\".0);\\\\n          return sampleTexture(\\\"+n+\\\", uv);\\\\n        }\\\\n      \\\";if(f===a&&null==d)return\\\"\\\\n    float \\\"+r+\\\"(int row, int col, int depth) {\\\\n      float texR = dot(vec2(row, col), vec2(\\\"+e[1]+\\\", 1));\\\\n      float texC = float(depth);\\\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\\\"+f+\\\".0, \\\"+p+\\\".0);\\\\n      return sampleTexture(\\\"+n+\\\", uv);\\\\n    }\\\\n  \\\";var v=$o(n);return\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth) {\\\\n        // Explicitly use integer operations as dot() only works on floats.\\\\n        int index = row * \\\"+o+\\\" + col * \\\"+a+\\\" + depth + \\\"+v+\\\";\\\\n        vec2 uv = uvFromFlat(\\\"+p+\\\", \\\"+f+\\\", index);\\\\n        return sampleTexture(\\\"+n+\\\", uv);\\\\n      }\\\\n  \\\"}(t);case 4:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r=\\\"get\\\"+n.charAt(0).toUpperCase()+n.slice(1),o=e[3],a=e[2]*o,i=e[1]*a,s=k(e),u=s.newShape,l=s.keptDims;if(u.length<e.length){var c=Xo(t,u);return\\\"\\\\n      \\\"+Uo(c)+\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth, int depth2) {\\\\n        return \\\"+r+\\\"(\\\"+Yo([\\\"row\\\",\\\"col\\\",\\\"depth\\\",\\\"depth2\\\"],l)+\\\");\\\\n      }\\\\n    \\\"}if(t.shapeInfo.isUniform)return\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth, int depth2) {\\\\n        int index = round(dot(vec4(row, col, depth, depth2),\\\\n                          vec4(\\\"+i+\\\", \\\"+a+\\\", \\\"+o+\\\", 1)));\\\\n        \\\"+Ko(t)+\\\"\\\\n      }\\\\n    \\\";var h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,f=p[0],d=p[1];if(d===i&&null==h)return\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth, int depth2) {\\\\n        float texR = float(row);\\\\n        float texC =\\\\n            dot(vec3(col, depth, depth2),\\\\n                vec3(\\\"+a+\\\", \\\"+o+\\\", 1));\\\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\\\n                   vec2(\\\"+d+\\\".0, \\\"+f+\\\".0);\\\\n        return sampleTexture(\\\"+n+\\\", uv);\\\\n      }\\\\n    \\\";if(d===o&&null==h)return\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth, int depth2) {\\\\n        float texR = dot(vec3(row, col, depth),\\\\n                         vec3(\\\"+e[1]*e[2]+\\\", \\\"+e[2]+\\\", 1));\\\\n        float texC = float(depth2);\\\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\\\n                  vec2(\\\"+d+\\\".0, \\\"+f+\\\".0);\\\\n        return sampleTexture(\\\"+n+\\\", uv);\\\\n      }\\\\n    \\\";var v=$o(n);return\\\"\\\\n    float \\\"+r+\\\"(int row, int col, int depth, int depth2) {\\\\n      // Explicitly use integer operations as dot() only works on floats.\\\\n      int index = row * \\\"+i+\\\" + col * \\\"+a+\\\" +\\\\n          depth * \\\"+o+\\\" + depth2;\\\\n      vec2 uv = uvFromFlat(\\\"+f+\\\", \\\"+d+\\\", index + \\\"+v+\\\");\\\\n      return sampleTexture(\\\"+n+\\\", uv);\\\\n    }\\\\n  \\\"}(t);case 5:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r=\\\"get\\\"+n.charAt(0).toUpperCase()+n.slice(1),o=e[4],a=e[3]*o,i=e[2]*a,s=e[1]*i,u=k(e),l=u.newShape,c=u.keptDims;if(l.length<e.length){var h=Xo(t,l);return\\\"\\\\n      \\\"+Uo(h)+\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth, int depth2, int depth3) {\\\\n        return \\\"+r+\\\"(\\\"+Yo([\\\"row\\\",\\\"col\\\",\\\"depth\\\",\\\"depth2\\\",\\\"depth3\\\"],c)+\\\");\\\\n      }\\\\n    \\\"}if(t.shapeInfo.isUniform)return\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth, int depth2, int depth3) {\\\\n        float index = dot(\\\\n          vec4(row, col, depth, depth2),\\\\n          vec4(\\\"+s+\\\", \\\"+i+\\\", \\\"+a+\\\", \\\"+o+\\\")) +\\\\n          depth3;\\\\n        \\\"+Ko(t)+\\\"\\\\n      }\\\\n    \\\";var p=t.shapeInfo.flatOffset,f=t.shapeInfo.texShape,d=f[0],v=f[1];if(v===s&&null==p)return\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth, int depth2, int depth3) {\\\\n        int texR = row;\\\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\\\n                         vec4(\\\"+i+\\\", \\\"+a+\\\", \\\"+o+\\\", 1));\\\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\\\n                   vec2(\\\"+v+\\\".0, \\\"+d+\\\".0);\\\\n        return sampleTexture(\\\"+n+\\\", uv);\\\\n      }\\\\n    \\\";if(v===o&&null==p)return\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth, int depth2, int depth3) {\\\\n        float texR = dot(\\\\n          vec4(row, col, depth, depth2),\\\\n          vec4(\\\"+e[1]*e[2]*e[3]+\\\",\\\\n               \\\"+e[2]*e[3]+\\\", \\\"+e[3]+\\\", 1));\\\\n        int texC = depth3;\\\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\\\n                  vec2(\\\"+v+\\\".0, \\\"+d+\\\".0);\\\\n        return sampleTexture(\\\"+n+\\\", uv);\\\\n      }\\\\n    \\\";var m=$o(n);return\\\"\\\\n    float \\\"+r+\\\"(int row, int col, int depth, int depth2, int depth3) {\\\\n      // Explicitly use integer operations as dot() only works on floats.\\\\n      int index = row * \\\"+s+\\\" + col * \\\"+i+\\\" + depth * \\\"+a+\\\" +\\\\n          depth2 * \\\"+o+\\\" + depth3 + \\\"+m+\\\";\\\\n      vec2 uv = uvFromFlat(\\\"+d+\\\", \\\"+v+\\\", index);\\\\n      return sampleTexture(\\\"+n+\\\", uv);\\\\n    }\\\\n  \\\"}(t);case 6:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r=\\\"get\\\"+n.charAt(0).toUpperCase()+n.slice(1),o=k(e),a=o.newShape,i=o.keptDims;if(a.length<e.length){var s=Xo(t,a);return\\\"\\\\n      \\\"+Uo(s)+\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth,\\\\n                    int depth2, int depth3, int depth4) {\\\\n        return \\\"+r+\\\"(\\\"+Yo([\\\"row\\\",\\\"col\\\",\\\"depth\\\",\\\"depth2\\\",\\\"depth3\\\",\\\"depth4\\\"],i)+\\\");\\\\n      }\\\\n    \\\"}var u=e[5],l=e[4]*u,c=e[3]*l,h=e[2]*c,p=e[1]*h;if(t.shapeInfo.isUniform)return\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth,\\\\n                  int depth2, int depth3, int depth4) {\\\\n        int index = round(dot(\\\\n          vec4(row, col, depth, depth2),\\\\n          vec4(\\\"+p+\\\", \\\"+h+\\\", \\\"+c+\\\", \\\"+l+\\\")) +\\\\n          dot(\\\\n            vec2(depth3, depth4),\\\\n            vec2(\\\"+u+\\\", 1)));\\\\n        \\\"+Ko(t)+\\\"\\\\n      }\\\\n    \\\";var f=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,v=d[0],m=d[1];if(m===p&&null==f)return\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth,\\\\n                    int depth2, int depth3, int depth4) {\\\\n        int texR = row;\\\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\\\n          vec4(\\\"+h+\\\", \\\"+c+\\\", \\\"+l+\\\", \\\"+u+\\\")) +\\\\n               float(depth4);\\\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\\\n                   vec2(\\\"+m+\\\".0, \\\"+v+\\\".0);\\\\n        return sampleTexture(\\\"+n+\\\", uv);\\\\n      }\\\\n    \\\";if(m===u&&null==f)return\\\"\\\\n      float \\\"+r+\\\"(int row, int col, int depth,\\\\n                    int depth2, int depth3, int depth4) {\\\\n        float texR = dot(vec4(row, col, depth, depth2),\\\\n          vec4(\\\"+e[1]*e[2]*e[3]*e[4]+\\\",\\\\n               \\\"+e[2]*e[3]*e[4]+\\\",\\\\n               \\\"+e[3]*e[4]+\\\",\\\\n               \\\"+e[4]+\\\")) + float(depth3);\\\\n        int texC = depth4;\\\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\\\n                  vec2(\\\"+m+\\\".0, \\\"+v+\\\".0);\\\\n        return sampleTexture(\\\"+n+\\\", uv);\\\\n      }\\\\n    \\\";var g=$o(n);return\\\"\\\\n    float \\\"+r+\\\"(int row, int col, int depth,\\\\n                  int depth2, int depth3, int depth4) {\\\\n      // Explicitly use integer operations as dot() only works on floats.\\\\n      int index = row * \\\"+p+\\\" + col * \\\"+h+\\\" + depth * \\\"+c+\\\" +\\\\n          depth2 * \\\"+l+\\\" + depth3 * \\\"+u+\\\" + depth4 + \\\"+g+\\\";\\\\n      vec2 uv = uvFromFlat(\\\"+v+\\\", \\\"+m+\\\", index);\\\\n      return sampleTexture(\\\"+n+\\\", uv);\\\\n    }\\\\n  \\\"}(t);default:throw new Error(e.length+\\\"-D input sampling is not yet supported\\\")}}function Vo(t){var e,n,r;switch(t.shapeInfo.logicalShape.length){case 0:return e=t.name,n=\\\"get\\\"+e.charAt(0).toUpperCase()+e.slice(1),r=Mo(),\\\"\\\\n    vec4 \\\"+n+\\\"() {\\\\n      return \\\"+r.texture2D+\\\"(\\\"+e+\\\", halfCR);\\\\n    }\\\\n  \\\";case 1:return function(t){var e=t.name,n=\\\"get\\\"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=Mo();return\\\"\\\\n    vec4 \\\"+n+\\\"(int index) {\\\\n      vec2 uv = packedUVfrom1D(\\\\n        \\\"+o[0]+\\\", \\\"+o[1]+\\\", index);\\\\n      return \\\"+a.texture2D+\\\"(\\\"+e+\\\", uv);\\\\n    }\\\\n  \\\"}(t);case 2:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r=\\\"get\\\"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape,a=o[0],i=o[1],s=Mo();if(null!=o&&y(e,o))return\\\"\\\\n      vec4 \\\"+r+\\\"(int row, int col) {\\\\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(\\\"+i+\\\".0, \\\"+a+\\\".0);\\\\n\\\\n        return \\\"+s.texture2D+\\\"(\\\"+n+\\\", uv);\\\\n      }\\\\n    \\\";var u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(e[1]/2);return\\\"\\\\n    vec4 \\\"+r+\\\"(int row, int col) {\\\\n      vec2 uv = packedUVfrom2D(\\\"+l+\\\", \\\"+u[0]+\\\", \\\"+u[1]+\\\", row, col);\\\\n      return \\\"+s.texture2D+\\\"(\\\"+n+\\\", uv);\\\\n    }\\\\n  \\\"}(t);case 3:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r=\\\"get\\\"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(1===e[0]){var i=e.slice(1),s=Xo(t,i);return\\\"\\\\n        \\\"+Vo(s)+\\\"\\\\n        vec4 \\\"+r+\\\"(int b, int row, int col) {\\\\n          return \\\"+r+\\\"(\\\"+Yo([\\\"b\\\",\\\"row\\\",\\\"col\\\"],[1,2])+\\\");\\\\n        }\\\\n      \\\"}var u=a[0],l=a[1],c=Math.ceil(e[2]/2),h=c*Math.ceil(e[1]/2),p=Mo();return\\\"\\\\n    vec4 \\\"+r+\\\"(int b, int row, int col) {\\\\n      vec2 uv = packedUVfrom3D(\\\\n        \\\"+u+\\\", \\\"+l+\\\", \\\"+h+\\\", \\\"+c+\\\", b, row, col);\\\\n      return \\\"+p.texture2D+\\\"(\\\"+n+\\\", uv);\\\\n    }\\\\n  \\\"}(t);default:return function(t){for(var e=t.shapeInfo.logicalShape,n=e.length,r=t.name,o=\\\"get\\\"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],s=i[0],u=i[1],l=Math.ceil(e[n-1]/2),c=l*Math.ceil(e[n-2]/2),h=\\\"int b, int row, int col\\\",p=\\\"b * \\\"+c+\\\" + (row / 2) * \\\"+l+\\\" + (col / 2)\\\",f=2;f<n-1;f++)h=\\\"int b\\\"+f+\\\", \\\"+h,c*=e[n-f-1],p=\\\"b\\\"+f+\\\" * \\\"+c+\\\" + \\\"+p;var d=Mo();return\\\"\\\\n    vec4 \\\"+o+\\\"(\\\"+h+\\\") {\\\\n      int index = \\\"+p+\\\";\\\\n      int texR = index / \\\"+u+\\\";\\\\n      int texC = index - texR * \\\"+u+\\\";\\\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\\\"+u+\\\", \\\"+s+\\\");\\\\n      return \\\"+d.texture2D+\\\"(\\\"+r+\\\", uv);\\\\n    }\\\\n  \\\"}(t)}}var zo=\\\"\\\\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\\\\n  int texR = index / texNumC;\\\\n  int texC = index - texR * texNumC;\\\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\\\n}\\\\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\\\\n  int texelIndex = index / 2;\\\\n  int texR = texelIndex / texNumC;\\\\n  int texC = texelIndex - texR * texNumC;\\\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\\\n}\\\\n\\\",Go=\\\"\\\\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\\\\n  int texNumC, int row, int col) {\\\\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\\\\n  int texR = texelIndex / texNumC;\\\\n  int texC = texelIndex - texR * texNumC;\\\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\\\n}\\\\n\\\",Ho=\\\"\\\\nvec2 packedUVfrom3D(int texNumR, int texNumC,\\\\n    int texelsInBatch, int texelsInLogicalRow, int b,\\\\n    int row, int col) {\\\\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\\\\n  int texR = index / texNumC;\\\\n  int texC = index - texR * texNumC;\\\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\\\n}\\\\n\\\",qo=\\\"\\\\n  float getChannel(vec4 frag, vec2 innerDims) {\\\\n    vec2 modCoord = mod(innerDims, 2.);\\\\n    return modCoord.x == 0. ?\\\\n      (modCoord.y == 0. ? frag.r : frag.g) :\\\\n      (modCoord.y == 0. ? frag.b : frag.a);\\\\n  }\\\\n  float getChannel(vec4 frag, int dim) {\\\\n    float modCoord = mod(float(dim), 2.);\\\\n    return modCoord == 0. ? frag.r : frag.g;\\\\n  }\\\\n\\\";function $o(t){return\\\"offset\\\"+t}function Ko(t){var e=t.name,n=g(t.shapeInfo.logicalShape);return n<2?\\\"return \\\"+e+\\\";\\\":\\\"\\\\n    for (int i = 0; i < \\\"+n+\\\"; i++) {\\\\n      if (i == index) {\\\\n        return \\\"+e+\\\"[i];\\\\n      }\\\\n    }\\\\n  \\\"}function jo(t){if(t<=1)return\\\"int\\\";if(2===t)return\\\"ivec2\\\";if(3===t)return\\\"ivec3\\\";if(4===t)return\\\"ivec4\\\";if(5===t)return\\\"ivec5\\\";if(6===t)return\\\"ivec6\\\";throw Error(\\\"GPU for rank \\\"+t+\\\" is not yet supported\\\")}function Xo(t,e){var n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Yo(t,e){return e.map(function(e){return t[e]}).join(\\\", \\\")}var Qo=function(){return function(t,e,n,r){this.variableNames=[\\\"A\\\"],this.usesPackedTextures=!0,f(t.length>2,function(){return\\\"Packed arg\\\"+(n.charAt(0).toUpperCase()+n.slice(1))+\\\" supports only inputs with rank above 2.\\\"});var o=t[t.length-1],a=Math.ceil(o/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push(\\\"bestIndicesA\\\");var i,s,u=this.outputShape,l=u.length,c=jo(l),h=Fo(\\\"coords\\\",l);if(1===a){var p=jo(s=l+1);i=\\\"\\\\n        \\\"+p+\\\" sourceLocR = \\\"+p+\\\"(\\\"+h.join()+\\\", 0);\\\\n        ++\\\"+h[l-1]+\\\";\\\\n        \\\"+p+\\\" sourceLocG = \\\"+p+\\\"(\\\"+h.join()+\\\", 0);\\\\n        ++\\\"+h[l-2]+\\\";\\\\n        \\\"+p+\\\" sourceLocA = \\\"+p+\\\"(\\\"+h.join()+\\\", 0);\\\\n        --\\\"+h[l-1]+\\\";\\\\n        \\\"+p+\\\" sourceLocB = \\\"+p+\\\"(\\\"+h.join()+\\\", 0);\\\\n        --\\\"+h[l-2]+\\\";\\\"}else s=l,i=\\\"\\\\n        \\\"+c+\\\" sourceLocR = coords;\\\\n        ++\\\"+h[l-1]+\\\";\\\\n        \\\"+c+\\\" sourceLocG = coords;\\\\n        ++\\\"+h[l-2]+\\\";\\\\n        \\\"+c+\\\" sourceLocA = coords;\\\\n        --\\\"+h[l-1]+\\\";\\\\n        \\\"+c+\\\" sourceLocB = coords;\\\\n        --\\\"+h[l-2]+\\\";\\\";var d=[\\\"x\\\",\\\"y\\\",\\\"z\\\",\\\"w\\\",\\\"u\\\",\\\"v\\\"].slice(0,s),v=\\\".\\\"+d[s-1],m=d.map(function(t){return\\\"int \\\"+t}),g=Fo(\\\"sourceLocR\\\",s-1).concat(\\\"inIdx.r\\\"),y=Fo(\\\"sourceLocG\\\",s-1).concat(\\\"inIdx.g\\\"),x=Fo(\\\"sourceLocB\\\",s-1).concat(\\\"inIdx.b\\\"),b=Fo(\\\"sourceLocA\\\",s-1).concat(\\\"inIdx.a\\\"),w=\\\"max\\\"===n?\\\"greaterThan\\\":\\\"lessThan\\\",C=r?\\\"\\\":\\\"\\\\n          inIdx = round(vec4(getBestIndicesAChannel(\\\"+g.join()+\\\"),\\\\n                             getBestIndicesAChannel(\\\"+y.join()+\\\"),\\\\n                             getBestIndicesAChannel(\\\"+x.join()+\\\"),\\\\n                             getBestIndicesAChannel(\\\"+b.join()+\\\")));\\\",E=\\\"vec4(\\\\n            getAChannel(\\\"+g.join()+\\\"),\\\\n            hasNextCol ? getAChannel(\\\"+y.join()+\\\") : 0.,\\\\n            hasNextRow ? getAChannel(\\\"+x.join()+\\\") : 0.,\\\\n            hasNextRow && hasNextCol ? getAChannel(\\\"+b.join()+\\\") : 0.)\\\",R=r?\\\"\\\":\\\"\\\\n      float getBestIndicesAChannel(\\\"+m.join()+\\\") {\\\\n        return getChannel(getBestIndicesA(\\\"+d.join()+\\\"),\\\\n                                          vec2(\\\"+d.slice(-2).join()+\\\"));\\\\n      }\\\";this.userCode=\\\"\\\\n      float getAChannel(\\\"+m.join()+\\\") {\\\\n        return getChannel(getA(\\\"+d.join()+\\\"),\\\\n                               vec2(\\\"+d.slice(-2).join()+\\\"));\\\\n      }\\\\n      \\\"+R+\\\"\\\\n      void main() {\\\\n        \\\"+c+\\\" coords = getOutputCoords();\\\\n        bool hasNextCol = \\\"+h[l-1]+\\\" < \\\"+(u[l-1]-1)+\\\";\\\\n        bool hasNextRow = \\\"+h[l-2]+\\\" < \\\"+(u[l-2]-1)+\\\";\\\\n        \\\"+i+\\\"\\\\n        ivec4 srcIdx = ivec4(sourceLocR\\\"+v+\\\", sourceLocG\\\"+v+\\\",\\\\n          sourceLocB\\\"+v+\\\", sourceLocA\\\"+v+\\\") * \\\"+e+\\\";\\\\n        ivec4 inIdx = srcIdx;\\\\n        vec4 bestIndex = vec4(inIdx);\\\\n        vec4 bestValue = \\\"+E+\\\";\\\\n\\\\n        for (int i = 0; i < \\\"+e+\\\"; i++) {\\\\n          inIdx = srcIdx;\\\\n          \\\"+C+\\\"\\\\n          vec4 candidate = \\\"+E+\\\";\\\\n          bvec4 nan = isnan(candidate);\\\\n          bvec4 replace = bvec4(\\\\n            vec4(\\\"+w+\\\"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\\\\n\\\\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\\\\n                           replace.y  ? candidate.y : bestValue.y,\\\\n                           replace.z  ? candidate.z : bestValue.z,\\\\n                           replace.w  ? candidate.w : bestValue.w);\\\\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\\\\n          srcIdx++;\\\\n        }\\\\n        setOutput(bestIndex);\\\\n      }\\\\n    \\\"}}(),Jo=function(){return function(t){this.variableNames=[\\\"dy\\\"],this.outputShape=t.inShape;var e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,s=t.effectiveFilterHeight,u=t.effectiveFilterWidth,l=s-1-t.padInfo.top,c=u-1-t.padInfo.left,h=1/(e*n);this.userCode=\\\"\\\\n      const ivec2 pads = ivec2(\\\"+l+\\\", \\\"+c+\\\");\\\\n      const float avgMultiplier = float(\\\"+h+\\\");\\\\n\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int b = coords[0];\\\\n        int d = coords[3];\\\\n\\\\n        ivec2 dyRCCorner = coords.yz - pads;\\\\n        int dyRCorner = dyRCCorner.x;\\\\n        int dyCCorner = dyRCCorner.y;\\\\n\\\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\\\n        // ? = to be determined. : = across all values in that axis.\\\\n        float dotProd = 0.0;\\\\n        for (int wR = 0; wR < \\\"+s+\\\";\\\\n            wR += \\\"+a+\\\") {\\\\n          float dyR = float(dyRCorner + wR) / \\\"+r+\\\".0;\\\\n\\\\n          if (dyR < 0.0 || dyR >= \\\"+t.outHeight+\\\".0 || fract(dyR) > 0.0) {\\\\n            continue;\\\\n          }\\\\n          int idyR = int(dyR);\\\\n\\\\n          for (int wC = 0; wC < \\\"+u+\\\";\\\\n            wC+= \\\"+i+\\\") {\\\\n            float dyC = float(dyCCorner + wC) / \\\"+o+\\\".0;\\\\n\\\\n            if (dyC < 0.0 || dyC >= \\\"+t.outWidth+\\\".0 ||\\\\n                fract(dyC) > 0.0) {\\\\n              continue;\\\\n            }\\\\n            int idyC = int(dyC);\\\\n\\\\n            float dyValue = getDy(b, idyR, idyC, d);\\\\n\\\\n            dotProd += dyValue * avgMultiplier;\\\\n          }\\\\n        }\\\\n        setOutput(dotProd);\\\\n      }\\\\n    \\\"}}(),Zo=function(){return function(t){this.variableNames=[\\\"dy\\\"],this.outputShape=t.inShape;var e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=c-1-t.padInfo.front,d=h-1-t.padInfo.top,v=p-1-t.padInfo.left,m=1/(e*n*r);this.userCode=\\\"\\\\n      const ivec3 pads = ivec3(\\\"+f+\\\", \\\"+d+\\\", \\\"+v+\\\");\\\\n      const float avgMultiplier = float(\\\"+m+\\\");\\\\n\\\\n      void main() {\\\\n        ivec5 coords = getOutputCoords();\\\\n        int batch = coords.x;\\\\n        int ch = coords.u;\\\\n\\\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\\\n        int dyDCorner = dyCorner.x;\\\\n        int dyRCorner = dyCorner.y;\\\\n        int dyCCorner = dyCorner.z;\\\\n\\\\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\\\\n        // dx(xD, xR, xC, ch).\\\\n        // ? = to be determined. : = across all values in that axis.\\\\n        float dotProd = 0.0;\\\\n\\\\n        for (int wD = 0; wD < \\\"+c+\\\";\\\\n            wD += \\\"+s+\\\") {\\\\n          float dyD = float(dyDCorner + wD) / \\\"+o+\\\".0;\\\\n\\\\n          if (dyD < 0.0 || dyD >= \\\"+t.outDepth+\\\".0 || fract(dyD) > 0.0) {\\\\n            continue;\\\\n          }\\\\n          int idyD = int(dyD);\\\\n\\\\n          for (int wR = 0; wR < \\\"+h+\\\";\\\\n              wR += \\\"+u+\\\") {\\\\n            float dyR = float(dyRCorner + wR) / \\\"+a+\\\".0;\\\\n\\\\n            if (dyR < 0.0 || dyR >= \\\"+t.outHeight+\\\".0 ||\\\\n                fract(dyR) > 0.0) {\\\\n              continue;\\\\n            }\\\\n            int idyR = int(dyR);\\\\n\\\\n            for (int wC = 0; wC < \\\"+p+\\\";\\\\n                wC += \\\"+l+\\\") {\\\\n              float dyC = float(dyCCorner + wC) / \\\"+i+\\\".0;\\\\n\\\\n              if (dyC < 0.0 || dyC >= \\\"+t.outWidth+\\\".0 ||\\\\n                  fract(dyC) > 0.0) {\\\\n                continue;\\\\n              }\\\\n              int idyC = int(dyC);\\\\n\\\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\\\n\\\\n              dotProd += dyValue * avgMultiplier;\\\\n            }\\\\n          }\\\\n        }\\\\n        setOutput(dotProd);\\\\n      }\\\\n    \\\"}}(),ta=function(){return function(t,e,n,r,o,a){this.outputShape=[],this.variableNames=[\\\"x\\\",\\\"mean\\\",\\\"variance\\\"],no(t,e),no(t,n);var i=\\\"0.0\\\";null!=r&&(no(t,r),this.variableNames.push(\\\"offset\\\"),i=\\\"getOffsetAtOutCoords()\\\");var s=\\\"1.0\\\";null!=o&&(no(t,o),this.variableNames.push(\\\"scale\\\"),s=\\\"getScaleAtOutCoords()\\\"),this.outputShape=t,this.userCode=\\\"\\\\n      void main() {\\\\n        float x = getXAtOutCoords();\\\\n        float mean = getMeanAtOutCoords();\\\\n        float variance = getVarianceAtOutCoords();\\\\n        float offset = \\\"+i+\\\";\\\\n        float scale = \\\"+s+\\\";\\\\n        float inv = scale * inversesqrt(variance + float(\\\"+a+\\\"));\\\\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\\\\n      }\\\\n    \\\"}}(),ea=function(){return function(t,e,n,r,o,a){this.usesPackedTextures=!0,this.variableNames=[\\\"x\\\",\\\"mean\\\",\\\"variance\\\"],no(t,e),no(t,n);var i=\\\"vec4(0.0)\\\";null!=r&&(no(t,r),this.variableNames.push(\\\"offset\\\"),i=\\\"getOffsetAtOutCoords()\\\");var s=\\\"vec4(1.0)\\\";null!=o&&(no(t,o),this.variableNames.push(\\\"scale\\\"),s=\\\"getScaleAtOutCoords()\\\"),this.outputShape=t,this.userCode=\\\"\\\\n      void main() {\\\\n        vec4 offset = \\\"+i+\\\";\\\\n        vec4 scale = \\\"+s+\\\";\\\\n\\\\n        vec4 x = getXAtOutCoords();\\\\n        vec4 mean = getMeanAtOutCoords();\\\\n        vec4 variance = getVarianceAtOutCoords();\\\\n\\\\n        vec4 inv = scale * inversesqrt(variance + vec4(\\\"+a+\\\"));\\\\n\\\\n        setOutput((x - mean) * inv + offset);\\\\n      }\\\\n    \\\"}}(),na=\\\"return areal * breal - aimag * bimag;\\\",ra=\\\"return areal * bimag + aimag * breal;\\\",oa=function(){return function(t,e,n){this.variableNames=[\\\"AReal\\\",\\\"AImag\\\",\\\"BReal\\\",\\\"BImag\\\"],this.outputShape=no(e,n),this.userCode=\\\"\\\\n      float binaryOpComplex(\\\\n          float areal, float aimag, float breal, float bimag) {\\\\n        \\\"+t+\\\"\\\\n      }\\\\n\\\\n      void main() {\\\\n        float areal = getARealAtOutCoords();\\\\n        float aimag = getAImagAtOutCoords();\\\\n        float breal = getBRealAtOutCoords();\\\\n        float bimag = getBImagAtOutCoords();\\\\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\\\\n      }\\\\n    \\\"}}(),aa=\\\"return a + b;\\\",ia=\\\"return a - b;\\\",sa=\\\"return a * b;\\\",ua=\\\"return (a < 0.) ? b * a : a;\\\",la=function(){return function(t,e,n){this.variableNames=[\\\"A\\\",\\\"B\\\"],this.outputShape=no(e,n),this.userCode=\\\"\\\\n      float binaryOperation(float a, float b) {\\\\n        \\\"+t+\\\"\\\\n      }\\\\n\\\\n      void main() {\\\\n        float a = getAAtOutCoords();\\\\n        float b = getBAtOutCoords();\\\\n        setOutput(binaryOperation(a, b));\\\\n      }\\\\n    \\\"}}(),ca=\\\"\\\\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\\\\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\\\\n\\\",ha=function(){return function(t,e,n,r){void 0===r&&(r=!1),this.variableNames=[\\\"A\\\",\\\"B\\\"],this.supportsBroadcasting=!0,this.usesPackedTextures=!0,this.outputShape=no(e,n);var o=this.outputShape.length,a=\\\"\\\";if(r)if(0===o||1===g(this.outputShape))a=\\\"\\\\n          result.y = 0.;\\\\n          result.z = 0.;\\\\n          result.w = 0.;\\\\n        \\\";else if(a=\\\"\\\\n          \\\"+jo(o)+\\\" coords = getOutputCoords();\\\\n        \\\",1===o)a+=\\\"\\\\n            result.y = (coords + 1) >= \\\"+this.outputShape[0]+\\\" ? 0. : result.y;\\\\n            result.z = 0.;\\\\n            result.w = 0.;\\\\n          \\\";else{var i=Fo(\\\"coords\\\",o);a+=\\\"\\\\n            bool nextRowOutOfBounds =\\\\n              (\\\"+i[o-2]+\\\" + 1) >= \\\"+this.outputShape[o-2]+\\\";\\\\n            bool nextColOutOfBounds =\\\\n              (\\\"+i[o-1]+\\\" + 1) >= \\\"+this.outputShape[o-1]+\\\";\\\\n            result.y = nextColOutOfBounds ? 0. : result.y;\\\\n            result.z = nextRowOutOfBounds ? 0. : result.z;\\\\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\\\\n          \\\"}this.userCode=\\\"\\\\n      vec4 binaryOperation(vec4 a, vec4 b) {\\\\n        \\\"+t+\\\"\\\\n      }\\\\n\\\\n      void main() {\\\\n        vec4 a = getAAtOutCoords();\\\\n        vec4 b = getBAtOutCoords();\\\\n\\\\n        vec4 result = binaryOperation(a, b);\\\\n        \\\"+a+\\\"\\\\n\\\\n        setOutput(result);\\\\n      }\\\\n    \\\"}}(),pa=function(){function t(t){this.variableNames=[\\\"A\\\"],this.outputShape=t,this.userCode=\\\"\\\\n      uniform float minVal;\\\\n      uniform float maxVal;\\\\n\\\\n      void main() {\\\\n        float value = getAAtOutCoords();\\\\n        if (isnan(value)) {\\\\n          setOutput(value);\\\\n          return;\\\\n        }\\\\n\\\\n        setOutput(clamp(value, minVal, maxVal));\\\\n      }\\\\n    \\\"}return t.prototype.getCustomSetupFunc=function(t,e){var n=this;return function(r,o){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(o,\\\"minVal\\\"),n.maxLoc=r.getUniformLocationNoThrow(o,\\\"maxVal\\\")),r.gl.uniform1f(n.minLoc,t),r.gl.uniform1f(n.maxLoc,e)}},t}(),fa=function(){function t(t){this.variableNames=[\\\"A\\\"],this.usesPackedTextures=!0,this.outputShape=t,this.userCode=\\\"\\\\n      uniform float minVal;\\\\n      uniform float maxVal;\\\\n\\\\n      void main() {\\\\n        vec4 value = getAAtOutCoords();\\\\n\\\\n        if (any(isnan(value))) {\\\\n          setOutput(value);\\\\n          return;\\\\n        }\\\\n\\\\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\\\\n      }\\\\n    \\\"}return t.prototype.getCustomSetupFunc=function(t,e){var n=this;return function(r,o){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(o,\\\"minVal\\\"),n.maxLoc=r.getUniformLocationNoThrow(o,\\\"maxVal\\\")),r.gl.uniform1f(n.minLoc,t),r.gl.uniform1f(n.maxLoc,e)}},t}(),da=function(){return function(t){this.variableNames=[\\\"real\\\",\\\"imag\\\"],this.outputShape=t,this.userCode=\\\"\\\\n      void main() {\\\\n        float re = abs(getRealAtOutCoords());\\\\n        float im = abs(getImagAtOutCoords());\\\\n        float mx = max(re, im);\\\\n\\\\n        // sadly the length function in glsl is not underflow-safe\\\\n        // (at least not on Intel GPUs). So the safe solution is\\\\n        // to ensure underflow-safety in all cases.\\\\n        setOutput(\\\\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\\\\n        );\\\\n      }\\\\n    \\\"}}(),va=function(){return function(t){this.outputShape=[],this.outputShape=dn(t,1),this.variableNames=t.map(function(t,e){return\\\"T\\\"+e});var e=new Array(t.length-1);e[0]=t[0][1];for(var n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];var r=[\\\"if (yC < \\\"+e[0]+\\\") setOutput(getT0(yR, yC));\\\"];for(n=1;n<e.length;n++){var o=e[n-1];r.push(\\\"else if (yC < \\\"+e[n]+\\\") setOutput(getT\\\"+n+\\\"(yR, yC-\\\"+o+\\\"));\\\")}var a=e.length,i=e[e.length-1];r.push(\\\"else setOutput(getT\\\"+a+\\\"(yR, yC-\\\"+i+\\\"));\\\"),this.userCode=\\\"\\\\n      void main() {\\\\n        ivec2 coords = getOutputCoords();\\\\n        int yR = coords.x;\\\\n        int yC = coords.y;\\\\n\\\\n        \\\"+r.join(\\\"\\\\n        \\\")+\\\"\\\\n      }\\\\n    \\\"}}(),ma=function(){return function(t,e){this.usesPackedTextures=!0,this.outputShape=[],this.outputShape=dn(t,e);var n=this.outputShape,r=n.length,o=jo(r),a=Fo(\\\"coords\\\",r),i=[\\\"x\\\",\\\"y\\\",\\\"z\\\",\\\"w\\\",\\\"u\\\",\\\"v\\\"].slice(0,r);this.variableNames=t.map(function(t,e){return\\\"T\\\"+e});var s=new Array(t.length-1);s[0]=t[0][e];for(var u=1;u<s.length;u++)s[u]=s[u-1]+t[u][e];var l=i[e],c=\\\"vec2(\\\"+i.slice(-2).join()+\\\")\\\",h=i.join(),p=\\\"if (\\\"+l+\\\" < \\\"+s[0]+\\\")\\\\n          return getChannel(getT0(\\\"+h+\\\"), \\\"+c+\\\");\\\";for(u=1;u<s.length;u++){var f=s[u-1];p+=\\\"\\\\n        else if (\\\"+l+\\\" < \\\"+s[u]+\\\") {\\\\n          \\\"+l+\\\" -= \\\"+f+\\\";\\\\n          return getChannel(getT\\\"+u+\\\"(\\\"+h+\\\"), \\\"+c+\\\");\\\\n        }\\\"}var d=s.length;p+=\\\"\\\\n        else {\\\\n          \\\"+l+\\\" -= \\\"+s[s.length-1]+\\\";\\\\n          return getChannel(getT\\\"+d+\\\"(\\\"+h+\\\"), \\\"+c+\\\");\\\\n        }\\\",this.userCode=\\\"\\\\n      float getValue(\\\"+i.map(function(t){return\\\"int \\\"+t})+\\\") {\\\\n        \\\"+p+\\\"\\\\n      }\\\\n\\\\n      void main() {\\\\n        \\\"+o+\\\" coords = getOutputCoords();\\\\n        vec4 result = vec4(getValue(\\\"+a+\\\"), 0., 0., 0.);\\\\n        if (++\\\"+a[r-1]+\\\" < \\\"+n[r-1]+\\\") {\\\\n          result.g = getValue(\\\"+a+\\\");\\\\n        }\\\\n        if (++\\\"+a[r-2]+\\\" < \\\"+n[r-2]+\\\") {\\\\n          result.a = getValue(\\\"+a+\\\");\\\\n        }\\\\n        if (\\\"+a[r-2]+\\\" < \\\"+n[r-2]+\\\" &&\\\\n            --\\\"+a[r-1]+\\\" < \\\"+n[r-1]+\\\") {\\\\n          result.b = getValue(\\\"+a+\\\");\\\\n        }\\\\n        setOutput(result);\\\\n      }\\\\n    \\\"}}(),ga=function(){return function(t){this.variableNames=[\\\"x\\\",\\\"dy\\\"],this.outputShape=t.filterShape;var e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,a=\\\"channelsLast\\\"===t.dataFormat;this.userCode=\\\"\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int wR = coords.x;\\\\n        int wC = coords.y;\\\\n        int d1 = coords.z;\\\\n        int d2 = coords.w;\\\\n\\\\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\\\\n        // ? = to be determined. : = across all values in that axis.\\\\n        float dotProd = 0.0;\\\\n\\\\n        for (int b = 0; b < \\\"+t.batchSize+\\\"; b++) {\\\\n          for (int yR = 0; yR < \\\"+t.outHeight+\\\"; yR++) {\\\\n            int xR = wR + yR * \\\"+e+\\\" - \\\"+r+\\\";\\\\n\\\\n            if (xR < 0 || xR >= \\\"+t.inHeight+\\\") {\\\\n              continue;\\\\n            }\\\\n\\\\n            for (int yC = 0; yC < \\\"+t.outWidth+\\\"; yC++) {\\\\n              int xC = wC + yC * \\\"+n+\\\" - \\\"+o+\\\";\\\\n\\\\n              if (xC < 0 || xC >= \\\"+t.inWidth+\\\") {\\\\n                continue;\\\\n              }\\\\n\\\\n              if (\\\"+a+\\\") {\\\\n                float dyValue = getDy(b, yR, yC, d2);\\\\n                float xValue = getX(b, xR, xC, d1);\\\\n                dotProd += (xValue * dyValue);\\\\n              } else {\\\\n                float dyValue = getDy(b, d2, yR, yC);\\\\n                float xValue = getX(b, d1, xR, xC);\\\\n                dotProd += (xValue * dyValue);\\\\n              }\\\\n\\\\n            }\\\\n          }\\\\n        }\\\\n        setOutput(dotProd);\\\\n      }\\\\n    \\\"}}(),ya=function(){return function(t){this.variableNames=[\\\"dy\\\",\\\"W\\\"],this.outputShape=t.inShape;var e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=\\\"channelsLast\\\"===t.dataFormat,i=e-1-t.padInfo.top,s=n-1-t.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=\\\"\\\\n      const ivec2 pads = ivec2(\\\"+i+\\\", \\\"+s+\\\");\\\\n\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int batch = coords[0];\\\\n        int d1 = coords[\\\"+c+\\\"];\\\\n\\\\n        ivec2 dyCorner = ivec2(coords[\\\"+u+\\\"], coords[\\\"+l+\\\"]) - pads;\\\\n        int dyRCorner = dyCorner.x;\\\\n        int dyCCorner = dyCorner.y;\\\\n\\\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\\\n        // ? = to be determined. : = across all values in that axis.\\\\n        float dotProd = 0.0;\\\\n        for (int wR = 0; wR < \\\"+e+\\\"; wR++) {\\\\n          float dyR = float(dyRCorner + wR) / \\\"+r+\\\".0;\\\\n\\\\n          if (dyR < 0.0 || dyR >= \\\"+t.outHeight+\\\".0 || fract(dyR) > 0.0) {\\\\n            continue;\\\\n          }\\\\n          int idyR = int(dyR);\\\\n\\\\n          int wRPerm = \\\"+e+\\\" - 1 - wR;\\\\n\\\\n          for (int wC = 0; wC < \\\"+n+\\\"; wC++) {\\\\n            float dyC = float(dyCCorner + wC) / \\\"+o+\\\".0;\\\\n\\\\n            if (dyC < 0.0 || dyC >= \\\"+t.outWidth+\\\".0 ||\\\\n                fract(dyC) > 0.0) {\\\\n              continue;\\\\n            }\\\\n            int idyC = int(dyC);\\\\n\\\\n            int wCPerm = \\\"+n+\\\" - 1 - wC;\\\\n\\\\n            for (int d2 = 0; d2 < \\\"+t.outChannels+\\\"; d2++) {\\\\n\\\\n              if (\\\"+a+\\\") {\\\\n                float xValue = getDy(batch, idyR, idyC, d2);\\\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\\\n                dotProd += xValue * wValue;\\\\n              } else {\\\\n                float xValue = getDy(batch, d2, idyR, idyC);\\\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\\\n                dotProd += xValue * wValue;\\\\n              }\\\\n\\\\n            }\\\\n          }\\\\n        }\\\\n        setOutput(dotProd);\\\\n      }\\\\n    \\\"}}(),xa=function(){return function(t){this.variableNames=[\\\"x\\\",\\\"dy\\\"],this.outputShape=t.filterShape;var e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,o=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=\\\"\\\\n      void main() {\\\\n        ivec5 coords = getOutputCoords();\\\\n        int wF = coords.x;\\\\n        int wR = coords.y;\\\\n        int wC = coords.z;\\\\n        int d1 = coords.w;\\\\n        int d2 = coords.u;\\\\n\\\\n        float dotProd = 0.0;\\\\n\\\\n        for (int b = 0; b < \\\"+t.batchSize+\\\"; b++) {\\\\n          for (int yF = 0; yF < \\\"+t.outDepth+\\\"; yF++) {\\\\n            int xF = wF + yF * \\\"+e+\\\" - \\\"+o+\\\";\\\\n\\\\n            if (xF < 0 || xF >= \\\"+t.inDepth+\\\") {\\\\n              continue;\\\\n            }\\\\n\\\\n            for (int yR = 0; yR < \\\"+t.outHeight+\\\"; yR++) {\\\\n              int xR = wR + yR * \\\"+n+\\\" - \\\"+a+\\\";\\\\n\\\\n              if (xR < 0 || xR >= \\\"+t.inHeight+\\\") {\\\\n                continue;\\\\n              }\\\\n\\\\n              for (int yC = 0; yC < \\\"+t.outWidth+\\\"; yC++) {\\\\n                int xC = wC + yC * \\\"+r+\\\" - \\\"+i+\\\";\\\\n\\\\n                if (xC < 0 || xC >= \\\"+t.inWidth+\\\") {\\\\n                  continue;\\\\n                }\\\\n\\\\n                float dyValue = getDy(b, yF, yR, yC, d2);\\\\n                float xValue = getX(b, xF, xR, xC, d1);\\\\n                dotProd += (xValue * dyValue);\\\\n              }\\\\n            }\\\\n          }\\\\n        }\\\\n        setOutput(dotProd);\\\\n      }\\\\n    \\\"}}(),ba=function(){return function(t){this.variableNames=[\\\"dy\\\",\\\"W\\\"],this.outputShape=t.inShape;var e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=e-1-t.padInfo.front,u=n-1-t.padInfo.top,l=r-1-t.padInfo.left;this.userCode=\\\"\\\\n      const ivec3 pads = ivec3(\\\"+s+\\\", \\\"+u+\\\", \\\"+l+\\\");\\\\n\\\\n      void main() {\\\\n        ivec5 coords = getOutputCoords();\\\\n        int batch = coords.x;\\\\n        int d1 = coords.u;\\\\n\\\\n\\\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\\\n        int dyFCorner = dyCorner.x;\\\\n        int dyRCorner = dyCorner.y;\\\\n        int dyCCorner = dyCorner.z;\\\\n\\\\n        float dotProd = 0.0;\\\\n        for (int wF = 0; wF < \\\"+e+\\\"; wF++) {\\\\n          float dyF = float(dyFCorner + wF) / \\\"+o+\\\".0;\\\\n\\\\n          if (dyF < 0.0 || dyF >= \\\"+t.outDepth+\\\".0 || fract(dyF) > 0.0) {\\\\n            continue;\\\\n          }\\\\n          int idyF = int(dyF);\\\\n\\\\n          int wFPerm = \\\"+e+\\\" - 1 - wF;\\\\n\\\\n          for (int wR = 0; wR < \\\"+n+\\\"; wR++) {\\\\n            float dyR = float(dyRCorner + wR) / \\\"+a+\\\".0;\\\\n\\\\n            if (dyR < 0.0 || dyR >= \\\"+t.outHeight+\\\".0 ||\\\\n              fract(dyR) > 0.0) {\\\\n              continue;\\\\n            }\\\\n            int idyR = int(dyR);\\\\n\\\\n            int wRPerm = \\\"+n+\\\" - 1 - wR;\\\\n\\\\n            for (int wC = 0; wC < \\\"+r+\\\"; wC++) {\\\\n              float dyC = float(dyCCorner + wC) / \\\"+i+\\\".0;\\\\n\\\\n              if (dyC < 0.0 || dyC >= \\\"+t.outWidth+\\\".0 ||\\\\n                  fract(dyC) > 0.0) {\\\\n                continue;\\\\n              }\\\\n              int idyC = int(dyC);\\\\n\\\\n              int wCPerm = \\\"+r+\\\" - 1 - wC;\\\\n\\\\n              for (int d2 = 0; d2 < \\\"+t.outChannels+\\\"; d2++) {\\\\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\\\\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\\\\n                dotProd += xValue * wValue;\\\\n              }\\\\n            }\\\\n          }\\\\n        }\\\\n        setOutput(dotProd);\\\\n      }\\\\n    \\\"}}(),wa=function(){return function(t){this.variableNames=[\\\"x\\\",\\\"dy\\\"],this.outputShape=t.filterShape;var e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=\\\"\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int wR = coords.x;\\\\n        int wC = coords.y;\\\\n        int d1 = coords.z;\\\\n        int dm = coords.w;\\\\n        int d2 = d1 * \\\"+a+\\\" + dm;\\\\n\\\\n        float dotProd = 0.0;\\\\n\\\\n        // TO DO: Vec4 over the batch size\\\\n        for (int b = 0; b < \\\"+t.batchSize+\\\"; b++) {\\\\n          for (int yR = 0; yR < \\\"+t.outHeight+\\\"; yR++) {\\\\n            int xR = wR + yR * \\\"+e+\\\" - \\\"+r+\\\";\\\\n\\\\n            if (xR < 0 || xR >= \\\"+t.inHeight+\\\") {\\\\n              continue;\\\\n            }\\\\n\\\\n            for (int yC = 0; yC < \\\"+t.outWidth+\\\"; yC++) {\\\\n              int xC = wC + yC * \\\"+n+\\\" - \\\"+o+\\\";\\\\n\\\\n              if (xC < 0 || xC >= \\\"+t.inWidth+\\\") {\\\\n                continue;\\\\n              }\\\\n\\\\n              float dyValue = getDy(b, yR, yC, d2);\\\\n              float xValue = getX(b, xR, xC, d1);\\\\n              dotProd += (xValue * dyValue);\\\\n            }\\\\n          }\\\\n        }\\\\n        setOutput(dotProd);\\\\n      }\\\\n    \\\"}}(),Ca=function(){return function(t){this.variableNames=[\\\"dy\\\",\\\"W\\\"],this.outputShape=t.inShape;var e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=\\\"\\\\n      const ivec2 pads = ivec2(\\\"+a+\\\", \\\"+i+\\\");\\\\n\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int batch = coords[0];\\\\n        int d1 = coords[3];\\\\n        ivec2 dyCorner = coords.yz - pads;\\\\n        int dyRCorner = dyCorner.x;\\\\n        int dyCCorner = dyCorner.y;\\\\n\\\\n        float dotProd = 0.0;\\\\n\\\\n        for (int wR = 0; wR < \\\"+e+\\\"; wR++) {\\\\n          float dyR = float(dyRCorner + wR) / \\\"+r+\\\".0;\\\\n\\\\n          if (dyR < 0.0 || dyR >= \\\"+t.outHeight+\\\".0 || fract(dyR) > 0.0) {\\\\n            continue;\\\\n          }\\\\n          int idyR = int(dyR);\\\\n\\\\n          int wRPerm = \\\"+e+\\\" - 1 - wR;\\\\n\\\\n          for (int wC = 0; wC < \\\"+n+\\\"; wC++) {\\\\n            float dyC = float(dyCCorner + wC) / \\\"+o+\\\".0;\\\\n\\\\n            if (dyC < 0.0 || dyC >= \\\"+t.outWidth+\\\".0 ||\\\\n                fract(dyC) > 0.0) {\\\\n              continue;\\\\n            }\\\\n            int idyC = int(dyC);\\\\n\\\\n            int wCPerm = \\\"+n+\\\" - 1 - wC;\\\\n\\\\n            // TO DO: Vec4 over the channelMul\\\\n            for (int dm = 0; dm < \\\"+s+\\\"; dm++) {\\\\n              int d2 = d1 * \\\"+s+\\\" + dm;\\\\n              float xValue = getDy(batch, idyR, idyC, d2);\\\\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\\\\n              dotProd += xValue * wValue;\\\\n            }\\\\n          }\\\\n        }\\\\n        setOutput(dotProd);\\\\n      }\\\\n    \\\"}}(),Ea=function(){return function(t,e,n,r){void 0===e&&(e=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=[\\\"x\\\",\\\"W\\\"],this.outputShape=t.outShape;var o=t.padInfo.top,a=t.padInfo.left,i=t.strideHeight,s=t.strideWidth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),f=t.inChannels%4,d=\\\"channelsLast\\\"===t.dataFormat,v=d?1:2,m=d?2:3,g=d?3:1,y=\\\"\\\",x=\\\"\\\";n&&(y=r?\\\"float activation(float a) {\\\\n          float b = getPreluActivationWeightsAtOutCoords();\\\\n          \\\"+n+\\\"\\\\n        }\\\":\\\"\\\\n          float activation(float x) {\\\\n            \\\"+n+\\\"\\\\n          }\\\\n        \\\",x=\\\"result = activation(result);\\\");var b=e?\\\"result += getBiasAtOutCoords();\\\":\\\"\\\";e&&this.variableNames.push(\\\"bias\\\"),r&&this.variableNames.push(\\\"preluActivationWeights\\\"),this.userCode=\\\"\\\\n      \\\"+y+\\\"\\\\n\\\\n      const ivec2 strides = ivec2(\\\"+i+\\\", \\\"+s+\\\");\\\\n      const ivec2 pads = ivec2(\\\"+o+\\\", \\\"+a+\\\");\\\\n\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int batch = coords[0];\\\\n        int d2 = coords[\\\"+g+\\\"];\\\\n\\\\n        ivec2 xRCCorner =\\\\n            ivec2(coords[\\\"+v+\\\"], coords[\\\"+m+\\\"]) * strides - pads;\\\\n        int xRCorner = xRCCorner.x;\\\\n        int xCCorner = xRCCorner.y;\\\\n\\\\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\\\\n        // ? = to be determined. : = across all values in that axis.\\\\n        float dotProd = 0.0;\\\\n        for (int wR = 0; wR < \\\"+c+\\\"; wR++) {\\\\n          int xR = xRCorner + wR * \\\"+u+\\\";\\\\n\\\\n          if (xR < 0 || xR >= \\\"+t.inHeight+\\\") {\\\\n            continue;\\\\n          }\\\\n\\\\n          for (int wC = 0; wC < \\\"+h+\\\"; wC++) {\\\\n            int xC = xCCorner + wC * \\\"+l+\\\";\\\\n\\\\n            if (xC < 0 || xC >= \\\"+t.inWidth+\\\") {\\\\n              continue;\\\\n            }\\\\n\\\\n            for (int d1 = 0; d1 < \\\"+p+\\\"; d1 += 4) {\\\\n              vec4 wValues = vec4(\\\\n                getW(wR, wC, d1, d2),\\\\n                getW(wR, wC, d1 + 1, d2),\\\\n                getW(wR, wC, d1 + 2, d2),\\\\n                getW(wR, wC, d1 + 3, d2)\\\\n              );\\\\n\\\\n              if (\\\"+d+\\\") {\\\\n                vec4 xValues = vec4(\\\\n                  getX(batch, xR, xC, d1),\\\\n                  getX(batch, xR, xC, d1 + 1),\\\\n                  getX(batch, xR, xC, d1 + 2),\\\\n                  getX(batch, xR, xC, d1 + 3)\\\\n                );\\\\n                dotProd += dot(xValues, wValues);\\\\n              } else {\\\\n                vec4 xValues = vec4(\\\\n                  getX(batch, d1, xR, xC),\\\\n                  getX(batch, d1 + 1, xR, xC),\\\\n                  getX(batch, d1 + 2, xR, xC),\\\\n                  getX(batch, d1 + 3, xR, xC)\\\\n                );\\\\n                dotProd += dot(xValues, wValues);\\\\n              }\\\\n            }\\\\n\\\\n            if (\\\"+(1===f)+\\\") {\\\\n\\\\n              if (\\\"+d+\\\") {\\\\n                dotProd +=\\\\n                    getX(batch, xR, xC, \\\"+p+\\\") *\\\\n                    getW(wR, wC, \\\"+p+\\\", d2);\\\\n              } else {\\\\n                dotProd +=\\\\n                    getX(batch, \\\"+p+\\\", xR, xC) *\\\\n                    getW(wR, wC, \\\"+p+\\\", d2);\\\\n              }\\\\n\\\\n            } else if (\\\"+(2===f)+\\\") {\\\\n              vec2 wValues = vec2(\\\\n                getW(wR, wC, \\\"+p+\\\", d2),\\\\n                getW(wR, wC, \\\"+p+\\\" + 1, d2)\\\\n              );\\\\n\\\\n              if (\\\"+d+\\\") {\\\\n                vec2 xValues = vec2(\\\\n                  getX(batch, xR, xC, \\\"+p+\\\"),\\\\n                  getX(batch, xR, xC, \\\"+p+\\\" + 1)\\\\n                );\\\\n                dotProd += dot(xValues, wValues);\\\\n              } else {\\\\n                vec2 xValues = vec2(\\\\n                  getX(batch, \\\"+p+\\\", xR, xC),\\\\n                  getX(batch, \\\"+p+\\\" + 1, xR, xC)\\\\n                );\\\\n                dotProd += dot(xValues, wValues);\\\\n              }\\\\n\\\\n            } else if (\\\"+(3===f)+\\\") {\\\\n              vec3 wValues = vec3(\\\\n                getW(wR, wC, \\\"+p+\\\", d2),\\\\n                getW(wR, wC, \\\"+p+\\\" + 1, d2),\\\\n                getW(wR, wC, \\\"+p+\\\" + 2, d2)\\\\n              );\\\\n\\\\n              if (\\\"+d+\\\") {\\\\n                vec3 xValues = vec3(\\\\n                  getX(batch, xR, xC, \\\"+p+\\\"),\\\\n                  getX(batch, xR, xC, \\\"+p+\\\" + 1),\\\\n                  getX(batch, xR, xC, \\\"+p+\\\" + 2)\\\\n                );\\\\n                dotProd += dot(xValues, wValues);\\\\n              } else {\\\\n                vec3 xValues = vec3(\\\\n                  getX(batch, \\\"+p+\\\", xR, xC),\\\\n                  getX(batch, \\\"+p+\\\" + 1, xR, xC),\\\\n                  getX(batch, \\\"+p+\\\" + 2, xR, xC)\\\\n                );\\\\n                dotProd += dot(xValues, wValues);\\\\n              }\\\\n\\\\n            }\\\\n          }\\\\n        }\\\\n\\\\n        float result = dotProd;\\\\n        \\\"+b+\\\"\\\\n        \\\"+x+\\\"\\\\n        setOutput(result);\\\\n      }\\\\n    \\\"}}(),Ra=function(){return function(t){this.variableNames=[\\\"x\\\",\\\"W\\\"],this.outputShape=t.outShape;var e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.filterDepth,h=t.filterHeight,p=t.filterWidth,f=4*Math.floor(t.inChannels/4),d=t.inChannels%4;this.userCode=\\\"\\\\n      const ivec3 strides = ivec3(\\\"+o+\\\", \\\"+a+\\\", \\\"+i+\\\");\\\\n      const ivec3 pads = ivec3(\\\"+e+\\\", \\\"+n+\\\", \\\"+r+\\\");\\\\n\\\\n      void main() {\\\\n        ivec5 coords = getOutputCoords();\\\\n        int batch = coords.x;\\\\n        int d2 = coords.u;\\\\n\\\\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\\\n        int xFCorner = xFRCCorner.x;\\\\n        int xRCorner = xFRCCorner.y;\\\\n        int xCCorner = xFRCCorner.z;\\\\n\\\\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\\\\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\\\\n        // values in that axis.\\\\n        float dotProd = 0.0;\\\\n        for (int wF = 0; wF < \\\"+c+\\\"; wF++) {\\\\n          int xF = xFCorner + wF * \\\"+s+\\\";\\\\n\\\\n          if (xF < 0 || xF >= \\\"+t.inDepth+\\\") {\\\\n            continue;\\\\n          }\\\\n\\\\n          for (int wR = 0; wR < \\\"+h+\\\"; wR++) {\\\\n            int xR = xRCorner + wR * \\\"+u+\\\";\\\\n\\\\n            if (xR < 0 || xR >= \\\"+t.inHeight+\\\") {\\\\n              continue;\\\\n            }\\\\n\\\\n            for (int wC = 0; wC < \\\"+p+\\\"; wC++) {\\\\n              int xC = xCCorner + wC * \\\"+l+\\\";\\\\n\\\\n              if (xC < 0 || xC >= \\\"+t.inWidth+\\\") {\\\\n                continue;\\\\n              }\\\\n\\\\n              for (int d1 = 0; d1 < \\\"+f+\\\"; d1 += 4) {\\\\n                vec4 xValues = vec4(\\\\n                  getX(batch, xF, xR, xC, d1),\\\\n                  getX(batch, xF, xR, xC, d1 + 1),\\\\n                  getX(batch, xF, xR, xC, d1 + 2),\\\\n                  getX(batch, xF, xR, xC, d1 + 3)\\\\n                );\\\\n                vec4 wValues = vec4(\\\\n                  getW(wF, wR, wC, d1, d2),\\\\n                  getW(wF, wR, wC, d1 + 1, d2),\\\\n                  getW(wF, wR, wC, d1 + 2, d2),\\\\n                  getW(wF, wR, wC, d1 + 3, d2)\\\\n                );\\\\n\\\\n                dotProd += dot(xValues, wValues);\\\\n              }\\\\n\\\\n              if (\\\"+(1===d)+\\\") {\\\\n                dotProd +=\\\\n                  getX(batch, xF, xR, xC, \\\"+f+\\\") *\\\\n                  getW(wF, wR, wC, \\\"+f+\\\", d2);\\\\n              } else if (\\\"+(2===d)+\\\") {\\\\n                vec2 xValues = vec2(\\\\n                  getX(batch, xF, xR, xC, \\\"+f+\\\"),\\\\n                  getX(batch, xF, xR, xC, \\\"+f+\\\" + 1)\\\\n                );\\\\n                vec2 wValues = vec2(\\\\n                  getW(wF, wR, wC, \\\"+f+\\\", d2),\\\\n                  getW(wF, wR, wC, \\\"+f+\\\" + 1, d2)\\\\n                );\\\\n                dotProd += dot(xValues, wValues);\\\\n              } else if (\\\"+(3===d)+\\\") {\\\\n                vec3 xValues = vec3(\\\\n                  getX(batch, xF, xR, xC, \\\"+f+\\\"),\\\\n                  getX(batch, xF, xR, xC, \\\"+f+\\\" + 1),\\\\n                  getX(batch, xF, xR, xC, \\\"+f+\\\" + 2)\\\\n                );\\\\n                vec3 wValues = vec3(\\\\n                  getW(wF, wR, wC, \\\"+f+\\\", d2),\\\\n                  getW(wF, wR, wC, \\\"+f+\\\" + 1, d2),\\\\n                  getW(wF, wR, wC, \\\"+f+\\\" + 2, d2)\\\\n                );\\\\n                dotProd += dot(xValues, wValues);\\\\n              }\\\\n            }\\\\n          }\\\\n        }\\\\n        setOutput(dotProd);\\\\n      }\\\\n    \\\"}}(),Ia=function(){return function(t){this.variableNames=[\\\"x\\\",\\\"W\\\"],this.outputShape=t.outShape;var e=t.inHeight,n=t.inWidth,r=t.padInfo.top,o=t.padInfo.left,a=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,u=t.dilationWidth,l=t.filterHeight,c=t.filterWidth,h=t.outChannels/t.inChannels;this.userCode=\\\"\\\\n      const ivec2 strides = ivec2(\\\"+a+\\\", \\\"+i+\\\");\\\\n      const ivec2 pads = ivec2(\\\"+r+\\\", \\\"+o+\\\");\\\\n\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int batch = coords.x;\\\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\\\n        int d2 = coords.w;\\\\n        int d1 = d2 / \\\"+h+\\\";\\\\n        int q = d2 - d1 * \\\"+h+\\\";\\\\n\\\\n        int xRCorner = xRCCorner.x;\\\\n        int xCCorner = xRCCorner.y;\\\\n\\\\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\\\\n        // ? = to be determined. : = across all values in that axis.\\\\n        float dotProd = 0.0;\\\\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\\\\n        for (int wR = 0; wR < \\\"+l+\\\"; wR++) {\\\\n          int xR = xRCorner + wR * \\\"+s+\\\";\\\\n\\\\n          if (xR < 0 || xR >= \\\"+e+\\\") {\\\\n            continue;\\\\n          }\\\\n\\\\n          for (int wC = 0; wC < \\\"+c+\\\"; wC++) {\\\\n            int xC = xCCorner + wC * \\\"+u+\\\";\\\\n\\\\n            if (xC < 0 || xC >= \\\"+n+\\\") {\\\\n              continue;\\\\n            }\\\\n\\\\n            float xVal = getX(batch, xR, xC, d1);\\\\n            float wVal = getW(wR, wC, d1, q);\\\\n            dotProd += xVal * wVal;\\\\n          }\\\\n        }\\\\n        setOutput(dotProd);\\\\n      }\\\\n    \\\"}}(),ka=function(){return function(t){this.variableNames=[\\\"x\\\",\\\"W\\\"],this.usesPackedTextures=!0,this.outputShape=t.outShape;for(var e=t.inHeight,n=t.inWidth,r=t.padInfo.top,o=t.padInfo.left,a=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,u=t.dilationWidth,l=t.filterHeight,c=t.filterWidth,p=c,f=\\\"int xR; int xC; int xCOffset;\\\",d=0;d<l;d++)for(var v=0;v<c;v++)f+=\\\"\\\\n          vec4 xTexelR\\\"+d+\\\"C\\\"+2*v+\\\" = vec4(0.);\\\\n          vec4 wR\\\"+d+\\\"C\\\"+v+\\\" = vec4(0.);\\\\n          vec4 xR\\\"+d+\\\"C\\\"+v+\\\" = vec4(0.);\\\";for(d=0;d<l;d++)for(var m=0;m<p;m++){if(f+=\\\"\\\\n          xR = xRCorner + \\\"+d*s+\\\";\\\\n          xC = xCCorner + \\\"+(v=2*m)*u+\\\";\\\\n        \\\",1===i){if(v<c&&(f+=o%2==1?\\\"\\\\n                xCOffset = xC + 1;\\\\n                if(xR >= 0 && xR < \\\"+e+\\\" && xCOffset >= 0 && xCOffset < \\\"+n+\\\") {\\\\n                  xTexelR\\\"+d+\\\"C\\\"+v+\\\" = getX(batch, xR, xCOffset, d1);\\\\n                } else {\\\\n                  xTexelR\\\"+d+\\\"C\\\"+v+\\\" = vec4(0.);\\\\n                }\\\\n\\\\n                xCOffset = xC + 1 - 2;\\\\n                if(xR >= 0 && xR < \\\"+e+\\\" && xCOffset >= 0 && xCOffset < \\\"+n+\\\") {\\\\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\\\\n                  xR\\\"+d+\\\"C\\\"+v+\\\" = vec4(previous.zw, xTexelR\\\"+d+\\\"C\\\"+v+\\\".xy);\\\\n                } else {\\\\n                  xR\\\"+d+\\\"C\\\"+v+\\\" = vec4(0, 0, xTexelR\\\"+d+\\\"C\\\"+v+\\\".xy);\\\\n                }\\\\n              \\\":\\\"\\\\n                if(xR >= 0 && xR < \\\"+e+\\\" && xC >= 0 && xC < \\\"+n+\\\") {\\\\n                  xTexelR\\\"+d+\\\"C\\\"+v+\\\" = getX(batch, xR, xC, d1);\\\\n                } else {\\\\n                  xTexelR\\\"+d+\\\"C\\\"+v+\\\" = vec4(0.);\\\\n                }\\\\n\\\\n                xR\\\"+d+\\\"C\\\"+v+\\\" = xTexelR\\\"+d+\\\"C\\\"+v+\\\";\\\\n              \\\",v+1<c)){var g=o%2==0?h(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(f+=\\\"\\\\n                  xCOffset = xC + \\\"+o%2+\\\" + \\\"+g+\\\";\\\\n\\\\n                  if(xR >= 0 && xR < \\\"+e+\\\" &&\\\\n                    xCOffset >= 0 && xCOffset < \\\"+n+\\\") {\\\\n                    xTexelR\\\"+d+\\\"C\\\"+(v+2)+\\\" = getX(batch, xR, xCOffset, d1);\\\\n                  }\\\\n                \\\",u>1&&(f+=\\\"\\\\n                    xCOffset -= 2;\\\\n                    if(xR >= 0 && xR < \\\"+e+\\\" &&\\\\n                      xCOffset >= 0 && xCOffset < \\\"+n+\\\") {\\\\n                      xTexelR\\\"+d+\\\"C\\\"+v+\\\" = getX(batch, xR, xCOffset, d1);\\\\n                    } else {\\\\n                      xTexelR\\\"+d+\\\"C\\\"+v+\\\" = vec4(0.);\\\\n                    }\\\\n                  \\\"),f+=\\\"\\\\n                  xR\\\"+d+\\\"C\\\"+(v+1)+\\\" = vec4(\\\\n                    xTexelR\\\"+d+\\\"C\\\"+v+\\\".zw, xTexelR\\\"+d+\\\"C\\\"+(v+2)+\\\".xy);\\\\n                \\\"):f+=\\\"\\\\n                  xCOffset = xC + \\\"+g+\\\";\\\\n\\\\n                  if(xR >= 0 && xR < \\\"+e+\\\" &&\\\\n                    xCOffset >= 0 && xCOffset < \\\"+n+\\\") {\\\\n                    xTexelR\\\"+d+\\\"C\\\"+(v+2)+\\\" = getX(batch, xR, xCOffset, d1);\\\\n                  }\\\\n\\\\n                  xR\\\"+d+\\\"C\\\"+(v+1)+\\\" = xTexelR\\\"+d+\\\"C\\\"+(v+2)+\\\";\\\\n                \\\"}}else v<c&&(f+=\\\"\\\\n              if(xR >= 0 && xR < \\\"+e+\\\") {\\\\n            \\\",o%2==1?(f+=\\\"\\\\n                xCOffset = xC + 1 - \\\"+i+\\\";\\\\n                if(xCOffset >= 0 && xCOffset < \\\"+n+\\\") {\\\\n                  xTexelR\\\"+d+\\\"C\\\"+v+\\\" = getX(batch, xR, xCOffset, d1);\\\\n                } else {\\\\n                  xTexelR\\\"+d+\\\"C\\\"+v+\\\" = vec4(0.);\\\\n                }\\\\n\\\\n                if(xC + 1 >= 0 && xC + 1 < \\\"+n+\\\") {\\\\n                  xTexelR\\\"+d+\\\"C\\\"+(v+2)+\\\" = getX(batch, xR, xC + 1, d1);\\\\n                } else {\\\\n                  xTexelR\\\"+d+\\\"C\\\"+(v+2)+\\\" = vec4(0.);\\\\n                }\\\\n\\\\n                xR\\\"+d+\\\"C\\\"+v+\\\" = vec4(\\\\n                  xTexelR\\\"+d+\\\"C\\\"+v+\\\".zw, xTexelR\\\"+d+\\\"C\\\"+(v+2)+\\\".zw);\\\\n              \\\",v+1<c&&(f+=\\\"\\\\n                  vec4 final = vec4(0.);\\\\n                  xCOffset = xC + 1 + \\\"+i+\\\";\\\\n                  if(xCOffset >= 0 && xCOffset < \\\"+n+\\\") {\\\\n                    final = getX(batch, xR, xCOffset, d1);\\\\n                  }\\\\n                  xR\\\"+d+\\\"C\\\"+(v+1)+\\\" = vec4(xTexelR\\\"+d+\\\"C\\\"+(v+2)+\\\".xy, final.xy);\\\\n                \\\")):(f+=\\\"\\\\n                if(xC >= 0 && xC < \\\"+n+\\\") {\\\\n                  xTexelR\\\"+d+\\\"C\\\"+v+\\\" = getX(batch, xR, xC, d1);\\\\n                } else {\\\\n                  xTexelR\\\"+d+\\\"C\\\"+v+\\\" = vec4(0.);\\\\n                }\\\\n\\\\n                xCOffset = xC + \\\"+i+\\\";\\\\n                if(xCOffset >= 0 && xCOffset < \\\"+n+\\\") {\\\\n                  xTexelR\\\"+d+\\\"C\\\"+(v+2)+\\\" = getX(batch, xR, xCOffset, d1);\\\\n                } else {\\\\n                  xTexelR\\\"+d+\\\"C\\\"+(v+2)+\\\" = vec4(0.);\\\\n                }\\\\n\\\\n                xR\\\"+d+\\\"C\\\"+v+\\\" = vec4(\\\\n                  xTexelR\\\"+d+\\\"C\\\"+v+\\\".xy, xTexelR\\\"+d+\\\"C\\\"+(v+2)+\\\".xy);\\\\n              \\\",v+1<c&&(f+=\\\"\\\\n                  xR\\\"+d+\\\"C\\\"+(v+1)+\\\" = vec4(\\\\n                    xTexelR\\\"+d+\\\"C\\\"+v+\\\".zw, xTexelR\\\"+d+\\\"C\\\"+(v+2)+\\\".zw);\\\\n                \\\")),f+=\\\"}\\\");v<c&&(f+=\\\"\\\\n            vec4 wTexelR\\\"+d+\\\"C\\\"+v+\\\" = getW(\\\"+d+\\\", \\\"+v+\\\", d1, q);\\\\n            wR\\\"+d+\\\"C\\\"+v+\\\" = vec4(wTexelR\\\"+d+\\\"C\\\"+v+\\\".xz, wTexelR\\\"+d+\\\"C\\\"+v+\\\".xz);\\\\n          \\\",v+1<c&&(f+=\\\"\\\\n              vec4 wTexelR\\\"+d+\\\"C\\\"+(v+1)+\\\" = getW(\\\"+d+\\\", \\\"+(v+1)+\\\", d1, q);\\\\n              wR\\\"+d+\\\"C\\\"+(v+1)+\\\" =\\\\n                vec4(wTexelR\\\"+d+\\\"C\\\"+(v+1)+\\\".xz, wTexelR\\\"+d+\\\"C\\\"+(v+1)+\\\".xz);\\\"))}for(d=0;d<l;d++)for(v=0;v<c;v++)f+=\\\"result += xR\\\"+d+\\\"C\\\"+v+\\\" * wR\\\"+d+\\\"C\\\"+v+\\\";\\\";this.userCode=\\\"\\\\n      const ivec2 strides = ivec2(\\\"+a+\\\", \\\"+i+\\\");\\\\n      const ivec2 pads = ivec2(\\\"+r+\\\", \\\"+o+\\\");\\\\n\\\\n      void main() {\\\\n\\\\n        ivec4 coords = getOutputCoords();\\\\n        int batch = coords.x;\\\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\\\n        int d2 = coords.w;\\\\n        int d1 = d2;\\\\n        int q = 0;\\\\n        int xRCorner = xRCCorner.x;\\\\n        int xCCorner = xRCCorner.y;\\\\n\\\\n        vec4 result = vec4(0.);\\\\n\\\\n        \\\"+f+\\\"\\\\n\\\\n        setOutput(result);\\\\n      }\\\\n    \\\"}}(),Na=function(){return function(t,e,n,r,o){this.variableNames=[\\\"Image\\\",\\\"Boxes\\\",\\\"BoxInd\\\"],this.outputShape=[];var a=t[0],i=t[1],s=t[2],u=t[3],l=e[0],c=n[0],h=n[1];this.outputShape=[l,c,h,u];var p=\\\"bilinear\\\"===r?1:0,f=[i-1+\\\".0\\\",s-1+\\\".0\\\"],d=f[0],v=f[1],m=c>1?[\\\"\\\"+(i-1)/(c-1),\\\"(y2-y1) * height_ratio\\\",\\\"y1*\\\"+d+\\\" + float(y)*(height_scale)\\\"]:[\\\"0.0\\\",\\\"0.0\\\",\\\"0.5 * (y1+y2) * \\\"+d],g=m[0],y=m[1],x=m[2],b=h>1?[\\\"\\\"+(s-1)/(h-1),\\\"(x2-x1) * width_ratio\\\",\\\"x1*\\\"+v+\\\" + float(x)*(width_scale)\\\"]:[\\\"0.0\\\",\\\"0.0\\\",\\\"0.5 * (x1+x2) * \\\"+v],w=b[0],C=b[1],E=b[2];this.userCode=\\\"\\\\n      const float height_ratio = float(\\\"+g+\\\");\\\\n      const float width_ratio = float(\\\"+w+\\\");\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int b = coords[0];\\\\n        int y = coords[1];\\\\n        int x = coords[2];\\\\n        int d = coords[3];\\\\n\\\\n        // get box vals\\\\n        float y1 = getBoxes(b,0);\\\\n        float x1 = getBoxes(b,1);\\\\n        float y2 = getBoxes(b,2);\\\\n        float x2 = getBoxes(b,3);\\\\n\\\\n        // get image in batch index\\\\n        int bInd = round(getBoxInd(b));\\\\n        if(bInd < 0 || bInd >= \\\"+a+\\\") {\\\\n          return;\\\\n        }\\\\n\\\\n        float height_scale = \\\"+y+\\\";\\\\n        float width_scale = \\\"+C+\\\";\\\\n\\\\n        float in_y = \\\"+x+\\\";\\\\n        if( in_y < 0.0 || in_y > \\\"+d+\\\" ) {\\\\n          setOutput(float(\\\"+o+\\\"));\\\\n          return;\\\\n        }\\\\n        float in_x = \\\"+E+\\\";\\\\n        if( in_x < 0.0 || in_x > \\\"+v+\\\" ) {\\\\n          setOutput(float(\\\"+o+\\\"));\\\\n          return;\\\\n        }\\\\n\\\\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\\\\n        if(\\\"+p+\\\" == 1) {\\\\n          // Compute the four integer indices.\\\\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\\\\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\\\\n\\\\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\\\\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\\\\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\\\\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\\\\n\\\\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\\\\n\\\\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\\\\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\\\\n          float newValue = top + (bottom - top) * fracCR.y;\\\\n          setOutput(newValue);\\\\n        } else {\\\\n          // Compute the coordinators of nearest neighbor point.\\\\n          ivec2 sourceNearestCR = ivec2(floor(\\\\n            sourceFracIndexCR + vec2(0.5,0.5)));\\\\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\\\\n          setOutput(newValue);\\\\n        }\\\\n      }\\\\n    \\\"}}(),Sa=function(){return function(t,e,n){this.variableNames=[\\\"x\\\"],this.outputShape=t;var r=t.length,o=t[t.length-1],a=n?\\\"<\\\":\\\">\\\";this.userCode=\\\"\\\\n      int getIndex(int i) {\\\\n        \\\"+(n?\\\"return \\\"+o+\\\" -i - 1;\\\":\\\"return i;\\\")+\\\"\\\\n      }\\\\n\\\\n      void main() {\\\\n        \\\"+jo(r)+\\\" coords = getOutputCoords();\\\\n        int end = \\\"+Aa(r,\\\"coords\\\")+\\\";\\\\n        float val = 0.0;\\\\n        for (int i = \\\"+o+\\\" - 1; i >= 0; i -= 1) {\\\\n          int idx = getIndex(i);\\\\n          if (idx \\\"+a+\\\" end) {\\\\n            continue;\\\\n          }\\\\n          if (idx == end && \\\"+e+\\\") {\\\\n            continue;\\\\n          }\\\\n          \\\"+Aa(r,\\\"coords\\\")+\\\" = idx;\\\\n          val += getX(\\\"+function(t,e){if(1===t)return\\\"\\\"+e;if(2===t)return e+\\\".x, \\\"+e+\\\".y\\\";if(3===t)return e+\\\".x, \\\"+e+\\\".y, \\\"+e+\\\".z\\\";if(4===t)return e+\\\".x, \\\"+e+\\\".y, \\\"+e+\\\".z, \\\"+e+\\\".w\\\";throw Error(\\\"Cumulative sum for rank \\\"+t+\\\" is not yet supported\\\")}(r,\\\"coords\\\")+\\\");\\\\n        }\\\\n        setOutput(val);\\\\n      }\\\\n    \\\"}}();function Aa(t,e){if(1===t)return\\\"\\\"+e;if(2===t)return e+\\\".y\\\";if(3===t)return e+\\\".z\\\";if(4===t)return e+\\\".w\\\";throw Error(\\\"Cumulative sum for rank \\\"+t+\\\" is not yet supported\\\")}var Ta=function(){return function(t,e){this.variableNames=[\\\"A\\\"];var n=Mo();this.outputShape=t,this.userCode=\\\"\\\\n      ivec3 outCoordsFromFlatIndex(int index) {\\\\n        \\\"+Bo([\\\"r\\\",\\\"c\\\",\\\"d\\\"],t)+\\\"\\\\n        return ivec3(r, c, d);\\\\n      }\\\\n\\\\n      void main() {\\\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\\\n          vec2(\\\"+e[0]+\\\", \\\"+e[1]+\\\"));\\\\n        int index = 4 * (resTexRC.x * \\\"+e[1]+\\\" + resTexRC.y);\\\\n\\\\n        vec4 result = vec4(0.);\\\\n\\\\n        for (int i=0; i<4; i++) {\\\\n          int flatIndex = index + i;\\\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\\\n          result[i] = getA(rc.x, rc.y, rc.z);\\\\n        }\\\\n\\\\n        \\\"+n.output+\\\" = result;\\\\n      }\\\\n    \\\"}}(),Da=function(){return function(t,e){this.variableNames=[\\\"A\\\"],this.usesPackedTextures=!0;var n=Mo();this.outputShape=t,this.userCode=\\\"\\\\n      ivec3 outCoordsFromFlatIndex(int index) {\\\\n        \\\"+Bo([\\\"r\\\",\\\"c\\\",\\\"d\\\"],t)+\\\"\\\\n        return ivec3(r, c, d);\\\\n      }\\\\n\\\\n      void main() {\\\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\\\n          vec2(\\\"+e[0]+\\\", \\\"+e[1]+\\\"));\\\\n        int index = 4 * (resTexRC.x * \\\"+e[1]+\\\" + resTexRC.y);\\\\n\\\\n        vec4 result = vec4(0.);\\\\n\\\\n        for (int i=0; i<4; i++) {\\\\n          int flatIndex = index + i;\\\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\\\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\\\\n        }\\\\n\\\\n        \\\"+n.output+\\\" = result;\\\\n      }\\\\n    \\\"}}(),_a=function(){function t(t,e,n){this.variableNames=[\\\"x\\\"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=\\\"\\\\n    void main() {\\\\n      ivec4 coords = getOutputCoords();\\\\n      int b = coords[0];\\\\n      int h = \\\"+this.getHeightCoordString()+\\\";\\\\n      int w = \\\"+this.getWidthCoordString()+\\\";\\\\n      int d = \\\"+this.getDepthCoordString()+\\\";\\\\n\\\\n      int in_h = h / \\\"+e+\\\";\\\\n      int offset_h = imod(h, \\\"+e+\\\");\\\\n      int in_w = w / \\\"+e+\\\";\\\\n      int offset_w = imod(w, \\\"+e+\\\");\\\\n      int offset_d = (offset_h * \\\"+e+\\\" + offset_w) *\\\\n        \\\"+this.getOutputDepthSize()+\\\";\\\\n      int in_d = d + offset_d;\\\\n\\\\n      float result = \\\"+this.getInputSamplingString()+\\\";\\\\n      setOutput(result);\\\\n    }\\\\n  \\\"}return t.prototype.getHeightCoordString=function(){return\\\"NHWC\\\"===this.dataFormat?\\\"coords[1]\\\":\\\"coords[2]\\\"},t.prototype.getWidthCoordString=function(){return\\\"NHWC\\\"===this.dataFormat?\\\"coords[2]\\\":\\\"coords[3]\\\"},t.prototype.getDepthCoordString=function(){return\\\"NHWC\\\"===this.dataFormat?\\\"coords[3]\\\":\\\"coords[1]\\\"},t.prototype.getOutputDepthSize=function(){return\\\"NHWC\\\"===this.dataFormat?this.outputShape[3]:this.outputShape[1]},t.prototype.getInputSamplingString=function(){return\\\"NHWC\\\"===this.dataFormat?\\\"getX(b, in_h, in_w, in_d)\\\":\\\"getX(b, in_d, in_h, in_w)\\\"},t}(),Oa=function(){return function(t){this.variableNames=[\\\"X\\\"],this.outputShape=[t,t],this.userCode=\\\"\\\\n      void main() {\\\\n          ivec2 coords = getOutputCoords();\\\\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\\\\n          setOutput(val);\\\\n      }\\\\n    \\\"}}(),Fa=function(){return function(t){this.variableNames=[\\\"A\\\"];var e=Mo();this.outputShape=t,this.userCode=\\\"\\\\n      \\\"+Lo+\\\"\\\\n\\\\n      void main() {\\\\n        float x = getAAtOutCoords();\\\\n        \\\"+e.output+\\\" = encode_float(x);\\\\n      }\\\\n    \\\"}}(),Ma=function(){return function(t){this.variableNames=[\\\"A\\\"],this.usesPackedTextures=!0;var e=Mo();this.outputShape=t,this.userCode=\\\"\\\\n      \\\"+Lo+\\\"\\\\n\\\\n      void main() {\\\\n        ivec3 coords = getOutputCoords();\\\\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\\\\n        \\\"+e.output+\\\" = encode_float(x);\\\\n      }\\\\n    \\\"}}(),Ba=function(){return function(t,e,n){void 0===n&&(n=!1),this.variableNames=[\\\"A\\\"];var r=Mo(),o=e[0],a=e[1];this.outputShape=t;var i=\\\"result\\\";n&&(i=\\\"floor(result * 255. + 0.5)\\\"),this.userCode=\\\"\\\\n      \\\"+Po(t)+\\\"\\\\n\\\\n      void main() {\\\\n        ivec3 coords = getOutputCoords();\\\\n\\\\n        int flatIndex = getFlatIndex(coords);\\\\n        int offset = imod(flatIndex, 4);\\\\n\\\\n        flatIndex = idiv(flatIndex, 4, 1.);\\\\n        \\\\n        int r = flatIndex / \\\"+a+\\\";\\\\n        int c = imod(flatIndex, \\\"+a+\\\");\\\\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(\\\"+a+\\\".0, \\\"+o+\\\".0);\\\\n        vec4 values = \\\"+r.texture2D+\\\"(A, uv);\\\\n\\\\n        float result;\\\\n\\\\n        if(offset == 0) {\\\\n          result = values[0];\\\\n        } else if(offset == 1) {\\\\n          result = values[1];\\\\n        } else if(offset == 2) {\\\\n          result = values[2];\\\\n        } else {\\\\n          result = values[3];\\\\n        }\\\\n\\\\n        \\\"+r.output+\\\" = vec4(\\\"+i+\\\", 0., 0., 0.);\\\\n      }\\\\n    \\\"}}(),Pa=function(){return function(t,e,n){void 0===n&&(n=!1),this.variableNames=[\\\"A\\\"];var r=Mo(),o=e[0],a=e[1];this.outputShape=t;var i=\\\"\\\",s=\\\"result\\\";n&&(s=\\\"floor(result * 255. + 0.5)\\\");for(var u=0;u<=1;u++)for(var l=0;l<=1;l++){var c=2*u+l;i+=\\\"\\\\n          localCoords = coords;\\\\n          if(localCoords[2] + \\\"+l+\\\" < \\\"+t[2]+\\\") {\\\\n            localCoords[2] += \\\"+l+\\\";\\\\n            if(localCoords[1] + \\\"+u+\\\" < \\\"+t[1]+\\\") {\\\\n              localCoords[1] += \\\"+u+\\\";\\\\n\\\\n              flatIndex = getFlatIndex(localCoords);\\\\n              offset = imod(flatIndex, 4);\\\\n    \\\\n              flatIndex = idiv(flatIndex, 4, 1.);\\\\n\\\\n              r = flatIndex / \\\"+a+\\\";\\\\n              c = imod(flatIndex, \\\"+a+\\\");\\\\n              uv = (vec2(c, r) + halfCR) / vec2(\\\"+a+\\\".0, \\\"+o+\\\".0);\\\\n              values = \\\"+r.texture2D+\\\"(A, uv);\\\\n\\\\n              if(offset == 0) {\\\\n                result[\\\"+c+\\\"] = values[0];\\\\n              } else if(offset == 1) {\\\\n                result[\\\"+c+\\\"] = values[1];\\\\n              } else if(offset == 2) {\\\\n                result[\\\"+c+\\\"] = values[2];\\\\n              } else {\\\\n                result[\\\"+c+\\\"] = values[3];\\\\n              }\\\\n            }\\\\n          }\\\\n        \\\"}this.userCode=\\\"\\\\n      \\\"+Po(t)+\\\"\\\\n\\\\n      void main() {\\\\n        ivec3 coords = getOutputCoords();\\\\n\\\\n        vec4 result = vec4(0.);\\\\n        int flatIndex, r, c, offset;\\\\n        ivec3 localCoords;\\\\n        vec2 uv;\\\\n        vec4 values;\\\\n        \\\\n        \\\"+i+\\\"\\\\n\\\\n        \\\"+r.output+\\\" = \\\"+s+\\\";\\\\n      }\\\\n    \\\"}}(),La=\\\"return real * expR - imag * expI;\\\",Wa=\\\"return real * expI + imag * expR;\\\",Ua=function(){return function(t,e,n){this.variableNames=[\\\"real\\\",\\\"imag\\\"];var r=e[1];this.outputShape=e;var o=n?\\\"2.0 * \\\"+Math.PI:\\\"-2.0 * \\\"+Math.PI,a=n?r+\\\".0\\\":\\\"1.0\\\";this.userCode=\\\"\\\\n      const float exponentMultiplier = \\\"+o+\\\";\\\\n\\\\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\\\\n        \\\"+t+\\\"\\\\n      }\\\\n\\\\n      float mulMatDFT(int batch, int index) {\\\\n        float indexRatio = float(index) / float(\\\"+r+\\\");\\\\n        float exponentMultiplierTimesIndexRatio =\\\\n            exponentMultiplier * indexRatio;\\\\n\\\\n        float result = 0.0;\\\\n\\\\n        for (int i = 0; i < \\\"+r+\\\"; i++) {\\\\n          // x = (-2|2 * PI / N) * index * i;\\\\n          float x = exponentMultiplierTimesIndexRatio * float(i);\\\\n          float expR = cos(x);\\\\n          float expI = sin(x);\\\\n          float real = getReal(batch, i);\\\\n          float imag = getImag(batch, i);\\\\n\\\\n          result +=\\\\n              unaryOpComplex(real, expR, imag, expI) / \\\"+a+\\\";\\\\n        }\\\\n\\\\n        return result;\\\\n      }\\\\n\\\\n      void main() {\\\\n        ivec2 coords = getOutputCoords();\\\\n        setOutput(mulMatDFT(coords[0], coords[1]));\\\\n      }\\\\n    \\\"}}(),Va=function(){function t(t,e){this.outputShape=[],this.variableNames=[\\\"x\\\"],this.outputShape=t,this.userCode=\\\"\\\\n      uniform float value;\\\\n      void main() {\\\\n        // Input can be obtained from uniform value.\\\\n        setOutput(value);\\\\n      }\\\\n    \\\"}return t.prototype.getCustomSetupFunc=function(t){var e=this;return function(n,r){null==e.valueLoc&&(e.valueLoc=n.getUniformLocationNoThrow(r,\\\"value\\\")),n.gl.uniform1f(e.valueLoc,t)}},t}(),za=function(){return function(t){this.variableNames=[\\\"A\\\"];var e=Mo(),n=t[0],r=t[1];this.outputShape=t,this.userCode=\\\"\\\\n      void main() {\\\\n        ivec3 coords = getOutputCoords();\\\\n        int texR = coords[0];\\\\n        int texC = coords[1];\\\\n        int depth = coords[2];\\\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\\\"+r+\\\".0, \\\"+n+\\\".0);\\\\n\\\\n        vec4 values = \\\"+e.texture2D+\\\"(A, uv);\\\\n        float value;\\\\n        if (depth == 0) {\\\\n          value = values.r;\\\\n        } else if (depth == 1) {\\\\n          value = values.g;\\\\n        } else if (depth == 2) {\\\\n          value = values.b;\\\\n        } else if (depth == 3) {\\\\n          value = values.a;\\\\n        }\\\\n\\\\n        setOutput(floor(value * 255.0 + 0.5));\\\\n      }\\\\n    \\\"}}(),Ga=function(){return function(t){this.variableNames=[\\\"A\\\"];var e=Mo(),n=t[0],r=t[1];this.outputShape=t,this.userCode=\\\"\\\\n      void main() {\\\\n        ivec3 coords = getOutputCoords();\\\\n        int texR = coords[0];\\\\n        int texC = coords[1];\\\\n        int depth = coords[2];\\\\n\\\\n        vec4 result = vec4(0.);\\\\n\\\\n        for(int row=0; row<=1; row++) {\\\\n          for(int col=0; col<=1; col++) {\\\\n            texC = coords[1] + row;\\\\n            depth = coords[2] + col;\\\\n\\\\n            vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\\\"+r+\\\".0, \\\"+n+\\\".0);\\\\n            vec4 values = \\\"+e.texture2D+\\\"(A, uv);\\\\n            float value;\\\\n            if (depth == 0) {\\\\n              value = values.r;\\\\n            } else if (depth == 1) {\\\\n              value = values.g;\\\\n            } else if (depth == 2) {\\\\n              value = values.b;\\\\n            } else if (depth == 3) {\\\\n              value = values.a;\\\\n            }\\\\n\\\\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\\\\n          }\\\\n        }\\\\n\\\\n        \\\"+e.output+\\\" = result;\\\\n      }\\\\n    \\\"}}(),Ha=function(){return function(t,e,n){this.variableNames=[\\\"A\\\",\\\"indices\\\"];var r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;var o=jo(this.rank),a=function(t,e){var n=t.length;if(n>4)throw Error(\\\"Gather for rank \\\"+n+\\\" is not yet supported\\\");if(1===n)return\\\"int(getIndices(resRC))\\\";for(var r=[\\\"resRC.x\\\",\\\"resRC.y\\\",\\\"resRC.z\\\",\\\"resRC.w\\\"],o=[],a=0;a<t.length;a++)a===e?o.push(\\\"int(getIndices(\\\"+r[a]+\\\"))\\\"):o.push(\\\"\\\"+r[a]);return o.join()}(t,n);this.userCode=\\\"\\\\n      void main() {\\\\n        \\\"+o+\\\" resRC = getOutputCoords();\\\\n        setOutput(getA(\\\"+a+\\\"));\\\\n      }\\\\n    \\\"}}();var qa=function(){return function(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=[\\\"x\\\",\\\"indices\\\"],this.outputShape=n;var r=jo(e.length),o=jo(n.length),a=this.sliceDim>1?\\\"strides[j]\\\":\\\"strides\\\";this.userCode=\\\"\\\\n        \\\"+r+\\\" strides = \\\"+r+\\\"(\\\"+this.strides+\\\");\\\\n         void main() {\\\\n          \\\"+o+\\\" coords = getOutputCoords();\\\\n          int flattenIndex = 0;\\\\n          for (int j = 0; j < \\\"+this.sliceDim+\\\"; j++) {\\\\n            int index = round(getIndices(coords[0], j));\\\\n            flattenIndex += index * \\\"+a+\\\";\\\\n          }\\\\n          setOutput(getX(flattenIndex, coords[1]));\\\\n        }\\\\n      \\\"}}();function $a(t,e){var n=Mo();return Kt(t,e,n.version+\\\"\\\\n    precision highp float;\\\\n    \\\"+n.attribute+\\\" vec3 clipSpacePos;\\\\n    \\\"+n.attribute+\\\" vec2 uv;\\\\n    \\\"+n.varyingVs+\\\" vec2 resultUV;\\\\n\\\\n    void main() {\\\\n      gl_Position = vec4(clipSpacePos, 1);\\\\n      resultUV = uv;\\\\n    }\\\")}function Ka(t,e){return ee(t,e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function ja(t,e){return ne(t,e,new Uint16Array([0,1,2,2,1,3]))}function Xa(t,e,n,r,o,a,i){oe(n,r);var s=re(t,e),u=t.TEXTURE_2D;return Vt(t,e,function(){return t.bindTexture(u,s)}),Vt(t,e,function(){return t.texParameteri(u,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)}),Vt(t,e,function(){return t.texParameteri(u,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)}),Vt(t,e,function(){return t.texParameteri(u,t.TEXTURE_MIN_FILTER,t.NEAREST)}),Vt(t,e,function(){return t.texParameteri(u,t.TEXTURE_MAG_FILTER,t.NEAREST)}),Vt(t,e,function(){return t.texImage2D(u,0,o,n,r,0,a,i,null)}),Vt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,null)}),s}function Ya(t,e,n,r,o){var a=Pt(n,r);return Xa(t,e,a[0],a[1],o.internalFormatFloat,o.textureFormatFloat,t.FLOAT)}function Qa(t,e,n,r,o){var a=Pt(n,r);return Xa(t,e,a[0],a[1],o.internalFormatHalfFloat,o.textureFormatFloat,o.textureTypeHalfFloat)}function Ja(t,e,n,r,o){var a=Pt(n,r);return Xa(t,e,a[0],a[1],t.RGBA,t.RGBA,t.UNSIGNED_BYTE)}function Za(t,e,n,r,o){var a=Wt(n,r);return Xa(t,e,a[0],a[1],o.internalFormatPackedFloat,t.RGBA,t.FLOAT)}function ti(t,e,n,r,o){var a=Wt(n,r);return Xa(t,e,a[0],a[1],o.internalFormatPackedHalfFloat,t.RGBA,o.textureTypeHalfFloat)}function ei(t,e,n,r){return Vt(t,e,function(){return t.bindBuffer(t.ARRAY_BUFFER,r)}),ie(t,e,n,\\\"clipSpacePos\\\",r,3,20,0)&&ie(t,e,n,\\\"uv\\\",r,2,20,12)}function ni(t,e,n,r,o,a,i){var s,u,l;Vt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,n)}),a instanceof Uint8Array?(s=new Uint8Array(r*o*4),u=t.UNSIGNED_BYTE,l=t.RGBA):(s=new Float32Array(r*o*4),u=t.FLOAT,l=i.internalFormatPackedFloat),s.set(a),Vt(t,e,function(){return t.texImage2D(t.TEXTURE_2D,0,l,r,o,0,t.RGBA,u,s)}),Vt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,null)})}function ri(t,e,n,r){Vt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,n)}),r.data instanceof Uint8Array?Vt(t,e,function(){return t.texImage2D(t.TEXTURE_2D,0,t.RGBA,r.width,r.height,0,t.RGBA,t.UNSIGNED_BYTE,r.data)}):Vt(t,e,function(){return t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r)}),Vt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,null)})}function oi(t,e,n,r,o){var a=t.createBuffer();Vt(t,e,function(){return t.bindBuffer(t.PIXEL_PACK_BUFFER,a)});var i=16*n*r;return Vt(t,e,function(){return t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ)}),Vt(t,e,function(){return t.readPixels(0,0,r,n,t.RGBA,t.FLOAT,0)}),Vt(t,e,function(){return t.bindBuffer(t.PIXEL_PACK_BUFFER,null)}),a}function ai(t,e,n){var r=t,o=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,o),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),o}function ii(t,e,n,r,o){var a=Pt(n,r),i=a[0],s=a[1],u=new Uint8Array(n*r*4);return Vt(t,e,function(){return t.readPixels(0,0,i,s,o.downloadTextureFormat,t.UNSIGNED_BYTE,u)}),new Float32Array(u.buffer)}function si(t,e,n,r,o,a,i,s){var u=t,l=new Float32Array(function(t,e){var n=Wt(t,e);return n[0]*n[1]*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}function ui(t,e,n,r){var o=new Float32Array(n*r*4);return Vt(t,e,function(){return t.readPixels(0,0,r,n,t.RGBA,t.FLOAT,o)}),o}var li=Object.freeze({createVertexShader:$a,createVertexBuffer:Ka,createIndexBuffer:ja,createFloat32MatrixTexture:Ya,createFloat16MatrixTexture:Qa,createUnsignedBytesMatrixTexture:Ja,createPackedMatrixTexture:Za,createFloat16PackedMatrixTexture:ti,bindVertexProgramAttributeStreams:ei,uploadDenseMatrixToTexture:ni,uploadPixelDataToTexture:ri,createBufferFromOutputTexture:oi,downloadFloat32MatrixFromBuffer:ai,downloadByteEncodedFloatMatrixFromOutputTexture:ii,downloadPackedMatrixFromBuffer:si,downloadMatrixFromPackedOutputTexture:ui}),ci=function(){function t(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var e=i.getNumber(\\\"WEBGL_VERSION\\\");if(null!=t?(this.gl=t,Ft(e,t)):this.gl=Mt(e),1===i.getNumber(\\\"WEBGL_VERSION\\\"))this.textureFloatExtension=$t(this.gl,this.debug,\\\"OES_texture_float\\\"),this.colorBufferFloatExtension=this.gl.getExtension(\\\"WEBGL_color_buffer_float\\\"),this.textureHalfFloatExtension=$t(this.gl,this.debug,\\\"OES_texture_half_float\\\"),this.colorBufferHalfFloatExtension=this.gl.getExtension(\\\"EXT_color_buffer_half_float\\\");else{if(ke(this.gl,\\\"EXT_color_buffer_float\\\"))this.colorBufferFloatExtension=this.gl.getExtension(\\\"EXT_color_buffer_float\\\");else{if(!ke(this.gl,\\\"EXT_color_buffer_half_float\\\"))throw new Error(\\\"GL context does not support color renderable floats\\\");this.colorBufferHalfFloatExtension=this.gl.getExtension(\\\"EXT_color_buffer_half_float\\\")}}this.vertexBuffer=Ka(this.gl,this.debug),this.indexBuffer=ja(this.gl,this.debug),this.framebuffer=ae(this.gl,this.debug),this.textureConfig=Ut(this.gl,this.textureHalfFloatExtension)}return Object.defineProperty(t.prototype,\\\"debug\\\",{get:function(){return i.getBool(\\\"DEBUG\\\")},enumerable:!0,configurable:!0}),t.prototype.dispose=function(){var t=this;if(!this.disposed){null!=this.program&&console.warn(\\\"Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing.\\\"),null!=this.outputTexture&&console.warn(\\\"Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.\\\");var e=this.gl;Vt(e,this.debug,function(){return e.finish()}),Vt(e,this.debug,function(){return e.bindFramebuffer(e.FRAMEBUFFER,null)}),Vt(e,this.debug,function(){return e.deleteFramebuffer(t.framebuffer)}),Vt(e,this.debug,function(){return e.bindBuffer(e.ARRAY_BUFFER,null)}),Vt(e,this.debug,function(){return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)}),Vt(e,this.debug,function(){return e.deleteBuffer(t.indexBuffer)}),this.disposed=!0}},t.prototype.createFloat32MatrixTexture=function(t,e){return this.throwIfDisposed(),Ya(this.gl,this.debug,t,e,this.textureConfig)},t.prototype.createFloat16MatrixTexture=function(t,e){return this.throwIfDisposed(),Qa(this.gl,this.debug,t,e,this.textureConfig)},t.prototype.createUnsignedBytesMatrixTexture=function(t,e){return this.throwIfDisposed(),Ja(this.gl,this.debug,t,e,this.textureConfig)},t.prototype.uploadPixelDataToTexture=function(t,e){this.throwIfDisposed(),ri(this.gl,this.debug,t,e)},t.prototype.uploadDenseMatrixToTexture=function(t,e,n,r){this.throwIfDisposed(),ni(this.gl,this.debug,t,e,n,r,this.textureConfig)},t.prototype.createFloat16PackedMatrixTexture=function(t,e){return this.throwIfDisposed(),ti(this.gl,this.debug,t,e,this.textureConfig)},t.prototype.createPackedMatrixTexture=function(t,e){return this.throwIfDisposed(),Za(this.gl,this.debug,t,e,this.textureConfig)},t.prototype.deleteMatrixTexture=function(t){var e=this;this.throwIfDisposed(),this.outputTexture===t&&(pe(this.gl,this.debug,this.framebuffer),this.outputTexture=null),Vt(this.gl,this.debug,function(){return e.gl.deleteTexture(t)})},t.prototype.downloadByteEncodedFloatMatrixFromOutputTexture=function(t,e,n){var r=this;return this.downloadMatrixDriver(t,function(){return ii(r.gl,r.debug,e,n,r.textureConfig)})},t.prototype.downloadPackedMatrixFromBuffer=function(t,e,n,r,o,a){return si(this.gl,t,0,0,0,o,a,this.textureConfig)},t.prototype.downloadFloat32MatrixFromBuffer=function(t,e){return ai(this.gl,t,e)},t.prototype.createBufferFromTexture=function(t,e,n){this.bindTextureToFrameBuffer(t);var r=oi(this.gl,this.debug,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r},t.prototype.createAndWaitForFence=function(){var t=this.createFence(this.gl);return this.pollFence(t)},t.prototype.createFence=function(t){var e,n,r=this;if(i.getBool(\\\"WEBGL_FENCE_API_ENABLED\\\")){var o=t,a=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=function(){var t=o.clientWaitSync(a,0,0);return t===o.ALREADY_SIGNALED||t===o.CONDITION_SATISFIED},e=a}else i.getNumber(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\\\")>0?(e=this.beginQuery(),this.endQuery(),n=function(){return r.isQueryAvailable(e,i.getNumber(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\\\"))}):n=function(){return!0};return{query:e,isFencePassed:n}},t.prototype.downloadMatrixFromPackedTexture=function(t,e,n){var r=this;return this.downloadMatrixDriver(t,function(){return ui(r.gl,r.debug,e,n)})},t.prototype.createProgram=function(t){this.throwIfDisposed();var e=this.gl,n=jt(e,this.debug,t),r=$a(e,this.debug),o=Jt(e,this.debug);return Vt(e,this.debug,function(){return e.attachShader(o,r)}),Vt(e,this.debug,function(){return e.attachShader(o,n)}),Zt(e,this.debug,o),this.debug&&te(e,this.debug,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=ei(e,this.debug,this.program,this.vertexBuffer)),o},t.prototype.deleteProgram=function(t){var e=this;this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&Vt(this.gl,this.debug,function(){return e.gl.deleteProgram(t)})},t.prototype.setProgram=function(t){var e=this;this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&te(this.gl,this.debug,this.program),Vt(this.gl,this.debug,function(){return e.gl.useProgram(t)})},t.prototype.getUniformLocation=function(t,e,n){return void 0===n&&(n=!0),this.throwIfDisposed(),n?ue(this.gl,this.debug,t,e):le(this.gl,t,e)},t.prototype.getAttributeLocation=function(t,e){var n=this;return this.throwIfDisposed(),Vt(this.gl,this.debug,function(){return n.gl.getAttribLocation(t,e)})},t.prototype.getUniformLocationNoThrow=function(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)},t.prototype.setInputMatrixTexture=function(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),ce(this.gl,this.debug,this.program,t,e,n)},t.prototype.setOutputMatrixTexture=function(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)},t.prototype.setOutputPackedMatrixTexture=function(t,e,n){this.throwIfDisposed();var r=Wt(e,n),o=r[0],a=r[1];this.setOutputMatrixTextureDriver(t,o,a)},t.prototype.setOutputMatrixWriteRegion=function(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)},t.prototype.setOutputPackedMatrixWriteRegion=function(t,e,n,r){throw new Error(\\\"setOutputPackedMatrixWriteRegion not implemented.\\\")},t.prototype.debugValidate=function(){null!=this.program&&te(this.gl,this.debug,this.program),fe(this.gl)},t.prototype.executeProgram=function(){this.throwIfDisposed(),this.throwIfNoProgram();var t=this.gl;this.debug&&this.debugValidate(),Vt(t,this.debug,function(){return t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)})},t.prototype.blockUntilAllProgramsCompleted=function(){var t=this;this.throwIfDisposed(),Vt(this.gl,this.debug,function(){return t.gl.finish()})},t.prototype.getQueryTimerExtension=function(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=$t(this.gl,this.debug,2===i.getNumber(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\\\")?\\\"EXT_disjoint_timer_query_webgl2\\\":\\\"EXT_disjoint_timer_query\\\")),this.disjointQueryTimerExtension},t.prototype.getQueryTimerExtensionWebGL2=function(){return this.getQueryTimerExtension()},t.prototype.getQueryTimerExtensionWebGL1=function(){return this.getQueryTimerExtension()},t.prototype.beginQuery=function(){if(2===i.getNumber(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\\\")){var t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}var r=this.getQueryTimerExtensionWebGL1(),o=r.createQueryEXT();return r.beginQueryEXT(r.TIME_ELAPSED_EXT,o),o},t.prototype.endQuery=function(){if(2!==i.getNumber(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\\\")){var t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}else{var e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT)}},t.prototype.waitForQueryAndGetTime=function(t){return n(this,void 0,void 0,function(){var e=this;return r(this,function(n){switch(n.label){case 0:return[4,E(function(){return e.disposed||e.isQueryAvailable(t,i.getNumber(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\\\"))})];case 1:return n.sent(),[2,this.getQueryTime(t,i.getNumber(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\\\"))]}})})},t.prototype.getQueryTime=function(t,e){if(0===e)return null;if(2===e){var n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}var r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(t,r.QUERY_RESULT_EXT)/1e6},t.prototype.isQueryAvailable=function(t,e){if(0===e)return!0;if(2===e){var n=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}o=(r=this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(t,r.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint},t.prototype.pollFence=function(t){var e=this;return new Promise(function(n){e.addItemToPoll(function(){return t.isFencePassed()},function(){return n()})})},t.prototype.pollItems=function(){for(var t=function(t){for(var e=0;e<t.length;++e){var n=t[e]();if(!n)break}return e-1}(this.itemsToPoll.map(function(t){return t.isDoneFn})),e=0;e<=t;++e){(0,this.itemsToPoll[e].resolveFn)()}this.itemsToPoll=this.itemsToPoll.slice(t+1)},t.prototype.addItemToPoll=function(t,e){var n=this;this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||E(function(){return n.pollItems(),0===n.itemsToPoll.length})},t.prototype.bindTextureToFrameBuffer=function(t){this.throwIfDisposed(),he(this.gl,this.debug,t,this.framebuffer),this.debug&&fe(this.gl)},t.prototype.unbindTextureToFrameBuffer=function(){null!=this.outputTexture?(he(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&&fe(this.gl)):pe(this.gl,this.debug,this.framebuffer)},t.prototype.downloadMatrixDriver=function(t,e){this.bindTextureToFrameBuffer(t);var n=e();return this.unbindTextureToFrameBuffer(),n},t.prototype.setOutputMatrixTextureDriver=function(t,e,n){this.throwIfDisposed();var r=this.gl;he(r,this.debug,t,this.framebuffer),this.debug&&fe(r),this.outputTexture=t,Vt(r,this.debug,function(){return r.viewport(0,0,e,n)}),Vt(r,this.debug,function(){return r.scissor(0,0,e,n)})},t.prototype.setOutputMatrixWriteRegionDriver=function(t,e,n,r){var o=this;this.throwIfDisposed(),Vt(this.gl,this.debug,function(){return o.gl.scissor(t,e,n,r)})},t.prototype.throwIfDisposed=function(){if(this.disposed)throw new Error(\\\"Attempted to use disposed GPGPUContext.\\\")},t.prototype.throwIfNoProgram=function(){if(null==this.program)throw new Error(\\\"No GPU program is currently set.\\\")},t}();function hi(t,e){if(t.length!==e.length)throw Error(\\\"Binary was compiled with \\\"+t.length+\\\" inputs, but was executed with \\\"+e.length+\\\" inputs\\\");t.forEach(function(t,n){var r=t.logicalShape,o=e[n],a=o.shape;if(!y(r,a))throw Error(\\\"Binary was compiled with different shapes than the current args. Shapes \\\"+r+\\\" and \\\"+a+\\\" must match\\\");if(!t.isUniform||!o.isUniform){var i=t.texShape,s=o.isUniform?null:o.texData.texShape;if(!y(i,s))throw Error(\\\"Binary was compiled with different texture shapes than the current args. Shape \\\"+i+\\\" and \\\"+s+\\\" must match\\\")}})}var pi=function(){return function(t,e,n){this.variableNames=[\\\"A\\\"],this.usesPackedTextures=!0,this.outputShape=t;for(var r=n.filterWidth,o=n.inChannels,a=n.strideWidth,i=n.strideHeight,s=n.padInfo,u=n.outWidth,l=n.dilationWidth,c=n.dilationHeight,h=n.dataFormat,p=s.left,f=s.top,d=o*r,v=Mo(),m=\\\"channelsLast\\\"===h,g=m?0:1,y=m?1:2,x=\\\"\\\",b=0;b<=1;b++)for(var w=0;w<=1;w++)x+=\\\"\\\\n          blockIndex = rc.y + \\\"+w+\\\";\\\\n          pos = rc.x + \\\"+b+\\\";\\\\n\\\\n          if(blockIndex < \\\"+t[1]+\\\" && pos < \\\"+t[0]+\\\") {\\\\n            offsetY = int(blockIndex / (\\\"+u+\\\")) * \\\"+i+\\\" - \\\"+f+\\\";\\\\n            d0 = offsetY + \\\"+c+\\\" * (pos / \\\"+d+\\\");\\\\n\\\\n            if(d0 < \\\"+e[g]+\\\" && d0 >= 0) {\\\\n\\\\n              offsetX = int(mod(float(blockIndex), \\\"+u+\\\".) * \\\"+a+\\\". - \\\"+p+\\\".);\\\\n              d1 = offsetX + \\\"+l+\\\" * (int(mod(float(pos), \\\"+d+\\\".) / \\\"+o+\\\".));\\\\n\\\\n              if(d1 < \\\"+e[y]+\\\" && d1 >= 0) {\\\\n\\\\n                ch = int(mod(float(pos), \\\"+o+\\\".));\\\\n\\\\n                if (\\\"+m+\\\") {\\\\n                  innerDims = vec2(d1, ch);\\\\n                  result[\\\"+(2*b+w)+\\\"] = getChannel(\\\\n                    getA(d0, int(innerDims.x),\\\\n                    int(innerDims.y)), innerDims);\\\\n                } else {\\\\n                  innerDims = vec2(d0, d1);\\\\n                  result[\\\"+(2*b+w)+\\\"] = getChannel(\\\\n                    getA(ch, int(innerDims.x),\\\\n                    int(innerDims.y)), innerDims);\\\\n                }\\\\n              }\\\\n            }\\\\n          }\\\\n        \\\";this.userCode=\\\"\\\\n      void main() {\\\\n        ivec2 rc = getOutputCoords();\\\\n\\\\n        vec4 result = vec4(0);\\\\n\\\\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\\\\n        vec2 innerDims;\\\\n\\\\n        \\\"+x+\\\"\\\\n\\\\n        \\\"+v.output+\\\" = result;\\\\n      }\\\\n    \\\"}}(),fi=function(){return function(t,e,n,r,o){this.variableNames=[\\\"x\\\"],this.outputShape=[];var a,i=e,s=t[3]-1;this.outputShape=t;var u=\\\"float(\\\"+n+\\\") + float(\\\"+r+\\\") * sum\\\";a=.5===o?\\\"inversesqrt(\\\"+u+\\\")\\\":1===o?\\\"1.0/(\\\"+u+\\\")\\\":\\\"exp(log(\\\"+u+\\\") * float(-\\\"+o+\\\"));\\\",this.userCode=\\\"\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int b = coords[0];\\\\n        int r = coords[1];\\\\n        int c = coords[2];\\\\n        int d = coords[3];\\\\n        float x = getX(b, r, c, d);\\\\n        float sum = 0.0;\\\\n        for (int j = -\\\"+i+\\\"; j <= \\\"+i+\\\"; j++) {\\\\n          int idx = d + j;\\\\n          if (idx >= 0 && idx <=  \\\"+s+\\\") {\\\\n            float z = getX(b, r, c, idx);\\\\n            sum += z * z;\\\\n          }\\\\n        }\\\\n        float val = x * \\\"+a+\\\";\\\\n        setOutput(val);\\\\n      }\\\\n    \\\"}}(),di=function(){return function(t,e,n,r,o){this.variableNames=[\\\"inputImage\\\",\\\"outputImage\\\",\\\"dy\\\"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=o,this.userCode=\\\"\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int b = coords[0];\\\\n        int r = coords[1];\\\\n        int c = coords[2];\\\\n\\\\n        float result = 0.0;\\\\n        for (int d = 0; d < \\\"+this.depth+\\\"; ++d) {\\\\n          int depthBegin = int(max(0.0, float(d - \\\"+e+\\\")));\\\\n          int depthEnd = int(min(float(\\\"+this.depth+\\\"),\\\\n              float(d + \\\"+e+\\\" + 1)));\\\\n\\\\n          const int MIN_DEPTH_BEGIN = 0;\\\\n          const int MAX_DEPTH_END = \\\"+this.depth+\\\";\\\\n\\\\n          float norm = 0.0;\\\\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\\\\n            if (k < depthBegin){\\\\n              continue;\\\\n            }\\\\n            else if (k >= depthBegin && k < depthEnd) {\\\\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\\\\n            }\\\\n            else {\\\\n              break;\\\\n            }\\\\n          }\\\\n\\\\n          norm = float(\\\"+r+\\\") * norm + float(\\\"+n+\\\");\\\\n\\\\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\\\\n            if (k < depthBegin){\\\\n              continue;\\\\n            }\\\\n            else if (k >= depthBegin && k < depthEnd){\\\\n              float dyi = -2.0 * float(\\\"+r+\\\")\\\\n                * float(\\\"+o+\\\")\\\\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\\\\n                / norm;\\\\n              if (k == d) {\\\\n                dyi += pow(norm, -1.0 * \\\"+o+\\\");\\\\n              }\\\\n              if (k == coords[3]) {\\\\n                dyi *= getDy(b, r, c, d);\\\\n                result += dyi;\\\\n              }\\\\n            }\\\\n            else {\\\\n              break;\\\\n            }\\\\n          }\\\\n      }\\\\n      setOutput(result);\\\\n      }\\\\n    \\\"}}(),vi=function(){return function(t,e,n,r,o){this.variableNames=[\\\"x\\\"],this.outputShape=[],this.usesPackedTextures=!0;var a,i=e,s=t[3]-1;this.outputShape=t;var u=\\\"float(\\\"+n+\\\") + float(\\\"+r+\\\") * sum\\\";a=.5===o?\\\"inversesqrt(\\\"+u+\\\")\\\":1===o?\\\"1.0/(\\\"+u+\\\")\\\":\\\"exp(log(\\\"+u+\\\") * float(-\\\"+o+\\\"));\\\",this.userCode=\\\"\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int b = coords.x;\\\\n        int r = coords.y;\\\\n        int c = coords.z;\\\\n        int d = coords.w;\\\\n\\\\n        bool hasNextCol = d < \\\"+this.outputShape[3]+\\\";\\\\n        bool hasNextRow = c < \\\"+this.outputShape[2]+\\\";\\\\n\\\\n        vec4 sum = vec4(0.);\\\\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\\\\n\\\\n        vec4 xAtOutputCoords = vec4(\\\\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\\\\n          hasNextCol ?\\\\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\\\\n          hasNextRow ?\\\\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\\\\n          (hasNextRow && hasNextCol) ?\\\\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\\\\n        );\\\\n\\\\n        int firstChannel = d - \\\"+i+\\\";\\\\n        vec2 cache = vec2(0.);\\\\n        if(firstChannel >= 0){\\\\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\\\\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\\\\n            if(hasNextRow){\\\\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\\\\n            }\\\\n        }\\\\n\\\\n        ivec2 depth = ivec2(d, d + 1);\\\\n        for (int j = - \\\"+i+\\\"; j <= \\\"+i+\\\"; j++) {\\\\n          ivec2 idx = depth + j;\\\\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\\\\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(\\\"+s+\\\"));\\\\n\\\\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\\\\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\\\\n\\\\n          if(depthInRange || depthPlusOneInRange){\\\\n            vec4 z = vec4(0.);\\\\n            vec4 xFragAtCurrentDepth;\\\\n            z.xz = cache.xy;\\\\n            if(depthPlusOneInRange && hasNextCol){\\\\n              xFragAtCurrentDepth = idx.y != d ?\\\\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\\\\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\\\\n              if(hasNextRow){\\\\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\\\\n              }\\\\n            }\\\\n            cache.xy = z.yw;\\\\n            sum += z * z;\\\\n          }\\\\n        }\\\\n        vec4 result = xAtOutputCoords * \\\"+a+\\\";\\\\n        setOutput(result);\\\\n      }\\\\n    \\\"}}(),mi=function(){return function(t){this.variableNames=[\\\"dy\\\",\\\"maxPos\\\"],this.outputShape=t.inShape;var e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,o=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=o-1-t.padInfo.top,s=a-1-t.padInfo.left,u=o*a-1;this.userCode=\\\"\\\\n      const ivec2 pads = ivec2(\\\"+i+\\\", \\\"+s+\\\");\\\\n\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int b = coords[0];\\\\n        int d = coords[3];\\\\n\\\\n        ivec2 dyRCCorner = coords.yz - pads;\\\\n        int dyRCorner = dyRCCorner.x;\\\\n        int dyCCorner = dyRCCorner.y;\\\\n\\\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\\\n        // ? = to be determined. : = across all values in that axis.\\\\n        float dotProd = 0.0;\\\\n        for (int wR = 0; wR < \\\"+o+\\\";\\\\n          wR += \\\"+r+\\\") {\\\\n          float dyR = float(dyRCorner + wR) / \\\"+e+\\\".0;\\\\n\\\\n          if (dyR < 0.0 || dyR >= \\\"+t.outHeight+\\\".0 || fract(dyR) > 0.0) {\\\\n            continue;\\\\n          }\\\\n          int idyR = int(dyR);\\\\n\\\\n          for (int wC = 0; wC < \\\"+a+\\\"; wC++) {\\\\n            float dyC = float(dyCCorner + wC) / \\\"+n+\\\".0;\\\\n\\\\n            if (dyC < 0.0 || dyC >= \\\"+t.outWidth+\\\".0 ||\\\\n                fract(dyC) > 0.0) {\\\\n              continue;\\\\n            }\\\\n            int idyC = int(dyC);\\\\n\\\\n            float dyValue = getDy(b, idyR, idyC, d);\\\\n            int maxPosValue = \\\"+u+\\\" - int(getMaxPos(b, idyR, idyC, d));\\\\n\\\\n            // Get the current value, check it against the value from the\\\\n            // position matrix.\\\\n            int curPosValue = wR * \\\"+a+\\\" + wC;\\\\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\\\n\\\\n            dotProd += dyValue * mask;\\\\n          }\\\\n        }\\\\n        setOutput(dotProd);\\\\n      }\\\\n    \\\"}}(),gi=function(){return function(t){this.variableNames=[\\\"dy\\\",\\\"maxPos\\\"],this.outputShape=t.inShape;var e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,s=t.effectiveFilterDepth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=s-1-t.padInfo.front,h=u-1-t.padInfo.top,p=l-1-t.padInfo.left,f=s*u*l-1;this.userCode=\\\"\\\\n      const ivec3 pads = ivec3(\\\"+c+\\\", \\\"+h+\\\", \\\"+p+\\\");\\\\n\\\\n      void main() {\\\\n        ivec5 coords = getOutputCoords();\\\\n        int batch = coords.x;\\\\n        int ch = coords.u;\\\\n\\\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\\\n        int dyDCorner = dyCorner.x;\\\\n        int dyRCorner = dyCorner.y;\\\\n        int dyCCorner = dyCorner.z;\\\\n\\\\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\\\\n        // dx(xD, xR, xC, ch).\\\\n        // ? = to be determined. : = across all values in that axis.\\\\n        float dotProd = 0.0;\\\\n\\\\n        for (int wD = 0; wD < \\\"+s+\\\";\\\\n           wD += \\\"+o+\\\") {\\\\n          float dyD = float(dyDCorner + wD) / \\\"+e+\\\".0;\\\\n\\\\n          if (dyD < 0.0 || dyD >= \\\"+t.outDepth+\\\".0 || fract(dyD) > 0.0) {\\\\n            continue;\\\\n          }\\\\n          int idyD = int(dyD);\\\\n\\\\n          for (int wR = 0; wR < \\\"+u+\\\";\\\\n              wR += \\\"+a+\\\") {\\\\n            float dyR = float(dyRCorner + wR) / \\\"+n+\\\".0;\\\\n\\\\n            if (dyR < 0.0 || dyR >= \\\"+t.outHeight+\\\".0 ||\\\\n                fract(dyR) > 0.0) {\\\\n              continue;\\\\n            }\\\\n            int idyR = int(dyR);\\\\n\\\\n            for (int wC = 0; wC < \\\"+l+\\\";\\\\n                wC += \\\"+i+\\\") {\\\\n              float dyC = float(dyCCorner + wC) / \\\"+r+\\\".0;\\\\n\\\\n              if (dyC < 0.0 || dyC >= \\\"+t.outWidth+\\\".0 ||\\\\n                  fract(dyC) > 0.0) {\\\\n                continue;\\\\n              }\\\\n              int idyC = int(dyC);\\\\n\\\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\\\n              int maxPosValue = \\\"+f+\\\" -\\\\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\\\\n\\\\n              // Get the current value, check it against the value from the\\\\n              // position matrix.\\\\n              int curPosValue =\\\\n                  wD * \\\"+u+\\\" * \\\"+l+\\\" +\\\\n                  wR * \\\"+l+\\\" + wC;\\\\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\\\n\\\\n              dotProd += dyValue * mask;\\\\n            }\\\\n          }\\\\n        }\\\\n        setOutput(dotProd);\\\\n      }\\\\n    \\\"}}(),yi=function(){return function(t,e,n,r,o,a,i){void 0===n&&(n=!1),void 0===r&&(r=!1),void 0===o&&(o=!1),void 0===a&&(a=null),void 0===i&&(i=!1),this.variableNames=[\\\"matrixA\\\",\\\"matrixB\\\"],this.usesPackedTextures=!0,this.outputShape=e;var s=n?t[1]:t[2],u=Math.ceil(s/2),l=n?\\\"i * 2, rc.y\\\":\\\"rc.y, i * 2\\\",c=r?\\\"rc.z, i * 2\\\":\\\"i * 2, rc.z\\\",h=n?[\\\"a.xxyy\\\",\\\"a.zzww\\\"]:[\\\"a.xxzz\\\",\\\"a.yyww\\\"],p=r?[\\\"b.xzxz\\\",\\\"b.ywyw\\\"]:[\\\"b.xyxy\\\",\\\"b.zwzw\\\"],f=\\\"\\\",d=\\\"\\\";a&&(f=i?\\\"vec4 activation(vec4 a) {\\\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\\\n          \\\"+a+\\\"\\\\n        }\\\":\\\"vec4 activation(vec4 x) {\\\\n          \\\"+a+\\\"\\\\n        }\\\",d=\\\"result = activation(result);\\\");var v=o?\\\"result += getBiasAtOutCoords();\\\":\\\"\\\";o&&this.variableNames.push(\\\"bias\\\"),i&&this.variableNames.push(\\\"preluActivationWeights\\\"),this.userCode=\\\"\\\\n      \\\"+f+\\\"\\\\n\\\\n      const float sharedDimension = \\\"+u+\\\".0;\\\\n\\\\n      vec4 dot2x2ARowBCol(ivec3 rc) {\\\\n        vec4 result = vec4(0);\\\\n        for (int i = 0; i < \\\"+u+\\\"; i++) {\\\\n          vec4 a = getMatrixA(rc.x, \\\"+l+\\\");\\\\n          vec4 b = getMatrixB(rc.x, \\\"+c+\\\");\\\\n\\\\n          // These swizzled products need to be separately added.\\\\n          // See: https://github.com/tensorflow/tfjs/issues/1735\\\\n          result += (\\\"+h[0]+\\\" * \\\"+p[0]+\\\");\\\\n          result += (\\\"+h[1]+\\\" * \\\"+p[1]+\\\");\\\\n        }\\\\n        return result;\\\\n      }\\\\n\\\\n      void main() {\\\\n        ivec3 rc = getOutputCoords();\\\\n        vec4 result = dot2x2ARowBCol(rc);\\\\n\\\\n        \\\"+v+\\\"\\\\n\\\\n        \\\"+d+\\\"\\\\n\\\\n        setOutput(result);\\\\n      }\\\\n    \\\"}}(),xi=function(){function t(t,e,n){this.variableNames=[\\\"probs\\\"],this.outputShape=[t,n],this.userCode=\\\"\\\\n      uniform float seed;\\\\n\\\\n      void main() {\\\\n        ivec2 coords = getOutputCoords();\\\\n        int batch = coords[0];\\\\n\\\\n        float r = random(seed);\\\\n        float cdf = 0.0;\\\\n\\\\n        for (int i = 0; i < \\\"+(e-1)+\\\"; i++) {\\\\n          cdf += getProbs(batch, i);\\\\n\\\\n          if (r < cdf) {\\\\n            setOutput(float(i));\\\\n            return;\\\\n          }\\\\n        }\\\\n\\\\n        // If no other event happened, last event happened.\\\\n        setOutput(float(\\\"+(e-1)+\\\"));\\\\n      }\\\\n    \\\"}return t.prototype.getCustomSetupFunc=function(t){var e=this;return function(n,r){null==e.seedLoc&&(e.seedLoc=n.getUniformLocation(r,\\\"seed\\\")),n.gl.uniform1f(e.seedLoc,t)}},t}(),bi=function(){return function(t,e,n,r){this.variableNames=[\\\"indices\\\"],this.outputShape=[t,e],this.userCode=\\\"\\\\n      void main() {\\\\n        ivec2 coords = getOutputCoords();\\\\n        int index = round(getIndices(coords.x));\\\\n        setOutput(mix(float(\\\"+r+\\\"), float(\\\"+n+\\\"),\\\\n                      float(index == coords.y)));\\\\n      }\\\\n    \\\"}}(),wi=function(){return function(t){this.variableNames=[\\\"A\\\"],this.outputShape=t;var e=t.length;if(0===e)this.userCode=\\\"\\\\n        void main() {\\\\n          setOutput(vec4(getA(), 0., 0., 0.));\\\\n        }\\\\n      \\\";else{var n=Fo(\\\"rc\\\",e),r=jo(e),o=function(t,e,n){if(1===t)return\\\"rc > \\\"+e[0];for(var r=\\\"\\\",o=t-2;o<t;o++)r+=n[o]+\\\" >= \\\"+e[o],o<t-1&&(r+=\\\"||\\\");return r}(e,t,n),a=function(t,e,n,r){if(1===t)return\\\"\\\";var o=r.slice(-2);return\\\"\\\\n    int r = \\\"+o[0]+\\\";\\\\n    int c = \\\"+o[1]+\\\";\\\\n    int rp1 = r + 1;\\\\n    int cp1 = c + 1;\\\\n\\\\n    bool cEdge = cp1 >= \\\"+e+\\\";\\\\n    bool rEdge = rp1 >= \\\"+n+\\\";\\\\n  \\\"}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){var n=t.length,r=function(t,e){for(var n=[],r=0;r<=1;r++)for(var o=0;o<=1;o++){for(var a=(0===r?\\\"r\\\":\\\"rp1\\\")+\\\", \\\"+(0===o?\\\"c\\\":\\\"cp1\\\"),i=2;i<t;i++)a=e[e.length-1-i]+\\\",\\\"+a;n.push(a)}return n}(n,e);return 1===n?\\\"getA(rc),\\\\n            rc + 1 >= \\\"+t[0]+\\\" ? 0. : getA(rc + 1),\\\\n            0, 0\\\":\\\"getA(\\\"+r[0]+\\\"),\\\\n          cEdge ? 0. : getA(\\\"+r[1]+\\\"),\\\\n          rEdge ? 0. : getA(\\\"+r[2]+\\\"),\\\\n          rEdge || cEdge ? 0. : getA(\\\"+r[3]+\\\")\\\"}(t,n);this.userCode=\\\"\\\\n        void main() {\\\\n          \\\"+r+\\\" rc = getOutputCoords();\\\\n\\\\n          if(\\\"+o+\\\") {\\\\n            setOutput(vec4(0));\\\\n          } else {\\\\n            \\\"+a+\\\"\\\\n\\\\n            setOutput(vec4(\\\"+i+\\\"));\\\\n          }\\\\n        }\\\\n      \\\"}}}();var Ci=function(){return function(t,e,n){this.variableNames=[\\\"x\\\"],this.outputShape=e.map(function(e,n){return e[0]+t[n]+e[1]});var r=t.length,o=jo(r),a=e.map(function(t){return t[0]}).join(\\\",\\\"),i=e.map(function(e,n){return e[0]+t[n]}).join(\\\",\\\"),s=[\\\"coords[0]\\\",\\\"coords[1]\\\",\\\"coords[2]\\\",\\\"coords[3]\\\"].slice(0,r);this.userCode=1!==r?\\\"\\\\n      \\\"+o+\\\" start = \\\"+o+\\\"(\\\"+a+\\\");\\\\n      \\\"+o+\\\" end = \\\"+o+\\\"(\\\"+i+\\\");\\\\n\\\\n      void main() {\\\\n        \\\"+o+\\\" outC = getOutputCoords();\\\\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\\\\n          setOutput(float(\\\"+n+\\\"));\\\\n        } else {\\\\n          \\\"+o+\\\" coords = outC - start;\\\\n          setOutput(getX(\\\"+s+\\\"));\\\\n        }\\\\n      }\\\\n    \\\":\\\"\\\\n        int start = \\\"+a+\\\";\\\\n        int end = \\\"+i+\\\";\\\\n\\\\n        void main() {\\\\n          int outC = getOutputCoords();\\\\n          if (outC < start || outC >= end) {\\\\n            setOutput(float(\\\"+n+\\\"));\\\\n          } else {\\\\n            setOutput(getX(outC - start));\\\\n          }\\\\n        }\\\\n      \\\"}}(),Ei=function(){return function(t,e,n){this.variableNames=[\\\"x\\\"],this.usesPackedTextures=!0,this.outputShape=e.map(function(e,n){return e[0]+t[n]+e[1]});for(var r=t.length,o=jo(r),a=e.map(function(t){return t[0]}).join(\\\",\\\"),i=e.map(function(e,n){return e[0]+t[n]}).join(\\\",\\\"),s=Fo(\\\"rc\\\",r),u=Fo(\\\"source\\\",r),l=s[r-1]+\\\" < \\\"+this.outputShape[r-1],c=1===r?\\\"source\\\":\\\"vec2(\\\"+u.slice(-2).join()+\\\")\\\",h=[o+\\\" rc = outputLoc;\\\",s[r-1]+\\\" += 1;\\\\n       if(\\\"+l+\\\") {\\\\n      \\\",1===r?\\\"\\\":\\\"}\\\\n       rc = outputLoc;\\\\n       \\\"+s[r-2]+\\\" += 1;\\\\n       if(\\\"+s[r-2]+\\\" < \\\"+this.outputShape[r-2]+\\\") {\\\",1===r?\\\"\\\":\\\"  \\\"+s[r-1]+\\\" += 1;\\\\n         if(\\\"+l+\\\") {\\\"],p=1===r?\\\"rc < start || rc >= end\\\":\\\"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))\\\",f=\\\"\\\",d=0,v=1===r?2:4;d<v;d++)f+=\\\"\\\\n        \\\"+h[d]+\\\"\\\\n        if (\\\"+p+\\\") {\\\\n          result[\\\"+d+\\\"] = float(\\\"+n+\\\");\\\\n        } else {\\\\n          \\\"+o+\\\" source = rc - start;\\\\n          result[\\\"+d+\\\"] = getChannel(getX(\\\"+u.join()+\\\"), \\\"+c+\\\");\\\\n        }\\\\n      \\\";f+=1===r?\\\"} \\\":\\\"}}\\\",this.userCode=\\\"\\\\n      const \\\"+o+\\\" start = \\\"+o+\\\"(\\\"+a+\\\");\\\\n      const \\\"+o+\\\" end = \\\"+o+\\\"(\\\"+i+\\\");\\\\n\\\\n      void main() {\\\\n        \\\"+o+\\\" outputLoc = getOutputCoords();\\\\n        vec4 result = vec4(0.);\\\\n        \\\"+f+\\\"\\\\n        setOutput(result);\\\\n      }\\\\n    \\\"}}(),Ri=function(){return function(t,e,n){if(this.variableNames=[\\\"x\\\"],\\\"avg\\\"===e&&n)throw new Error(\\\"Cannot compute positions for average pool.\\\");var r=t.filterWidth,o=t.strideHeight,a=t.strideWidth,i=t.dilationHeight,s=t.dilationWidth,u=t.effectiveFilterHeight,l=t.effectiveFilterWidth,c=t.padInfo.top,h=t.padInfo.left;this.outputShape=t.outShape;var p=\\\"avg\\\"===e,f=\\\"0.0\\\";if(p||(f=\\\"-1.0 / 1e-20\\\"),n)this.userCode=\\\"\\\\n        const ivec2 strides = ivec2(\\\"+o+\\\", \\\"+a+\\\");\\\\n        const ivec2 pads = ivec2(\\\"+c+\\\", \\\"+h+\\\");\\\\n\\\\n        void main() {\\\\n          ivec4 coords = getOutputCoords();\\\\n          int batch = coords[0];\\\\n          int d = coords[3];\\\\n\\\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\\\n          int xRCorner = xRCCorner.x;\\\\n          int xCCorner = xRCCorner.y;\\\\n\\\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\\\n          // ? = to be determined\\\\n          float minMaxValue = 0.0;\\\\n          float minMaxValueFound = 0.0;\\\\n          int minMaxPosition = 0;\\\\n          float avgValue = 0.0;\\\\n\\\\n          for (int wR = 0; wR < \\\"+u+\\\";\\\\n              wR += \\\"+i+\\\") {\\\\n            int xR = xRCorner + wR;\\\\n\\\\n            if (xR < 0 || xR >= \\\"+t.inHeight+\\\") {\\\\n              continue;\\\\n            }\\\\n\\\\n            for (int wC = 0; wC < \\\"+l+\\\";\\\\n                wC += \\\"+s+\\\") {\\\\n              int xC = xCCorner + wC;\\\\n\\\\n              if (xC < 0 || xC >= \\\"+t.inWidth+\\\") {\\\\n                continue;\\\\n              }\\\\n\\\\n              float value = getX(batch, xR, xC, d);\\\\n\\\\n              // If a min / max value has already been found, use it. If not,\\\\n              // use the current value.\\\\n              float currMinMaxValue = mix(\\\\n                  value, minMaxValue, minMaxValueFound);\\\\n              if (value >= currMinMaxValue) {\\\\n                minMaxValue = value;\\\\n                minMaxValueFound = 1.0;\\\\n                minMaxPosition = wR * \\\"+l+\\\" + wC;\\\\n              }\\\\n            }\\\\n          }\\\\n          setOutput(float(minMaxPosition));\\\\n        }\\\\n      \\\";else{var d=e+\\\"(\\\"+e+\\\"(\\\"+e+\\\"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])\\\";\\\"avg\\\"===e&&(d=\\\"avgValue / count\\\");var v=4*Math.floor(r/4),m=r%4,g=\\\"\\\\n      if (\\\"+p+\\\") {\\\\n        avgValue += dot(values, ones);\\\\n      } else {\\\\n        minMaxValue = max(values, minMaxValue);\\\\n      }\\\\n    \\\";this.userCode=\\\"\\\\n      const ivec2 strides = ivec2(\\\"+o+\\\", \\\"+a+\\\");\\\\n      const ivec2 pads = ivec2(\\\"+c+\\\", \\\"+h+\\\");\\\\n      const float initializationValue = \\\"+f+\\\";\\\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\\\n\\\\n      float count = 0.0;\\\\n\\\\n      float getValue(int batch, int xR, int xC, int d) {\\\\n        if (xC < 0 || xC >= \\\"+t.inWidth+\\\") {\\\\n          return initializationValue;\\\\n        }\\\\n        count += 1.0;\\\\n        return getX(batch, xR, xC, d);\\\\n      }\\\\n\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int batch = coords[0];\\\\n        int d = coords[3];\\\\n\\\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\\\n        int xRCorner = xRCCorner.x;\\\\n        int xCCorner = xRCCorner.y;\\\\n\\\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\\\n        // ? = to be determined\\\\n        vec4 minMaxValue = vec4(\\\"+f+\\\");\\\\n        float avgValue = 0.0;\\\\n        count = 0.0;\\\\n\\\\n        for (int wR = 0; wR < \\\"+u+\\\";\\\\n            wR += \\\"+i+\\\") {\\\\n          int xR = xRCorner + wR;\\\\n\\\\n          if (xR < 0 || xR >= \\\"+t.inHeight+\\\") {\\\\n            continue;\\\\n          }\\\\n\\\\n          for (int wC = 0; wC < \\\"+v+\\\"; wC += 4) {\\\\n            int xC = xCCorner + wC * \\\"+s+\\\";\\\\n\\\\n            vec4 values = vec4(\\\\n              getValue(batch, xR, xC, d),\\\\n              getValue(batch, xR, xC + \\\"+s+\\\", d),\\\\n              getValue(batch, xR, xC + 2 * \\\"+s+\\\", d),\\\\n              getValue(batch, xR, xC + 3 * \\\"+s+\\\", d)\\\\n            );\\\\n\\\\n            \\\"+g+\\\"\\\\n          }\\\\n\\\\n          int xC = xCCorner + \\\"+v+\\\";\\\\n          if (\\\"+(1===m)+\\\") {\\\\n            vec4 values = vec4(\\\\n              getValue(batch, xR, xC, d),\\\\n              initializationValue,\\\\n              initializationValue,\\\\n              initializationValue\\\\n            );\\\\n\\\\n            \\\"+g+\\\"\\\\n          } else if (\\\"+(2===m)+\\\") {\\\\n            vec4 values = vec4(\\\\n              getValue(batch, xR, xC, d),\\\\n              getValue(batch, xR, xC + \\\"+s+\\\", d),\\\\n              initializationValue,\\\\n              initializationValue\\\\n            );\\\\n\\\\n            \\\"+g+\\\"\\\\n          } else if (\\\"+(3===m)+\\\") {\\\\n            vec4 values = vec4(\\\\n              getValue(batch, xR, xC, d),\\\\n              getValue(batch, xR, xC + \\\"+s+\\\", d),\\\\n              getValue(batch, xR, xC + 2 * \\\"+s+\\\", d),\\\\n              initializationValue\\\\n            );\\\\n\\\\n            \\\"+g+\\\"\\\\n          }\\\\n        }\\\\n        setOutput(\\\"+d+\\\");\\\\n      }\\\\n    \\\"}}}(),Ii=function(){return function(t,e,n){if(this.variableNames=[\\\"x\\\"],\\\"avg\\\"===e&&n)throw new Error(\\\"Cannot compute positions for average pool.\\\");var r=t.filterWidth,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,u=t.dilationHeight,l=t.dilationWidth,c=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,f=t.padInfo.front,d=t.padInfo.top,v=t.padInfo.left;this.outputShape=t.outShape;var m=\\\"avg\\\"===e,g=\\\"0.0\\\";if(m||(g=\\\"-1.0 / 1e-20\\\"),n)this.userCode=\\\"\\\\n        const ivec3 strides =\\\\n            ivec3(\\\"+o+\\\", \\\"+a+\\\", \\\"+i+\\\");\\\\n        const ivec3 pads = ivec3(\\\"+f+\\\", \\\"+d+\\\", \\\"+v+\\\");\\\\n\\\\n        void main() {\\\\n          ivec5 coords = getOutputCoords();\\\\n          int batch = coords.x;\\\\n          int ch = coords.u;\\\\n\\\\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\\\n          int xDCorner = xCorner.x;\\\\n          int xRCorner = xCorner.y;\\\\n          int xCCorner = xCorner.z;\\\\n\\\\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\\\\n          // ? = to be determined\\\\n          float minMaxValue = 0.0;\\\\n          float minMaxValueFound = 0.0;\\\\n          int minMaxPosition = 0;\\\\n\\\\n          for (int wD = 0; wD < \\\"+c+\\\";\\\\n              wD += \\\"+s+\\\") {\\\\n            int xD = xDCorner + wD;\\\\n\\\\n            if (xD < 0 || xD >= \\\"+t.inDepth+\\\") {\\\\n              continue;\\\\n            }\\\\n\\\\n            for (int wR = 0; wR < \\\"+h+\\\";\\\\n                wR += \\\"+u+\\\") {\\\\n              int xR = xRCorner + wR;\\\\n\\\\n              if (xR < 0 || xR >= \\\"+t.inHeight+\\\") {\\\\n                continue;\\\\n              }\\\\n\\\\n              for (int wC = 0; wC < \\\"+p+\\\";\\\\n                  wC += \\\"+l+\\\") {\\\\n                int xC = xCCorner + wC;\\\\n\\\\n                if (xC < 0 || xC >= \\\"+t.inWidth+\\\") {\\\\n                  continue;\\\\n                }\\\\n\\\\n                float value = getX(batch, xD, xR, xC, ch);\\\\n\\\\n                // If a min / max value has already been found, use it. If not,\\\\n                // use the current value.\\\\n                float currMinMaxValue = mix(\\\\n                    value, minMaxValue, minMaxValueFound);\\\\n                if (value >= currMinMaxValue) {\\\\n                  minMaxValue = value;\\\\n                  minMaxValueFound = 1.0;\\\\n                  minMaxPosition =\\\\n                      wD * \\\"+h+\\\" * \\\"+p+\\\" +\\\\n                      wR * \\\"+p+\\\" + wC;;\\\\n                }\\\\n              }\\\\n            }\\\\n          }\\\\n          setOutput(float(minMaxPosition));\\\\n        }\\\\n      \\\";else{var y=e+\\\"(\\\"+e+\\\"(\\\"+e+\\\"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])\\\";\\\"avg\\\"===e&&(y=\\\"avgValue / count\\\");var x=4*Math.floor(r/4),b=r%4,w=\\\"\\\\n      if (\\\"+m+\\\") {\\\\n        avgValue += dot(values, ones);\\\\n      } else {\\\\n        minMaxValue = max(values, minMaxValue);\\\\n      }\\\\n    \\\";this.userCode=\\\"\\\\n      const ivec3 strides =\\\\n        ivec3(\\\"+o+\\\", \\\"+a+\\\", \\\"+i+\\\");\\\\n      const ivec3 pads = ivec3(\\\"+f+\\\", \\\"+d+\\\", \\\"+v+\\\");\\\\n      const float initializationValue = \\\"+g+\\\";\\\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\\\n\\\\n      float count = 0.0;\\\\n\\\\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\\\\n        if (xC < 0 || xC >= \\\"+t.inWidth+\\\") {\\\\n          return initializationValue;\\\\n        }\\\\n        count += 1.0;\\\\n        return getX(batch, xD, xR, xC, ch);\\\\n      }\\\\n\\\\n      void main() {\\\\n        ivec5 coords = getOutputCoords();\\\\n        int batch = coords.x;\\\\n        int ch = coords.u;\\\\n\\\\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\\\n        int xDCorner = xCorner.x;\\\\n        int xRCorner = xCorner.y;\\\\n        int xCCorner = xCorner.z;\\\\n\\\\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\\\\n        // ? = to be determined\\\\n        vec4 minMaxValue = vec4(\\\"+g+\\\");\\\\n        float avgValue = 0.0;\\\\n        count = 0.0;\\\\n\\\\n        for (int wD = 0; wD < \\\"+c+\\\";\\\\n            wD += \\\"+s+\\\") {\\\\n          int xD = xDCorner + wD;\\\\n\\\\n          if (xD < 0 || xD >= \\\"+t.inDepth+\\\") {\\\\n            continue;\\\\n          }\\\\n\\\\n          for (int wR = 0; wR < \\\"+h+\\\";\\\\n            wR += \\\"+u+\\\") {\\\\n            int xR = xRCorner + wR;\\\\n\\\\n            if (xR < 0 || xR >= \\\"+t.inHeight+\\\") {\\\\n              continue;\\\\n            }\\\\n\\\\n            for (int wC = 0; wC < \\\"+x+\\\"; wC += 4) {\\\\n              int xC = xCCorner + wC * \\\"+l+\\\";\\\\n\\\\n              vec4 values = vec4(\\\\n                getValue(batch, xD, xR, xC, ch),\\\\n                getValue(batch, xD, xR, xC + \\\"+l+\\\", ch),\\\\n                getValue(batch, xD, xR, xC + 2 * \\\"+l+\\\", ch),\\\\n                getValue(batch, xD, xR, xC + 3 * \\\"+l+\\\", ch)\\\\n              );\\\\n\\\\n              \\\"+w+\\\"\\\\n            }\\\\n\\\\n            int xC = xCCorner + \\\"+x+\\\";\\\\n            if (\\\"+(1===b)+\\\") {\\\\n              vec4 values = vec4(\\\\n                getValue(batch, xD, xR, xC, ch),\\\\n                initializationValue,\\\\n                initializationValue,\\\\n                initializationValue\\\\n              );\\\\n\\\\n              \\\"+w+\\\"\\\\n            } else if (\\\"+(2===b)+\\\") {\\\\n              vec4 values = vec4(\\\\n                getValue(batch, xD, xR, xC, ch),\\\\n                getValue(batch, xD, xR, xC + \\\"+l+\\\", ch),\\\\n                initializationValue,\\\\n                initializationValue\\\\n              );\\\\n\\\\n              \\\"+w+\\\"\\\\n            } else if (\\\"+(3===b)+\\\") {\\\\n              vec4 values = vec4(\\\\n                getValue(batch, xD, xR, xC, ch),\\\\n                getValue(batch, xD, xR, xC + \\\"+l+\\\", ch),\\\\n                getValue(batch, xD, xR, xC + 2 * \\\"+l+\\\", ch),\\\\n                initializationValue\\\\n              );\\\\n\\\\n              \\\"+w+\\\"\\\\n            }\\\\n          }\\\\n          setOutput(\\\"+y+\\\");\\\\n        }\\\\n      }\\\\n    \\\"}}}(),ki=function(){return function(t,e){this.variableNames=[\\\"x\\\"];var n=t.windowSize,r=t.batchSize,o=t.inSize,a=Math.ceil(o/n);this.outputShape=[r,a];var i=\\\"0.0\\\",s=\\\"\\\";\\\"prod\\\"===e?i=\\\"1.0\\\":\\\"min\\\"===e?(i=\\\"1.0 / 1e-20\\\",s=\\\"min\\\"):\\\"max\\\"===e&&(i=\\\"-1.0 / 1e-20\\\",s=\\\"max\\\");var u=e+\\\"(\\\"+e+\\\"(\\\"+e+\\\"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])\\\";\\\"sum\\\"===e?u=\\\"sumValue\\\":\\\"prod\\\"===e?u=\\\"prodValue\\\":\\\"all\\\"===e?u=\\\"allValue\\\":\\\"any\\\"===e&&(u=\\\"anyValue\\\");var l=4*Math.floor(n/4),c=n%4,h=\\\"\\\\n      if (\\\"+(\\\"sum\\\"===e)+\\\") {\\\\n        sumValue += dot(values, ones);\\\\n      } else if (\\\"+(\\\"prod\\\"===e)+\\\") {\\\\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\\\\n        prodValue *= tmp[0] * tmp[1];\\\\n      } else {\\\\n        minMaxValue = \\\"+s+\\\"(values, minMaxValue);\\\\n      }\\\\n    \\\",p=\\\"vec4\\\";\\\"all\\\"===e?(i=\\\"1.0\\\",h=\\\"\\\\n        bool reducedAllValue = all(values);\\\\n        float floatedReducedAllValue = float(reducedAllValue);\\\\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\\\\n      \\\",p=\\\"bvec4\\\"):\\\"any\\\"===e&&(i=\\\"0.0\\\",h=\\\"\\\\n        bool reducedAnyValue = any(values);\\\\n        float floatedReducedAnyValue = float(reducedAnyValue);\\\\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\\\\n      \\\",p=\\\"bvec4\\\");var f=\\\"\\\";o%n>0&&(f=\\\"\\\\n        if (inIdx < 0 || inIdx >= \\\"+o+\\\") {\\\\n          return initializationValue;\\\\n        }\\\\n      \\\"),this.userCode=\\\"\\\\n      const float initializationValue = \\\"+i+\\\";\\\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\\\n\\\\n      float getValue(int batch, int inIdx) {\\\\n        \\\"+f+\\\"\\\\n        return getX(batch, inIdx);\\\\n      }\\\\n\\\\n      void main() {\\\\n        ivec2 coords = getOutputCoords();\\\\n        int batch = coords[0];\\\\n        int outIdx = coords[1];\\\\n        int inOffset = outIdx * \\\"+n+\\\";\\\\n\\\\n        vec4 minMaxValue = vec4(\\\"+i+\\\");\\\\n        float prodValue = 1.0;\\\\n        float sumValue = 0.0;\\\\n        float allValue = 1.0;\\\\n        float anyValue = 0.0;\\\\n\\\\n        for (int i = 0; i < \\\"+l+\\\"; i += 4) {\\\\n          int inIdx = inOffset + i;\\\\n          \\\"+p+\\\" values = \\\"+p+\\\"(\\\\n            getValue(batch, inIdx),\\\\n            getValue(batch, inIdx + 1),\\\\n            getValue(batch, inIdx + 2),\\\\n            getValue(batch, inIdx + 3)\\\\n          );\\\\n\\\\n          \\\"+h+\\\"\\\\n        }\\\\n\\\\n        int inIdx = inOffset + \\\"+l+\\\";\\\\n        if (\\\"+(1===c)+\\\") {\\\\n          \\\"+p+\\\" values = \\\"+p+\\\"(\\\\n            getValue(batch, inIdx),\\\\n            initializationValue,\\\\n            initializationValue,\\\\n            initializationValue\\\\n          );\\\\n\\\\n          \\\"+h+\\\"\\\\n        } else if (\\\"+(2===c)+\\\") {\\\\n          \\\"+p+\\\" values = \\\"+p+\\\"(\\\\n            getValue(batch, inIdx),\\\\n            getValue(batch, inIdx + 1),\\\\n            initializationValue,\\\\n            initializationValue\\\\n          );\\\\n\\\\n          \\\"+h+\\\"\\\\n        } else if (\\\"+(3===c)+\\\") {\\\\n          \\\"+p+\\\" values = \\\"+p+\\\"(\\\\n            getValue(batch, inIdx),\\\\n            getValue(batch, inIdx + 1),\\\\n            getValue(batch, inIdx + 2),\\\\n            initializationValue\\\\n          );\\\\n\\\\n          \\\"+h+\\\"\\\\n        }\\\\n        setOutput(\\\"+u+\\\");\\\\n      }\\\\n    \\\"}}(),Ni=function(){return function(t,e){this.variableNames=[\\\"A\\\"],this.usesPackedTextures=!0,this.outputShape=t;for(var n=\\\"\\\",r=0;r<4;r++){var o=\\\"thisRC = rc;\\\";r%2==1&&(o+=\\\"thisRC.z += 1;\\\"),r>1&&(o+=\\\"thisRC.y += 1;\\\"),n+=\\\"\\\\n        \\\"+o+\\\"\\\\n        \\\"+(r>0?\\\"if(thisRC.y < rows && thisRC.z < cols){\\\":\\\"\\\")+\\\"\\\\n          int flatIndex = getFlatIndex(thisRC);\\\\n\\\\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\\\\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\\\\n\\\\n          result[\\\"+r+\\\"] =\\\\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\\\\n        \\\"+(r>0?\\\"}\\\":\\\"\\\")+\\\"\\\\n      \\\"}this.userCode=\\\"\\\\n      \\\\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\\\\n      \\\"+Bo([\\\"r\\\",\\\"c\\\",\\\"d\\\"],e)+\\\"\\\\n      return ivec3(r, c, d);\\\\n    }\\\\n  \\\\n      \\\"+Po(t)+\\\"\\\\n\\\\n      void main() {\\\\n        ivec3 rc = getOutputCoords();\\\\n\\\\n        vec4 result = vec4(0.);\\\\n\\\\n        ivec3 thisRC;\\\\n        int rows = \\\"+t[1]+\\\";\\\\n        int cols = \\\"+t[2]+\\\";\\\\n\\\\n        \\\"+n+\\\"\\\\n\\\\n        setOutput(result);\\\\n      }\\\\n    \\\"}}();var Si=function(){return function(t,e,n){this.variableNames=[\\\"dy\\\"],this.outputShape=[],this.outputShape=e.shape;var r=e.shape,o=r[1],a=r[2],i=t.shape,s=i[1],u=i[2],l=[n&&s>1?o-1:o,n&&u>1?a-1:a],c=[n&&s>1?s-1:s,n&&u>1?u-1:u],h=l[0]/c[0],p=l[1]/c[1],f=1/h,d=1/p,v=2*Math.ceil(f)+2,m=2*Math.ceil(d)+2;this.userCode=\\\"\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int b = coords[0];\\\\n        int d = coords[3];\\\\n        int r = coords[1];\\\\n        int c = coords[2];\\\\n\\\\n        float accumulator = 0.0;\\\\n\\\\n        const float heightScale = float(\\\"+h+\\\");\\\\n        const float widthScale = float(\\\"+p+\\\");\\\\n\\\\n        const float invHeightScale = float(\\\"+f+\\\");\\\\n        const float invWidthScale = float(\\\"+d+\\\");\\\\n\\\\n        const int winHeight = int(\\\"+v+\\\");\\\\n        const int winWidth = int(\\\"+m+\\\");\\\\n\\\\n        // Compute bounds for where in dy we will look\\\\n        float startRLerp = floor(float(r) * invHeightScale);\\\\n        int startDyR = int(startRLerp - float(winHeight / 2));\\\\n\\\\n        float startCLerp = floor(float(c) * invWidthScale);\\\\n        int startDyC = int(startCLerp - float(winWidth / 2));\\\\n\\\\n        // Loop over dy\\\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\\\n          int dyR = dyROffset + startDyR;\\\\n\\\\n          // Guard against the window exceeding the bounds of dy\\\\n          if (dyR < 0 || dyR >= \\\"+s+\\\") {\\\\n            continue;\\\\n          }\\\\n\\\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\\\n            int dyC = dyCOffset + startDyC;\\\\n\\\\n            // Guard against the window exceeding the bounds of dy\\\\n            if (dyC < 0 || dyC >= \\\"+u+\\\") {\\\\n              continue;\\\\n            }\\\\n\\\\n            float dxR = float(dyR) * heightScale;\\\\n            int topDxRIndex = int(floor(dxR));\\\\n            int bottomDxRIndex = int(min(ceil(dxR), \\\"+(o-1)+\\\".0));\\\\n            float dxRLerp = dxR - float(topDxRIndex);\\\\n            float inverseDxRLerp = 1.0 - dxRLerp;\\\\n\\\\n            float dxC = float(dyC) * widthScale;\\\\n            int leftDxCIndex = int(floor(dxC));\\\\n            int rightDxCIndex = int(min(ceil(dxC), \\\"+(a-1)+\\\".0));\\\\n            float dxCLerp = dxC - float(leftDxCIndex);\\\\n            float inverseDxCLerp = 1.0 - dxCLerp;\\\\n\\\\n            if (r == topDxRIndex && c == leftDxCIndex) {\\\\n              // topLeft\\\\n              accumulator +=\\\\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\\\\n            }\\\\n\\\\n            if (r == topDxRIndex && c == rightDxCIndex) {\\\\n              // topRight\\\\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\\\\n            }\\\\n\\\\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\\\\n              // bottomLeft\\\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\\\\n            }\\\\n\\\\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\\\\n              // bottomRight\\\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\\\\n            }\\\\n          }\\\\n        }\\\\n        // End loop over dy\\\\n\\\\n        setOutput(accumulator);\\\\n      }\\\\n    \\\"}}(),Ai=function(){return function(t,e,n,r){this.variableNames=[\\\"A\\\"],this.outputShape=[];var o=t[0],a=t[1],i=t[2],s=t[3];this.outputShape=[o,e,n,s];var u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=\\\"\\\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\\\n          \\\"+u[0]/l[0]+\\\",\\\\n          \\\"+u[1]/l[1]+\\\");\\\\n      const vec2 inputShapeRC = vec2(\\\"+a+\\\".0, \\\"+i+\\\".0);\\\\n\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int b = coords[0];\\\\n        int d = coords[3];\\\\n        ivec2 yRC = coords.yz;\\\\n\\\\n        // Fractional source index.\\\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\\\n\\\\n        // Compute the four integer indices.\\\\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\\\\n        ivec2 sourceCeilRC = ivec2(\\\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\\\n\\\\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\\\\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\\\\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\\\\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\\\\n\\\\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\\\\n\\\\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\\\\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\\\\n        float newValue = top + (bottom - top) * fracRC.x;\\\\n\\\\n        setOutput(newValue);\\\\n      }\\\\n    \\\"}}(),Ti=function(){return function(t,e,n,r){this.variableNames=[\\\"A\\\"],this.usesPackedTextures=!0,this.outputShape=[];var o=t[0],a=t[1],i=t[2],s=t[3];this.outputShape=[o,e,n,s];var u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=\\\"\\\\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\\\\n          \\\"+u[0]/l[0]+\\\",\\\\n          \\\"+u[1]/l[1]+\\\",\\\\n          \\\"+u[1]/l[1]+\\\");\\\\n      const vec3 inputShapeRC = vec3(\\\"+a+\\\".0, \\\"+i+\\\".0,\\\\n                                     \\\"+i+\\\".0);\\\\n\\\\n      float getAValue(int b, int r, int c, int d) {\\\\n        return getChannel(getA(b, r, c, d), vec2(c, d));\\\\n      }\\\\n\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int b = coords[0];\\\\n        int d = coords[3];\\\\n        // Calculate values for next column in yRC.z.\\\\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\\\\n\\\\n        // Fractional source index.\\\\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\\\\n\\\\n        // Compute the four integer indices.\\\\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\\\\n        ivec3 sourceCeilRC = ivec3(\\\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\\\n        \\\\n        // Should we calculate next column and row elements in 2x2 packed cell.\\\\n        bool hasNextCol = d < \\\"+(s-1)+\\\"; \\\\n        bool hasNextRow = coords.z < \\\"+(n-1)+\\\";\\\\n\\\\n        // In parallel, construct four corners for all four components in\\\\n        // packed 2x2 cell.\\\\n        vec4 topLeft = vec4(\\\\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\\\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\\\\n                     : 0.0,\\\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\\\\n                     : 0.0,\\\\n          (hasNextRow && hasNextCol) ?\\\\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\\\\n\\\\n        vec4 bottomLeft = vec4(\\\\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\\\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\\\\n                     : 0.0,\\\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\\\\n                     : 0.0,\\\\n          (hasNextRow && hasNextCol) ?\\\\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\\\\n\\\\n        vec4 topRight = vec4(\\\\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\\\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\\\\n                     : 0.0,\\\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\\\\n                     : 0.0,\\\\n          (hasNextRow && hasNextCol) ?\\\\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\\\\n\\\\n        vec4 bottomRight = vec4(\\\\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\\\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\\\\n                     : 0.0,\\\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\\\\n                     : 0.0,\\\\n          (hasNextRow && hasNextCol) ?\\\\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\\\\n\\\\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\\\\n\\\\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\\\\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\\\\n        vec4 newValue = mix(top, bottom, fracRC.x);\\\\n\\\\n        setOutput(newValue);\\\\n      }\\\\n    \\\"}}(),Di=function(){return function(t,e,n){this.variableNames=[\\\"dy\\\"],this.outputShape=[],this.outputShape=e.shape;var r=e.shape,o=r[1],a=r[2],i=t.shape,s=i[1],u=i[2],l=[n&&s>1?o-1:o,n&&u>1?a-1:a],c=[n&&s>1?s-1:s,n&&u>1?u-1:u],h=l[0]/c[0],p=l[1]/c[1],f=1/h,d=1/p,v=2*Math.ceil(f)+2,m=2*Math.ceil(d)+2;this.userCode=\\\"\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int b = coords[0];\\\\n        int d = coords[3];\\\\n        int r = coords[1];\\\\n        int c = coords[2];\\\\n\\\\n        float accumulator = 0.0;\\\\n\\\\n        const float heightScale = float(\\\"+h+\\\");\\\\n        const float widthScale = float(\\\"+p+\\\");\\\\n\\\\n        const float invHeightScale = float(\\\"+f+\\\");\\\\n        const float invWidthScale = float(\\\"+d+\\\");\\\\n\\\\n        const int winHeight = int(\\\"+v+\\\");\\\\n        const int winWidth = int(\\\"+m+\\\");\\\\n\\\\n        // Compute bounds for where in dy we will look\\\\n        float startRLerp = floor(float(r) * invHeightScale);\\\\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\\\\n\\\\n        float startCLerp = floor(float(c) * invWidthScale);\\\\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\\\\n\\\\n        // Loop over dy\\\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\\\n          int dyR = dyROffset + startDyR;\\\\n\\\\n          // Guard against the window exceeding the bounds of dy\\\\n          if (dyR < 0 || dyR >= \\\"+s+\\\") {\\\\n            continue;\\\\n          }\\\\n\\\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\\\n            int dyC = dyCOffset + startDyC;\\\\n\\\\n            // Guard against the window exceeding the bounds of dy\\\\n            if (dyC < 0 || dyC >= \\\"+u+\\\") {\\\\n              continue;\\\\n            }\\\\n\\\\n            float sourceFracRow =\\\\n              float(\\\"+l[0]+\\\") *\\\\n                (float(dyR) / float(\\\"+c[0]+\\\"));\\\\n\\\\n            float sourceFracCol =\\\\n                float(\\\"+l[1]+\\\") *\\\\n                  (float(dyC) / float(\\\"+c[1]+\\\"));\\\\n\\\\n            int sourceNearestRow = int(min(\\\\n                float(int(\\\"+o+\\\") - 1),\\\\n                \\\"+n+\\\" ? float(round(sourceFracRow)) :\\\\n                                  float(floor(sourceFracRow))));\\\\n\\\\n            int sourceNearestCol = int(min(\\\\n                float(int(\\\"+a+\\\") - 1),\\\\n                \\\"+n+\\\" ? float(round(sourceFracCol)) :\\\\n                                  float(floor(sourceFracCol))));\\\\n\\\\n            if (r == sourceNearestRow && c == sourceNearestCol) {\\\\n              accumulator += getDy(b, dyR, dyC, d);\\\\n            }\\\\n          }\\\\n        }\\\\n        // End loop over dy\\\\n\\\\n        setOutput(accumulator);\\\\n      }\\\\n    \\\"}}(),_i=function(){return function(t,e,n,r){this.variableNames=[\\\"A\\\"],this.outputShape=[];var o=t[0],a=t[1],i=t[2],s=t[3];this.outputShape=[o,e,n,s];var u=[r&&e>1?a-1:a,r&&n>1?i-1:i],l=[r&&e>1?e-1:e,r&&n>1?n-1:n],c=r?\\\"0.5\\\":\\\"0.0\\\";this.userCode=\\\"\\\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\\\n          \\\"+u[0]/l[0]+\\\",\\\\n          \\\"+u[1]/l[1]+\\\");\\\\n      const vec2 inputShapeRC = vec2(\\\"+a+\\\".0, \\\"+i+\\\".0);\\\\n\\\\n      void main() {\\\\n        ivec4 coords = getOutputCoords();\\\\n        int b = coords[0];\\\\n        int d = coords[3];\\\\n        ivec2 yRC = coords.yz;\\\\n\\\\n        // Fractional source index.\\\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\\\n\\\\n        // Compute the coordinators of nearest neighbor point.\\\\n        ivec2 sourceNearestRC = ivec2(\\\\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + \\\"+c+\\\")));\\\\n\\\\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\\\\n\\\\n        setOutput(newValue);\\\\n      }\\\\n    \\\"}}(),Oi=function(){return function(t,e){this.variableNames=[\\\"x\\\"];var n=t.length;if(n>4)throw new Error(\\\"WebGL backend: Reverse of rank-\\\"+n+\\\" tensor is not yet supported\\\");if(this.outputShape=t,1!==n){var r=t.map(function(n,r){return function(n){return-1!==e.indexOf(n)&&1!==t[n]?t[n]+\\\" - coords[\\\"+n+\\\"] - 1\\\":\\\"coords[\\\"+n+\\\"]\\\"}(r)}).join(\\\",\\\"),o=jo(n);this.userCode=\\\"\\\\n      void main() {\\\\n        \\\"+o+\\\" coords = getOutputCoords();\\\\n        setOutput(getX(\\\"+r+\\\"));\\\\n      }\\\\n    \\\"}else this.userCode=\\\"\\\\n        void main() {\\\\n          int coord = getOutputCoords();\\\\n          setOutput(getX(\\\"+t[0]+\\\" - coord - 1));\\\\n        }\\\\n      \\\"}}(),Fi=function(){return function(t,e){this.variableNames=[\\\"x\\\"],this.usesPackedTextures=!0;var n=t.length;if(n>4)throw new Error(\\\"WebGL backend: Reverse of rank-\\\"+n+\\\" tensor is not yet supported\\\");this.outputShape=t;var r=Fo(\\\"rc\\\",n),o=r[n-1]+\\\" + 1 < \\\"+this.outputShape[n-1],a=r[n-2]+\\\" + 1 < \\\"+this.outputShape[n-2],i=jo(n);function s(n){var r=t.map(function(r,o){return function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?t[n]+\\\" - \\\"+r[n]+\\\" - 1\\\":\\\"\\\"+r[n]}(o,n)});return\\\"getChannel(getX(\\\"+r.join(\\\",\\\")+\\\"), vec2(\\\"+r.slice(-2).join(\\\",\\\")+\\\"))\\\"}this.userCode=1===n?\\\"\\\\n        void main(){\\\\n          int rc = getOutputCoords();\\\\n          vec4 result = vec4(0.);\\\\n          result.r = getChannel(getX(\\\"+t[0]+\\\" - rc - 1),\\\\n            \\\"+t[0]+\\\" - rc - 1);\\\\n          if(\\\"+o+\\\"){\\\\n              result.g = getChannel(getX(\\\"+t[0]+\\\" - (rc  + 1) - 1),\\\\n                \\\"+t[0]+\\\" - (rc  + 1) - 1);\\\\n          }\\\\n          setOutput(result);\\\\n        }\\\\n      \\\":\\\"\\\\n        void main() {\\\\n          \\\"+i+\\\" rc = getOutputCoords();\\\\n          vec4 result = vec4(0.);\\\\n          result.r = \\\"+function(t){return s(t)}(r.slice())+\\\";\\\\n          if(\\\"+o+\\\"){\\\\n            result.g = \\\"+function(t){return t[n-1]=\\\"(\\\"+t[n-1]+\\\" + 1)\\\",s(t)}(r.slice())+\\\";\\\\n          }\\\\n          if(\\\"+a+\\\") {\\\\n            result.b = \\\"+function(t){return t[n-2]=\\\"(\\\"+t[n-2]+\\\" + 1)\\\",s(t)}(r.slice())+\\\";\\\\n            if(\\\"+o+\\\") {\\\\n              result.a = \\\"+function(t){return t[n-1]=\\\"(\\\"+t[n-1]+\\\" + 1)\\\",t[n-2]=\\\"(\\\"+t[n-2]+\\\" + 1)\\\",s(t)}(r.slice())+\\\";\\\\n            }\\\\n          }\\\\n          setOutput(result);\\\\n        }\\\\n    \\\"}}(),Mi=function(){return function(t,e,n,r,o,a,i){void 0===i&&(i=!0),this.variableNames=[\\\"updates\\\",\\\"indices\\\",\\\"defaultValue\\\"],this.outputShape=a;var s=jo(o.length),u=jo(a.length),l=\\\"\\\";1===n?l=\\\"i\\\":2===n&&(l=\\\"i, j\\\");var c=\\\"getIndices(\\\"+l+\\\")\\\",h=\\\"\\\";1===r?h=\\\"i\\\":2===r&&(h=\\\"i, coords[1]\\\");var p=\\\"getUpdates(\\\"+h+\\\")\\\",f=e>1?\\\"strides[j]\\\":\\\"strides\\\";this.userCode=\\\"\\\\n        \\\"+s+\\\" strides = \\\"+s+\\\"(\\\"+o+\\\");\\\\n\\\\n        void main() {\\\\n          \\\"+u+\\\" coords = getOutputCoords();\\\\n          float sum = 0.0;\\\\n          bool found = false;\\\\n          for (int i = 0; i < \\\"+t+\\\"; i++) {\\\\n            int flattenedIndex = 0;\\\\n            for (int j = 0; j < \\\"+e+\\\"; j++) {\\\\n              int index = round(\\\"+c+\\\");\\\\n              flattenedIndex += index * \\\"+f+\\\";\\\\n            }\\\\n            if (flattenedIndex == coords[0]) {\\\\n              sum += \\\"+p+\\\";\\\\n              found = true;\\\\n            }\\\\n          }\\\\n          setOutput(mix(getDefaultValue(), sum, float(found)));\\\\n        }\\\\n      \\\"}}(),Bi=function(){return function(t,e){this.variableNames=[\\\"x\\\",\\\"segmentIds\\\"];var n=t.windowSize,r=t.batchSize,o=t.inSize,a=t.numSegments,i=a*Math.ceil(o/n);this.outputShape=[r,i];var s=4*Math.floor(n/4),u=n%4,l=\\\"\\\\n        sumValue += dot(values, segFilter);\\\\n    \\\",c=\\\"\\\";o%n>0&&(c=\\\"\\\\n        if (inIdx < 0 || inIdx >= \\\"+o+\\\") {\\\\n          return initializationValue;\\\\n        }\\\\n      \\\");var h=\\\"\\\";o%n>0&&(h=\\\"\\\\n        if (inIdx < 0 || inIdx >= \\\"+o+\\\") {\\\\n          return -1.0;\\\\n        }\\\\n      \\\"),this.userCode=\\\"\\\\n      const float initializationValue = 0.0;\\\\n\\\\n      float getValue(int batch, int inIdx) {\\\\n        \\\"+c+\\\"\\\\n        return getX(batch, inIdx);\\\\n      }\\\\n\\\\n      float getSegmentIdAtIndex(int inIdx) {\\\\n        \\\"+h+\\\"\\\\n        return getSegmentIds(inIdx);\\\\n      }\\\\n\\\\n      void main() {\\\\n        ivec2 coords = getOutputCoords();\\\\n        int batch = coords[0];\\\\n        int outIdx = coords[1];\\\\n        int inOffset = int(floor(float(outIdx) / float(\\\\n          \\\"+a+\\\")) * float(\\\"+n+\\\"));\\\\n        int currentSeg = int(mod(float(outIdx), float(\\\"+a+\\\")));\\\\n\\\\n        float sumValue = 0.0;\\\\n\\\\n        for (int i = 0; i < \\\"+s+\\\"; i += 4) {\\\\n          int inIdx = inOffset + i;\\\\n          vec4 values = vec4(\\\\n            getValue(batch, inIdx),\\\\n            getValue(batch, inIdx + 1),\\\\n            getValue(batch, inIdx + 2),\\\\n            getValue(batch, inIdx + 3)\\\\n          );\\\\n\\\\n          vec4 segFilter = vec4(\\\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\\\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\\\\n          );\\\\n\\\\n          \\\"+l+\\\"\\\\n        }\\\\n\\\\n        int inIdx = inOffset + \\\"+s+\\\";\\\\n        if (\\\"+(1===u)+\\\") {\\\\n          vec4 values = vec4(\\\\n            getValue(batch, inIdx),\\\\n            initializationValue,\\\\n            initializationValue,\\\\n            initializationValue\\\\n          );\\\\n\\\\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\\\\n\\\\n          vec4 segFilter = vec4(\\\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\\\n            0,\\\\n            0,\\\\n            0\\\\n          );\\\\n\\\\n          \\\"+l+\\\"\\\\n        } else if (\\\"+(2===u)+\\\") {\\\\n          vec4 values = vec4(\\\\n            getValue(batch, inIdx),\\\\n            getValue(batch, inIdx + 1),\\\\n            initializationValue,\\\\n            initializationValue\\\\n          );\\\\n\\\\n          vec4 segFilter = vec4(\\\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\\\n              0,\\\\n              0\\\\n          );\\\\n\\\\n          \\\"+l+\\\"\\\\n        } else if (\\\"+(3===u)+\\\") {\\\\n          vec4 values = vec4(\\\\n            getValue(batch, inIdx),\\\\n            getValue(batch, inIdx + 1),\\\\n            getValue(batch, inIdx + 2),\\\\n            initializationValue\\\\n          );\\\\n\\\\n          vec4 segFilter = vec4(\\\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\\\n            0\\\\n          );\\\\n\\\\n          \\\"+l+\\\"\\\\n        }\\\\n        setOutput(sumValue);\\\\n      }\\\\n    \\\"}}(),Pi=function(){return function(t,e,n){var r,o;if(this.variableNames=[\\\"c\\\",\\\"a\\\",\\\"b\\\"],this.outputShape=e,n>4)throw Error(\\\"Where for rank \\\"+n+\\\" is not yet supported\\\");if(1===n)o=\\\"resRC\\\",r=\\\"resRC\\\";else{for(var a=[\\\"resRC.x\\\",\\\"resRC.y\\\",\\\"resRC.z\\\",\\\"resRC.w\\\"],i=[],s=[],u=0;u<e.length;u++)s.push(\\\"\\\"+a[u]),u<t&&i.push(\\\"\\\"+a[u]);r=i.join(),o=s.join()}var l=jo(n);this.userCode=\\\"\\\\n      void main() {\\\\n        \\\"+l+\\\" resRC = getOutputCoords();\\\\n        float cVal = getC(\\\"+r+\\\");\\\\n        if (cVal >= 1.0) {\\\\n          setOutput(getA(\\\"+o+\\\"));\\\\n        } else {\\\\n          setOutput(getB(\\\"+o+\\\"));\\\\n        }\\\\n      }\\\\n    \\\"}}(),Li=function(){function t(t){this.variableNames=[\\\"source\\\"],this.outputShape=t,this.rank=t.length;var e,n=jo(this.rank),r=\\\"uniform int start[\\\"+this.rank+\\\"];\\\",o=function(t){if(1===t)return\\\"sourceLoc\\\";if(t<=6)return Wi.slice(0,t).map(function(t){return\\\"sourceLoc.\\\"+t}).join(\\\",\\\");throw Error(\\\"Slicing for rank \\\"+t+\\\" is not yet supported\\\")}(this.rank);e=\\\"\\\\n        \\\"+n+\\\" sourceLoc;\\\\n        \\\"+n+\\\" coords = getOutputCoords();\\\\n        \\\"+t.map(function(t,e){return\\\"sourceLoc.\\\"+Wi[e]+\\\" = start[\\\"+e+\\\"] + coords.\\\"+Wi[e]+\\\";\\\"}).join(\\\"\\\\n\\\")+\\\"\\\\n      \\\",this.userCode=\\\"\\\\n      \\\"+r+\\\"\\\\n      void main() {\\\\n        \\\"+e+\\\"\\\\n        setOutput(getSource(\\\"+o+\\\"));\\\\n      }\\\\n    \\\"}return t.prototype.getCustomSetupFunc=function(t){var e=this;if(t.length!==this.rank)throw Error(\\\"The rank (\\\"+this.rank+\\\") of the program must match the length of start (\\\"+t.length+\\\")\\\");return function(n,r){null==e.startLoc&&(e.startLoc=n.getUniformLocationNoThrow(r,\\\"start\\\"),null==e.startLoc)||n.gl.uniform1iv(e.startLoc,t)}},t}(),Wi=[\\\"x\\\",\\\"y\\\",\\\"z\\\",\\\"w\\\",\\\"u\\\",\\\"v\\\"];var Ui=function(){function t(t){this.variableNames=[\\\"source\\\"],this.usesPackedTextures=!0,this.outputShape=t,this.rank=t.length;var e=jo(this.rank),n=Fo(\\\"coords\\\",this.rank),r=Fo(\\\"sourceLoc\\\",this.rank),o=1===this.rank?\\\"sourceLoc\\\":\\\"vec2(\\\"+r.slice(-2).join()+\\\")\\\",a=\\\"getChannel(getSource(\\\"+r.join()+\\\"), \\\"+o+\\\")\\\",i=\\\"\\\\n      result.x = \\\"+a+\\\";\\\\n      if (++\\\"+n[this.rank-1]+\\\" < \\\"+t[this.rank-1]+\\\") {\\\\n        ++\\\"+r[this.rank-1]+\\\";\\\\n        result.y = \\\"+a+\\\";\\\\n        --\\\"+r[this.rank-1]+\\\";\\\\n      }\\\\n    \\\",s=1===this.rank?\\\"\\\":\\\"\\\\n      --\\\"+n[this.rank-1]+\\\";\\\\n      if (++\\\"+n[this.rank-2]+\\\" < \\\"+t[this.rank-2]+\\\") {\\\\n        ++\\\"+r[this.rank-2]+\\\";\\\\n        result.z = \\\"+a+\\\";\\\\n        if (++\\\"+n[this.rank-1]+\\\" < \\\"+t[this.rank-1]+\\\") {\\\\n          ++\\\"+r[this.rank-1]+\\\";\\\\n          result.w = \\\"+a+\\\";\\\\n        }\\\\n      }\\\\n    \\\",u=this.rank<=4?\\\"sourceLoc = coords +\\\\n            \\\"+e+\\\"(\\\"+t.map(function(t,e){return\\\"start[\\\"+e+\\\"]\\\"}).join()+\\\");\\\":t.map(function(t,e){return r[e]+\\\" = \\\"+n[e]+\\\" + start[\\\"+e+\\\"];\\\"}).join(\\\"\\\\n\\\");this.userCode=\\\"\\\\n      uniform int start[\\\"+this.rank+\\\"];\\\\n      void main() {\\\\n        \\\"+e+\\\" coords = getOutputCoords();\\\\n        \\\"+e+\\\" sourceLoc;\\\\n        \\\"+u+\\\" \\\\n        vec4 result = vec4(0.);\\\\n        \\\"+i+\\\"\\\\n        \\\"+s+\\\"\\\\n        setOutput(result);\\\\n      }\\\\n    \\\"}return t.prototype.getCustomSetupFunc=function(t){var e=this;if(t.length!==this.rank)throw Error(\\\"The rank (\\\"+this.rank+\\\") of the program must match the length of start (\\\"+t.length+\\\")\\\");return function(n,r){null==e.startLoc&&(e.startLoc=n.getUniformLocationNoThrow(r,\\\"start\\\"),null==e.startLoc)||n.gl.uniform1iv(e.startLoc,t)}},t}(),Vi=function(){return function(t,e,n){this.variableNames=[\\\"x\\\"],this.outputShape=n;var r=n.length,o=jo(n.length),a=jo(n.length),i=\\\"\\\";if(1===r)i=\\\"coords * strides + begin\\\";else{var s=0;i=n.map(function(t,e){return s++,1===n.length?\\\"coords * strides[\\\"+e+\\\"] + begin[\\\"+e+\\\"]\\\":\\\"coords[\\\"+(s-1)+\\\"] * strides[\\\"+e+\\\"] + begin[\\\"+e+\\\"]\\\"}).join(\\\",\\\")}this.userCode=\\\"\\\\n      \\\"+o+\\\" begin = \\\"+o+\\\"(\\\"+t+\\\");\\\\n      \\\"+o+\\\" strides = \\\"+o+\\\"(\\\"+e+\\\");\\\\n\\\\n      void main() {\\\\n        \\\"+a+\\\" coords = getOutputCoords();\\\\n        setOutput(getX(\\\"+i+\\\"));\\\\n      }\\\\n    \\\"}}(),zi=function(){function t(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}return t.prototype.acquireTexture=function(t,e,n){var r,o=Gi(e,n),a=Hi(t,o,n);if(a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]),this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();var i=this.freeTextures[a].shift();return this.usedTextures[a].push(i),i}return this.numUsedTextures++,this.log(),o===Dt.PACKED_2X2_FLOAT32?r=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===Dt.PACKED_2X2_FLOAT16?r=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===Dt.UNPACKED_FLOAT32?r=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===Dt.UNPACKED_FLOAT16?r=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===Dt.PACKED_4X1_UNSIGNED_BYTE&&(r=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(r),r},t.prototype.releaseTexture=function(t,e,n,r){if(null!=this.freeTextures){var o=Hi(e,Gi(n,r),r);o in this.freeTextures||(this.freeTextures[o]=[]),this.freeTextures[o].push(t),this.numFreeTextures++,this.numUsedTextures--;var a=this.usedTextures[o],i=a.indexOf(t);if(i<0)throw new Error(\\\"Cannot release a texture that was never provided by this texture manager\\\");a.splice(i,1),this.log()}},t.prototype.log=function(){if(this.logEnabled){var t=this.numFreeTextures+this.numUsedTextures;console.log(\\\"Free/Used\\\",this.numFreeTextures+\\\" / \\\"+this.numUsedTextures,\\\"(\\\"+t+\\\")\\\")}},t.prototype.getNumUsedTextures=function(){return this.numUsedTextures},t.prototype.getNumFreeTextures=function(){return this.numFreeTextures},t.prototype.dispose=function(){var t=this;if(null!=this.freeTextures){for(var e in this.freeTextures)this.freeTextures[e].forEach(function(e){t.gpgpu.deleteMatrixTexture(e)});for(var e in this.usedTextures)this.usedTextures[e].forEach(function(e){t.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}},t}();function Gi(t,e){if(t===Tt.UPLOAD)return Dt.PACKED_2X2_FLOAT32;if(t===Tt.RENDER||null==t)return function(t){return i.getBool(\\\"WEBGL_RENDER_FLOAT32_ENABLED\\\")?t?Dt.PACKED_2X2_FLOAT32:Dt.UNPACKED_FLOAT32:t?Dt.PACKED_2X2_FLOAT16:Dt.UNPACKED_FLOAT16}(e);if(t===Tt.DOWNLOAD||t===Tt.PIXELS)return Dt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(\\\"Unknown logical texture type \\\"+t)}function Hi(t,e,n){return t[0]+\\\"_\\\"+t[1]+\\\"_\\\"+e+\\\"_\\\"+n}var qi=function(){return function(t,e){this.variableNames=[\\\"A\\\"];for(var n=new Array(t.length),r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;var o=jo(this.rank),a=function(t){var e=t.length;if(e>5)throw Error(\\\"Tile for rank \\\"+e+\\\" is not yet supported\\\");if(1===e)return\\\"imod(resRC, \\\"+t[0]+\\\")\\\";for(var n=[\\\"resRC.x\\\",\\\"resRC.y\\\",\\\"resRC.z\\\",\\\"resRC.w\\\",\\\"resRC.u\\\"],r=[],o=0;o<t.length;o++)r.push(\\\"imod(\\\"+n[o]+\\\", \\\"+t[o]+\\\")\\\");return r.join()}(t);this.userCode=\\\"\\\\n      void main() {\\\\n        \\\"+o+\\\" resRC = getOutputCoords();\\\\n        setOutput(getA(\\\"+a+\\\"));\\\\n      }\\\\n    \\\"}}();var $i=function(){return function(t,e){this.variableNames=[\\\"A\\\"];for(var n=new Array(t.length),r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;var o=jo(this.rank),a=function(t){var e=t.length;if(e>6)throw Error(\\\"Transpose for rank \\\"+e+\\\" is not yet supported\\\");for(var n=[\\\"resRC.x\\\",\\\"resRC.y\\\",\\\"resRC.z\\\",\\\"resRC.w\\\",\\\"resRC.u\\\",\\\"resRC.v\\\"],r=new Array(e),o=0;o<t.length;o++)r[t[o]]=n[o];return r.join()}(e);this.userCode=\\\"\\\\n    void main() {\\\\n      \\\"+o+\\\" resRC = getOutputCoords();\\\\n      setOutput(getA(\\\"+a+\\\"));\\\\n    }\\\\n    \\\"}}();var Ki=function(){return function(t,e){this.variableNames=[\\\"A\\\"],this.usesPackedTextures=!0;for(var n=new Array(t.length),r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(\\\"Packed transpose for rank \\\"+this.rank+\\\" is not yet supported.\\\");var o=jo(this.rank),a=Oo(\\\"rc\\\",this.rank),i=new Array(this.rank);for(r=0;r<e.length;r++)i[e[r]]=a[r];var s=\\\"vec2(\\\"+i.slice(-2).join()+\\\")\\\",u=\\\"++\\\"+a[this.rank-1]+\\\" < \\\"+n[this.rank-1],l=\\\"getChannel(getA(\\\"+i.join()+\\\"), \\\"+s+\\\")\\\";this.userCode=\\\"\\\\n    void main() {\\\\n      \\\"+o+\\\" rc = getOutputCoords();\\\\n      vec4 result = vec4(0.);\\\\n      result[0] = \\\"+l+\\\";\\\\n      if(\\\"+u+\\\") {\\\\n        result[1] = \\\"+l+\\\";\\\\n      }\\\\n      --\\\"+a[this.rank-1]+\\\";\\\\n      if(++\\\"+a[this.rank-2]+\\\" < \\\"+n[this.rank-2]+\\\") {\\\\n        result[2] = \\\"+l+\\\";\\\\n        if(\\\"+u+\\\") {\\\\n          result[3] = \\\"+l+\\\";\\\\n        }\\\\n      }  \\\\n      setOutput(result);\\\\n    }\\\\n    \\\"}}(),ji=1.7580993408473768,Xi=1.0507009873554805,Yi=function(){return function(t,e){this.variableNames=[\\\"A\\\"],this.outputShape=t,this.userCode=\\\"\\\\n      float unaryOperation(float x) {\\\\n        \\\"+e+\\\"\\\\n      }\\\\n\\\\n      void main() {\\\\n        float x = getAAtOutCoords();\\\\n        float y = unaryOperation(x);\\\\n\\\\n        setOutput(y);\\\\n      }\\\\n    \\\"}}(),Qi=\\\"if (isnan(x)) return x;\\\",Ji=\\\"return x;\\\",Zi=\\\"return abs(x);\\\",ts=Qi+\\\"\\\\n  return (x < 0.0) ? 0.0 : x;\\\\n\\\",es=\\\"return (x >= 0.0) ? x : (exp(x) - 1.0);\\\",ns=\\\"\\\\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\\\\n  // see: https://arxiv.org/abs/1706.02515\\\\n  float scaleAlpha = \\\"+ji+\\\";\\\\n  float scale = \\\"+Xi+\\\";\\\\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\\\\n\\\";var rs=\\\"return -x;\\\",os=\\\"return ceil(x);\\\",as=\\\"return floor(x);\\\",is=\\\"return exp(x);\\\",ss=\\\"return exp(x) - 1.0;\\\",us=Qi+\\\"\\\\n  return sin(x);\\\\n\\\",ls=Qi+\\\"\\\\n  return cos(x);\\\\n\\\",cs=Qi+\\\"\\\\n  return atan(x);\\\\n\\\",hs=Qi+\\\"\\\\n  if (x < 1.0) return NAN;\\\\n  return log(x + sqrt(x * x - 1.0));\\\",ps=Qi+\\\"\\\\n  if ((x < -1.0) || (x > 1.0)) return NAN;\\\\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;\\\",fs=\\\"return x;\\\",ds=\\\"return x;\\\",vs=\\\"\\\\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\\\\n  bvec4 isNaN = isnan(x);\\\\n\\\\n  result.r = isNaN.r ? x.r : result.r;\\\\n  result.g = isNaN.g ? x.g : result.g;\\\\n  result.b = isNaN.b ? x.b : result.b;\\\\n  result.a = isNaN.a ? x.a : result.a;\\\\n\\\\n  return result;\\\\n\\\",ms=\\\"\\\\n  vec4 result;\\\\n\\\\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\\\\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\\\\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\\\\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\\\\n\\\\n  return result;\\\\n\\\",gs=function(){return function(t,e){this.variableNames=[\\\"A\\\"],this.usesPackedTextures=!0,this.outputShape=t,this.userCode=\\\"\\\\n      vec4 unaryOperation(vec4 x) {\\\\n        \\\"+e+\\\"\\\\n      }\\\\n\\\\n      void main() {\\\\n        vec4 x = getAAtOutCoords();\\\\n        vec4 y = unaryOperation(x);\\\\n\\\\n        setOutput(y);\\\\n      }\\\\n    \\\"}}(),ys=function(){return function(t){this.variableNames=[\\\"A\\\"],this.usesPackedTextures=!0,this.outputShape=t;var e=t.length,n=Fo(\\\"rc\\\",e),r=jo(e),o=function(t,e){if(1===t)return\\\"rc\\\";for(var n=\\\"\\\",r=0;r<t;r++)n+=e[r],r<t-1&&(n+=\\\",\\\");return n}(e,n),a=n.slice(-2),i=e<=1?\\\"rc\\\":\\\"vec2(\\\"+a.join(\\\",\\\")+\\\")\\\";this.userCode=\\\"\\\\n      void main() {\\\\n        \\\"+r+\\\" rc = getOutputCoords();\\\\n        vec4 packedInput = getA(\\\"+o+\\\");\\\\n\\\\n        setOutput(getChannel(packedInput, \\\"+i+\\\"));\\\\n      }\\\\n    \\\"}}(),xs={};function bs(t,e){if(void 0===e&&(e=!1),\\\"linear\\\"===t)return e?ds:Ji;if(\\\"relu\\\"===t)return e?vs:ts;if(\\\"elu\\\"===t)return e?ms:es;if(\\\"prelu\\\"===t)return e?ca:ua;throw new Error(\\\"Activation \\\"+t+\\\" has not been implemented for the WebGL backend.\\\")}var ws=600;var Cs=function(){function t(t){if(this.gpgpu=t,this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.disposed=!1,!i.getBool(\\\"HAS_WEBGL\\\"))throw new Error(\\\"WebGL is not supported on this device\\\");if(null==t){var e=Mt(i.getNumber(\\\"WEBGL_VERSION\\\"));this.binaryCache=(n=i.getNumber(\\\"WEBGL_VERSION\\\"))in xs?xs[n]:(xs[n]={},xs[n]),this.gpgpu=new ci(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var n;this.textureManager=new zi(this.gpgpu),this.numMBBeforeWarning=null==i.global.screen?1024:i.global.screen.height*i.global.screen.width*window.devicePixelRatio*ws/1024/1024,this.texData=new Jr(this,St)}return t.prototype.register=function(t,e,n){if(this.texData.has(t))throw new Error(\\\"Data buffer is already registered\\\");this.texData.set(t,{shape:e,dtype:n})},t.prototype.fromPixels=function(t,e){if(null==t)throw new Error(\\\"pixels passed to tf.browser.fromPixels() can not be null\\\");var n=\\\"undefined\\\"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas||\\\"undefined\\\"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement,r=t.data instanceof Uint8Array,o=\\\"undefined\\\"!=typeof ImageData&&t instanceof ImageData,a=\\\"undefined\\\"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement,s=\\\"undefined\\\"!=typeof HTMLImageElement&&t instanceof HTMLImageElement,u=a?[t.videoWidth,t.videoHeight]:[t.width,t.height],l=u[0],c=u[1],h=[c,l],p=[c,l,e];if(!(n||r||o||a||s))throw new Error(\\\"pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was \\\"+t.constructor.name);(s||a)&&(null==this.fromPixels2DContext&&(this.fromPixels2DContext=Bt(i.getNumber(\\\"WEBGL_VERSION\\\")).getContext(\\\"2d\\\")),this.fromPixels2DContext.canvas.width=l,this.fromPixels2DContext.canvas.height=c,this.fromPixels2DContext.drawImage(t,0,0,l,c),t=this.fromPixels2DContext.canvas);var f,d,v=this.makeTensorHandle(h,\\\"int32\\\");if(this.texData.get(v.dataId).usage=Tt.PIXELS,this.gpgpu.uploadPixelDataToTexture(this.getTexture(v.dataId),t),i.getBool(\\\"WEBGL_PACK\\\")){f=new Ga(p);var m=this.makePackedTensor(f.outputShape,v.dtype);d=this.compileAndRun(f,[v],m)}else f=new za(p),d=this.compileAndRun(f,[v]);return this.disposeData(v.dataId),d},t.prototype.makeTensorHandle=function(t,e){var n={};return this.register(n,t,e),{dataId:n,shape:t,dtype:e}},t.prototype.write=function(t,e){if(null==e)throw new Error(\\\"MathBackendWebGL.write(): values can not be null\\\");if(i.getBool(\\\"DEBUG\\\"))for(var n=0;n<e.length;n++){var r=e[n];if(!Ht(r)){if(i.getBool(\\\"WEBGL_RENDER_FLOAT32_CAPABLE\\\"))throw Error(\\\"The value \\\"+r+\\\" cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.ENV.set('WEBGL_RENDER_FLOAT32_ENABLED', true);'\\\");throw Error(\\\"The value \\\"+r+\\\" cannot be represented on this device.\\\")}}var o=this.texData.get(t);if(\\\"complex64\\\"===o.dtype)throw new Error(\\\"Cannot write to a complex64 dtype. Please use tf.complex(real, imag).\\\");this.releaseGPUData(t),o.usage=Tt.UPLOAD,o.values=e},t.prototype.readSync=function(t){var e=this.texData.get(t),n=e.values,r=e.dtype,o=e.complexTensors,a=e.slice,i=e.shape,s=e.isPacked;if(null!=a){var u=void 0;u=s?new gs(i,fs):new Yi(i,fs);var l=this.compileAndRun(u,[{dataId:t,shape:i,dtype:r}]),c=this.readSync(l.dataId);return l.dispose(),c}if(null!=n)return this.convertAndCacheOnCPU(t);if(\\\"string\\\"===r)return n;var h,p,f=null!=this.activeTimers;(f&&(h=$()),\\\"complex64\\\"===r)?p=bo(o.real.dataSync(),o.imag.dataSync()):p=this.getValuesFromTexture(t);return f&&(this.downloadWaitMs+=$()-h),this.convertAndCacheOnCPU(t,p)},t.prototype.read=function(t){return n(this,void 0,void 0,function(){var e,n,o,a,s,u,l,c,h,p,f,d,v,m,y,x,b,w,C,E,R,I;return r(this,function(r){switch(r.label){case 0:if(this.pendingRead.has(t))return e=this.pendingRead.get(t),[2,new Promise(function(t){return e.push(t)})];if(n=this.texData.get(t),o=n.values,a=n.shape,s=n.slice,u=n.dtype,l=n.complexTensors,c=n.isPacked,null!=s)return h=void 0,h=c?new gs(a,fs):new Yi(a,fs),p=this.compileAndRun(h,[{dataId:t,shape:a,dtype:u}]),f=this.read(p.dataId),p.dispose(),[2,f];if(null!=o)return[2,this.convertAndCacheOnCPU(t)];if(!i.getBool(\\\"WEBGL_DOWNLOAD_FLOAT_ENABLED\\\")&&2===i.getNumber(\\\"WEBGL_VERSION\\\"))throw new Error(\\\"tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.\\\");return d=null,\\\"complex64\\\"!==u&&i.get(\\\"WEBGL_BUFFER_SUPPORTED\\\")&&(v=this.decode(t),m=this.texData.get(v.dataId),d=(I=this.gpgpu).createBufferFromTexture.apply(I,[m.texture].concat(Lt(a)))),this.pendingRead.set(t,[]),\\\"complex64\\\"===u?[3,2]:[4,this.gpgpu.createAndWaitForFence()];case 1:r.sent(),r.label=2;case 2:return\\\"complex64\\\"!==u?[3,4]:[4,Promise.all([l.real.data(),l.imag.data()])];case 3:return x=r.sent(),b=x[0],w=x[1],y=bo(b,w),[3,5];case 4:null==d?y=this.getValuesFromTexture(t):(C=g(a),y=this.gpgpu.downloadFloat32MatrixFromBuffer(d,C)),r.label=5;case 5:return null!=v&&this.disposeData(v.dataId),E=this.convertAndCacheOnCPU(t,y),R=this.pendingRead.get(t),this.pendingRead.delete(t),R.forEach(function(t){return t(E)}),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)),[2,E]}})})},t.prototype.getValuesFromTexture=function(t){var e,n=this,r=this.texData.get(t),o=r.shape,a=r.dtype,s=r.isPacked,u=g(o);if(i.getBool(\\\"WEBGL_DOWNLOAD_FLOAT_ENABLED\\\")){var l=this.decode(t),c=this.texData.get(l.dataId),h=(e=this.gpgpu).downloadMatrixFromPackedTexture.apply(e,[c.texture].concat(Lt(o))).subarray(0,u);return this.disposeData(l.dataId),h}var p=i.getBool(\\\"WEBGL_PACK\\\")&&!0===s,f=p?xe(o):o,d=this.makeTensorHandle(f,\\\"float32\\\");d.size=g(o),this.texData.get(d.dataId).usage=Tt.DOWNLOAD;var v=Ue(function(){var e=p?new Ma(f):new Fa(f);return n.compileAndRun(e,[{shape:f,dtype:a,dataId:t}],d,null)}),m=this.texData.get(v.dataId),y=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(m.texture,m.texShape[0],m.texShape[1]).subarray(0,u);return this.disposeData(d.dataId),y},t.prototype.time=function(t){return n(this,void 0,void 0,function(){var e,n,o,a,i,s,u;return r(this,function(r){switch(r.label){case 0:return e=this.activeTimers,n=[],o=!1,null==this.programTimersStack?(this.programTimersStack=n,o=!0):this.activeTimers.push(n),this.activeTimers=n,t(),a=m(this.activeTimers.map(function(t){return t.query})).filter(function(t){return null!=t}),i=m(this.activeTimers.map(function(t){return t.name})).filter(function(t){return null!=t}),this.activeTimers=e,o&&(this.programTimersStack=null),[4,Promise.all(a)];case 1:return s=r.sent(),u={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:p(s),getExtraProfileInfo:function(){return s.map(function(t,e){return{name:i[e],ms:t}}).map(function(t){return t.name+\\\": \\\"+t.ms}).join(\\\", \\\")},wallMs:null},this.uploadWaitMs=0,this.downloadWaitMs=0,[2,u]}})})},t.prototype.memory=function(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}},t.prototype.startTimer=function(){return i.getNumber(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\\\")>0?this.gpgpu.beginQuery():{startMs:$(),endMs:null}},t.prototype.endTimer=function(t){return i.getNumber(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\\\")>0?(this.gpgpu.endQuery(),t):(t.endMs=$(),t)},t.prototype.getQueryTime=function(t){return n(this,void 0,void 0,function(){var e;return r(this,function(n){return i.getNumber(\\\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\\\")>0?[2,this.gpgpu.waitForQueryAndGetTime(t)]:[2,(e=t).endMs-e.startMs]})})},t.prototype.disposeData=function(t){if(!this.pendingDisposal.has(t))if(this.pendingRead.has(t))this.pendingDisposal.add(t);else if(this.texData.has(t)){this.releaseGPUData(t);var e=this.texData.get(t).complexTensors;null!=e&&(e.real.dispose(),e.imag.dispose()),this.texData.delete(t)}},t.prototype.releaseGPUData=function(t){var e=this.texData.get(t),n=e.texture,r=e.dtype,o=e.texShape,a=e.usage,i=e.isPacked,s=e.slice,u=s&&s.origDataId||t,l=this.dataRefCount.get(u);l>1?this.dataRefCount.set(u,l-1):(this.dataRefCount.delete(u),null!=n&&(this.numBytesInGPU-=this.computeBytes(o,r),this.textureManager.releaseTexture(n,o,a,i)));var c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null},t.prototype.getTexture=function(t){return this.uploadToGPU(t),this.texData.get(t).texture},t.prototype.getDataInfo=function(t){return this.texData.get(t)},t.prototype.getCPUBackend=function(){return i.getBool(\\\"WEBGL_CPU_FORWARD\\\")?(null==this.cpuBackend&&(this.cpuBackend=St.findBackend(\\\"cpu\\\")),this.cpuBackend):null},t.prototype.shouldExecuteOnCPU=function(t,e){var n=this;return void 0===e&&(e=128),null!=this.getCPUBackend()&&t.every(function(t){return null==n.texData.get(t.dataId).texture&&t.size<e})},t.prototype.getGPGPUContext=function(){return this.gpgpu},t.prototype.complex=function(t,e){var n=this.makeOutputArray(t.shape,\\\"complex64\\\");return this.texData.get(n.dataId).complexTensors={real:St.keep(t.clone()),imag:St.keep(e.clone())},n},t.prototype.real=function(t){return this.texData.get(t.dataId).complexTensors.real.clone()},t.prototype.imag=function(t){return this.texData.get(t.dataId).complexTensors.imag.clone()},t.prototype.slice=function(t,e,n){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,e,n);if(0===g(n))return xn([],n,t.dtype);var r=this.texData.get(t.dataId).isPacked,o=Vr(t.shape,e,n);if(r||!o){var a=i.getBool(\\\"WEBGL_PACK_ARRAY_OPERATIONS\\\")?new Ui(n):new Li(n),s=a.getCustomSetupFunc(e);return this.compileAndRun(a,[t],null,s)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)},t.prototype.shallowSlice=function(t,e,n){var r=this.texData.get(t.dataId),o=ct.make(n,{},t.dtype,this),a=this.texData.get(o.dataId);Object.assign(a,r),a.shape=n,a.dtype=t.dtype;var i=zr(e,t.strides);r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};var s=this.dataRefCount.get(a.slice.origDataId)||1;return this.dataRefCount.set(a.slice.origDataId,s+1),o},t.prototype.stridedSlice=function(t,e,n,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,e,n,r);var o=Lr(e,n,r);if(o.some(function(t){return 0===t}))return xn([],o);var a=new Vi(e,r,o);return this.compileAndRun(a,[t])},t.prototype.reverse=function(t,e){var n=i.getBool(\\\"WEBGL_PACK_ARRAY_OPERATIONS\\\")?new Fi(t.shape,e):new Oi(t.shape,e);return this.compileAndRun(n,[t])},t.prototype.concat=function(t,e){if(\\\"complex64\\\"===t[0].dtype){var n=t.map(function(t){return gn(t)}),r=t.map(function(t){return yn(t)});return mn(this.concat(n,e),this.concat(r,e))}if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,e);if(1===t.length)return t[0];if(t.length>i.getNumber(\\\"WEBGL_MAX_TEXTURES_IN_SHADER\\\")){var o=Math.floor(t.length/2),a=this.concat(t.slice(0,o),e),s=this.concat(t.slice(o),e);return this.concat([a,s],e)}if(i.getBool(\\\"WEBGL_PACK_ARRAY_OPERATIONS\\\")&&t[0].rank>1){var u=new ma(t.map(function(t){return t.shape}),e);return this.compileAndRun(u,t)}var l=dn(t.map(function(t){return t.shape}),e),c=t.map(function(t){return t.as2D(-1,g(t.shape.slice(e)))}),h=new va(c.map(function(t){return t.shape}));return this.compileAndRun(h,c).reshape(l)},t.prototype.neg=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.neg(t);if(i.getBool(\\\"WEBGL_PACK_UNARY_OPERATIONS\\\"))return this.packedUnaryOp(t,rs,t.dtype);var e=new Yi(t.shape,rs);return this.compileAndRun(e,[t])},t.prototype.batchMatMul=function(t,e,n,r){var o=n?t.shape[2]:t.shape[1],a=r?e.shape[1]:e.shape[2],i=n?t.shape[1]:t.shape[2],s=t.shape[0];if((1===o||1===a)&&i>1e3){n&&(t=t.transpose([0,2,1])),r&&(e=e.transpose([0,2,1]));var u=1===a?t:t.as3D(s,i,1),l=1===a?2:1,c=1===a?e.as3D(s,1,i):e;return this.multiply(u,c).sum(l,!0)}var h=xt(t.dtype,e.dtype),p=new yi(t.shape,[s,o,a],n,r),f=this.makePackedTensor(p.outputShape,h);return this.compileAndRun(p,[t,e],f)},t.prototype.fusedBatchMatMul=function(t){var e=t.a,n=t.b,r=t.transposeA,o=t.transposeB,a=t.bias,i=t.activation,s=t.preluActivationWeights,u=r?e.shape[2]:e.shape[1],l=o?n.shape[1]:n.shape[2],c=e.shape[0],h=xt(e.dtype,n.dtype),p=null!=a,f=null!=s,d=i?bs(i,!0):null,v=new yi(e.shape,[c,u,l],r,o,p,d,f),m=this.makePackedTensor(v.outputShape,h),g=[e,n];return a&&g.push(a),s&&g.push(s),this.compileAndRun(v,g,m)},t.prototype.multiply=function(t,e){if(\\\"complex64\\\"===t.dtype){var n=this.texData.get(t.dataId),r=this.texData.get(e.dataId),o=new oa(na,t.shape,e.shape),a=new oa(ra,t.shape,e.shape),s=[this.makeComplexComponentTensorHandle(t,n.complexTensors.real),this.makeComplexComponentTensorHandle(t,n.complexTensors.imag),this.makeComplexComponentTensorHandle(e,r.complexTensors.real),this.makeComplexComponentTensorHandle(e,r.complexTensors.imag)],u=this.compileAndRun(o,s),l=this.compileAndRun(a,s),c=this.complex(u,l);return u.dispose(),l.dispose(),c}if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.multiply(t,e);if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"))return this.packedBinaryOp(t,e,sa,t.dtype);var h=new la(sa,t.shape,e.shape),p=this.makeOutputArray(h.outputShape,t.dtype);return this.compileAndRun(h,[t,e],p)},t.prototype.batchNormalization=function(t,e,n,r,o,a){var s=[t,e,n],u=null;null!=a&&(u=a.shape,s.push(a));var l=null;if(null!=o&&(l=o.shape,s.push(o)),i.getBool(\\\"WEBGL_PACK_NORMALIZATION\\\")){var c=new ea(t.shape,e.shape,n.shape,u,l,r);return this.compileAndRun(c,s)}var h=new ta(t.shape,e.shape,n.shape,u,l,r);return this.compileAndRun(h,s)},t.prototype.localResponseNormalization4D=function(t,e,n,r,o){var a=i.getBool(\\\"WEBGL_PACK_NORMALIZATION\\\")?new vi(t.shape,e,n,r,o):new fi(t.shape,e,n,r,o);return this.compileAndRun(a,[t])},t.prototype.LRNGrad=function(t,e,n,r,o,a,i){var s=new di(e.shape,r,o,a,i);return this.compileAndRun(s,[e,n,t])},t.prototype.tile=function(t,e){if(\\\"string\\\"===t.dtype){var n=this.readSync(t.dataId).map(function(t){return X(t)});return No(Zn(t.shape,t.dtype,n),e)}var r=new qi(t.shape,e);return this.compileAndRun(r,[t])},t.prototype.pad=function(t,e,n){var r=i.getBool(\\\"WEBGL_PACK_ARRAY_OPERATIONS\\\")?new Ei(t.shape,e,n):new Ci(t.shape,e,n);return this.compileAndRun(r,[t])},t.prototype.transpose=function(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.transpose(t,e);var n=i.getBool(\\\"WEBGL_PACK_ARRAY_OPERATIONS\\\")?new Ki(t.shape,e):new $i(t.shape,e);return this.compileAndRun(n,[t])},t.prototype.gather=function(t,e,n){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.gather(t,e,n);var r=new Ha(t.shape,e.size,n);return this.compileAndRun(r,[t,e])},t.prototype.batchToSpaceND=function(t,e,n){f(t.rank<=4,function(){return\\\"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet\\\"});var r=e.reduce(function(t,e){return t*e}),o=Nr(t.shape,e,r),a=Sr(o.length,e.length),i=Ar(t.shape,e,r),s=Tr(n,e.length),u=Dr(i,n,e.length);return t.reshape(o).transpose(a).reshape(i).slice(s,u)},t.prototype.spaceToBatchND=function(t,e,n){f(t.rank<=4,function(){return\\\"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet\\\"});var r=e.reduce(function(t,e){return t*e}),o=[[0,0]];o.push.apply(o,n);for(var a=1+e.length;a<t.shape.length;++a)o.push([0,0]);var i=t.pad(o),s=Nr(i.shape,e,r,!1),u=Sr(s.length,e.length,!1),l=Ar(i.shape,e,r,!1);return i.reshape(s).transpose(u).reshape(l)},t.prototype.reduce=function(t,e,n){var r=t.shape[0],o=t.shape[1],a=Fr(o),i=new ki({windowSize:a,inSize:o,batchSize:r},e),s=i.outputShape,u=s[0],l=s[1],c=this.makeOutputArray([u,l],n);return this.compileAndRun(i,[t],c),1===c.shape[1]?c:this.reduce(c,e,n)},t.prototype.argReduce=function(t,e,n){void 0===n&&(n=null);var r=t.shape[0],o=t.shape[1];null!=n&&(r=n.shape[0],o=n.shape[1]);var a=Fr(o),i=new _o({windowSize:a,inSize:o,batchSize:r},e,null==n),s=i.outputShape,u=s[0],l=s[1],c=this.makeOutputArray([u,l],\\\"int32\\\"),h=[t];return null!=n&&h.push(n),this.compileAndRun(i,h,c),1===c.shape[1]?c:this.argReduce(t,e,c)},t.prototype.argReducePacked=function(t,e,n){void 0===n&&(n=null);var r=null!=n?n.shape:t.shape,o=Fr(r[r.length-1]),a=new Qo(r,o,e,null==n),i=this.makePackedTensor(a.outputShape,\\\"int32\\\"),s=null==n?[t]:[t,n];return this.compileAndRun(a,s,i),i.rank===t.rank?this.argReducePacked(t,e,i):i},t.prototype.sum=function(t,e){ln(\\\"sum\\\",e,t.rank);var n=sn(t.shape,e),r=n[0],o=g(n[1]),a=t.as2D(-1,o),i=bt(t.dtype);return this.reduce(a,\\\"sum\\\",i).reshape(r)},t.prototype.prod=function(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.prod(t,e);var n=sn(t.shape,e),r=n[0],o=g(n[1]),a=t.as2D(-1,o),i=bt(t.dtype);return this.reduce(a,\\\"prod\\\",i).reshape(r)},t.prototype.unsortedSegmentSum=function(t,e,n){var r=0,o=cn([r],t.rank),a=t;null!=o&&(a=t.transpose(o),r=pn(1,t.rank)[0]);var i=function(t,e,n){for(var r=[],o=t.length,a=0;a<o;a++)a!==e?r.push(t[a]):r.push(n);return r}(a.shape,r,n),s=g([a.shape[r]]),u=a.as2D(-1,s),l=bt(t.dtype),c=this.segOpCompute(u,\\\"unsortedSegmentSum\\\",e,l,n).reshape(i);return null!=o&&(c=c.transpose(hn(o))),c},t.prototype.segOpCompute=function(t,e,n,r,o){var a=t.shape[0],i=t.shape[1],s=function(t,e){var n,r=!1;for(t<=Or?(n=t,r=!0):n=U(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=U(t,n+1);return n}(i,o),u=new Bi({windowSize:s,inSize:i,batchSize:a,numSegments:o},e),l=u.outputShape,c=l[0],h=l[1],p=this.makeOutputArray([c,h],r);return this.compileAndRun(u,[t,n],p),p.shape[1]===o?p:(n=_n(0,o).tile([i/s]),this.segOpCompute(p,e,n,r,o))},t.prototype.argMinMaxReduce=function(t,e,n){var r=[e];if(ln(\\\"arg\\\"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!i.getBool(\\\"WEBGL_PACK_REDUCE\\\")||t.rank<=2){var o=sn(t.shape,r),a=o[0],s=g(o[1]),u=t.as2D(-1,s);return this.argReduce(u,n).reshape(a)}return this.argReducePacked(t,n)},t.prototype.argMin=function(t,e){return this.argMinMaxReduce(t,e,\\\"min\\\")},t.prototype.argMax=function(t,e){return this.argMinMaxReduce(t,e,\\\"max\\\")},t.prototype.cumsum=function(t,e,n,r){if(e!==t.rank-1)throw new Error(\\\"WebGL cumsum shader expects an inner-most axis=\\\"+(t.rank-1)+\\\" but got axis=\\\"+e);var o=new Sa(t.shape,n,r);return this.compileAndRun(o,[t])},t.prototype.equal=function(t,e){if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"))return this.packedBinaryOp(t,e,\\\"\\\\n  return vec4(equal(a, b));\\\\n\\\",\\\"bool\\\");var n=new la(\\\"return float(a == b);\\\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\\\"bool\\\");return this.compileAndRun(n,[t,e],r)},t.prototype.notEqual=function(t,e){if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"))return this.packedBinaryOp(t,e,\\\"\\\\n  return vec4(notEqual(a, b));\\\\n\\\",\\\"bool\\\");var n=new la(\\\"return float(a != b);\\\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\\\"bool\\\");return this.compileAndRun(n,[t,e],r)},t.prototype.less=function(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.less(t,e);if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"))return this.packedBinaryOp(t,e,\\\"\\\\n  return vec4(lessThan(a, b));\\\\n\\\",\\\"bool\\\");var n=new la(\\\"return float(a < b);\\\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\\\"bool\\\");return this.compileAndRun(n,[t,e],r)},t.prototype.lessEqual=function(t,e){if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"))return this.packedBinaryOp(t,e,\\\"\\\\n  return vec4(lessThanEqual(a, b));\\\\n\\\",\\\"bool\\\");var n=new la(\\\"return float(a <= b);\\\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\\\"bool\\\");return this.compileAndRun(n,[t,e],r)},t.prototype.greater=function(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.greater(t,e);if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"))return this.packedBinaryOp(t,e,\\\"\\\\n  return vec4(greaterThan(a, b));\\\\n\\\",\\\"bool\\\");var n=new la(\\\"return float(a > b);\\\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\\\"bool\\\");return this.compileAndRun(n,[t,e],r)},t.prototype.greaterEqual=function(t,e){if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"))return this.packedBinaryOp(t,e,\\\"\\\\n  return vec4(greaterThanEqual(a, b));\\\\n\\\",\\\"bool\\\");var n=new la(\\\"return float(a >= b);\\\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\\\"bool\\\");return this.compileAndRun(n,[t,e],r)},t.prototype.logicalNot=function(t){var e=new Yi(t.shape,\\\"return float(!(x >= 1.0));\\\");return this.compileAndRun(e,[t])},t.prototype.logicalAnd=function(t,e){if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"))return this.packedBinaryOp(t,e,\\\"\\\\n  return vec4(\\\\n    vec4(greaterThanEqual(a, vec4(1.0))) *\\\\n    vec4(greaterThanEqual(b, vec4(1.0))));\\\\n\\\",\\\"bool\\\");var n=new la(\\\"return float(a >= 1.0 && b >= 1.0);\\\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\\\"bool\\\");return this.compileAndRun(n,[t,e],r)},t.prototype.logicalOr=function(t,e){if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"))return this.packedBinaryOp(t,e,\\\"\\\\n  return min(\\\\n    vec4(greaterThanEqual(a, vec4(1.0))) +\\\\n    vec4(greaterThanEqual(b, vec4(1.0))),\\\\n    vec4(1.0));\\\\n\\\",\\\"bool\\\");var n=new la(\\\"return float(a >= 1.0 || b >= 1.0);\\\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\\\"bool\\\");return this.compileAndRun(n,[t,e],r)},t.prototype.select=function(t,e,n){var r=new Pi(t.rank,e.shape,e.rank),o=this.makeOutputArray(r.outputShape,xt(e.dtype,n.dtype));return this.compileAndRun(r,[t,e,n],o)},t.prototype.where=function(t){Ze(\\\"tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead\\\");var e=t.dataSync();return Ao(t.shape,e)},t.prototype.topk=function(t,e,n){return So(t.dataSync(),t.shape,t.dtype,e)},t.prototype.min=function(t,e){ln(\\\"min\\\",e,t.rank);var n=sn(t.shape,e),r=n[0],o=g(n[1]),a=t.as2D(-1,o);return this.reduce(a,\\\"min\\\",a.dtype).reshape(r)},t.prototype.minimum=function(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.minimum(t,e);var n=i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\")?new ha(\\\"\\\\n  vec4 result = vec4(min(a, b));\\\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\\\n  \\\\n  result.r = isNaN.r > 0. ? NAN : result.r;\\\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\\\n\\\\n  return result;\\\\n\\\",t.shape,e.shape):new la(\\\"\\\\n  if (isnan(a)) return a;\\\\n  if (isnan(b)) return b;\\\\n\\\\n  return min(a, b);\\\\n\\\",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.mod=function(t,e){var n=i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\")?new ha(\\\"\\\\n  vec4 result = mod(a, b);\\\\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\\\\n  \\\\n  result.r = isNaN.r > 0. ? NAN : result.r;\\\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\\\n\\\\n  return result;\\\\n\\\",t.shape,e.shape):new la(\\\"if (b == 0.0) return NAN;\\\\n  return mod(a, b);\\\",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.max=function(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.max(t,e);ln(\\\"max\\\",e,t.rank);var n=sn(t.shape,e),r=n[0],o=g(n[1]),a=t.as2D(-1,o);return this.reduce(a,\\\"max\\\",a.dtype).reshape(r)},t.prototype.maximum=function(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.maximum(t,e);var n=i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\")?new ha(\\\"\\\\n  vec4 result = vec4(max(a, b));\\\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\\\n  \\\\n  result.r = isNaN.r > 0. ? NAN : result.r;\\\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\\\n\\\\n  return result;\\\\n\\\",t.shape,e.shape):new la(\\\"\\\\n  if (isnan(a)) return a;\\\\n  if (isnan(b)) return b;\\\\n\\\\n  return max(a, b);\\\\n\\\",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.all=function(t,e){ln(\\\"all\\\",e,t.rank);var n=sn(t.shape,e),r=n[0],o=g(n[1]),a=t.as2D(-1,o);return this.reduce(a,\\\"all\\\",a.dtype).reshape(r)},t.prototype.any=function(t,e){ln(\\\"any\\\",e,t.rank);var n=sn(t.shape,e),r=n[0],o=g(n[1]),a=t.as2D(-1,o);return this.reduce(a,\\\"any\\\",a.dtype).reshape(r)},t.prototype.squaredDifference=function(t,e){var n=i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\")?new ha(\\\"return (a - b) * (a - b);\\\",t.shape,e.shape):new la(\\\"return (a - b) * (a - b);\\\",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.realDivide=function(t,e){if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\")){return this.packedBinaryOp(t,e,\\\"\\\\n  // vec4 one = vec4(equal(a, b));\\\\n  // return one + (vec4(1.0) - one) * a / b;\\\\n  vec4 result = a / b;\\\\n  if(b.x == 0.0) {\\\\n    result.x = NAN;\\\\n  } else if(a.x == b.x) {\\\\n    result.x = 1.;\\\\n  }\\\\n  if(b.y == 0.0) {\\\\n    result.y = NAN;\\\\n  } else if(a.y == b.y) {\\\\n    result.y = 1.;\\\\n  }\\\\n  if(b.z == 0.0) {\\\\n    result.z = NAN;\\\\n  } else if(a.z == b.z) {\\\\n    result.z = 1.;\\\\n  }\\\\n  if(b.w == 0.0) {\\\\n    result.w = NAN;\\\\n  } else if(a.w == b.w) {\\\\n    result.w = 1.;\\\\n  }\\\\n\\\\n  return result;\\\\n\\\",\\\"float32\\\",!0)}var n=new la(\\\"\\\\nif (b == 0.0) {\\\\n  return NAN;\\\\n}\\\\nif (a == b) {\\\\n  return 1.0;\\\\n};\\\\nreturn a / b;\\\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\\\"float32\\\");return this.compileAndRun(n,[t,e],r)},t.prototype.floorDiv=function(t,e){if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"))return this.packedBinaryOp(t,e,\\\"\\\\n  ivec4 ia = round(a);\\\\n  ivec4 ib = round(b);\\\\n  bvec4 cond = notEqual(ib, ivec4(0));\\\\n  ivec4 result = ivec4(0);\\\\n  vec4 s = sign(a) * sign(b);\\\\n\\\\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\\\n  if (cond[0]) {\\\\n    result[0] = idiv(ia[0], ib[0], s[0]);\\\\n  }\\\\n  if (cond[1]) {\\\\n    result[1] = idiv(ia[1], ib[1], s[1]);\\\\n  }\\\\n  if (cond[2]) {\\\\n    result[2] = idiv(ia[2], ib[2], s[2]);\\\\n  }\\\\n  if (cond[3]) {\\\\n    result[3] = idiv(ia[3], ib[3], s[3]);\\\\n  }\\\\n  return vec4(result);\\\\n\\\",\\\"int32\\\");var n=new la(\\\"\\\\n  float s = sign(a) * sign(b);\\\\n  int ia = round(a);\\\\n  int ib = round(b);\\\\n  if (ib != 0) {\\\\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\\\n    return float(idiv(ia, ib, s));\\\\n  } else {\\\\n    return NAN;\\\\n  }\\\\n\\\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\\\"int32\\\");return this.compileAndRun(n,[t,e],r)},t.prototype.add=function(t,e){if(\\\"complex64\\\"===t.dtype&&\\\"complex64\\\"===e.dtype)return this.complexSeparableBinaryOp(t,e,aa);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.add(t,e);var n=xt(t.dtype,e.dtype);if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"))return this.packedBinaryOp(t,e,aa,n);var r=new la(aa,t.shape,e.shape),o=this.makeOutputArray(r.outputShape,n);return this.compileAndRun(r,[t,e],o)},t.prototype.packedUnaryOp=function(t,e,n){var r=new gs(t.shape,e),o=this.makePackedTensor(r.outputShape,n);return this.compileAndRun(r,[t],o)},t.prototype.packedBinaryOp=function(t,e,n,r,o){void 0===o&&(o=!1);var a=new ha(n,t.shape,e.shape,o),i=this.makePackedTensor(a.outputShape,r);return this.compileAndRun(a,[t,e],i)},t.prototype.complexSeparableBinaryOp=function(t,e,n){var r=this,o=this.texData.get(t.dataId),a=this.texData.get(e.dataId),i=[[o.complexTensors.real,a.complexTensors.real],[o.complexTensors.imag,a.complexTensors.imag]].map(function(o){var a=o[0],i=o[1],s=r.makeComplexComponentTensorHandle(t,a),u=r.makeComplexComponentTensorHandle(e,i),l=new la(n,t.shape,e.shape),c=r.makeOutputArray(l.outputShape,xt(a.dtype,i.dtype));return r.compileAndRun(l,[s,u],c)}),s=i[0],u=i[1],l=this.complex(s,u);return s.dispose(),u.dispose(),l},t.prototype.makeComplexComponentTensorHandle=function(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}},t.prototype.addN=function(t){if(1===t.length)return t[0];if(t.length>i.get(\\\"WEBGL_MAX_TEXTURES_IN_SHADER\\\")){var e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}var o=t.map(function(t){return t.dtype}).reduce(function(t,e){return xt(t,e)}),a=t.map(function(t){return t.shape}),s=i.getBool(\\\"WEBGL_PACK\\\"),u=s?new Do(t[0].shape,a):new To(t[0].shape,a),l=s?this.makePackedTensor(u.outputShape,o):this.makeOutputArray(u.outputShape,o);return this.compileAndRun(u,t,l)},t.prototype.subtract=function(t,e){if(\\\"complex64\\\"===t.dtype&&\\\"complex64\\\"===e.dtype)return this.complexSeparableBinaryOp(t,e,ia);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.subtract(t,e);var n=xt(t.dtype,e.dtype);if(i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"))return this.packedBinaryOp(t,e,ia,t.dtype);var r=new la(ia,t.shape,e.shape),o=this.makeOutputArray(r.outputShape,n);return this.compileAndRun(r,[t,e],o)},t.prototype.pow=function(t,e){var n=i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\"),r=n?new ha(\\\"\\\\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\\\\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\\\\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\\\\n  vec4 result = multiplier * pow(abs(a), b);\\\\n\\\\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\\\\n  bvec4 isExpZero = equal(b, vec4(0.0));\\\\n  result.r = isExpZero.r ? 1.0 : result.r;\\\\n  result.g = isExpZero.g ? 1.0 : result.g;\\\\n  result.b = isExpZero.b ? 1.0 : result.b;\\\\n  result.a = isExpZero.a ? 1.0 : result.a;\\\\n\\\\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\\\\n  \\\\n  result.r = isNaN.r > 0. ? NAN : result.r;\\\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\\\n\\\\n  return result;\\\\n\\\",t.shape,e.shape):new la(\\\"\\\\nif(a < 0.0 && floor(b) < b){\\\\n  return NAN;\\\\n}\\\\nif (b == 0.0) {\\\\n  return 1.0;\\\\n}\\\\nreturn (round(mod(b, 2.0)) != 1) ?\\\\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\\\\n\\\",t.shape,e.shape),o=xt(t.dtype,e.dtype),a=n?this.makePackedTensor(r.outputShape,o):this.makeOutputArray(r.outputShape,o);return this.compileAndRun(r,[t,e],a)},t.prototype.ceil=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.ceil(t);if(i.getBool(\\\"WEBGL_PACK_UNARY_OPERATIONS\\\"))return this.packedUnaryOp(t,os,t.dtype);var e=new Yi(t.shape,os);return this.compileAndRun(e,[t])},t.prototype.floor=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.floor(t);if(i.getBool(\\\"WEBGL_PACK_UNARY_OPERATIONS\\\"))return this.packedUnaryOp(t,as,t.dtype);var e=new Yi(t.shape,as);return this.compileAndRun(e,[t])},t.prototype.sign=function(t){var e=new Yi(t.shape,\\\"\\\\n  if (isnan(x)) { return 0.0; }\\\\n  return sign(x);\\\\n\\\");return this.compileAndRun(e,[t])},t.prototype.isNaN=function(t){var e=new Yi(t.shape,\\\"return float(isnan(x));\\\"),n=this.makeOutputArray(e.outputShape,\\\"bool\\\");return this.compileAndRun(e,[t],n)},t.prototype.isInf=function(t){var e=new Yi(t.shape,\\\"return float(isinf(x));\\\"),n=this.makeOutputArray(e.outputShape,\\\"bool\\\");return this.compileAndRun(e,[t],n)},t.prototype.isFinite=function(t){var e=new Yi(t.shape,\\\"return float(!isnan(x) && !isinf(x));\\\"),n=this.makeOutputArray(e.outputShape,\\\"bool\\\");return this.compileAndRun(e,[t],n)},t.prototype.round=function(t){var e=new Yi(t.shape,\\\"\\\\n  // OpenGL ES does not support round function.\\\\n  // The algorithm is based on banker's rounding.\\\\n  float base = floor(x);\\\\n  if ((x - base) < 0.5) {\\\\n    return floor(x);\\\\n  } else if ((x - base) > 0.5) {\\\\n    return ceil(x);\\\\n  } else {\\\\n    if (mod(base, 2.0) == 0.0) {\\\\n      return base;\\\\n    } else {\\\\n      return base + 1.0;\\\\n    }\\\\n  }\\\\n\\\");return this.compileAndRun(e,[t])},t.prototype.exp=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.exp(t);if(i.getBool(\\\"WEBGL_PACK_UNARY_OPERATIONS\\\"))return this.packedUnaryOp(t,is,t.dtype);var e=new Yi(t.shape,is);return this.compileAndRun(e,[t])},t.prototype.expm1=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.expm1(t);if(i.getBool(\\\"WEBGL_PACK_UNARY_OPERATIONS\\\"))return this.packedUnaryOp(t,ss,t.dtype);var e=new Yi(t.shape,ss);return this.compileAndRun(e,[t])},t.prototype.log=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.log(t);if(i.getBool(\\\"WEBGL_PACK_UNARY_OPERATIONS\\\"))return this.packedUnaryOp(t,\\\"\\\\n  vec4 result = log(x);\\\\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\\\\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\\\\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\\\\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\\\\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\\\\n\\\\n  return result;\\\\n\\\",t.dtype);var e=new Yi(t.shape,\\\"if (x < 0.0) return NAN;\\\\n  return log(x);\\\");return this.compileAndRun(e,[t])},t.prototype.log1p=function(t){var e=new Yi(t.shape,\\\"return log(1.0 + x);\\\");return this.compileAndRun(e,[t])},t.prototype.sqrt=function(t){var e=new Yi(t.shape,\\\"return sqrt(x);\\\");return this.compileAndRun(e,[t])},t.prototype.rsqrt=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.rsqrt(t);var e=new Yi(t.shape,\\\"return inversesqrt(x);\\\");return this.compileAndRun(e,[t])},t.prototype.square=function(t){var e=new Yi(t.shape,\\\"return x * x;\\\");return this.compileAndRun(e,[t])},t.prototype.reciprocal=function(t){var e=new Yi(t.shape,\\\"return 1.0 / x;\\\");return this.compileAndRun(e,[t])},t.prototype.relu=function(t){var e;return e=i.getBool(\\\"WEBGL_PACK\\\")?new gs(t.shape,vs):new Yi(t.shape,ts),this.compileAndRun(e,[t])},t.prototype.prelu=function(t,e){var n=i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\")?new ha(ca,t.shape,e.shape):new la(ua,t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.elu=function(t){if(i.getBool(\\\"WEBGL_PACK_UNARY_OPERATIONS\\\"))return this.packedUnaryOp(t,ms,t.dtype);var e=new Yi(t.shape,es);return this.compileAndRun(e,[t])},t.prototype.eluDer=function(t,e){var n=i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\")?new ha(\\\"\\\\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\\\\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\\\\n\\\",t.shape,e.shape):new la(\\\"return (b >= 1.0) ? a : a * (b + 1.0);\\\",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.selu=function(t){var e=new Yi(t.shape,ns);return this.compileAndRun(e,[t])},t.prototype.int=function(t){var e=new Yi(t.shape,\\\"return float(int(x));\\\"),n=this.makeOutputArray(e.outputShape,\\\"int32\\\");return this.compileAndRun(e,[t],n)},t.prototype.clip=function(t,e,n){var r,o=(r=i.getBool(\\\"WEBGL_PACK_CLIP\\\")?new fa(t.shape):new pa(t.shape)).getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,o)},t.prototype.abs=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.abs(t);if(i.getBool(\\\"WEBGL_PACK_UNARY_OPERATIONS\\\"))return this.packedUnaryOp(t,Zi,t.dtype);var e=new Yi(t.shape,Zi);return this.compileAndRun(e,[t])},t.prototype.complexAbs=function(t){var e=this.texData.get(t.dataId),n=new da(t.shape),r=[this.makeComplexComponentTensorHandle(t,e.complexTensors.real),this.makeComplexComponentTensorHandle(t,e.complexTensors.imag)];return this.compileAndRun(n,r)},t.prototype.sigmoid=function(t){var e=new Yi(t.shape,\\\"return 1.0 / (1.0 + exp(-1.0 * x));\\\");return this.compileAndRun(e,[t])},t.prototype.softplus=function(t){var e=new Yi(t.shape,\\\"\\\\n  float epsilon = 1.1920928955078125e-7;\\\\n  float threshold = log(epsilon) + 2.0;\\\\n\\\\n  bool too_large = x > -threshold;\\\\n  bool too_small = x < threshold;\\\\n\\\\n  float result;\\\\n  float exp_x = exp(x);\\\\n\\\\n  if (too_large){\\\\n    result = x;\\\\n  }\\\\n  else if (too_small){\\\\n    result = exp_x;\\\\n  }\\\\n  else{\\\\n    result = log(exp_x + 1.0);\\\\n  }\\\\n  return result;\\\\n\\\");return this.compileAndRun(e,[t])},t.prototype.sin=function(t){var e=new Yi(t.shape,us);return this.compileAndRun(e,[t])},t.prototype.cos=function(t){var e=new Yi(t.shape,ls);return this.compileAndRun(e,[t])},t.prototype.tan=function(t){var e=new Yi(t.shape,\\\"return tan(x);\\\");return this.compileAndRun(e,[t])},t.prototype.asin=function(t){var e=new Yi(t.shape,\\\"return asin(x);\\\");return this.compileAndRun(e,[t])},t.prototype.acos=function(t){var e=new Yi(t.shape,\\\"return acos(x);\\\");return this.compileAndRun(e,[t])},t.prototype.atan=function(t){var e=new Yi(t.shape,cs);return this.compileAndRun(e,[t])},t.prototype.atan2=function(t,e){var n=i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\")?new ha(\\\"\\\\n  vec4 result = atan(a, b);\\\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\\\n  \\\\n  result.r = isNaN.r > 0. ? NAN : result.r;\\\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\\\n\\\\n  return result;\\\\n\\\",t.shape,e.shape):new la(\\\"\\\\n  if (isnan(a)) return a;\\\\n  if (isnan(b)) return b;\\\\n\\\\n  return atan(a, b);\\\\n\\\",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.sinh=function(t){var e=new Yi(t.shape,\\\"\\\\n  float e2x = exp(x);\\\\n  return (e2x - 1.0 / e2x) / 2.0;\\\\n\\\");return this.compileAndRun(e,[t])},t.prototype.cosh=function(t){var e=new Yi(t.shape,\\\"\\\\n  float e2x = exp(-x);\\\\n  return (e2x + 1.0 / e2x) / 2.0;\\\\n\\\");return this.compileAndRun(e,[t])},t.prototype.tanh=function(t){var e=new Yi(t.shape,\\\"\\\\n  float e2x = exp(-2.0 * abs(x));\\\\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\\\\n\\\");return this.compileAndRun(e,[t])},t.prototype.asinh=function(t){var e=new Yi(t.shape,\\\"return log(x + sqrt(x * x + 1.0));\\\");return this.compileAndRun(e,[t])},t.prototype.acosh=function(t){var e=new Yi(t.shape,hs);return this.compileAndRun(e,[t])},t.prototype.atanh=function(t){var e=new Yi(t.shape,ps);return this.compileAndRun(e,[t])},t.prototype.erf=function(t){var e=new Yi(t.shape,'\\\\n  // Error function is calculated approximately with elementary function.\\\\n  // See \\\"Handbook of Mathematical Functions with Formulas,\\\\n  // Graphs, and Mathematical Tables\\\", Abramowitz and Stegun.\\\\n  float p = 0.3275911;\\\\n  float a1 = 0.254829592;\\\\n  float a2 = -0.284496736;\\\\n  float a3 = 1.421413741;\\\\n  float a4 = -1.453152027;\\\\n  float a5 = 1.061405429;\\\\n\\\\n  float t = 1.0 / (1.0 + p * x);\\\\n  return 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x);\\\\n');return this.compileAndRun(e,[t])},t.prototype.step=function(t,e){var n=new Yi(t.shape,function(t){return void 0===t&&(t=0),Qi+\\\"\\\\n    return x > 0.0 ? 1.0 : float(\\\"+t+\\\");\\\\n  \\\"}(e));return this.compileAndRun(n,[t])},t.prototype.conv2dByMatMul=function(t,e,n,r,o,a){var s=t.shape,u=this.texData.get(t.dataId),l=n.inChannels,c=s[0]*s[1]*s[2],h=n.outChannels,p=\\\"channelsLast\\\"===n.dataFormat,d=(1===c||1===h)&&l>1e3,v=s[2]%2!=0&&!!u.isPacked;if(d||!i.getBool(\\\"WEBGL_LAZILY_UNPACK\\\")||!i.getBool(\\\"WEBGL_PACK_BINARY_OPERATIONS\\\")||!v){var m=p?s[0]*s[1]*s[2]:s[0]*s[2]*s[3],g=this.reshape(t,[1,m,n.inChannels]),y=this.reshape(e,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:g,b:y,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a}),n.outShape)}var x=p?s[0]*s[1]*(s[2]+1):s[0]*s[2]*(s[3]+1),b=ct.make([1,x,n.inChannels],{dataId:t.dataId},t.dtype,this),w=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,f(Ce(u.shape,b.shape),function(){return\\\"packed reshape \\\"+u.shape+\\\" to \\\"+b.shape+\\\" isn't free\\\"});var C=this.reshape(e,[1,n.inChannels,n.outChannels]),E=this.fusedBatchMatMul({a:b,b:C,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a}),R=this.texData.get(E.dataId);return f(R.isPacked,function(){return\\\"batchMatMul result is expected to be packed\\\"}),u.shape=w,R.shape=n.outShape,ct.make(n.outShape,{dataId:E.dataId},E.dtype,this)},t.prototype.conv2dWithIm2Row=function(t,e,n,r,o,a){var i=n.filterWidth,s=n.filterHeight,u=n.inChannels,l=n.outWidth,c=n.outHeight,h=\\\"channelsLast\\\"===n.dataFormat,p=i*s*u,f=c*l,d=[p,f],v=t.squeeze([0]),m=e.reshape([1,p,-1]),g=new pi(d,v.shape,n),y=this.compileAndRun(g,[v]).reshape([1,d[0],d[1]]),x=null!=r,b=null!=a,w=o?bs(o,!0):null,C=new yi(y.shape,[1,f,n.outChannels],!0,!1,x,w,b),E=[y,m];r&&E.push(r),b&&E.push(a);var R=this.compileAndRun(C,E);return h?R.reshape([1,c,l,n.outChannels]):R.reshape([1,n.outChannels,c,l])},t.prototype.fusedConv2d=function(t,e,n,r,o,a){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&(\\\"SAME\\\"===n.padInfo.type||\\\"VALID\\\"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,o,a);if(i.getBool(\\\"WEBGL_CONV_IM2COL\\\")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,o,a);var s=null!=r,u=null!=a,l=o?bs(o,!1):null,c=new Ea(n,s,l,u),h=[t,e];return r&&h.push(r),a&&h.push(a),this.compileAndRun(c,h)},t.prototype.conv2d=function(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&(\\\"SAME\\\"===n.padInfo.type||\\\"VALID\\\"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(i.getBool(\\\"WEBGL_CONV_IM2COL\\\")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);var r=new Ea(n);return this.compileAndRun(r,[t,e])},t.prototype.conv2dDerInput=function(t,e,n){var r=new ya(n);return this.compileAndRun(r,[t,e])},t.prototype.conv2dDerFilter=function(t,e,n){var r=new ga(n);return this.compileAndRun(r,[t,e])},t.prototype.depthwiseConv2D=function(t,e,n){var r;return i.getBool(\\\"WEBGL_PACK_DEPTHWISECONV\\\")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new ka(n),this.compileAndRun(r,[t,e],this.makePackedTensor(n.outShape,t.dtype))):(r=new Ia(n),this.compileAndRun(r,[t,e]))},t.prototype.depthwiseConv2DDerInput=function(t,e,n){var r=new Ca(n);return this.compileAndRun(r,[t,e])},t.prototype.depthwiseConv2DDerFilter=function(t,e,n){var r=new wa(n);return this.compileAndRun(r,[t,e])},t.prototype.conv3d=function(t,e,n){var r=new Ra(n);return this.compileAndRun(r,[t,e])},t.prototype.conv3dDerInput=function(t,e,n){var r=new ba(n);return this.compileAndRun(r,[t,e])},t.prototype.conv3dDerFilter=function(t,e,n){var r=new xa(n);return this.compileAndRun(r,[t,e])},t.prototype.maxPool=function(t,e){var n=new Ri(e,\\\"max\\\",!1),r=this.makeOutputArray(n.outputShape,t.dtype);return this.compileAndRun(n,[t],r)},t.prototype.avgPool=function(t,e){var n=new Ri(e,\\\"avg\\\",!1),r=this.makeOutputArray(n.outputShape,\\\"float32\\\");return this.compileAndRun(n,[t],r)},t.prototype.maxPoolBackprop=function(t,e,n,r){var o=new Ri(r,\\\"max\\\",!0),a=this.compileAndRun(o,[e]),i=new mi(r),s=this.makeOutputArray(i.outputShape,e.dtype),u=this.compileAndRun(i,[t,a],s);return a.dispose(),u},t.prototype.avgPoolBackprop=function(t,e,n){var r=new Jo(n),o=this.makeOutputArray(r.outputShape,e.dtype);return this.compileAndRun(r,[t],o)},t.prototype.cast=function(t,e){return mo(t,e,this)},t.prototype.unstack=function(t,e){for(var n=t.shape[e],r=new Array(t.rank-1),o=0,a=0;a<t.rank;a++)a!==e&&(r[o++]=t.shape[a]);var i=new Array(t.rank).fill(0),s=t.shape.slice();s[e]=1;var u=new Array(n);for(a=0;a<u.length;a++)i[e]=a,u[a]=this.slice(t,i,s).reshape(r);return u},t.prototype.avgPool3d=function(t,e){var n=new Ii(e,\\\"avg\\\",!1),r=this.makeOutputArray(n.outputShape,\\\"float32\\\");return this.compileAndRun(n,[t],r)},t.prototype.avgPool3dBackprop=function(t,e,n){var r=new Zo(n),o=this.makeOutputArray(r.outputShape,e.dtype);return this.compileAndRun(r,[t],o)},t.prototype.maxPool3d=function(t,e){var n=new Ii(e,\\\"max\\\",!1),r=this.makeOutputArray(n.outputShape,\\\"float32\\\");return this.compileAndRun(n,[t],r)},t.prototype.maxPool3dBackprop=function(t,e,n,r){var o=new Ii(r,\\\"max\\\",!0),a=this.compileAndRun(o,[e]),i=new gi(r),s=this.makeOutputArray(i.outputShape,e.dtype),u=this.compileAndRun(i,[t,a],s);return a.dispose(),u},t.prototype.reshape=function(t,e){var n=this.texData.get(t.dataId);return!n.isPacked||Ce(t.shape,e)||null!==n.texture&&Ce(n.shape,e)?go(t,e):this.packedReshape(t,e)},t.prototype.resizeBilinear=function(t,e,n,r){var o=i.getBool(\\\"WEBGL_PACK_IMAGE_OPERATIONS\\\")?new Ti(t.shape,e,n,r):new Ai(t.shape,e,n,r);return this.compileAndRun(o,[t])},t.prototype.resizeBilinearBackprop=function(t,e,n){var r=new Si(t,e,n);return this.compileAndRun(r,[t])},t.prototype.resizeNearestNeighbor=function(t,e,n,r){var o=new _i(t.shape,e,n,r);return this.compileAndRun(o,[t])},t.prototype.resizeNearestNeighborBackprop=function(t,e,n){var r=new Di(t,e,n);return this.compileAndRun(r,[t])},t.prototype.multinomial=function(t,e,n,r){var o=e?t:Yr(t),a=o.shape[0],i=o.shape[1],s=new xi(a,i,n),u=this.makeOutputArray(s.outputShape,\\\"int32\\\"),l=s.getCustomSetupFunc(r);return this.compileAndRun(s,[o],u,l)},t.prototype.oneHot=function(t,e,n,r){var o=new bi(t.size,e,n,r);return this.compileAndRun(o,[t])},t.prototype.diag=function(t){var e=new Oa(t.size);return this.compileAndRun(e,[t])},t.prototype.nonMaxSuppression=function(t,e,n,r,o){return Ze(\\\"tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead\\\"),Ro(t.dataSync(),e.dataSync(),n,r,o)},t.prototype.cropAndResize=function(t,e,n,r,o,a){var i=new Na(t.shape,e.shape,r,o,a);return this.compileAndRun(i,[t,e,n])},t.prototype.depthToSpace=function(t,e,n){f(e>1,function(){return\\\"blockSize should be > 1 for depthToSpace, but was: \\\"+e});var r=t.shape[0],o=\\\"NHWC\\\"===n?t.shape[1]:t.shape[2],a=\\\"NHWC\\\"===n?t.shape[2]:t.shape[3],i=\\\"NHWC\\\"===n?t.shape[3]:t.shape[1],s=o*e,u=a*e,l=i/(e*e),c=new _a(\\\"NHWC\\\"===n?[r,s,u,l]:[r,l,s,u],e,n);return this.compileAndRun(c,[t])},t.prototype.split=function(t,e,n){return ko(t,e,n)},t.prototype.scatterND=function(t,e,n){var r=Br(0,t,n),o=r.sliceRank,a=r.numUpdates,i=r.sliceSize,s=r.strides,u=r.outputSize,l=[u/i,i],c=t.reshape([a,o]),h=e.reshape([a,i]);if(0===u)return go(xn([]),n);var p=wn(0),f=new Mi(a,o,c.rank,h.rank,s,l);return this.compileAndRun(f,[h,c,p]).reshape(n)},t.prototype.sparseToDense=function(t,e,n,r){var o=Br(0,t,n),a=o.sliceRank,i=o.numUpdates,s=o.strides,u=o.outputSize,l=new Mi(i,a,t.rank,e.rank,s,[u,1],!1);return this.compileAndRun(l,[e,t,r]).reshape(n)},t.prototype.fft=function(t){return this.fftImpl(t,!1)},t.prototype.ifft=function(t){return this.fftImpl(t,!0)},t.prototype.fftImpl=function(t,e){var n=this.texData.get(t.dataId),r=new Ua(La,t.shape,e),o=new Ua(Wa,t.shape,e),a=[this.makeComplexComponentTensorHandle(t,n.complexTensors.real),this.makeComplexComponentTensorHandle(t,n.complexTensors.imag)],i=this.compileAndRun(r,a),s=this.compileAndRun(o,a),u=this.complex(i,s).as2D(t.shape[0],t.shape[1]);return i.dispose(),s.dispose(),u},t.prototype.gatherND=function(t,e){var n=e.shape,r=n[n.length-1],o=_r(t,e),a=o[0],i=o[1],s=o[2],u=o[3],l=e.reshape([i,r]),c=t.reshape([t.size/s,s]),h=new qa(r,u,[i,s]);return this.compileAndRun(h,[c,l]).reshape(a)},t.prototype.fill=function(t,e,n){if(\\\"string\\\"===(n=n||L(e))){var r=S(n,g(t));return r.fill(e),ct.make(t,{values:r},n)}var o=new Va(t,e),a=o.getCustomSetupFunc(e),i=this.makeOutputArray(t,n);return this.compileAndRun(o,[],i,a)},t.prototype.onesLike=function(t){if(\\\"string\\\"===t.dtype)throw new Error(\\\"onesLike is not supported under string dtype\\\");return this.fill(t.shape,1,t.dtype)},t.prototype.zerosLike=function(t){return this.fill(t.shape,\\\"string\\\"===t.dtype?\\\"\\\":0,t.dtype)},t.prototype.linspace=function(t,e,n){return yo(t,e,n)},t.prototype.makeOutputArray=function(t,e){return ct.make(t,{},e,this)},t.prototype.makePackedTensor=function(t,e){var n=ct.make(t,{},e,this);return this.texData.get(n.dataId).isPacked=!0,n},t.prototype.unpackTensor=function(t){var e=new ys(t.shape);return this.compileAndRun(e,[t],ct.make(e.outputShape,{},t.dtype,this))},t.prototype.packTensor=function(t){var e=new wi(t.shape);return this.compileAndRun(e,[t],this.makePackedTensor(t.shape,t.dtype),null,!0)},t.prototype.packedReshape=function(t,e){var n=t.reshape([ge(t.shape)].concat(ye(t.shape))),r=[ge(e)].concat(ye(e)),o=new Ni(r,n.shape);return this.compileAndRun(o,[n]).reshape(e)},t.prototype.decode=function(t){var e,n=this.texData.get(t),r=n.isPacked,o=n.shape,a=n.dtype,i=xe(o),s=Lt(o),u=this.makeTensorHandle(o,\\\"float32\\\");return this.texData.get(u.dataId).isPacked=!0,this.texData.get(u.dataId).dtype=a,this.texData.get(u.dataId).texShape=s.map(function(t){return 2*t}),e=r?new Da(i,s):new Ta(i,s),this.compileAndRun(e,[{shape:i,dtype:a,dataId:t}],u,null,!0),u},t.prototype.compileAndRun=function(t,e,n,r,o){var a=this;if(void 0===o&&(o=!1),null==n&&(n=t.usesPackedTextures?this.makePackedTensor(t.outputShape,e[0].dtype):this.makeOutputArray(t.outputShape,e[0].dtype)),0===n.size)return this.texData.get(n.dataId).values=N(n.dtype,0),n;var s=e.map(function(e){if(\\\"complex64\\\"===e.dtype)throw new Error(\\\"GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.\\\");var n=a.texData.get(e.dataId);if(null==n.texture){if(!t.usesPackedTextures&&g(e.shape)<=i.getNumber(\\\"WEBGL_SIZE_UPLOAD_UNIFORM\\\"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.usesPackedTextures&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.usesPackedTextures)e=n.isPacked?a.unpackTensor(e):a.packTensor(e),n=a.texData.get(e.dataId);else if(n.isPacked&&!Ce(n.shape,e.shape)){var r=e,o=e.shape;e.shape=n.shape,e=a.packedReshape(e,o),n=a.texData.get(e.dataId),r.shape=o}return a.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(n.dataId);var u,l={shape:n.shape,texData:this.texData.get(n.dataId),isUniform:!1},c=function(t,e,n){var r=\\\"\\\";e.concat(n).forEach(function(t){var e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?\\\"uniform\\\":t.texData.texShape;r+=t.shape+\\\"_\\\"+n+\\\"_\\\"+e});var o=t.userCode,a=t.constructor.name;return a+=\\\"_\\\"+r+\\\"_\\\"+o}(t,s,l),h=this.getAndSaveBinary(c,function(){return function(t,e,n,r){var o=e.userCode,a=n.map(function(t,n){var r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),s=a.map(function(t){return t.shapeInfo}),u={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},l=Wo(a,u,o,e.usesPackedTextures),c=t.createProgram(l),h=null,p=t.getUniformLocation(c,\\\"NAN\\\",!1);1===i.getNumber(\\\"WEBGL_VERSION\\\")&&(h=t.getUniformLocation(c,\\\"INFINITY\\\",!1));for(var f={},d=0;d<e.variableNames.length;d++){var v=e.variableNames[d];f[v]=t.getUniformLocation(c,v,!1),f[\\\"offset\\\"+v]=t.getUniformLocation(c,\\\"offset\\\"+v,!1)}return{program:e,source:l,webGLProgram:c,uniformLocations:f,inShapeInfos:s,outShapeInfo:u,infLoc:h,nanLoc:p}}(a.gpgpu,t,s,l)}),p=null!=this.activeTimers;return p&&(u=this.startTimer()),function(t,e,n,r,o){hi(e.inShapeInfos,n),hi([e.outShapeInfo],[r]);var a=r.texData.texture,s=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(a,s[0],s[1]):t.setOutputMatrixTexture(a,s[0],s[1]),t.setProgram(e.webGLProgram),1===i.getNumber(\\\"WEBGL_VERSION\\\")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(function(n,r){var o=e.program.variableNames[r],a=e.uniformLocations[o],i=e.uniformLocations[\\\"offset\\\"+o];if(null!=a)if(n.isUniform)if(g(n.shape)<2)t.gl.uniform1f(a,n.uniformValues[0]);else{var s=n.uniformValues;s instanceof Float32Array||(s=new Float32Array(s)),t.gl.uniform1fv(a,s)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,a,r)}),null!=o&&o(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,h,s,l,r),p&&(u=this.endTimer(u),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(u)})),!i.getBool(\\\"WEBGL_LAZILY_UNPACK\\\")&&this.texData.get(n.dataId).isPacked&&!1===o?this.unpackTensor(n):n},t.prototype.getAndSaveBinary=function(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]},t.prototype.getTextureManager=function(){return this.textureManager},t.prototype.dispose=function(){this.disposed||(this.textureManager.dispose(),null!=this.canvas&&null!=this.canvas.remove?this.canvas.remove():this.canvas=null,null!=this.fromPixels2DContext&&this.fromPixels2DContext.canvas.remove&&this.fromPixels2DContext.canvas.remove(),this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)},t.prototype.floatPrecision=function(){var t=this;return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Ue(function(){if(!i.get(\\\"WEBGL_RENDER_FLOAT32_ENABLED\\\")){var e=i.getBool(\\\"DEBUG\\\");i.set(\\\"DEBUG\\\",!1);var n=t.abs(wn(1e-8)).dataSync()[0];if(i.set(\\\"DEBUG\\\",e),n>0)return 32}return 16})),this.floatPrecisionValue},t.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},t.prototype.uploadToGPU=function(t){var e,n=this.texData.get(t),r=n.shape,o=n.dtype,a=n.values,i=n.texture,s=n.usage,u=n.isPacked;if(null==i){var l,c=null!=this.activeTimers;c&&(l=$());var h=n.texShape;if(null==h&&(h=be(r,u),n.texShape=h),null!=a){var p=xe(r),f=void 0,d=h[1],v=h[0],m=a instanceof Uint8Array;u?(d=(e=Wt(h[0],h[1]))[0],v=e[1],f=new Pa(p,[v,d],m)):f=new Ba(p,[v,d],m);var y=this.makeTensorHandle([v,d],o);this.texData.get(y.dataId).usage=m?Tt.PIXELS:Tt.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(y.dataId),d,v,a);var x=this.makeTensorHandle(f.outputShape,y.dtype);x.size=g(f.outputShape),this.texData.get(x.dataId).isPacked=u,this.compileAndRun(f,[y],x);var b=this.texData.get(x.dataId);n.texture=b.texture,n.texShape=b.texShape,n.isPacked=b.isPacked,n.usage=b.usage,this.disposeData(y.dataId),this.texData.delete(x.dataId),n.values=null,c&&(this.uploadWaitMs+=$()-l)}else{var w=this.acquireTexture(h,s,o,u);n.texture=w}}},t.prototype.convertAndCacheOnCPU=function(t,e){var n=this.texData.get(t),r=n.dtype;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if(\\\"float32\\\"===e||\\\"complex64\\\"===e)return t;if(\\\"int32\\\"===e||\\\"bool\\\"===e){for(var n=\\\"int32\\\"===e?new Int32Array(t.length):new Uint8Array(t.length),r=0;r<n.length;++r)n[r]=Math.round(t[r]);return n}throw new Error(\\\"Unknown dtype \\\"+e)}(e,r)),n.values},t.prototype.acquireTexture=function(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){var o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(\\\"High memory usage in GPU: \\\"+o+\\\" MB, most likely due to a memory leak\\\")}return this.textureManager.acquireTexture(t,e,r)},t.prototype.computeBytes=function(t,e){return t[0]*t[1]*O(e)},t}();At()&&St.registerBackend(\\\"webgl\\\",function(){return new Cs},2);var Es=vn({abs_:function(t){var e=nn(t,\\\"x\\\",\\\"abs\\\");return\\\"complex64\\\"===e.dtype?St.runKernel(function(t){return t.complexAbs(e)},{$x:e}):St.runKernel(function(t,n){var r=t.abs(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.toFloat().step(-1))}}})}}),Rs=vn({acos_:function(t){var e=nn(t,\\\"x\\\",\\\"acos\\\");return St.runKernel(function(t,n){var r=t.acos(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.divStrict(wn(1).sub(n.toFloat().square()).sqrt()).neg()}}})}}),Is=vn({acosh_:function(t){var e=nn(t,\\\"x\\\",\\\"acosh\\\");return St.runKernel(function(t,n){var r=t.acosh(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.divStrict(n.toFloat().square().sub(1).sqrt())}}})}}),ks=vn({asin_:function(t){var e=nn(t,\\\"x\\\",\\\"asin\\\");return St.runKernel(function(t,n){var r=t.asin(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.divStrict(wn(1).sub(n.toFloat().square()).sqrt())}}})}}),Ns=vn({asinh_:function(t){var e=nn(t,\\\"x\\\",\\\"asinh\\\");return St.runKernel(function(t,n){var r=t.asinh(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.divStrict(wn(1).add(n.toFloat().square()).sqrt())}}})}}),Ss=vn({atan_:function(t){var e=nn(t,\\\"x\\\",\\\"atan\\\");return St.runKernel(function(t,n){var r=t.atan(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.toFloat().square().add(1))}}})}}),As=vn({atanh_:function(t){var e=nn(t,\\\"x\\\",\\\"atanh\\\");return St.runKernel(function(t,n){var r=t.atanh(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(wn(1).sub(n.toFloat().square()))}}})}}),Ts=vn({ceil_:function(t){var e=nn(t,\\\"x\\\",\\\"ceil\\\");return St.runKernel(function(t){return t.ceil(e)},{$x:e},function(t){return{$x:function(){return Fn(t)}}})}}),Ds=vn({clipByValue_:function(t,e,n){var r=nn(t,\\\"x\\\",\\\"clipByValue\\\");return f(e<=n,function(){return\\\"Error in clip: min (\\\"+e+\\\") must be less than or equal to max (\\\"+n+\\\").\\\"}),St.runKernel(function(t,o){var a=t.clip(r,e,n);return o([r]),a},{$x:r},function(t,r){var o=r[0];return{$x:function(){return t.where(o.greaterEqual(e).logicalAnd(o.lessEqual(n)),Fn(t))}}})}}),_s=vn({cos_:function(t){var e=nn(t,\\\"x\\\",\\\"cos\\\");return St.runKernel(function(t,n){var r=t.cos(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return n.toFloat().sin().neg().mul(t)}}})}}),Os=vn({cosh_:function(t){var e=nn(t,\\\"x\\\",\\\"cosh\\\");return St.runKernel(function(t,n){var r=t.cosh(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return n.toFloat().sinh().mulStrict(t)}}})}}),Fs=vn({erf_:function(t){var e=nn(t,\\\"x\\\",\\\"erf\\\");return f(\\\"int32\\\"===e.dtype||\\\"float32\\\"===e.dtype,function(){return\\\"Input dtype must be `int32` or `float32`.\\\"}),\\\"int32\\\"===e.dtype&&(e=e.toFloat()),St.runKernel(function(t,n){var r=t.erf(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}}})}}),Ms=vn({exp_:function(t){var e=nn(t,\\\"x\\\",\\\"exp\\\");return St.runKernel(function(t,n){var r=t.exp(e);return n([r]),r},{$x:e},function(t,e){return{$x:function(){return t.mulStrict(e[0])}}})}}),Bs=vn({expm1_:function(t){var e=nn(t,\\\"x\\\",\\\"expm1\\\");return St.runKernel(function(t,n){var r=t.expm1(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.exp())}}})}}),Ps=vn({floor_:function(t){var e=nn(t,\\\"x\\\",\\\"floor\\\");return St.runKernel(function(t){return t.floor(e)},{$x:e},function(t){return{$x:function(){return Fn(t)}}})}}),Ls=vn({log_:function(t){var e=nn(t,\\\"x\\\",\\\"log\\\");return St.runKernel(function(t,n){var r=t.log(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.toFloat())}}})}}),Ws=vn({log1p_:function(t){var e=nn(t,\\\"x\\\",\\\"log1p\\\");return St.runKernel(function(t,n){var r=t.log1p(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.add(1))}}})}}),Us=vn({logSigmoid_:function(t){var e=nn(t,\\\"x\\\",\\\"logSigmoid\\\");return St.runKernel(function(t,n){var r=t.softplus(e.neg()).neg();return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.neg().sigmoid())}}})}}),Vs=vn({neg_:function(t){var e=nn(t,\\\"x\\\",\\\"neg\\\");return St.runKernel(function(t){return t.neg(e)},{$x:e},function(t){return{$x:function(){return t.neg()}}})}}),zs=vn({reciprocal_:function(t){var e=nn(t,\\\"x\\\",\\\"reciprocal\\\");return St.runKernel(function(t,n){var r=t.reciprocal(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.square().neg())}}})}}),Gs=vn({round_:function(t){var e=nn(t,\\\"x\\\",\\\"round\\\");return St.runKernel(function(t){return t.round(e)},{$x:e},function(t){return{$x:function(){return Fn(t)}}})}}),Hs=vn({rsqrt_:function(t){var e=nn(t,\\\"x\\\",\\\"rsqrt\\\");return St.runKernel(function(t,n){var r=t.rsqrt(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.pow(1.5).mul(2)).neg()}}})}}),qs=vn({sigmoid_:function(t){var e=nn(t,\\\"x\\\",\\\"sigmoid\\\");return St.runKernel(function(t,n){var r=t.sigmoid(e);return n([r]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.mul(wn(1).sub(n)))}}})}}),$s=vn({sign_:function(t){var e=nn(t,\\\"x\\\",\\\"sign\\\");return St.runKernel(function(t){return t.sign(e)},{$x:e},function(t){return{$x:function(){return Fn(t)}}})}}),Ks=vn({isNaN_:function(t){var e=nn(t,\\\"x\\\",\\\"isNaN\\\");return St.runKernel(function(t){return t.isNaN(e)},{$x:e},function(t){return{$x:function(){return Fn(t)}}})}}),js=vn({isInf_:function(t){var e=nn(t,\\\"x\\\",\\\"isInf\\\");return St.runKernel(function(t){return t.isInf(e)},{$x:e},function(t){return{$x:function(){return Fn(t)}}})}}),Xs=vn({isFinite_:function(t){var e=nn(t,\\\"x\\\",\\\"isFinite\\\");return St.runKernel(function(t){return t.isFinite(e)},{$x:e},function(t){return{$x:function(){return Fn(t)}}})}}),Ys=vn({sin_:function(t){var e=nn(t,\\\"x\\\",\\\"sin\\\");return St.runKernel(function(t,n){var r=t.sin(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return n.toFloat().cos().mul(t)}}})}}),Qs=vn({sinh_:function(t){var e=nn(t,\\\"x\\\",\\\"sinh\\\");return St.runKernel(function(t,n){var r=t.sinh(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return n.toFloat().cosh().mulStrict(t)}}})}}),Js=vn({softplus_:function(t){var e=nn(t,\\\"x\\\",\\\"softplus\\\");return St.runKernel(function(t,n){var r=t.softplus(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.sigmoid())}}})}}),Zs=vn({sqrt_:function(t){var e=nn(t,\\\"x\\\",\\\"sqrt\\\");return St.runKernel(function(t,n){var r=t.sqrt(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.toFloat().sqrt().mul(2))}}})}}),tu=vn({square_:function(t){var e=nn(t,\\\"x\\\",\\\"square\\\");return St.runKernel(function(t,n){return n([e]),t.square(e)},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.toFloat().mul(2))}}})}}),eu=vn({step_:function(t,e){void 0===e&&(e=0);var n=nn(t,\\\"x\\\",\\\"step\\\");return St.runKernel(function(t){return t.step(n,e)},{$x:n},function(t){return{$x:function(){return Fn(t)}}})}}),nu=vn({tan_:function(t){var e=nn(t,\\\"x\\\",\\\"tan\\\");return St.runKernel(function(t,n){var r=t.tan(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.cos().square())}}})}}),ru=vn({tanh_:function(t){var e=nn(t,\\\"x\\\",\\\"tanh\\\");return St.runKernel(function(t,n){var r=t.tanh(e);return n([r]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return wn(1).sub(n.square()).mulStrict(t)}}})}});function ou(t,e,n,r,o,a){var i,s,u=nn(t,\\\"x\\\",\\\"batchNorm\\\"),l=nn(e,\\\"mean\\\",\\\"batchNorm\\\"),c=nn(n,\\\"variance\\\",\\\"batchNorm\\\");return null!=o&&(i=nn(o,\\\"scale\\\",\\\"batchNorm\\\")),null!=r&&(s=nn(r,\\\"offset\\\",\\\"batchNorm\\\")),f(2===u.rank,function(){return\\\"Error in batchNorm3D: x must be rank 3 but got rank \\\"+u.rank+\\\".\\\"}),f(2===l.rank||1===l.rank,function(){return\\\"Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank \\\"+l.rank+\\\".\\\"}),f(2===c.rank||1===c.rank,function(){return\\\"Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank \\\"+c.rank+\\\".\\\"}),null!=i&&f(2===i.rank||1===i.rank,function(){return\\\"Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank \\\"+i.rank+\\\".\\\"}),null!=s&&f(2===s.rank||1===s.rank,function(){return\\\"Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank \\\"+s.rank+\\\".\\\"}),su(u,l,c,s,i,a)}function au(t,e,n,r,o,a){var i,s,u=nn(t,\\\"x\\\",\\\"batchNorm\\\"),l=nn(e,\\\"mean\\\",\\\"batchNorm\\\"),c=nn(n,\\\"variance\\\",\\\"batchNorm\\\");return null!=o&&(i=nn(o,\\\"scale\\\",\\\"batchNorm\\\")),null!=r&&(s=nn(r,\\\"offset\\\",\\\"batchNorm\\\")),f(3===u.rank,function(){return\\\"Error in batchNorm3D: x must be rank 3 but got rank \\\"+u.rank+\\\".\\\"}),f(3===l.rank||1===l.rank,function(){return\\\"Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank \\\"+l.rank+\\\".\\\"}),f(3===c.rank||1===c.rank,function(){return\\\"Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank \\\"+c.rank+\\\".\\\"}),null!=i&&f(3===i.rank||1===i.rank,function(){return\\\"Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank \\\"+i.rank+\\\".\\\"}),null!=s&&f(3===s.rank||1===s.rank,function(){return\\\"Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank \\\"+s.rank+\\\".\\\"}),su(u,l,c,s,i,a)}function iu(t,e,n,r,o,a){var i,s,u=nn(t,\\\"x\\\",\\\"batchNorm\\\"),l=nn(e,\\\"mean\\\",\\\"batchNorm\\\"),c=nn(n,\\\"variance\\\",\\\"batchNorm\\\");return null!=o&&(i=nn(o,\\\"scale\\\",\\\"batchNorm\\\")),null!=r&&(s=nn(r,\\\"offset\\\",\\\"batchNorm\\\")),f(4===u.rank,function(){return\\\"Error in batchNorm4D: x must be rank 4 but got rank \\\"+u.rank+\\\".\\\"}),f(4===l.rank||1===l.rank,function(){return\\\"Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank \\\"+l.rank+\\\".\\\"}),f(4===c.rank||1===c.rank,function(){return\\\"Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank \\\"+c.rank+\\\".\\\"}),null!=i&&f(4===i.rank||1===i.rank,function(){return\\\"Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank \\\"+i.rank+\\\".\\\"}),null!=s&&f(4===s.rank||1===s.rank,function(){return\\\"Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank \\\"+s.rank+\\\".\\\"}),su(u,l,c,s,i,a)}function su(t,e,n,r,o,a){null==a&&(a=.001);var i,s,u,l=nn(t,\\\"x\\\",\\\"batchNorm\\\"),c=nn(e,\\\"mean\\\",\\\"batchNorm\\\"),h=nn(n,\\\"variance\\\",\\\"batchNorm\\\");null!=o&&(i=nn(o,\\\"scale\\\",\\\"batchNorm\\\")),null!=r&&(s=nn(r,\\\"offset\\\",\\\"batchNorm\\\")),f(c.rank===h.rank,function(){return\\\"Batch normalization gradient requires mean and variance to have equal ranks.\\\"}),f(null==s||c.rank===s.rank,function(){return\\\"Batch normalization gradient requires mean and offset to have equal ranks.\\\"}),f(null==i||c.rank===i.rank,function(){return\\\"Batch normalization gradient requires mean and scale to have equal ranks.\\\"}),u=0===l.rank||1===l.rank?l.as4D(1,1,1,l.size):2===l.rank?l.as4D(1,1,l.shape[0],l.shape[1]):3===l.rank?l.as4D(1,l.shape[0],l.shape[1],l.shape[2]):l;return St.runKernel(function(t,e){var n=t.batchNormalization(u,uu(c),uu(h),a,uu(i),uu(s));return e([l,c,h,i]),n},{$x:l,$mean:c,$variance:h,$scale:i,$offset:s},function(t,e){var n=e,r=n[0],o=n[1],i=n[2],s=n[3],l=null==s?wn(1):s,c=eo(o.shape,u.shape),h=[];if(1===o.rank){for(var p=0;p<u.shape.length-1;++p)h.push(u.shape[p]);h.push(1)}var f=r.sub(o),d=t.mul(l),v=Hs(i.add(wn(a))),m=v.mul(v).mul(v).mul(wn(-.5));return{$x:function(){return 1===o.rank?t.mul(Er(v.as4D(1,1,1,o.shape[0]),h)).mul(l).reshape(r.shape):t.mul(v).mul(l).reshape(r.shape)},$mean:function(){var t=v.mul(wn(-1)).mul(d);return 1===o.rank&&(t=t.sum(c)),t.reshape(o.shape)},$variance:function(){var t=m.mul(f).mul(d);return 1===o.rank&&(t=t.sum(c)),t.reshape(o.shape)},$scale:function(){var e=f.mul(v),n=t.mul(e);return 1===o.rank&&(n=n.sum(c)),n.reshape(o.shape)},$offset:function(){var e=t;return 1===o.rank&&(e=e.sum(c)),e.reshape(o.shape)}}}).reshape(l.shape)}function uu(t){return null==t?null:0===t.rank?t.as1D():1===t.rank?t:2===t.rank?t.as4D(1,1,t.shape[0],t.shape[1]):3===t.rank?t.as4D(1,t.shape[0],t.shape[1],t.shape[2]):t}function lu(){Be(\\\"tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon\\\")}var cu=vn({batchNormalization2d_:function(t,e,n,r,o,a){return void 0===r&&(r=.001),lu(),ou(t,e,n,a,o,r)}}),hu=vn({batchNormalization3d_:function(t,e,n,r,o,a){return void 0===r&&(r=.001),lu(),au(t,e,n,a,o,r)}}),pu=vn({batchNormalization4d_:function(t,e,n,r,o,a){return void 0===r&&(r=.001),lu(),iu(t,e,n,a,o,r)}}),fu=vn({batchNormalization_:function(t,e,n,r,o,a){return void 0===r&&(r=.001),lu(),su(t,e,n,a,o,r)}}),du=vn({batchNorm_:su}),vu=vn({batchNorm2d_:ou}),mu=vn({batchNorm3d_:au}),gu=vn({batchNorm4d_:iu});var yu=vn({logicalAnd_:function(t,e){var n=nn(t,\\\"a\\\",\\\"logicalAnd\\\",\\\"bool\\\"),r=nn(e,\\\"b\\\",\\\"logicalAnd\\\",\\\"bool\\\");return no(n.shape,r.shape),St.runKernel(function(t){return t.logicalAnd(n,r)},{$a:n,$b:r})}}),xu=vn({logicalNot_:function(t){var e=nn(t,\\\"x\\\",\\\"logicalNot\\\",\\\"bool\\\");return St.runKernel(function(t){return t.logicalNot(e)},{$x:e})}}),bu=vn({logicalOr_:function(t,e){var n=nn(t,\\\"a\\\",\\\"logicalOr\\\",\\\"bool\\\"),r=nn(e,\\\"b\\\",\\\"logicalOr\\\",\\\"bool\\\");return no(n.shape,r.shape),St.runKernel(function(t){return t.logicalOr(n,r)},{$a:n,$b:r})}}),wu=vn({logicalXor_:function(t,e){var n=nn(t,\\\"a\\\",\\\"logicalXor\\\",\\\"bool\\\"),r=nn(e,\\\"b\\\",\\\"logicalXor\\\",\\\"bool\\\");return no(n.shape,r.shape),bu(t,e).logicalAnd(yu(t,e).logicalNot())}}),Cu=vn({where_:function(t,e,n){var r=nn(e,\\\"a\\\",\\\"where\\\"),o=nn(n,\\\"b\\\",\\\"where\\\"),a=nn(t,\\\"condition\\\",\\\"where\\\",\\\"bool\\\");return d(r.shape,o.shape,\\\"Error in where: \\\"),1===a.rank?f(a.shape[0]===r.shape[0],function(){return\\\"The first dimension of `a` must match the size of `condition`.\\\"}):d(a.shape,o.shape,\\\"Error in where: \\\"),St.runKernel(function(t,e){var n=t.select(a,r,o);return e([a]),n},{$condition:a,$a:r,$b:o},function(t,e){var n=e[0];return{$condition:function(){return Fn(n).toFloat()},$a:function(){return t.mul(n.cast(t.dtype))},$b:function(){return t.mul(n.logicalNot().cast(t.dtype))}}})}}),Eu=function(t){return n(this,void 0,void 0,function(){var e,n,o;return r(this,function(r){switch(r.label){case 0:return[4,(e=nn(t,\\\"condition\\\",\\\"whereAsync\\\",\\\"bool\\\")).data()];case 1:return n=r.sent(),o=Ao(e.shape,n),t!==e&&e.dispose(),[2,o]}})})};var Ru=vn({add_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"add\\\"),o=nn(e,\\\"b\\\",\\\"add\\\");n=wt(r,o),r=n[0],o=n[1];var a=no(r.shape,o.shape);return St.runKernel(function(t){return t.add(r,o)},{$a:r,$b:o},function(t){return{$a:function(){var e=t,n=eo(r.shape,a);return n.length>0&&(e=e.sum(n)),e.reshape(r.shape)},$b:function(){var e=t,n=eo(o.shape,a);return n.length>0&&(e=e.sum(n)),e.reshape(o.shape)}}})}}),Iu=vn({addN_:function(t){f(Array.isArray(t),function(){return\\\"The argument passed to tf.addN() must be a list of tensors\\\"}),f(t.length>=1,function(){return\\\"Must pass at least one tensor to tf.addN(), but got \\\"+t.length});var e=t.map(function(t,e){return nn(t,\\\"tensors\\\"+e,\\\"addN\\\")}),n=e[0];e.forEach(function(t){if(t.dtype!==n.dtype)throw new Error(\\\"All tensors passed to tf.addN() must have the same dtype\\\")}),e.forEach(function(t){if(!y(t.shape,n.shape))throw new Error(\\\"All tensors passed to tf.addN() must have the same shape\\\")});var r=e;return St.runKernel(function(t){return t.addN(e)},r,function(t){var n={};return e.forEach(function(e,r){n[r]=function(){return t.clone()}}),n})}}),ku=vn({addStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"addStrict\\\"),r=nn(e,\\\"b\\\",\\\"addStrict\\\");return d(n.shape,r.shape,\\\"Error in addStrict: \\\"),n.add(r)}}),Nu=vn({atan2_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"atan2\\\"),o=nn(e,\\\"b\\\",\\\"atan2\\\");n=wt(r,o),r=n[0],o=n[1];var a=no(r.shape,o.shape);return St.runKernel(function(t,e){var n=t.atan2(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){var e=Ru(n.square(),r.square()),o=t.mul(r.div(e)),i=eo(n.shape,a);return i.length>0&&(o=o.sum(i)),o.reshape(n.shape)},$b:function(){var e=Ru(n.square(),r.square()),o=Vs(t.mul(n.div(e))),i=eo(r.shape,a);return i.length>0&&(o=o.sum(i)),o.reshape(r.shape)}}})}}),Su=vn({div_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"div\\\"),o=nn(e,\\\"b\\\",\\\"div\\\");if(n=wt(r,o),r=n[0],o=n[1],\\\"int32\\\"===r.dtype&&\\\"int32\\\"===o.dtype)return Tu(r,o);var a=no(r.shape,o.shape);return St.runKernel(function(t,e){var n=t.realDivide(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){var e=t.div(r.toFloat()),o=eo(n.shape,a);return o.length>0?e.sum(o).reshape(n.shape):e},$b:function(){var e=t.mul(n.toFloat()),o=eo(r.shape,a);o.length>0&&(e=e.sum(o).reshape(r.shape));var i=r.square();return e.div(i.toFloat()).neg()}}})}}),Au=vn({divStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"div\\\"),r=nn(e,\\\"b\\\",\\\"div\\\");return d(n.shape,r.shape,\\\"Error in divideStrict: \\\"),n.div(r)}}),Tu=vn({floorDiv_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"floorDiv\\\"),o=nn(e,\\\"b\\\",\\\"floorDiv\\\");n=wt(r,o),r=n[0],o=n[1];var a=no(r.shape,o.shape);return St.runKernel(function(t,e){var n=t.floorDiv(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){var e=t.div(r.toFloat()),o=eo(n.shape,a);return o.length>0?e.sum(o).reshape(n.shape):e},$b:function(){var e=t.mul(n.toFloat()),o=eo(r.shape,a);o.length>0&&(e=e.sum(o).reshape(r.shape));var i=r.square();return e.div(i.toFloat()).neg()}}})}}),Du=vn({maximum_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"maximum\\\"),o=nn(e,\\\"b\\\",\\\"maximum\\\");return n=wt(r,o),r=n[0],o=n[1],\\\"bool\\\"===r.dtype&&(r=r.toInt(),o=o.toInt()),no(r.shape,o.shape),St.runKernel(function(t,e){var n=t.maximum(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){return t.mul(n.greaterEqual(r).toFloat())},$b:function(){return t.mul(n.less(r).toFloat())}}})}}),_u=vn({maximumStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"maximumStrict\\\"),r=nn(e,\\\"b\\\",\\\"maximumStrict\\\");return d(n.shape,r.shape,\\\"Error in maximumStrict: \\\"),n.maximum(r)}}),Ou=vn({minimum_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"minimum\\\"),o=nn(e,\\\"b\\\",\\\"minimum\\\");return n=wt(r,o),r=n[0],o=n[1],\\\"bool\\\"===r.dtype&&(r=r.toInt(),o=o.toInt()),no(r.shape,o.shape),St.runKernel(function(t,e){var n=t.minimum(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){return t.mul(n.lessEqual(r).toFloat())},$b:function(){return t.mul(n.greater(r).toFloat())}}})}}),Fu=vn({minimumStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"minimumStrict\\\"),r=nn(e,\\\"b\\\",\\\"minimumStrict\\\");return d(n.shape,r.shape,\\\"Error in minimumStrict: \\\"),n.minimum(r)}}),Mu=vn({mod_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"mod\\\"),o=nn(e,\\\"b\\\",\\\"mod\\\");n=wt(r,o),r=n[0],o=n[1];var a=no(r.shape,o.shape);return St.runKernel(function(t,e){var n=t.mod(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){var e=eo(n.shape,a);return e.length>0?t.sum(e).reshape(n.shape):t},$b:function(){var e=t.mul(n.div(r).floor().neg()),o=eo(r.shape,a);return o.length>0?e.sum(o).reshape(r.shape):e}}})}}),Bu=vn({modStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"modStrict\\\"),r=nn(e,\\\"b\\\",\\\"modStrict\\\");return d(n.shape,r.shape,\\\"Error in modStrict: \\\"),n.mod(r)}}),Pu=vn({mul_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"mul\\\"),o=nn(e,\\\"b\\\",\\\"mul\\\");n=wt(r,o),r=n[0],o=n[1];var a=no(r.shape,o.shape);return St.runKernel(function(t,e){var n=t.multiply(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){var e=t.mul(r.toFloat()),o=eo(n.shape,a);return o.length>0?e.sum(o).reshape(n.shape):e},$b:function(){var e=t.mul(n.toFloat()),o=eo(r.shape,a);return o.length>0?e.sum(o).reshape(r.shape):e}}})}}),Lu=vn({mulStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"mul\\\"),r=nn(e,\\\"b\\\",\\\"mul\\\");return d(n.shape,r.shape,\\\"Error in multiplyStrict: \\\"),n.mul(r)}}),Wu=vn({pow_:function(t,e){var n=nn(t,\\\"base\\\",\\\"pow\\\"),r=nn(e,\\\"exp\\\",\\\"pow\\\"),o=no(n.shape,r.shape);return t=n.cast(xt(n.dtype,r.dtype)),e=r.cast(xt(n.dtype,r.dtype)),St.runKernel(function(t,e){var o=t.pow(n,r);return e([n,r,o]),o},{$base:n,$exp:r},function(t,e){var n=e[0],r=e[1],a=e[2];return{$base:function(){var e=r.toFloat(),a=t.mul(e.mul(n.pow(e.sub(wn(1))))),i=eo(n.shape,o);return i.length>0&&(a=a.sum(i)),a.reshape(n.shape)},$exp:function(){var e=n.greater(0),i=n.log().where(e,Fn(n)),s=t.mul(a.mul(i)),u=eo(r.shape,o);return u.length>0&&(s=s.sum(u)),s.reshape(r.shape)}}})}}),Uu=vn({powStrict_:function(t,e){return d(t.shape,e.shape,\\\"Error in powStrict: \\\"),t.pow(e)}}),Vu=vn({squaredDifference_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"squaredDifference\\\"),o=nn(e,\\\"b\\\",\\\"squaredDifference\\\");return n=wt(r,o),r=n[0],o=n[1],no(r.shape,o.shape),St.runKernel(function(t,e){var n=t.squaredDifference(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1],o=wn(2);return{$a:function(){return t.mul(n.sub(r).mul(o))},$b:function(){return t.mul(r.sub(n).mul(o))}}})}}),zu=vn({squaredDifferenceStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"squaredDifferenceStrict\\\"),r=nn(e,\\\"b\\\",\\\"squaredDifferenceStrict\\\");return d(n.shape,r.shape,\\\"Error in squaredDifferenceStrict: \\\"),n.squaredDifference(r)}}),Gu=vn({sub_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"sub\\\"),o=nn(e,\\\"b\\\",\\\"sub\\\");n=wt(r,o),r=n[0],o=n[1];var a=no(r.shape,o.shape);return St.runKernel(function(t){return t.subtract(r,o)},{$a:r,$b:o},function(t){return{$a:function(){var e=t,n=eo(r.shape,a);return n.length>0&&(e=e.sum(n)),e.reshape(r.shape)},$b:function(){var e=t,n=eo(o.shape,a);return n.length>0&&(e=e.sum(n)),e.neg().reshape(o.shape)}}})}}),Hu=vn({subStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"subStrict\\\"),r=nn(e,\\\"b\\\",\\\"subStrict\\\");return d(n.shape,r.shape,\\\"Error in subStrict: \\\"),n.sub(r)}});var qu=vn({equal_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"equal\\\"),o=nn(e,\\\"b\\\",\\\"equal\\\");return n=wt(r,o),r=n[0],o=n[1],no(r.shape,o.shape),St.runKernel(function(t){return t.equal(r,o)},{$a:r,$b:o})}}),$u=vn({equalStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"equalStrict\\\"),r=nn(e,\\\"b\\\",\\\"equalStrict\\\");return d(n.shape,r.shape,\\\"Error in equalStrict: \\\"),n.equal(r)}}),Ku=vn({greater_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"greater\\\"),o=nn(e,\\\"b\\\",\\\"greater\\\");return n=wt(r,o),r=n[0],o=n[1],no(r.shape,o.shape),St.runKernel(function(t){return t.greater(r,o)},{$a:r,$b:o})}}),ju=vn({greaterEqual_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"greaterEqual\\\"),o=nn(e,\\\"b\\\",\\\"greaterEqual\\\");return n=wt(r,o),r=n[0],o=n[1],no(r.shape,o.shape),St.runKernel(function(t,e){var n=t.greaterEqual(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){return Fn(n)},$b:function(){return Fn(r)}}})}}),Xu=vn({greaterEqualStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"greaterEqualStrict\\\"),r=nn(e,\\\"b\\\",\\\"greaterEqualStrict\\\");return d(n.shape,r.shape,\\\"Error in greaterEqualStrict: \\\"),n.greaterEqual(r)}}),Yu=vn({greaterStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"greaterStrict\\\"),r=nn(e,\\\"b\\\",\\\"greaterStrict\\\");return d(n.shape,r.shape,\\\"Error in greaterStrict: \\\"),n.greater(r)}}),Qu=vn({less_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"less\\\"),o=nn(e,\\\"b\\\",\\\"less\\\");return n=wt(r,o),r=n[0],o=n[1],no(r.shape,o.shape),St.runKernel(function(t){return t.less(r,o)},{$a:r,$b:o})}}),Ju=vn({lessEqual_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"lessEqual\\\"),o=nn(e,\\\"b\\\",\\\"lessEqual\\\");return n=wt(r,o),r=n[0],o=n[1],no(r.shape,o.shape),St.runKernel(function(t){return t.lessEqual(r,o)},{$a:r,$b:o})}}),Zu=vn({lessEqualStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"lessEqualStrict\\\"),r=nn(e,\\\"b\\\",\\\"lessEqualStrict\\\");return d(n.shape,r.shape,\\\"Error in lessEqualStrict: \\\"),n.lessEqual(r)}}),tl=vn({lessStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"lessStrict\\\"),r=nn(e,\\\"b\\\",\\\"lessStrict\\\");return d(n.shape,r.shape,\\\"Error in lessStrict: \\\"),n.less(r)}}),el=vn({notEqual_:function(t,e){var n,r=nn(t,\\\"a\\\",\\\"notEqual\\\"),o=nn(e,\\\"b\\\",\\\"notEqual\\\");return n=wt(r,o),r=n[0],o=n[1],no(r.shape,o.shape),St.runKernel(function(t){return t.notEqual(r,o)},{$a:r,$b:o})}}),nl=vn({notEqualStrict_:function(t,e){var n=nn(t,\\\"a\\\",\\\"notEqualStrict\\\"),r=nn(e,\\\"b\\\",\\\"notEqualStrict\\\");return d(n.shape,r.shape,\\\"Error in notEqualStrict: \\\"),n.notEqual(r)}});function rl(t,e){for(var n=[],r=t;r<e;++r)n.push(r);return n}function ol(t){for(var e=[],n=0;n<t.length;++n)for(var r=0;r<t[n].length;++r)e.push(t[n][r]);return e}var al=vn({gather_:function(t,e,n){void 0===n&&(n=0);var r=nn(t,\\\"x\\\",\\\"gather\\\"),o=nn(e,\\\"indices\\\",\\\"gather\\\",\\\"int32\\\");n=I(n,r.shape)[0];var a=function(t,e,n){for(var r=t.shape[n],o=[],a=1,i=1,s=0;s<n;s++)o.push(t.shape[s]),a*=t.shape[s];for(s=0;s<e.rank;s++)o.push(e.shape[s]);for(s=n+1;s<t.rank;s++)o.push(t.shape[s]),i*=t.shape[s];return{batchSize:a,sliceSize:i,dimSize:r,outputShape:o}}(r,o,n);return St.runKernel(function(t,e){var a=t.gather(r,o.flatten(),n);return e([o]),a},{$x:r},function(t,e){var o=e[0];return{$x:function(){var e=r.shape,a=o.size,i=e.slice(0,n),s=i.length,u=e.slice(n,e.length).slice(1),l=u.length,c=rl(0,s),h=rl(s+1,s+1+l),p=ol([i,[a],u]),f=t.reshape(p),d=o.reshape([a]),v=ol([[s],c,h]),m=f.transpose(v),g=il(m,d,r.shape[n]),y=hn(v);return g=g.transpose(y)}}}).reshape(a.outputShape)}}),il=vn({unsortedSegmentSum_:function(t,e,n){var r=nn(t,\\\"x\\\",\\\"unsortedSegmentSum\\\"),o=nn(e,\\\"segmentIds\\\",\\\"unsortedSegmentSum\\\",\\\"int32\\\");return f(x(n),function(){return\\\"numSegments must be of dtype int\\\"}),St.runKernel(function(t,e){var a=t.unsortedSegmentSum(r,o,n);return e([o]),a},{$x:r},function(t,e){var n=e[0];return{$x:function(){return function(t,e){for(var n=Du(e,Fn(e)),r=al(t,n),o=ju(e,wn(0,\\\"int32\\\")),a=r.rank-o.rank,i=0;i<a;++i)o=ir(o,i+1);o=yu(o,Sn(r.shape,\\\"bool\\\"));var s=Fn(r);return Cu(o,r,s)}(t,n)}}})}});var sl=function(t,e,o){return n(this,void 0,void 0,function(){var n,a,i,s,u,l,c,h,p,v,m,g,y;return r(this,function(r){switch(r.label){case 0:for(n=nn(t,\\\"tensor\\\",\\\"boolMask\\\"),a=nn(e,\\\"mask\\\",\\\"boolMask\\\",\\\"bool\\\"),i=null==o?0:o,s=a.rank,u=n.shape,f(s>0,function(){return\\\"mask cannot be scalar\\\"}),d(u.slice(i,i+s),a.shape,\\\"mask's shape must match the first K dimensions of tensor's shape,\\\"),l=1,c=i;c<i+s;c++)l*=u[c];return h=u.slice(0,i).concat([l],u.slice(i+s)),p=n.reshape(h),v=a.reshape([-1]),[4,Eu(v)];case 1:return m=r.sent(),g=m.squeeze([1]),y=al(p,g,i),t!==n&&n.dispose(),e!==a&&a.dispose(),g.dispose(),p.dispose(),v.dispose(),m.dispose(),[2,y]}})})};function ul(t,e,n,r,o,a,i){void 0===a&&(a=\\\"NHWC\\\"),f(t.length===e.rank,function(){return\\\"Length of inShape (\\\"+t.length+\\\") and rank of dy (\\\"+e.rank+\\\") must match\\\"});var s=t,u=e,l=!1;3===e.rank&&(l=!0,u=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]),s=[1,t[0],t[1],t[2]]),f(4===s.length,function(){return\\\"Error in conv2dDerInput: inShape must be length 4, but got length \\\"+s.length+\\\".\\\"}),f(4===u.rank,function(){return\\\"Error in conv2dDerInput: dy must be rank 4, but got rank \\\"+u.rank}),f(4===n.rank,function(){return\\\"Error in conv2dDerInput: filter must be rank 4, but got rank \\\"+n.rank});var c=\\\"NHWC\\\"===a?s[3]:s[1],h=\\\"NHWC\\\"===a?u.shape[3]:u.shape[1];f(c===n.shape[2],function(){return\\\"Error in conv2dDerInput: depth of input (\\\"+c+\\\") must match input depth for filter \\\"+n.shape[2]+\\\".\\\"}),f(h===n.shape[3],function(){return\\\"Error in conv2dDerInput: depth of output (\\\"+h+\\\") must match output depth for filter \\\"+n.shape[3]+\\\".\\\"}),null!=i&&f(x(o),function(){return\\\"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode \\\"+i+\\\" but got pad \\\"+o+\\\".\\\"});var p=vo(a),d=ao(s,n.shape,r,1,o,i,!1,p),v=St.runKernel(function(t,e){var r=t.conv2dDerInput(u,n,d);return e([n,u]),r},{dy4D:u,filter:n},function(t,e){var n=e[0],s=e[1];return{dy4D:function(){return fl(t,n,r,o,a,1,i)},filter:function(){return vl(t,s,n.shape,r,o,a,i)}}});return l?v.as3D(v.shape[1],v.shape[2],v.shape[3]):v}function ll(t,e,n,r,o,a,i){void 0===a&&(a=\\\"NHWC\\\");var s=t;3===t.rank&&(s=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var u=e;3===u.rank&&(u=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),f(4===s.rank,function(){return\\\"Error in conv2dDerFilter: input must be rank 4, but got shape \\\"+s.shape+\\\".\\\"}),f(4===u.rank,function(){return\\\"Error in conv2dDerFilter: dy must be rank 4, but got shape \\\"+u.shape+\\\".\\\"}),f(4===n.length,function(){return\\\"Error in conv2dDerFilter: filterShape must be length 4, but got \\\"+n+\\\".\\\"});var l=\\\"NHWC\\\"===a?s.shape[3]:s.shape[1],c=\\\"NHWC\\\"===a?u.shape[3]:u.shape[1];f(l===n[2],function(){return\\\"Error in conv2dDerFilter: depth of input \\\"+l+\\\") must match input depth in filter (\\\"+n[2]+\\\".\\\"}),f(c===n[3],function(){return\\\"Error in conv2dDerFilter: depth of dy (\\\"+c+\\\") must match output depth for filter (\\\"+n[3]+\\\").\\\"}),null!=i&&f(x(o),function(){return\\\"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode \\\"+i+\\\" but got pad \\\"+o+\\\".\\\"});var h=vo(a),p=ao(s.shape,n,r,1,o,i,!1,h);return St.runKernel(function(t){return t.conv2dDerFilter(s,u,p)},{x4D:s,dy4D:u})}function cl(t){var e=function(t){return\\\"number\\\"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}(t),n=e[0],r=e[1],o=e[2];return 1===n&&1===r&&1===o}function hl(t,e,n,r,o){f(t.length===e.rank,function(){return\\\"Length of inShape (\\\"+t.length+\\\") and rank of dy (\\\"+e.rank+\\\") must match\\\"});var a=t,i=e,s=!1;4===e.rank&&(s=!0,i=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]),a=[1,t[0],t[1],t[2],t[3]]);var u=a[4],l=i.shape[4];f(5===a.length,function(){return\\\"Error in conv3dDerInput: inShape must be length 5, but got length \\\"+a.length+\\\".\\\"}),f(5===i.rank,function(){return\\\"Error in conv3dDerInput: dy must be rank 5, but got rank \\\"+i.rank}),f(5===n.rank,function(){return\\\"Error in conv3dDerInput: filter must be rank 5, but got rank \\\"+n.rank}),f(u===n.shape[3],function(){return\\\"Error in conv3dDerInput: depth of input (\\\"+u+\\\") must match input depth for filter \\\"+n.shape[3]+\\\".\\\"}),f(l===n.shape[4],function(){return\\\"Error in conv3dDerInput: depth of output (\\\"+l+\\\") must match output depth for filter \\\"+n.shape[4]+\\\".\\\"});var c=io(a,n.shape,r,1,o),h=St.runKernel(function(t){return t.conv3dDerInput(i,n,c)},{dy5D:i});return s?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}var pl=vn({conv1d_:function(t,e,n,r,o,a,i){void 0===o&&(o=\\\"NWC\\\"),void 0===a&&(a=1);var s=nn(t,\\\"x\\\",\\\"conv1d\\\"),u=nn(e,\\\"filter\\\",\\\"conv1d\\\"),l=s,c=!1;2===s.rank&&(c=!0,l=s.as3D(1,s.shape[0],s.shape[1])),f(3===l.rank,function(){return\\\"Error in conv1d: input must be rank 3, but got rank \\\"+l.rank+\\\".\\\"}),f(3===u.rank,function(){return\\\"Error in conv1d: filter must be rank 3, but got rank \\\"+u.rank+\\\".\\\"}),null!=i&&f(x(r),function(){return\\\"Error in conv1d: pad must be an integer when using, dimRoundingMode \\\"+i+\\\" but got pad \\\"+r+\\\".\\\"}),f(l.shape[2]===u.shape[1],function(){return\\\"Error in conv1d: depth of input (\\\"+l.shape[2]+\\\") must match input depth for filter \\\"+u.shape[1]+\\\".\\\"}),f(fo(n,a),function(){return\\\"Error in conv1D: Either stride or dilation must be 1. Got stride \\\"+n+\\\" and dilation '\\\"+a+\\\"'\\\"}),f(\\\"NWC\\\"===o,function(){return\\\"Error in conv1d: got dataFormat of \\\"+o+\\\" but only NWC is currently supported.\\\"});var h=u.as4D(1,u.shape[0],u.shape[1],u.shape[2]),p=l.as4D(l.shape[0],1,l.shape[1],l.shape[2]),d=fl(p,h,[1,n],r,\\\"NHWC\\\",[1,a],i);return c?d.as2D(d.shape[2],d.shape[3]):d.as3D(d.shape[0],d.shape[2],d.shape[3])}}),fl=vn({conv2d_:function(t,e,n,r,o,a,i){void 0===o&&(o=\\\"NHWC\\\"),void 0===a&&(a=[1,1]);var s=nn(t,\\\"x\\\",\\\"conv2d\\\"),u=nn(e,\\\"filter\\\",\\\"conv2d\\\"),l=s,c=!1;3===s.rank&&(c=!0,l=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),f(4===l.rank,function(){return\\\"Error in conv2d: input must be rank 4, but got rank \\\"+l.rank+\\\".\\\"}),f(4===u.rank,function(){return\\\"Error in conv2d: filter must be rank 4, but got rank \\\"+u.rank+\\\".\\\"}),null!=i&&f(x(r),function(){return\\\"Error in conv2d: pad must be an integer when using, dimRoundingMode \\\"+i+\\\" but got pad \\\"+r+\\\".\\\"});var h=\\\"NHWC\\\"===o?l.shape[3]:l.shape[1];f(h===u.shape[2],function(){return\\\"Error in conv2d: depth of input (\\\"+h+\\\") must match input depth for filter \\\"+u.shape[2]+\\\".\\\"}),f(fo(n,a),function(){return\\\"Error in conv2D: Either strides or dilations must be 1. Got strides \\\"+n+\\\" and dilations '\\\"+a+\\\"'\\\"});var p=vo(o),d=ao(l.shape,u.shape,n,a,r,i,!1,p),v=St.runKernel(function(t,e){var n=t.conv2d(l,u,d);return e([u,l]),n},{x:l,$filter:u},function(t,e){var i=e,s=i[0],u=i[1];return f(po(a),function(){return\\\"Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '\\\"+a+\\\"'\\\"}),{x:function(){return ul(u.shape,t,s,n,r,o)},$filter:function(){return ll(u,t,s.shape,n,r,o)}}});return c?v.as3D(v.shape[1],v.shape[2],v.shape[3]):v}}),dl=vn({conv3d_:function(t,e,n,r,o,a){void 0===o&&(o=\\\"NDHWC\\\"),void 0===a&&(a=[1,1,1]);var i=nn(t,\\\"x\\\",\\\"conv3d\\\"),s=nn(e,\\\"filter\\\",\\\"conv3d\\\"),u=i,l=!1;4===i.rank&&(l=!0,u=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3])),f(5===u.rank,function(){return\\\"Error in conv3d: input must be rank 5, but got rank \\\"+u.rank+\\\".\\\"}),f(5===s.rank,function(){return\\\"Error in conv3d: filter must be rank 5, but got rank \\\"+s.rank+\\\".\\\"}),f(u.shape[4]===s.shape[3],function(){return\\\"Error in conv3d: depth of input (\\\"+u.shape[4]+\\\") must match input depth for filter \\\"+s.shape[3]+\\\".\\\"}),f(function(t,e){return cl(t)||cl(e)}(n,a),function(){return\\\"Error in conv3D: Either strides or dilations must be 1. Got strides \\\"+n+\\\" and dilations '\\\"+a+\\\"'\\\"}),f(\\\"NDHWC\\\"===o,function(){return\\\"Error in conv3d: got dataFormat of \\\"+o+\\\" but only NDHWC is currently supported.\\\"});var c=io(u.shape,s.shape,n,a,r),h=St.runKernel(function(t,e){var n=t.conv3d(u,s,c);return e([u,s]),n},{x:u,$filter:s},function(t,e){f(cl(a),function(){return\\\"Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '\\\"+a+\\\"'\\\"});var o=e[0],i=e[1];return{x:function(){return hl(o.shape,t,i,n,r)},$filter:function(){return function(t,e,n,r,o){var a=t;4===t.rank&&(a=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]));var i=e;4===i.rank&&(i=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3])),f(5===a.rank,function(){return\\\"Error in conv3dDerFilter: input must be rank 5, but got shape \\\"+a.shape+\\\".\\\"}),f(5===i.rank,function(){return\\\"Error in conv3dDerFilter: dy must be rank 5, but got shape \\\"+i.shape+\\\".\\\"}),f(5===n.length,function(){return\\\"Error in conv3dDerFilter: filterShape must be length 5, but got \\\"+n+\\\".\\\"}),f(a.shape[4]===n[3],function(){return\\\"Error in conv3dDerFilter: depth of input \\\"+a.shape[4]+\\\") must match input depth in filter (\\\"+n[3]+\\\".\\\"}),f(i.shape[4]===n[4],function(){return\\\"Error in conv3dDerFilter: depth of dy (\\\"+i.shape[4]+\\\") must match output depth for filter (\\\"+n[4]+\\\").\\\"});var s=io(a.shape,n,r,1,o);return St.runKernel(function(t){return t.conv3dDerFilter(a,i,s)},{x5D:a,dy5D:i})}(o,t,i.shape,n,r)}}});return l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),vl=vn({conv2dDerFilter_:ll}),ml=vn({conv2dDerInput_:ul}),gl=vn({depthwiseConv2d_:function(t,e,n,r,o,a,i){void 0===o&&(o=\\\"NHWC\\\"),void 0===a&&(a=[1,1]);var s=nn(t,\\\"x\\\",\\\"depthwiseConv2d\\\"),u=nn(e,\\\"filter\\\",\\\"depthwiseConv2d\\\"),l=s,c=!1;3===s.rank&&(c=!0,l=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),f(4===l.rank,function(){return\\\"Error in depthwiseConv2d: input must be rank 4, but got rank \\\"+l.rank+\\\".\\\"}),f(4===u.rank,function(){return\\\"Error in depthwiseConv2d: filter must be rank 4, but got rank \\\"+u.rank+\\\".\\\"}),f(l.shape[3]===u.shape[2],function(){return\\\"Error in depthwiseConv2d: number of input channels (\\\"+l.shape[3]+\\\") must match the inChannels dimension in filter \\\"+u.shape[2]+\\\".\\\"}),null==a&&(a=[1,1]),f(fo(n,a),function(){return\\\"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides \\\"+n+\\\" and dilations '\\\"+a+\\\"'\\\"}),null!=i&&f(x(r),function(){return\\\"Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode \\\"+i+\\\" but got pad \\\"+r+\\\".\\\"});var h=ao(l.shape,u.shape,n,a,r,i,!0),p=St.runKernel(function(t,e){var n=t.depthwiseConv2D(l,u,h);return e([l,u]),n},{x:l,$filter:u},function(t,e){f(po(a),function(){return\\\"Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '\\\"+a+\\\"'\\\"});var n=e[0],r=e[1];return{x:function(){return function(t,e,n,r){var o=e,a=!1;3===e.rank&&(a=!0,o=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var i=St.runKernel(function(t){return t.depthwiseConv2DDerInput(o,n,r)},{dy4D:o});return a?i.as3D(i.shape[1],i.shape[2],i.shape[3]):i}(n.shape,t,r,h)},$filter:function(){return function(t,e,n,r){var o=t;3===t.rank&&(o=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var a=e;return 3===a.rank&&(a=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),St.runKernel(function(t){return t.depthwiseConv2DDerFilter(o,a,r)},{x4D:o,dy4D:a})}(n,t,r.shape,h)}}});return c?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}}),yl=vn({separableConv2d_:function(t,e,n,r,o,a,i){void 0===a&&(a=[1,1]),void 0===i&&(i=\\\"NHWC\\\");var s=nn(t,\\\"x\\\",\\\"separableConv2d\\\"),u=nn(e,\\\"depthwiseFilter\\\",\\\"separableConv2d\\\"),l=nn(n,\\\"pointwiseFilter\\\",\\\"separableConv2d\\\"),c=s,h=!1;if(3===s.rank&&(h=!0,c=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),\\\"NCHW\\\"===i)throw new Error(\\\"separableConv2d currently does not support dataFormat NCHW; only NHWC is supported\\\");f(4===c.rank,function(){return\\\"Error in separableConv2d: input must be rank 4, but got rank \\\"+c.rank+\\\".\\\"}),f(4===u.rank,function(){return\\\"Error in separableConv2d: depthwise filter must be rank 4, but got rank \\\"+u.rank+\\\".\\\"}),f(4===l.rank,function(){return\\\"Error in separableConv2d: pointwise filter must be rank 4, but got rank \\\"+u.rank+\\\".\\\"}),f(1===l.shape[0],function(){return\\\"Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got \\\"+l.shape[0]+\\\".\\\"}),f(1===l.shape[1],function(){return\\\"Error in separableConv2d: the second dimension of pointwise filter must be 1, but got \\\"+l.shape[1]+\\\".\\\"});var p=u.shape[2],d=u.shape[3];f(l.shape[2]===p*d,function(){return\\\"Error in separableConv2d: the third dimension of pointwise filter must be \\\"+p*d+\\\", but got \\\"+l.shape[2]+\\\".\\\"});var v=gl(c,u,r,o,i,a),m=fl(v,l,1,\\\"valid\\\",i);return h?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),xl=vn({conv2dTranspose_:function(t,e,n,r,o,a){return ul(n,nn(t,\\\"x\\\",\\\"conv2dTranspose\\\"),nn(e,\\\"filter\\\",\\\"conv2dTranspose\\\"),r,o,\\\"NHWC\\\",a)}}),bl=vn({conv3dTranspose_:function(t,e,n,r,o){return hl(n,nn(t,\\\"x\\\",\\\"conv3dTranspose\\\"),nn(e,\\\"filter\\\",\\\"conv3dTranspose\\\"),r,o)}});var wl=vn({matMul_:function(t,e,n,r){var o;void 0===n&&(n=!1),void 0===r&&(r=!1);var a=nn(t,\\\"a\\\",\\\"matMul\\\"),i=nn(e,\\\"b\\\",\\\"matMul\\\");o=wt(a,i),a=o[0],i=o[1];var s=n?a.shape[a.rank-2]:a.shape[a.rank-1],u=r?i.shape[i.rank-1]:i.shape[i.rank-2],l=n?a.shape[a.rank-1]:a.shape[a.rank-2],c=r?i.shape[i.rank-2]:i.shape[i.rank-1],h=a.shape.slice(0,-2),p=i.shape.slice(0,-2),d=g(h),v=g(p);f(a.rank>=2&&i.rank>=2&&a.rank===i.rank,function(){return\\\"Error in matMul: inputs must have the same rank of at least 2, got ranks \\\"+a.rank+\\\" and \\\"+i.rank+\\\".\\\"}),f(y(h,p),function(){return\\\"Error in matMul: outer dimensions (\\\"+h+\\\") and (\\\"+p+\\\") of Tensors with shapes \\\"+a.shape+\\\" and \\\"+i.shape+\\\" must match.\\\"}),f(s===u,function(){return\\\"Error in matMul: inner shapes (\\\"+s+\\\") and (\\\"+u+\\\") of Tensors with shapes \\\"+a.shape+\\\" and \\\"+i.shape+\\\" and transposeA=\\\"+n+\\\" and transposeB=\\\"+r+\\\" must match.\\\"});var m=a.shape.slice(0,-2).concat([l,c]),x=n?a.as3D(d,s,l):a.as3D(d,l,s),b=r?i.as3D(v,c,u):i.as3D(v,u,c);return St.runKernel(function(t,e){var o=t.batchMatMul(x,b,n,r);return e([x,b]),o},{$a:x,$b:b},function(t,e){var o=e,a=o[0],i=o[1];return n||r?!n&&r?{$a:function(){return t.matMul(i,!1,!1)},$b:function(){return t.matMul(a,!0,!1)}}:n&&!r?{$a:function(){return i.matMul(t,!1,!0)},$b:function(){return a.matMul(t,!1,!1)}}:{$a:function(){return i.matMul(t,!0,!0)},$b:function(){return t.matMul(a,!0,!0)}}:{$a:function(){return t.matMul(i,!1,!0)},$b:function(){return a.matMul(t,!0,!1)}}}).reshape(m)}}),Cl=vn({dot_:function(t,e){var n=nn(t,\\\"t1\\\",\\\"dot\\\"),r=nn(e,\\\"t2\\\",\\\"dot\\\");f(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),function(){return\\\"Error in dot: inputs must all be rank 1 or 2, but got ranks \\\"+n.rank+\\\" and \\\"+r.rank+\\\".\\\"});var o=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];return f(o===a,function(){return\\\"Error in dot: inner dimensions of inputs must match, but got \\\"+o+\\\" and \\\"+a+\\\".\\\"}),1===n.rank&&1===r.rank?n.as2D(1,-1).matMul(r.as2D(-1,1)).asScalar():1===n.rank&&2===r.rank?n.as2D(1,-1).matMul(r.as2D(r.shape[0],r.shape[1])).as1D():2===n.rank&&1===r.rank?n.matMul(r.as2D(-1,1)).as1D():n.matMul(r.as2D(r.shape[0],r.shape[1]))}}),El=vn({outerProduct_:function(t,e){var n=nn(t,\\\"v1\\\",\\\"outerProduct\\\"),r=nn(e,\\\"v2\\\",\\\"outerProduct\\\");return f(1===n.rank&&1===r.rank,function(){return\\\"Error in outerProduct: inputs must be rank 1, but got ranks \\\"+n.rank+\\\" and \\\"+r.rank+\\\".\\\"}),n.as2D(-1,1).matMul(r.as2D(1,-1))}});var Rl=vn({reverse_:function(t,e){var n=nn(t,\\\"x\\\",\\\"reverse\\\");if(0===n.rank)return n.clone();var r=I(e,n.shape);return St.runKernel(function(t){return t.reverse(n,r)},{$x:n},function(t){return{$x:function(){return t.reverse(r)}}}).reshapeAs(n)}}),Il=vn({reverse1d_:function(t){var e=nn(t,\\\"x\\\",\\\"reverse\\\");return f(1===e.rank,function(){return\\\"Error in reverse1D: x must be rank 1 but got rank \\\"+e.rank+\\\".\\\"}),Rl(e,0)}}),kl=vn({reverse2d_:function(t,e){var n=nn(t,\\\"x\\\",\\\"reverse\\\");return f(2===n.rank,function(){return\\\"Error in reverse2D: x must be rank 2 but got rank \\\"+n.rank+\\\".\\\"}),Rl(n,e)}}),Nl=vn({reverse3d_:function(t,e){var n=nn(t,\\\"x\\\",\\\"reverse\\\");return f(3===n.rank,function(){return\\\"Error in reverse3D: x must be rank 3 but got rank \\\"+n.rank+\\\".\\\"}),Rl(n,e)}}),Sl=vn({reverse4d_:function(t,e){var n=nn(t,\\\"x\\\",\\\"reverse\\\");return f(4===n.rank,function(){return\\\"Error in reverse4D: x must be rank 4 but got rank \\\"+n.rank+\\\".\\\"}),Rl(n,e)}});function Al(t,e,n,r,o,a){var i=nn(t,\\\"x\\\",\\\"maxPool\\\"),s=i,u=!1;3===i.rank&&(u=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),null==r&&(r=[1,1]),f(4===s.rank,function(){return\\\"Error in maxPool: input must be rank 4 but got rank \\\"+s.rank+\\\".\\\"}),f(fo(n,r),function(){return\\\"Error in maxPool: Either strides or dilations must be 1. Got strides \\\"+n+\\\" and dilations '\\\"+r+\\\"'\\\"}),null!=a&&f(x(o),function(){return\\\"Error in maxPool: pad must be an integer when using, dimRoundingMode \\\"+a+\\\" but got pad \\\"+o+\\\".\\\"});var l=ro(s.shape,e,n,r,o,a),c=St.runKernel(function(t,e){var n=t.maxPool(s,l);return e([s,n]),n},{x:s},function(t,a){var i=a[0],s=a[1];return{x:function(){return function(t,e,n,r,o,a,i,s){var u=nn(t,\\\"dy\\\",\\\"maxPoolBackprop\\\"),l=nn(e,\\\"input\\\",\\\"maxPoolBackprop\\\"),c=nn(n,\\\"output\\\",\\\"maxPoolBackprop\\\");f(l.rank===u.rank,function(){return\\\"Rank of input (\\\"+l.rank+\\\") does not match rank of dy (\\\"+u.rank+\\\")\\\"}),null==a&&(a=[1,1]),f(fo(o,a),function(){return\\\"Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides \\\"+o+\\\" and dilations '\\\"+a+\\\"'\\\"}),f(4===u.rank,function(){return\\\"Error in maxPoolBackprop: dy must be rank 4 but got rank \\\"+u.rank+\\\".\\\"}),f(4===l.rank,function(){return\\\"Error in maxPoolBackprop: input must be rank 4 but got rank \\\"+l.rank+\\\".\\\"}),null!=s&&f(x(i),function(){return\\\"Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode \\\"+s+\\\" but got pad \\\"+i+\\\".\\\"});var h=ro(l.shape,r,o,a,i,s);return St.runKernel(function(t){return t.maxPoolBackprop(u,l,c,h)},{$dy:u,$input:l})}(t,i,s,e,n,r,o)}}});return u?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}function Tl(t,e,n,r,o,a){var i=nn(t,\\\"x\\\",\\\"avgPool\\\",\\\"float32\\\");null==r&&(r=[1,1]),f(fo(n,r),function(){return\\\"Error in avgPool: Either strides or dilations must be 1. Got strides \\\"+n+\\\" and dilations '\\\"+r+\\\"'\\\"});var s=i,u=!1;3===i.rank&&(u=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),f(4===s.rank,function(){return\\\"Error in avgPool: x must be rank 4 but got rank \\\"+s.rank+\\\".\\\"}),null!=a&&f(x(o),function(){return\\\"Error in avgPool: pad must be an integer when using, dimRoundingMode \\\"+a+\\\" but got pad \\\"+o+\\\".\\\"});var l=ro(s.shape,e,n,r,o,a),c=St.runKernel(function(t){return t.avgPool(s,l)},{x:s},function(t){return{x:function(){return function(t,e,n,r,o,a){var i=nn(t,\\\"dy\\\",\\\"avgPoolBackprop\\\"),s=nn(e,\\\"input\\\",\\\"avgPoolBackprop\\\");f(s.rank===i.rank,function(){return\\\"Rank of input (\\\"+s.rank+\\\") does not match rank of dy (\\\"+i.rank+\\\")\\\"}),null==o&&(o=[1,1]),f(fo(r,o),function(){return\\\"Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides \\\"+r+\\\" and dilations '\\\"+o+\\\"'\\\"});var u=s,l=i,c=!1;3===s.rank&&(c=!0,u=s.as4D(1,s.shape[0],s.shape[1],s.shape[2]),l=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),f(4===l.rank,function(){return\\\"Error in avgPoolBackprop: dy must be rank 4 but got rank \\\"+l.rank+\\\".\\\"}),f(4===u.rank,function(){return\\\"Error in avgPoolBackprop: input must be rank 4 but got rank \\\"+u.rank+\\\".\\\"});var h=ro(u.shape,n,r,o,a),p=St.runKernel(function(t){return t.avgPoolBackprop(l,u,h)},{dy4D:l,input4D:u});return c?p.as3D(p.shape[1],p.shape[2],p.shape[3]):p}(t,s,e,n,r,o)}}});return c=c.cast(i.dtype),u?c.as3D(c.shape[1],c.shape[2],c.shape[3]):c}var Dl=vn({maxPool_:function(t,e,n,r,o){return Al(t,e,n,1,r,o)}}),_l=vn({avgPool_:function(t,e,n,r,o){return Tl(t,e,n,1,r,o)}}),Ol=vn({pool_:function(t,e,n,r,o,a){null==o&&(o=[1,1]),null==a&&(a=1),0===r&&(r=\\\"valid\\\");var i=nn(t,\\\"x\\\",\\\"maxPool\\\"),s=i,u=!1;3===i.rank&&(u=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),f(fo(a,o),function(){return\\\"Error in pool: Either strides or dilations must be 1. Got strides \\\"+a+\\\" and dilations '\\\"+o+\\\"'\\\"});var l,c=ro(s.shape,e,a,o,r),h=[c.dilationHeight,c.dilationWidth];l=\\\"same\\\"===r?function(t,e){var n=t.map(function(t,n){return t+(t-1)*(e[n]-1)}).map(function(t){return t-1}),r=n.map(function(t){return Math.floor(t/2)}),o=n.map(function(t,e){return t-r[e]});return n.map(function(t,e){return[r[e],o[e]]})}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];var p=1===h[0]&&1===h[1],d=function(t,e,n){var r=n.map(function(t){return t[0]}),o=n.map(function(t){return t[1]}),a=t.concat(r,o),i=e.map(function(t,e){return(t-a[e]%t)%t}),s=o.map(function(t,e){return t+i[e]}),u=e.map(function(t,e){return[r[e],s[e]]}),l=e.map(function(t,e){return[0,i[e]]});return[u,l]}([c.inHeight,c.inWidth],h,l),v=d[0],m=d[1],g=p?r:\\\"valid\\\",y=p?s:br(s,h,v),x=(\\\"avg\\\"===n?function(){return Tl(y,e,a,1,g)}:function(){return Al(y,e,a,1,g)})(),b=p?x:er(x,h,m);return u?b.as3D(b.shape[1],b.shape[2],b.shape[3]):b}}),Fl=vn({maxPool3d_:function(t,e,n,r,o,a,i){void 0===a&&(a=\\\"NDHWC\\\");var s=nn(t,\\\"x\\\",\\\"maxPool3d\\\"),u=s,l=!1;4===s.rank&&(l=!0,u=s.as5D(1,s.shape[0],s.shape[1],s.shape[2],s.shape[3])),null==i&&(i=[1,1,1]),f(5===u.rank,function(){return\\\"Error in maxPool3d: x must be rank 5 but got rank \\\"+u.rank+\\\".\\\"}),f(\\\"NDHWC\\\"===a,function(){return\\\"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of \\\"+a}),f(fo(n,i),function(){return\\\"Error in maxPool3d: Either strides or dilations must be 1. Got strides \\\"+n+\\\" and dilations '\\\"+i+\\\"'\\\"}),null!=o&&f(x(r),function(){return\\\"Error in maxPool3d: pad must be an integer when using, dimRoundingMode \\\"+o+\\\" but got pad \\\"+r+\\\".\\\"});var c=oo(u.shape,e,n,i,r,o,a),h=St.runKernel(function(t,e){var n=t.maxPool3d(u,c);return e([u,n]),n},{x:u},function(t,a){var s=a[0],u=a[1];return{x:function(){return function(t,e,n,r,o,a,i,s){var u=nn(t,\\\"dy\\\",\\\"maxPool3dBackprop\\\"),l=nn(e,\\\"input\\\",\\\"maxPool3dBackprop\\\"),c=nn(n,\\\"output\\\",\\\"maxPool3dBackprop\\\"),h=u,p=l,d=c,v=!1;4===l.rank&&(v=!0,h=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]),p=l.as5D(1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]),d=c.as5D(1,c.shape[0],c.shape[1],c.shape[2],c.shape[3])),f(5===h.rank,function(){return\\\"Error in maxPool3dBackprop: dy must be rank 5 but got rank \\\"+h.rank+\\\".\\\"}),f(5===p.rank,function(){return\\\"Error in maxPool3dBackprop: input must be rank 5 but got rank \\\"+p.rank+\\\".\\\"}),f(5===d.rank,function(){return\\\"Error in maxPool3dBackprop: output must be rank 5 but got rank \\\"+d.rank+\\\".\\\"}),null==a&&(a=[1,1,1]),f(fo(o,a),function(){return\\\"Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides \\\"+o+\\\" and dilations '\\\"+a+\\\"'\\\"}),null!=s&&f(x(i),function(){return\\\"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode \\\"+s+\\\" but got pad \\\"+i+\\\".\\\"});var m=oo(p.shape,r,o,a,i,s),g=St.runKernel(function(t){return t.maxPool3dBackprop(h,p,d,m)},{dy5D:h,input5D:p});return v?g.as4D(g.shape[1],g.shape[2],g.shape[3],g.shape[4]):g}(t,s,u,e,n,i,r,o)}}});return l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}}),Ml=vn({avgPool3d_:function(t,e,n,r,o,a,i){void 0===a&&(a=\\\"NDHWC\\\");var s=nn(t,\\\"x\\\",\\\"avgPool3d\\\",\\\"float32\\\"),u=s,l=!1;4===s.rank&&(l=!0,u=s.as5D(1,s.shape[0],s.shape[1],s.shape[2],s.shape[3])),null==i&&(i=[1,1,1]),f(5===u.rank,function(){return\\\"Error in avgPool3d: x must be rank 5 but got rank \\\"+u.rank+\\\".\\\"}),f(\\\"NDHWC\\\"===a,function(){return\\\"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of \\\"+a}),f(fo(n,i),function(){return\\\"Error in avgPool3d: Either strides or dilations must be 1. Got strides \\\"+n+\\\" and dilations '\\\"+i+\\\"'\\\"}),null!=o&&f(x(r),function(){return\\\"Error in avgPool3d: pad must be an integer when using, dimRoundingMode \\\"+o+\\\" but got pad \\\"+r+\\\".\\\"});var c=oo(u.shape,e,n,i,r,o,a),h=St.runKernel(function(t){return t.avgPool3d(u,c)},{x:u},function(t){return{x:function(){return function(t,e,n,r,o,a,i){var s=nn(t,\\\"dy\\\",\\\"avgPool3dBackprop\\\"),u=nn(e,\\\"input\\\",\\\"avgPool3dBackprop\\\"),l=s,c=u,h=!1;4===u.rank&&(h=!0,l=s.as5D(1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]),c=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3])),f(5===l.rank,function(){return\\\"Error in avgPool3dBackprop: dy must be rank 5 but got rank \\\"+l.rank+\\\".\\\"}),f(5===c.rank,function(){return\\\"Error in avgPool3dBackprop: input must be rank 5 but got rank \\\"+c.rank+\\\".\\\"}),null==o&&(o=[1,1,1]),f(fo(r,o),function(){return\\\"Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides \\\"+r+\\\" and dilations '\\\"+o+\\\"'\\\"}),null!=i&&f(x(a),function(){return\\\"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode \\\"+i+\\\" but got pad \\\"+a+\\\".\\\"});var p=oo(c.shape,n,r,o,a,i),d=St.runKernel(function(t){return t.avgPool3dBackprop(l,c,p)},{dy5D:l,input5D:c});return h?d.as4D(d.shape[1],d.shape[2],d.shape[3],d.shape[4]):d}(t,u,e,n,i,r,o)}}});return h=h.cast(u.dtype),l?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}});var Bl=vn({slice_:function(t,e,n){var r,o,a=nn(t,\\\"x\\\",\\\"slice\\\");if(0===a.rank)throw new Error(\\\"Slicing scalar is not possible\\\");(r=\\\"number\\\"==typeof e?[e].concat(new Array(a.rank-1).fill(0)):e.length<a.rank?e.concat(new Array(a.rank-e.length).fill(0)):e.slice()).forEach(function(t){f(-1!==t,function(){return\\\"slice() does not support negative begin indexing.\\\"})}),o=(o=null==n?new Array(a.rank).fill(-1):\\\"number\\\"==typeof n?[n].concat(new Array(a.rank-1).fill(-1)):n.length<a.rank?n.concat(new Array(a.rank-n.length).fill(-1)):n).map(function(t,e){return t>=0?t:(f(-1===t,function(){return\\\"Negative size values should be exactly -1 but got \\\"+t+\\\" for the slice() size at index \\\"+e+\\\".\\\"}),a.shape[e]-r[e])}),function(t,e,n){f(t.rank===e.length,function(){return\\\"Error in slice\\\"+t.rank+\\\"D: Length of begin \\\"+e+\\\" must match the rank of the array (\\\"+t.rank+\\\").\\\"}),f(t.rank===n.length,function(){return\\\"Error in slice\\\"+t.rank+\\\"D: Length of size \\\"+n+\\\" must match the rank of the array (\\\"+t.rank+\\\").\\\"});for(var r=function(r){f(e[r]+n[r]<=t.shape[r],function(){return\\\"Error in slice\\\"+t.rank+\\\"D: begin[\\\"+r+\\\"] + size[\\\"+r+\\\"] (\\\"+(e[r]+n[r])+\\\") would overflow input.shape[\\\"+r+\\\"] (\\\"+t.shape[r]+\\\")\\\"})},o=0;o<t.rank;++o)r(o)}(a,r,o);var i=a.shape;return St.runKernel(function(t){return t.slice(a,r,o)},{$x:a},function(t){for(var e=[],n=0;n<t.rank;n++)e.push([r[n],i[n]-r[n]-o[n]]);return{$x:function(){return t.pad(e)}}})}}),Pl=vn({slice1d_:function(t,e,n){var r=nn(t,\\\"x\\\",\\\"slice1d\\\");return f(1===r.rank,function(){return\\\"slice1d expects a rank-1 tensor, but got a rank-\\\"+r.rank+\\\" tensor\\\"}),Bl(r,[e],[n])}}),Ll=vn({slice2d_:function(t,e,n){var r=nn(t,\\\"x\\\",\\\"slice2d\\\");return f(2===r.rank,function(){return\\\"slice2d expects a rank-2 tensor, but got a rank-\\\"+r.rank+\\\" tensor\\\"}),Bl(r,e,n)}}),Wl=vn({slice3d_:function(t,e,n){var r=nn(t,\\\"x\\\",\\\"slice3d\\\");return f(3===r.rank,function(){return\\\"slice3d expects a rank-3 tensor, but got a rank-\\\"+r.rank+\\\" tensor\\\"}),Bl(r,e,n)}}),Ul=vn({slice4d_:function(t,e,n){var r=nn(t,\\\"x\\\",\\\"slice4d\\\");return f(4===r.rank,function(){return\\\"slice4d expects a rank-4 tensor, but got a rank-\\\"+r.rank+\\\" tensor\\\"}),Bl(r,e,n)}});function Vl(t,e,n,r,o){return e.rank<n.rank&&(e=e.reshape(un(e.shape,r))),t.rank<n.rank&&(t=t.reshape(un(t.shape,r))),{$x:function(){var r=t.mul(n.equal(e).cast(t.dtype));return null==o?r:r.transpose(o)}}}var zl=vn({all_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=nn(t,\\\"x\\\",\\\"all\\\",\\\"bool\\\"),o=I(e,r.shape),a=o,i=cn(a,r.rank);null!=i&&(r=r.transpose(i),a=pn(a.length,r.rank));var s=St.runKernel(function(t){return t.all(r,a)},{$x:r});if(n){var u=un(s.shape,o);return s.reshape(u)}return s}}),Gl=vn({any_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=nn(t,\\\"x\\\",\\\"any\\\",\\\"bool\\\"),o=I(e,r.shape),a=o,i=cn(a,r.rank);null!=i&&(r=r.transpose(i),a=pn(a.length,r.rank));var s=St.runKernel(function(t){return t.any(r,a)},{$x:r});if(n){var u=un(s.shape,o);return s.reshape(u)}return s}}),Hl=vn({argMax_:function(t,e){void 0===e&&(e=0);var n=nn(t,\\\"x\\\",\\\"argMax\\\");null==e&&(e=0);var r=I(e,n.shape),o=cn(r,n.rank);return null!=o&&(n=n.transpose(o),r=pn(r.length,n.rank)),St.runKernel(function(t,e){var o=t.argMax(n,r[0]);return e([n]),o},{$x:n},function(t,e){var n=e[0];return{$x:function(){return Fn(n)}}})}}),ql=vn({argMin_:function(t,e){void 0===e&&(e=0);var n=nn(t,\\\"x\\\",\\\"argMin\\\");null==e&&(e=0);var r=I(e,n.shape),o=cn(r,n.rank);return null!=o&&(n=n.transpose(o),r=pn(r.length,n.rank)),St.runKernel(function(t,e){var o=t.argMin(n,r[0]);return e([n]),o},{$x:n},function(t,e){var n=e[0];return{$x:function(){return Fn(n)}}})}}),$l=vn({logSumExp_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=nn(t,\\\"x\\\",\\\"logSumExp\\\"),o=I(e,r.shape),a=r.max(o,!0),i=r.sub(a).exp().sum(o).log(),s=a.reshape(i.shape).add(i);if(n){var u=un(s.shape,o);return s.reshape(u)}return s}}),Kl=vn({max_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=nn(t,\\\"x\\\",\\\"max\\\"),o=r,a=I(e,r.shape),i=a,s=cn(i,r.rank);null!=s&&(r=r.transpose(s),i=pn(i.length,r.rank));var u=St.runKernel(function(t,e){var n=t.max(r,i);return e([o,n]),n},{$x:r},function(t,e){return Vl(t,e[1],e[0],a,s)});if(n){var l=un(u.shape,a);u=u.reshape(l)}return u}}),jl=vn({mean_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=nn(t,\\\"x\\\",\\\"mean\\\"),o=I(e,r.shape),a=g(sn(r.shape,o)[1]);return jr(function(t){var r=wn(a);return{value:(r.dtype===t.dtype?t:t.cast(r.dtype)).div(r).sum(e,n),gradFunc:function(e){var n=t.shape.slice();return o.forEach(function(t){n[t]=1}),e.reshape(n).mul(Sn(t.shape,\\\"float32\\\")).div(a)}}})(r)}}),Xl=vn({min_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=nn(t,\\\"x\\\",\\\"min\\\"),o=r,a=I(e,r.shape),i=a,s=cn(i,r.rank);null!=s&&(r=r.transpose(s),i=pn(i.length,r.rank));var u=St.runKernel(function(t,e){var n=t.min(r,i);return e([o,n]),n},{$x:r},function(t,e){return Vl(t,e[1],e[0],a,s)});if(n){var l=un(u.shape,a);u=u.reshape(l)}return u}}),Yl=vn({moments_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=I(e,(t=nn(t,\\\"x\\\",\\\"moments\\\")).shape),o=t.mean(r,n),a=o.shape;n||(a=un(o.shape,r));var i=t.toFloat().sub(o.reshape(a)).square();return{mean:o,variance:i.mean(r,n)}}}),Ql=vn({sum_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=nn(t,\\\"x\\\",\\\"sum\\\");\\\"bool\\\"===r.dtype&&(r=r.toInt());var o=I(e,r.shape);return jr(function(t){var e=cn(o,t.rank),r=o,a=t;null!=e&&(a=t.transpose(e),r=pn(r.length,t.rank));var i=St.runKernel(function(t){return t.sum(a,r)},{permutedX:a});if(n){var s=un(i.shape,o);i=i.reshape(s)}return{value:i,gradFunc:function(e){var n=t.shape.slice();return o.forEach(function(t){n[t]=1}),e.reshape(n).mul(Sn(t.shape,\\\"float32\\\"))}}})(r)}}),Jl=vn({prod_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=nn(t,\\\"x\\\",\\\"prod\\\");\\\"bool\\\"===r.dtype&&(r=r.toInt());var o=I(e,r.shape),a=cn(o,r.rank),i=o,s=r;null!=a&&(s=r.transpose(a),i=pn(i.length,r.rank));var u=St.runKernel(function(t){return t.prod(s,i)},{permutedX:s});if(n){var l=un(u.shape,o);u=u.reshape(l)}return u}});var Zl=vn({elu_:function(t){var e=nn(t,\\\"x\\\",\\\"elu\\\");return St.runKernel(function(t,n){var r=t.elu(e);return n([r]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return St.runKernel(function(e){return e.eluDer(t,n)},{dy:t,y:n})}}})}}),tc=vn({leakyRelu_:function(t,e){void 0===e&&(e=.2);var n=nn(t,\\\"x\\\",\\\"leakyRelu\\\");return Du(wn(e).mul(n),n)}}),ec=vn({prelu_:function(t,e){var n=nn(t,\\\"x\\\",\\\"prelu\\\"),r=nn(e,\\\"alpha\\\",\\\"prelu\\\");return St.runKernel(function(t,e){var o=t.prelu(n,r);return e([n,r]),o},{$x:n,$alpha:r},function(t,e){var n=e[0],r=e[1],o=n.greater(0);return{$x:function(){return Cu(o,t,t.mul(r))},$alpha:function(){var e=Cu(o,Fn(t),t.mul(n)),a=eo(r.shape,t.shape);return a.length>0&&(e=e.sum(a)),e.reshape(r.shape)}}})}}),nc=vn({relu_:function(t){var e=nn(t,\\\"x\\\",\\\"relu\\\");return\\\"bool\\\"===e.dtype?e.toInt():St.runKernel(function(t,n){var r=t.relu(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mulStrict(n.step().toFloat())}}})}}),rc=vn({selu_:function(t){var e=nn(t,\\\"x\\\",\\\"selu\\\");return St.runKernel(function(t,n){var r=t.selu(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){var e=n.greater(wn(0)),r=wn(ji),o=wn(Xi),a=t.mul(o),i=t.mul(r).mul(n.toFloat().exp());return Cu(e,a,i)}}})}});var oc=vn({transpose_:function(t,e){var n=nn(t,\\\"x\\\",\\\"transpose\\\");return null==e&&(e=n.shape.map(function(t,e){return e}).reverse()),f(n.rank===e.length,function(){return\\\"Error in transpose: rank of input \\\"+n.rank+\\\" must match length of perm \\\"+e+\\\".\\\"}),e.forEach(function(t){f(t>=0&&t<n.rank,function(){return\\\"All entries in 'perm' must be between 0 and \\\"+(n.rank-1)+\\\" but got \\\"+e})}),n.rank<=1?n.clone():St.runKernel(function(t){return t.transpose(n,e)},{$x:n},function(t){var n=hn(e);return{$x:function(){return t.transpose(n)}}})}});var ac=vn({localResponseNormalization_:function(t,e,n,r,o){void 0===e&&(e=5),void 0===n&&(n=1),void 0===r&&(r=1),void 0===o&&(o=.5);var a=nn(t,\\\"x\\\",\\\"localResponseNormalization\\\");f(4===a.rank||3===a.rank,function(){return\\\"Error in localResponseNormalization: x must be rank 3 or 4 but got\\\\n               rank \\\"+a.rank+\\\".\\\"}),f(x(e),function(){return\\\"Error in localResponseNormalization: depthRadius must be an integer but got depthRadius \\\"+e+\\\".\\\"});var i=a,s=!1;3===a.rank&&(s=!0,i=a.as4D(1,a.shape[0],a.shape[1],a.shape[2]));var u=St.runKernel(function(t,a){var s=t.localResponseNormalization4D(i,e,n,r,o);return a([i,s]),s},{x4D:i},function(t,a){var i=a[0],s=a[1];return{x4D:function(){return St.runKernel(function(a){return a.LRNGrad(t,i,s,e,n,r,o)},{})}}});return s?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}});var ic=vn({norm_:function(t,e,n,r){void 0===e&&(e=\\\"euclidean\\\"),void 0===n&&(n=null),void 0===r&&(r=!1);var o=function t(e,n,r){if(void 0===r&&(r=null),0===e.rank)return e.abs();if(1!==e.rank&&null===r)return t(e.reshape([-1]),n,r);if(1===e.rank||\\\"number\\\"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return e.abs().sum(r);if(n===1/0)return e.abs().max(r);if(n===-1/0)return e.abs().min(r);if(\\\"euclidean\\\"===n||2===n)return e.abs().pow(wn(2,\\\"int32\\\")).sum(r).sqrt();throw new Error(\\\"Error in norm: invalid ord value: \\\"+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return e.abs().sum(r[0]).max(r[1]-1);if(n===1/0)return e.abs().sum(r[1]).max(r[0]);if(n===-1/0)return e.abs().sum(r[1]).min(r[0]);if(\\\"fro\\\"===n||\\\"euclidean\\\"===n)return e.square().sum(r).sqrt();throw new Error(\\\"Error in norm: invalid ord value: \\\"+n)}throw new Error(\\\"Error in norm: invalid axis: \\\"+r)}(t=nn(t,\\\"x\\\",\\\"norm\\\"),e,n),a=o.shape;if(r){var i=I(n,t.shape);a=un(o.shape,i)}return o.reshape(a)}});var sc=vn({basicLSTMCell_:function(t,e,n,r,o,a){var i=nn(t,\\\"forgetBias\\\",\\\"basicLSTMCell\\\"),s=nn(e,\\\"lstmKernel\\\",\\\"basicLSTMCell\\\"),u=nn(n,\\\"lstmBias\\\",\\\"basicLSTMCell\\\"),l=nn(r,\\\"data\\\",\\\"basicLSTMCell\\\"),c=nn(o,\\\"c\\\",\\\"basicLSTMCell\\\"),h=nn(a,\\\"h\\\",\\\"basicLSTMCell\\\"),p=l.concat(h,1).matMul(s).add(u),f=p.shape[0],d=p.shape[1]/4,v=[f,d],m=p.slice([0,0],v),g=p.slice([0,d],v),y=p.slice([0,2*d],v),x=p.slice([0,3*d],v),b=m.sigmoid().mulStrict(g.tanh()).addStrict(c.mulStrict(i.add(y).sigmoid())),w=b.tanh().mulStrict(x.sigmoid());return[b,w]}}),uc=vn({multiRNNCell_:function(t,e,n,r){for(var o=nn(e,\\\"data\\\",\\\"multiRNNCell\\\"),a=rn(n,\\\"c\\\",\\\"multiRNNCell\\\"),i=rn(r,\\\"h\\\",\\\"multiRNNCell\\\"),s=o,u=[],l=0;l<t.length;l++){var c=t[l](s,a[l],i[l]);u.push(c[0]),u.push(c[1]),s=c[1]}var h=[],p=[];for(l=0;l<u.length;l+=2)h.push(u[l]),p.push(u[l+1]);return[h,p]}});var lc=vn({movingAverage_:function(t,e,n,r,o){void 0===o&&(o=!0);var a=nn(t,\\\"v\\\",\\\"movingAverage\\\"),i=nn(e,\\\"x\\\",\\\"movingAverage\\\"),s=nn(n,\\\"decay\\\",\\\"movingAverage\\\");Ct(a,i),f(y(a.shape,i.shape),function(){return\\\"Shape mismatch in v and x\\\"});var u=wn(1),l=u.sub(s),c=i.sub(a).mul(l);if(o){f(null!=r,function(){return\\\"When using zeroDebias: true, step is required.\\\"});var h=nn(r,\\\"step\\\",\\\"movingAverage\\\");c=c.div(u.sub(Wu(s,h)))}return a.add(c)}});var cc=vn({stridedSlice_:function(t,e,n,r,o,a,i,s,u){if(void 0===o&&(o=0),void 0===a&&(a=0),void 0===i&&(i=0),void 0===s&&(s=0),void 0===u&&(u=0),null==r&&(r=new Array(e.length)),0!==i)throw new Error(\\\"ellipsis mask is not yet supported\\\");var l=nn(t,\\\"x\\\",\\\"stridedSlice\\\"),c=Pr(s),h=l.shape.slice();c.forEach(function(t){e[t]=0,n[t]=1,h.splice(t,0,1)}),l=l.reshape(h);for(var p=0;p<l.rank;p++)e[p]=Wr(o,e,r,l.shape,p),n[p]=Ur(a,n,r,l.shape,p),r[p]=r[p]||1;var f=Pr(u);f.forEach(function(t){n[t]=e[t]+1,r[t]=1});var d=Lr(e,n,r),v=d.filter(function(t,e){return-1===f.indexOf(e)});return r.every(function(t){return 1===t})?Bl(l,e,d).reshape(v):St.runKernel(function(t){return t.stridedSlice(l,e,n,r)},{$x:l}).reshape(v)}});var hc=vn({topk_:function(t,e,n){void 0===e&&(e=1),void 0===n&&(n=!0);var r=nn(t,\\\"x\\\",\\\"topk\\\");if(0===r.rank)throw new Error(\\\"topk() expects the input to be of rank 1 or higher\\\");var o=r.shape[r.shape.length-1];if(e>o)throw new Error(\\\"'k' passed to topk() must be <= the last dimension (\\\"+o+\\\") but got \\\"+e);var a=St.runKernel(function(t){return t.topk(r,e,n)},{$x:r});return{values:a[0],indices:a[1]}}});var pc=vn({scatterND_:function(t,e,n){var r=nn(t,\\\"indices\\\",\\\"scatterND\\\",\\\"int32\\\"),o=nn(e,\\\"updates\\\",\\\"scatterND\\\");return Mr(o,r,n),St.runKernel(function(t){return t.scatterND(r,o,n)},{$indices:r,$updates:o})}});var fc=vn({fft_:function(t){f(\\\"complex64\\\"===t.dtype,function(){return\\\"The dtype for tf.spectral.fft() must be complex64 but got \\\"+t.dtype+\\\".\\\"});var e=t.shape[t.shape.length-1],n=t.size/e,r=t.as2D(n,e);return St.runKernel(function(t){return t.fft(r)},{input:t}).reshape(t.shape)}}),dc=vn({ifft_:function(t){f(\\\"complex64\\\"===t.dtype,function(){return\\\"The dtype for tf.spectral.ifft() must be complex64 but got \\\"+t.dtype+\\\".\\\"});var e=t.shape[t.shape.length-1],n=t.size/e,r=t.as2D(n,e);return St.runKernel(function(t){return t.ifft(r)},{input:t}).reshape(t.shape)}}),vc=vn({rfft_:function(t,e){f(\\\"float32\\\"===t.dtype,function(){return\\\"The dtype for rfft() must be real value but got \\\"+t.dtype});var n,r=t.shape[t.shape.length-1],o=t.size/r;if(null!=e&&e<r){var a=t.shape.map(function(t){return 0}),i=t.shape.map(function(t){return t});i[t.shape.length-1]=e,n=t.slice(a,i),r=e}else if(null!=e&&e>r){var s=t.shape.map(function(t){return t});s[t.shape.length-1]=e-r,n=t.concat(An(s),t.shape.length-1),r=e}else n=t;var u=n.zerosLike(),l=mn(n,u).as2D(o,r),c=fc(l),h=Math.floor(r/2)+1,p=gn(c),d=yn(c),v=p.split([h,r-h],p.shape.length-1),m=d.split([h,r-h],d.shape.length-1),g=n.shape.slice();return g[n.shape.length-1]=h,mn(v[0],m[0]).reshape(g)}}),mc=vn({irfft_:function(t){var e=t.shape[t.shape.length-1],n=t.size/e;if(e<=2){var r=t.as2D(n,e),o=dc(r);return gn(o)}var a=[n,2*(e-1)],i=gn(t).as2D(n,e),s=yn(t).as2D(n,e),u=i.slice([0,1],[n,e-2]).reverse(1),l=s.slice([0,1],[n,e-2]).reverse(1).mul(wn(-1)),c=i.concat(u,1),h=s.concat(l,1);return r=mn(c,h).as2D(a[0],a[1]),o=dc(r),gn(o)}}),gc=Object.freeze({fft:fc,ifft:dc,rfft:vc,irfft:mc});var yc=vn({sparseToDense_:function(t,e,n,r){void 0===r&&(r=0);var o=nn(t,\\\"sparseIndices\\\",\\\"sparseToDense\\\",\\\"int32\\\"),a=nn(e,\\\"sparseValues\\\",\\\"sparseToDense\\\"),i=nn(r,\\\"defaultValue\\\",\\\"sparseToDense\\\",a.dtype);return function(t,e,n,r){if(\\\"int32\\\"!==t.dtype)throw new Error(\\\"tf.sparseToDense() expects the indices to be int32 type, but the dtype was \\\"+t.dtype+\\\".\\\");if(t.rank>2)throw new Error(\\\"sparseIndices should be a scalar, vector, or matrix, but got shape \\\"+t.shape+\\\".\\\");var o=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(\\\"outputShape has incorrect number of elements:, \\\"+n.length+\\\", should be: \\\"+a+\\\".\\\");var i=e.size;if(0!==e.rank&&(1!==e.rank||i!==o))throw new Error(\\\"sparseValues has incorrect shape \\\"+e.shape+\\\", should be [] or [\\\"+o+\\\"]\\\");if(e.dtype!==r.dtype)throw new Error(\\\"sparseValues.dtype must match defaultValues.dtype\\\")}(o,a,n,i),St.runKernel(function(t){return t.sparseToDense(o,a,n,i)},{$sparseIndices:o,$sparseValues:a,$defaultValue:i})}});var xc=vn({gatherND_:function(t,e){var n=nn(e,\\\"indices\\\",\\\"gatherND\\\",\\\"int32\\\"),r=nn(t,\\\"x\\\",\\\"gatherND\\\");return St.runKernel(function(t){return t.gatherND(r,n)},{$x:r,$indices:n})}});var bc=vn({diag_:function(t){var e=nn(t,\\\"x\\\",\\\"diag\\\").flatten(),n=t.shape.concat(t.shape);return St.runKernel(function(t){return t.diag(e)},{$x:e}).reshape(n)}});var wc=vn({dropout_:function(t,e,n,r){var o=nn(t,\\\"x\\\",\\\"dropout\\\");if(f(\\\"float32\\\"===o.dtype,function(){return\\\"x has to be a floating point tensor since it's going to be scaled, but got a \\\"+o.dtype+\\\" tensor instead.\\\"}),f(e>=0&&e<1,function(){return\\\"rate must be a float in the range [0, 1), but got \\\"+e+\\\".\\\"}),0===e)return t instanceof ct?o.clone():o;var a=function(t,e){if(null==e)return t.shape.slice();if(y(t.shape,e))return e;if(t.shape.length===e.length){for(var n=[],r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(o,n),i=1-e,s=yr(a,0,1,\\\"float32\\\",r).add(i).floor().div(i);return o.mul(s)}});function Cc(t,e,n){for(var r=1-t%2,o=new Float32Array(t),a=0;a<t;++a){var i=2*Math.PI*a/(t+r-1);o[a]=e-n*Math.cos(i)}return Cn(o,\\\"float32\\\")}var Ec=vn({hannWindow_:function(t){return Cc(t,.5,.5)}}),Rc=vn({hammingWindow_:function(t){return Cc(t,.54,.46)}}),Ic=vn({frame_:function(t,e,n,r,o){void 0===r&&(r=!1),void 0===o&&(o=0);for(var a=0,i=[];a+e<=t.size;)i.push(Bl(t,a,e)),a+=n;if(r)for(;a<t.size;){var s=a+e-t.size,u=Mn([Bl(t,a,e-s),Tn([s],o)]);i.push(u),a+=n}return 0===i.length?En([],[0,e]):Mn(i).as2D(i.length,e)}}),kc=vn({stft_:function(t,e,n,r,o){var a;void 0===o&&(o=Ec),null==r&&(a=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));for(var i=Ic(t,e,n),s=Pu(i,o(e)),u=[],l=0;l<i.shape[0];l++)u.push(vc(s.slice([l,0],[1,e]),r));return Mn(u)}}),Nc=Object.freeze({hannWindow:Ec,hammingWindow:Rc,frame:Ic,stft:kc});var Sc,Ac=function(t,e,o){return void 0===o&&(o=1),n(this,void 0,void 0,function(){var n,a,i,s,u,l,c,h,p,v,m,g,y,x;return r(this,function(r){switch(r.label){case 0:return n=nn(t,\\\"predictions\\\",\\\"inTopK\\\"),a=nn(e,\\\"targets\\\",\\\"inTopK\\\"),f(n.rank>1,function(){return\\\"inTopK() expects the predictions to be of rank 2 or higher, but got \\\"+n.rank}),f(n.rank-1===a.rank,function(){return\\\"predictions rank should be 1 larger than targets rank, but got predictions rank \\\"+n.rank+\\\" and targets rank \\\"+a.rank}),d(n.shape.slice(0,n.shape.length-1),a.shape,\\\"predictions's shape should be align with the targets' shape, except the last dimension.\\\"),i=n.shape[n.shape.length-1],f(o>0&&o<=i,function(){return\\\"'k' passed to inTopK() must be > 0 && <= the predictions last dimension (\\\"+i+\\\"), but got \\\"+o}),[4,n.data()];case 1:return s=r.sent(),[4,a.data()];case 2:for(u=r.sent(),l=[s.length/i,i],h=l[1],p=N(\\\"bool\\\",c=l[0]),v=0;v<c;v++){for(m=v*h,g=s.subarray(m,m+h),y=[],x=0;x<g.length;x++)y.push({value:g[x],index:x});for(y.sort(function(t,e){return e.value-t.value}),p[v]=0,x=0;x<o;x++)if(y[x].index===u[v]){p[v]=1;break}}return t!==n&&n.dispose(),e!==a&&a.dispose(),[2,xn(p,a.shape,\\\"bool\\\")]}})})};!function(t){t[t.NONE=0]=\\\"NONE\\\",t[t.MEAN=1]=\\\"MEAN\\\",t[t.SUM=2]=\\\"SUM\\\",t[t.SUM_BY_NONZERO_WEIGHTS=3]=\\\"SUM_BY_NONZERO_WEIGHTS\\\"}(Sc||(Sc={}));var Tc=vn({absoluteDifference_:function(t,e,n,r){void 0===r&&(r=Sc.SUM_BY_NONZERO_WEIGHTS);var o=nn(t,\\\"labels\\\",\\\"absoluteDifference\\\"),a=nn(e,\\\"predictions\\\",\\\"absoluteDifference\\\"),i=null;null!=n&&(i=nn(n,\\\"weights\\\",\\\"absoluteDifference\\\")),d(o.shape,a.shape,\\\"Error in absoluteDifference: \\\");var s=o.sub(a).abs();return Dc(s,i,r)}}),Dc=vn({computeWeightedLoss_:function(t,e,n){void 0===n&&(n=Sc.SUM_BY_NONZERO_WEIGHTS);var r=nn(t,\\\"losses\\\",\\\"computeWeightedLoss\\\"),o=null;null!=e&&(o=nn(e,\\\"weights\\\",\\\"computeWeightedLoss\\\"));var a=null==o?r:r.mul(o);if(n===Sc.NONE)return a;if(n===Sc.SUM)return a.sum();if(n===Sc.MEAN){if(null==o)return a.mean();var i=r.size/o.size,s=a.sum().div(o.sum());return i>1?s.div(wn(i)):s}if(n===Sc.SUM_BY_NONZERO_WEIGHTS){if(null==o)return a.sum().div(wn(r.size));var u=o.mul(Sn(r.shape)).notEqual(wn(0)).sum().toFloat();return a.sum().div(u)}throw Error(\\\"Unknown reduction: \\\"+n)}}),_c=vn({cosineDistance_:function(t,e,n,r,o){void 0===o&&(o=Sc.SUM_BY_NONZERO_WEIGHTS);var a=nn(t,\\\"labels\\\",\\\"cosineDistance\\\"),i=nn(e,\\\"predictions\\\",\\\"cosineDistance\\\"),s=null;null!=r&&(s=nn(r,\\\"weights\\\",\\\"cosineDistance\\\")),d(a.shape,i.shape,\\\"Error in cosineDistance: \\\");var u=wn(1).sub(a.mul(i).sum(n,!0));return Dc(u,s,o)}}),Oc=vn({hingeLoss_:function(t,e,n,r){void 0===r&&(r=Sc.SUM_BY_NONZERO_WEIGHTS);var o=nn(t,\\\"labels\\\",\\\"hingeLoss\\\"),a=nn(e,\\\"predictions\\\",\\\"hingeLoss\\\"),i=null;null!=n&&(i=nn(n,\\\"weights\\\",\\\"hingeLoss\\\")),d(o.shape,a.shape,\\\"Error in hingeLoss: \\\");var s=wn(1);o=wn(2).mul(o).sub(s);var u=s.sub(o.mul(a)).relu();return Dc(u,i,r)}}),Fc=vn({huberLoss_:function(t,e,n,r,o){void 0===r&&(r=1),void 0===o&&(o=Sc.SUM_BY_NONZERO_WEIGHTS);var a=nn(t,\\\"labels\\\",\\\"huberLoss\\\"),i=nn(e,\\\"predictions\\\",\\\"huberLoss\\\"),s=null;null!=n&&(s=nn(n,\\\"weights\\\",\\\"huberLoss\\\")),d(a.shape,i.shape,\\\"Error in huberLoss: \\\");var u=wn(r),l=i.sub(a).abs(),c=Ou(l,u),h=l.sub(c),p=wn(.5).mul(c.square()).add(u.mul(h));return Dc(p,s,o)}}),Mc=vn({logLoss_:function(t,e,n,r,o){void 0===r&&(r=1e-7),void 0===o&&(o=Sc.SUM_BY_NONZERO_WEIGHTS);var a=nn(t,\\\"labels\\\",\\\"logLoss\\\"),i=nn(e,\\\"predictions\\\",\\\"logLoss\\\"),s=null;null!=n&&(s=nn(n,\\\"weights\\\",\\\"logLoss\\\")),d(a.shape,i.shape,\\\"Error in logLoss: \\\");var u=wn(1),l=wn(r),c=a.mul(i.add(l).log()).neg().sub(u.sub(a).mul(u.sub(i).add(l).log()));return Dc(c,s,o)}}),Bc=vn({meanSquaredError_:function(t,e,n,r){void 0===r&&(r=Sc.SUM_BY_NONZERO_WEIGHTS);var o=nn(t,\\\"labels\\\",\\\"meanSquaredError\\\"),a=nn(e,\\\"predictions\\\",\\\"meanSquaredError\\\"),i=null;null!=n&&(i=nn(n,\\\"weights\\\",\\\"meanSquaredError\\\")),d(o.shape,a.shape,\\\"Error in meanSquaredError: \\\");var s=o.squaredDifference(a);return Dc(s,i,r)}}),Pc=vn({sigmoidCrossEntropy_:function(t,e,n,r,o){void 0===r&&(r=0),void 0===o&&(o=Sc.SUM_BY_NONZERO_WEIGHTS);var a=nn(t,\\\"multiClassLabels\\\",\\\"sigmoidCrossEntropy\\\"),i=nn(e,\\\"logits\\\",\\\"sigmoidCrossEntropy\\\"),s=null;if(null!=n&&(s=nn(n,\\\"weights\\\",\\\"sigmoidCrossEntropy\\\")),d(a.shape,i.shape,\\\"Error in sigmoidCrossEntropy: \\\"),r>0){var u=wn(r),l=wn(1),c=wn(.5);a=a.mul(l.sub(u)).add(c.mul(u))}var h=function(t,e){var n=nn(t,\\\"labels\\\",\\\"sigmoidCrossEntropyWithLogits\\\"),r=nn(e,\\\"logits\\\",\\\"sigmoidCrossEntropyWithLogits\\\");d(n.shape,r.shape,\\\"Error in sigmoidCrossEntropyWithLogits: \\\");var o=r.relu(),a=r.mul(n),i=r.abs().neg().exp().log1p();return o.sub(a).add(i)}(a,i);return Dc(h,s,o)}}),Lc=vn({softmaxCrossEntropy_:function(t,e,n,r,o){void 0===r&&(r=0),void 0===o&&(o=Sc.SUM_BY_NONZERO_WEIGHTS);var a=nn(t,\\\"onehotLabels\\\",\\\"softmaxCrossEntropy\\\"),i=nn(e,\\\"logits\\\",\\\"softmaxCrossEntropy\\\"),s=null;if(null!=n&&(s=nn(n,\\\"weights\\\",\\\"softmaxCrossEntropy\\\")),d(a.shape,i.shape,\\\"Error in softmaxCrossEntropy: \\\"),r>0){var u=wn(r),l=wn(1),c=wn(a.shape[1]);a=a.mul(l.sub(u)).add(u.div(c))}var h=function(t,e,n){if(void 0===n&&(n=-1),-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(\\\"Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank \\\"+e.rank+\\\" and dim was \\\"+n);return jr(function(t,e,r){var o=e.logSumExp([n],!0),a=e.toFloat().sub(o);return r([t,a]),{value:a.mul(t).neg().sum([n]),gradFunc:function(t,e){var r=e[0],o=e[1],a=un(t.shape,[n]);return[t.reshape(a).mul(r.toFloat().sub(o.exp())),t.reshape(a).mul(o.exp().sub(r.toFloat()))]}}})(t,e)}(a,i);return Dc(h,s,o)}}),Wc=Object.freeze({get Reduction(){return Sc},absoluteDifference:Tc,computeWeightedLoss:Dc,cosineDistance:_c,hingeLoss:Oc,huberLoss:Fc,logLoss:Mc,meanSquaredError:Bc,sigmoidCrossEntropy:Pc,softmaxCrossEntropy:Lc});function Uc(t,e){return void 0===e&&(e=!1),St.tidy(function(){if(2!==t.shape.length)throw new Error(\\\"qr2d() requires a 2D Tensor, but got a \\\"+t.shape.length+\\\"D Tensor.\\\");for(var n=t.shape[0],r=t.shape[1],o=sr(n),a=t.clone(),i=En([[1]],[1,1]),s=i.clone(),u=n>=r?r:n,l=function(t){var e,u=a,l=s,c=o;e=St.tidy(function(){var e=a.slice([t,t],[n-t,1]),u=e.norm(),l=a.slice([t,t],[1,1]),c=En([[-1]]).where(l.greater(0),En([[1]])),h=l.sub(c.mul(u)),p=e.div(h);s=1===p.shape[0]?i.clone():i.concat(p.slice([1,0],[p.shape[0]-1,p.shape[1]]),0);var f=c.matMul(h).div(u).neg(),d=a.slice([t,0],[n-t,r]),v=f.mul(s);if(0===t)a=d.sub(v.matMul(s.transpose().matMul(d)));else{var m=d.sub(v.matMul(s.transpose().matMul(d)));a=a.slice([0,0],[t,r]).concat(m,0)}var g=o.slice([0,t],[n,o.shape[1]-t]);if(0===t)o=g.sub(g.matMul(s).matMul(v.transpose()));else{var y=g.sub(g.matMul(s).matMul(v.transpose()));o=o.slice([0,0],[n,t]).concat(y,1)}return[s,a,o]}),s=e[0],a=e[1],o=e[2],Ve([u,l,c])},c=0;c<u;++c)l(c);return!e&&n>r&&(o=o.slice([0,0],[n,r]),a=a.slice([0,0],[r,r])),[o,a]})}var Vc=vn({gramSchmidt_:function(t){var e;if(Array.isArray(t)){e=!1,f(null!=t&&t.length>0,function(){return\\\"Gram-Schmidt process: input must not be null, undefined, or empty\\\"});for(var n=t[0].shape[0],r=function(e){f(t[e].shape[0]===n,function(){return\\\"Gram-Schmidt: Non-unique lengths found in the input vectors: (\\\"+t[e].shape[0]+\\\" vs. \\\"+n+\\\")\\\"})},o=1;o<t.length;++o)r(o)}else e=!0,t=Un(t,t.shape[0],0).map(function(t){return wr(t,[0])});f(t.length<=t[0].shape[0],function(){return\\\"Gram-Schmidt: Number of vectors (\\\"+t.length+\\\") exceeds number of dimensions (\\\"+t[0].shape[0]+\\\").\\\"});var a=[],i=t,s=function(t){a.push(St.tidy(function(){var e=i[t];if(t>0)for(var n=0;n<t;++n){var r=Ql(a[n].mulStrict(e)).mul(a[n]);e=e.sub(r)}return e.div(ic(e,\\\"euclidean\\\"))}))};for(o=0;o<t.length;++o)s(o);return e?Cr(a,0):a}}),zc=vn({qr_:function(t,e){if(void 0===e&&(e=!1),t.rank<2)throw new Error(\\\"qr() requires input tensor to have a rank >= 2, but got rank \\\"+t.rank);if(2===t.rank)return Uc(t,e);var n=t.shape.slice(0,t.shape.length-2).reduce(function(t,e){return t*e}),r=Ir(t.reshape([n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),o=[],a=[];return r.forEach(function(t){var n=Uc(t,e),r=n[0],i=n[1];o.push(r),a.push(i)}),[Cr(o,0).reshape(t.shape),Cr(a,0).reshape(t.shape)]}}),Gc=Object.freeze({gramSchmidt:Vc,qr:zc});function Hc(t,e,n,r,o){null==r&&(r=.5),null==o&&(o=Number.NEGATIVE_INFINITY);var a=t.shape[0];return n=Math.min(n,a),f(0<=r&&r<=1,function(){return\\\"iouThreshold must be in [0, 1], but was '\\\"+r+\\\"'\\\"}),f(2===t.rank,function(){return\\\"boxes must be a 2D tensor, but was of rank '\\\"+t.rank+\\\"'\\\"}),f(4===t.shape[1],function(){return\\\"boxes must have 4 columns, but 2nd dimension was \\\"+t.shape[1]}),f(1===e.rank,function(){return\\\"scores must be a 1D tensor\\\"}),f(e.shape[0]===a,function(){return\\\"scores has incompatible shape with boxes. Expected \\\"+a+\\\", but was \\\"+e.shape[0]}),{maxOutputSize:n,iouThreshold:r,scoreThreshold:o}}var qc=vn({resizeBilinear_:function(t,e,n){void 0===n&&(n=!1);var r=nn(t,\\\"images\\\",\\\"resizeBilinear\\\");f(3===r.rank||4===r.rank,function(){return\\\"Error in resizeBilinear: x must be rank 3 or 4, but got rank \\\"+r.rank+\\\".\\\"}),f(2===e.length,function(){return\\\"Error in resizeBilinear: new shape must 2D, but got shape \\\"+e+\\\".\\\"});var o=r,a=!1;3===r.rank&&(a=!0,o=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var i=e[0],s=e[1],u=St.runKernel(function(t,e){return e([o]),t.resizeBilinear(o,i,s,n)},{batchImages:o},function(t,e){return{batchImages:function(){return St.runKernel(function(r){return r.resizeBilinearBackprop(t,e[0],n)},{})}}});return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),$c=vn({resizeNearestNeighbor_:function(t,e,n){void 0===n&&(n=!1);var r=nn(t,\\\"images\\\",\\\"resizeNearestNeighbor\\\");f(3===r.rank||4===r.rank,function(){return\\\"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank \\\"+r.rank+\\\".\\\"}),f(2===e.length,function(){return\\\"Error in resizeNearestNeighbor: new shape must 2D, but got shape \\\"+e+\\\".\\\"}),f(\\\"float32\\\"===r.dtype||\\\"int32\\\"===r.dtype,function(){return\\\"`images` must have `int32` or `float32` as dtype\\\"});var o=r,a=!1;3===r.rank&&(a=!0,o=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var i=e[0],s=e[1],u=St.runKernel(function(t,e){return e([o]),t.resizeNearestNeighbor(o,i,s,n)},{batchImages:o},function(t,e){return{batchImages:function(){return St.runKernel(function(r){return r.resizeNearestNeighborBackprop(t,e[0],n)},{})}}});return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Kc=vn({nonMaxSuppression_:function(t,e,n,r,o){void 0===r&&(r=.5),void 0===o&&(o=Number.NEGATIVE_INFINITY);var a=nn(t,\\\"boxes\\\",\\\"nonMaxSuppression\\\"),i=nn(e,\\\"scores\\\",\\\"nonMaxSuppression\\\"),s=Hc(a,i,n,r,o);return n=s.maxOutputSize,r=s.iouThreshold,o=s.scoreThreshold,St.runKernel(function(t){return t.nonMaxSuppression(a,i,n,r,o)},{$boxes:a})}}),jc=function(t,e,o,a,i){return void 0===a&&(a=.5),void 0===i&&(i=Number.NEGATIVE_INFINITY),n(this,void 0,void 0,function(){var n,s,u,l,c,h,p;return r(this,function(r){switch(r.label){case 0:return n=nn(t,\\\"boxes\\\",\\\"nonMaxSuppressionAsync\\\"),s=nn(e,\\\"scores\\\",\\\"nonMaxSuppressionAsync\\\"),u=Hc(n,s,o,a,i),o=u.maxOutputSize,a=u.iouThreshold,i=u.scoreThreshold,[4,Promise.all([n.data(),s.data()])];case 1:return l=r.sent(),c=l[0],h=l[1],p=Ro(c,h,o,a,i),n!==t&&n.dispose(),s!==e&&s.dispose(),[2,p]}})})},Xc=vn({cropAndResize_:function(t,e,n,r,o,a){var i=nn(t,\\\"image\\\",\\\"cropAndResize\\\",\\\"float32\\\"),s=nn(e,\\\"boxes\\\",\\\"cropAndResize\\\",\\\"float32\\\"),u=nn(n,\\\"boxInd\\\",\\\"cropAndResize\\\",\\\"int32\\\");o=o||\\\"bilinear\\\",a=a||0;var l=s.shape[0];return f(4===i.rank,function(){return\\\"Error in cropAndResize: image must be rank 4,but got rank \\\"+i.rank+\\\".\\\"}),f(2===s.rank&&4===s.shape[1],function(){return\\\"Error in cropAndResize: boxes must be have size [\\\"+l+\\\",4] but had shape \\\"+s.shape+\\\".\\\"}),f(1===u.rank&&u.shape[0]===l,function(){return\\\"Error in cropAndResize: boxInd must be have size [\\\"+l+\\\"] but had shape \\\"+s.shape+\\\".\\\"}),f(2===r.length,function(){return\\\"Error in cropAndResize: cropSize must be of length 2, but got length \\\"+r.length+\\\".\\\"}),f(r[0]>=1&&r[1]>=1,function(){return\\\"cropSize must be atleast [1,1], but was \\\"+r}),f(\\\"bilinear\\\"===o||\\\"nearest\\\"===o,function(){return\\\"method must be bilinear or nearest, but was \\\"+o}),St.runKernel(function(t,e){return t.cropAndResize(i,s,u,r,o,a)},{$image:i,$boxes:s})}}),Yc=Object.freeze({resizeBilinear:qc,resizeNearestNeighbor:$c,nonMaxSuppression:Kc,nonMaxSuppressionAsync:jc,cropAndResize:Xc});var Qc=vn({matMul_:function(t){var e,n=t.a,r=t.b,o=t.transposeA,a=void 0!==o&&o,i=t.transposeB,s=void 0!==i&&i,u=t.bias,l=t.activation,c=void 0===l?\\\"linear\\\":l,h=t.preluActivationWeights,p=nn(n,\\\"a\\\",\\\"fused matMul\\\"),d=nn(r,\\\"b\\\",\\\"fused matMul\\\");e=wt(p,d),p=e[0],d=e[1];var v=a?p.shape[p.rank-2]:p.shape[p.rank-1],m=s?d.shape[d.rank-1]:d.shape[d.rank-2],x=a?p.shape[p.rank-1]:p.shape[p.rank-2],b=s?d.shape[d.rank-2]:d.shape[d.rank-1],w=p.shape.slice(0,-2),C=d.shape.slice(0,-2),E=g(w),R=g(C);f(p.rank>=2&&d.rank>=2&&p.rank===d.rank,function(){return\\\"Error in fused matMul: inputs must have the same rank of at least 2, got ranks \\\"+p.rank+\\\" and \\\"+d.rank+\\\".\\\"}),f(y(w,C),function(){return\\\"Error in fused matMul: outer dimensions (\\\"+w+\\\") and (\\\"+C+\\\") of Tensors with shapes \\\"+p.shape+\\\" and \\\"+d.shape+\\\" must match.\\\"}),f(v===m,function(){return\\\"Error in fused matMul: inner shapes (\\\"+v+\\\") and (\\\"+m+\\\") of Tensors with shapes \\\"+p.shape+\\\" and \\\"+d.shape+\\\" and transposeA=\\\"+a+\\\" and transposeB=\\\"+s+\\\" must match.\\\"});var I,k,N=p.shape.slice(0,-2).concat([x,b]),S=a?p.as3D(E,v,x):p.as3D(E,x,v),A=s?d.as3D(R,b,m):d.as3D(R,m,b);null!=u&&no(N,(I=wt(I=nn(u,\\\"bias\\\",\\\"fused matMul\\\"),p)[0]).shape),null!=h&&(k=nn(h,\\\"prelu weights\\\",\\\"fused matMul\\\"));var T={$a:S,$b:A};return null!=u&&(T.$bias=I),null!=h&&(T.$preluActivationWeights=k),St.runKernel(function(t,e){var n=t.fusedBatchMatMul({a:S,b:A,transposeA:a,transposeB:s,bias:I,activation:c,preluActivationWeights:k});return e([S,A,n]),n},T,function(t,e){var n,r=e[0],o=e[1],i=e[2];if(null==c||\\\"linear\\\"===c)n=t;else{if(\\\"relu\\\"!==c)throw new Error(\\\"Gradient for activation \\\"+c+\\\" has not been implemented yet.\\\");n=t.mul(i.step())}var l={};return null!=u&&(l={$bias:function(){var t=n,e=eo(I.shape,n.shape);return e.length>0&&(t=t.sum(e)),t.reshape(I.shape)}}),a||s?!a&&s?Object.assign({$a:function(){return n.matMul(o,!1,!1)},$b:function(){return n.matMul(r,!0,!1)}},l):a&&!s?Object.assign({$a:function(){return o.matMul(n,!1,!0)},$b:function(){return r.matMul(n,!1,!1)}},l):Object.assign({$a:function(){return o.matMul(n,!0,!0)},$b:function(){return n.matMul(r,!0,!0)}},l):Object.assign({$a:function(){return n.matMul(o,!1,!0)},$b:function(){return r.matMul(n,!0,!1)}},l)}).reshape(N)}}),Jc=vn({conv2d_:function(t){var e=t.x,n=t.filter,r=t.strides,o=t.pad,a=t.dataFormat,i=void 0===a?\\\"NHWC\\\":a,s=t.dilations,u=void 0===s?[1,1]:s,l=t.dimRoundingMode,c=t.bias,h=t.activation,p=void 0===h?\\\"linear\\\":h,d=t.preluActivationWeights,v=nn(e,\\\"x\\\",\\\"conv2d\\\"),m=nn(n,\\\"filter\\\",\\\"conv2d\\\"),g=v,y=!1;3===v.rank&&(y=!0,g=v.as4D(1,v.shape[0],v.shape[1],v.shape[2])),f(4===g.rank,function(){return\\\"Error in fused conv2d: input must be rank 4, but got rank \\\"+g.rank+\\\".\\\"}),f(4===m.rank,function(){return\\\"Error in fused conv2d: filter must be rank 4, but got rank \\\"+m.rank+\\\".\\\"}),null!=l&&f(x(o),function(){return\\\"Error in fused conv2d: pad must be an integer when using, dimRoundingMode \\\"+l+\\\" but got pad \\\"+o+\\\".\\\"}),f(g.shape[3]===m.shape[2],function(){return\\\"Error in conv2d: depth of input (\\\"+g.shape[3]+\\\") must match input depth for filter \\\"+m.shape[2]+\\\".\\\"}),f(fo(r,u),function(){return\\\"Error in conv2D: Either strides or dilations must be 1. Got strides \\\"+r+\\\" and dilations '\\\"+u+\\\"'\\\"}),f(\\\"NHWC\\\"===i,function(){return\\\"Error in conv2d: got dataFormat of \\\"+i+\\\" but only NHWC is currently supported.\\\"});var b,w,C=ao(g.shape,m.shape,r,u,o,l);null!=c&&(b=wt(b=nn(c,\\\"bias\\\",\\\"fused conv2d\\\"),v)[0],no(C.outShape,b.shape)),null!=d&&(w=nn(d,\\\"prelu weights\\\",\\\"fused conv2d\\\"));var E={x:g,$filter:m};null!=c&&(E.$bias=b),null!=d&&(E.$preluActivationWeights=w);var R=St.runKernel(function(t,e){var n=t.fusedConv2d(g,m,C,b,p,w);return e([m,g,n]),n},E,function(t,e){var n,a=e,i=a[0],s=a[1],l=a[2];if(null==p||\\\"linear\\\"===p)n=t;else{if(\\\"relu\\\"!==p)throw new Error(\\\"Gradient for activation \\\"+p+\\\" has not been implemented yet.\\\");n=t.mul(l.step())}f(po(u),function(){return\\\"Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '\\\"+u+\\\"'\\\"});var h={};return null!=c&&(h={$bias:function(){var t=n,e=eo(b.shape,n.shape);return e.length>0&&(t=t.sum(e)),t.reshape(b.shape)}}),Object.assign({x:function(){return ml(s.shape,n,i,r,o)},$filter:function(){return vl(s,n,i.shape,r,o)}},h)});return y?R.as3D(R.shape[1],R.shape[2],R.shape[3]):R}}),Zc=Object.freeze({matMul:Qc,conv2d:Jc}),th=Object.freeze({image:Yc,linalg:Gc,losses:Wc,spectral:gc,fused:Zc,signal:Nc,op:vn,batchNormalization2d:cu,batchNormalization3d:hu,batchNormalization4d:pu,batchNormalization:fu,batchNorm:du,batchNorm2d:vu,batchNorm3d:mu,batchNorm4d:gu,booleanMaskAsync:sl,complex:mn,real:gn,imag:yn,concat:Mn,concat1d:Bn,concat2d:Pn,concat3d:Ln,concat4d:Wn,split:Un,conv1d:pl,conv2d:fl,conv3d:dl,conv2dDerFilter:vl,conv2dDerInput:ml,depthwiseConv2d:gl,separableConv2d:yl,conv2dTranspose:xl,conv3dTranspose:bl,matMul:wl,dot:Cl,outerProduct:El,reverse:Rl,reverse1d:Il,reverse2d:kl,reverse3d:Nl,reverse4d:Sl,maxPool:Dl,avgPool:_l,pool:Ol,maxPool3d:Fl,avgPool3d:Ml,slice:Bl,slice1d:Pl,slice2d:Ll,slice3d:Wl,slice4d:Ul,abs:Es,acos:Rs,acosh:Is,asin:ks,asinh:Ns,atan:Ss,atanh:As,ceil:Ts,clipByValue:Ds,cos:_s,cosh:Os,erf:Fs,exp:Ms,expm1:Bs,floor:Ps,log:Ls,log1p:Ws,logSigmoid:Us,neg:Vs,reciprocal:zs,round:Gs,rsqrt:Hs,sigmoid:qs,sign:$s,isNaN:Ks,isInf:js,isFinite:Xs,sin:Ys,sinh:Qs,softplus:Js,sqrt:Zs,square:tu,step:eu,tan:nu,tanh:ru,all:zl,any:Gl,argMax:Hl,argMin:ql,logSumExp:$l,max:Kl,mean:jl,min:Xl,moments:Yl,sum:Ql,prod:Jl,equal:qu,equalStrict:$u,greater:Ku,greaterEqual:ju,greaterEqualStrict:Xu,greaterStrict:Yu,less:Qu,lessEqual:Ju,lessEqualStrict:Zu,lessStrict:tl,notEqual:el,notEqualStrict:nl,add:Ru,addN:Iu,addStrict:ku,atan2:Nu,div:Su,divStrict:Au,floorDiv:Tu,maximum:Du,maximumStrict:_u,minimum:Ou,minimumStrict:Fu,mod:Mu,modStrict:Bu,mul:Pu,mulStrict:Lu,pow:Wu,powStrict:Uu,squaredDifference:Vu,squaredDifferenceStrict:zu,sub:Gu,subStrict:Hu,elu:Zl,leakyRelu:tc,prelu:ec,relu:nc,selu:rc,logicalAnd:yu,logicalNot:xu,logicalOr:bu,logicalXor:wu,where:Cu,whereAsync:Eu,buffer:Zn,print:tr,batchToSpaceND:er,cast:nr,clone:rr,cumsum:or,depthToSpace:ar,expandDims:ir,eye:sr,multinomial:ur,oneHot:lr,pad:cr,pad1d:hr,pad2d:pr,pad3d:fr,pad4d:dr,rand:vr,randomNormal:mr,randomGamma:gr,randomUniform:yr,reshape:xr,spaceToBatchND:br,squeeze:wr,stack:Cr,tile:Er,truncatedNormal:Rr,unstack:Ir,setdiff1dAsync:kr,fill:Tn,linspace:Dn,ones:Sn,range:_n,scalar:wn,tensor:xn,tensor1d:Cn,tensor2d:En,tensor3d:Rn,tensor4d:In,tensor5d:kn,tensor6d:Nn,zeros:An,onesLike:On,zerosLike:Fn,transpose:oc,softmax:Yr,logSoftmax:Qr,localResponseNormalization:ac,norm:ic,gather:al,unsortedSegmentSum:il,basicLSTMCell:sc,multiRNNCell:uc,movingAverage:lc,stridedSlice:cc,topk:hc,scatterND:pc,fft:fc,ifft:dc,rfft:vc,irfft:mc,sparseToDense:yc,gatherND:xc,diag:bc,dropout:wc,hannWindow:Ec,hammingWindow:Rc,frame:Ic,stft:kc,inTopKAsync:Ac});function eh(t,e,n,r){if(\\\"linear\\\"===n)return t.linear(e);if(\\\"relu\\\"===n)return t.relu(e);if(\\\"elu\\\"===n)return t.elu(e);if(\\\"prelu\\\"===n)return t.prelu(e,r);throw new Error(\\\"Activation \\\"+n+\\\" has not been implemented for the CPU backend.\\\")}var nh=function(){function t(){if(this.blockSize=48,this.firstUse=!0,i.get(\\\"IS_BROWSER\\\")){var t=\\\"undefined\\\"!=typeof OffscreenCanvas?new OffscreenCanvas(300,150):\\\"undefined\\\"!=typeof document?document.createElement(\\\"canvas\\\"):null;null!==t&&(this.fromPixels2DContext=t.getContext(\\\"2d\\\"))}this.data=new Jr(this,St)}return t.prototype.register=function(t,e,n){if(this.firstUse&&(this.firstUse=!1,i.get(\\\"IS_NODE\\\")&&Ze(\\\"\\\\n============================\\\\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\\\\n============================\\\\n\\\")),this.data.has(t))throw new Error(\\\"Data buffer is already registered\\\");this.data.set(t,{dtype:n})},t.prototype.write=function(t,e){if(null==e)throw new Error(\\\"MathBackendCPU.write(): values can not be null\\\");this.data.get(t).values=e},t.prototype.fromPixels=function(t,e){if(null==t)throw new Error(\\\"pixels passed to tf.browser.fromPixels() can not be null\\\");var n,r,o=t.data instanceof Uint8Array,a=\\\"undefined\\\"!=typeof ImageData&&t instanceof ImageData,s=\\\"undefined\\\"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement,u=\\\"undefined\\\"!=typeof HTMLImageElement&&t instanceof HTMLImageElement,l=s?[t.videoWidth,t.videoHeight]:[t.width,t.height],c=l[0],h=l[1];if(i.get(\\\"IS_NODE\\\")&&null==t.getContext)throw new Error(\\\"When running in node, pixels must be an HTMLCanvasElement like the one returned by the `canvas` npm package\\\");if(null!=t.getContext)n=t.getContext(\\\"2d\\\").getImageData(0,0,c,h).data;else if(a||o)n=t.data;else{if(!u&&!s)throw new Error(\\\"pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData or {data: Uint32Array, width: number, height: number}, but was \\\"+t.constructor.name);if(null==this.fromPixels2DContext)throw new Error(\\\"Can't read pixels from HTMLImageElement outside the browser.\\\");this.fromPixels2DContext.canvas.width=c,this.fromPixels2DContext.canvas.height=h,this.fromPixels2DContext.drawImage(t,0,0,c,h),n=this.fromPixels2DContext.getImageData(0,0,c,h).data}if(4===e)r=new Int32Array(n);else{var p=c*h;r=new Int32Array(p*e);for(var f=0;f<p;f++)for(var d=0;d<e;++d)r[f*e+d]=n[4*f+d]}return Rn(r,[h,c,e],\\\"int32\\\")},t.prototype.read=function(t){return n(this,void 0,void 0,function(){return r(this,function(e){return[2,this.readSync(t)]})})},t.prototype.readSync=function(t){var e=this.data.get(t),n=e.dtype,r=e.complexTensors;return\\\"complex64\\\"===n?bo(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.data.get(t).values},t.prototype.bufferSync=function(t){var e=this.readSync(t.dataId),n=e;if(\\\"string\\\"===t.dtype)try{n=e.map(function(t){return X(t)})}catch(t){throw new Error(\\\"Failed to decode encoded string bytes into utf-8\\\")}return Zn(t.shape,t.dtype,n)},t.prototype.disposeData=function(t){if(this.data.has(t)){var e=this.data.get(t).complexTensors;null!=e&&(e.real.dispose(),e.imag.dispose()),this.data.delete(t)}},t.prototype.time=function(t){return n(this,void 0,void 0,function(){var e;return r(this,function(n){return e=$(),t(),[2,{kernelMs:$()-e}]})})},t.prototype.memory=function(){return{unreliable:!0,reasons:[\\\"The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less.\\\"]}},t.prototype.complex=function(t,e){var n=ct.make(t.shape,{},\\\"complex64\\\");return this.data.get(n.dataId).complexTensors={real:St.keep(t.clone()),imag:St.keep(e.clone())},n},t.prototype.real=function(t){return this.data.get(t.dataId).complexTensors.real.clone()},t.prototype.imag=function(t){return this.data.get(t.dataId).complexTensors.imag.clone()},t.prototype.assertNotComplex=function(t,e){Array.isArray(t)||(t=[t]),t.forEach(function(t){null!=t&&f(\\\"complex64\\\"!==t.dtype,function(){return e+\\\" does not support complex64 tensors.\\\"})})},t.prototype.slice=function(t,e,n){if(this.assertNotComplex(t,\\\"slice\\\"),Vr(t.shape,e,n)){var r=zr(e,t.strides),o=g(n);return xn(this.readSync(t.dataId).subarray(r,r+o),n,t.dtype)}for(var a=Zn(n,t.dtype),i=this.bufferSync(t),s=0;s<a.size;++s){var u=a.indexToLoc(s).map(function(t,n){return t+e[n]});a.values[s]=i.get.apply(i,u)}return a.toTensor()},t.prototype.stridedSlice=function(t,e,n,r){this.assertNotComplex(t,\\\"stridedSlice\\\");var o=Lr(e,n,r);if(o.some(function(t){return 0===t}))return xn([],o);for(var a=Zn(o,t.dtype),i=this.bufferSync(t),s=0;s<a.size;s++){for(var u=a.indexToLoc(s),l=new Array(u.length),c=0;c<l.length;c++)l[c]=u[c]*r[c]+e[c];a.set.apply(a,[i.get.apply(i,l)].concat(u))}return a.toTensor()},t.prototype.diag=function(t){for(var e=this.readSync(t.dataId),n=Zn([t.size,t.size],t.dtype),r=n.values,o=0;o<e.length;o++)r[o*t.size+o]=e[o];return n.toTensor()},t.prototype.unstack=function(t,e){for(var n=t.shape[e],r=new Array(t.rank-1),o=0,a=0;a<t.rank;a++)a!==e&&(r[o++]=t.shape[a]);var i=new Array(t.rank).fill(0),s=t.shape.slice();s[e]=1;var u=new Array(n);for(a=0;a<u.length;a++)i[e]=a,u[a]=this.slice(t,i,s).reshape(r);return u},t.prototype.reverse=function(t,e){this.assertNotComplex(t,\\\"reverse\\\");for(var n=Zn(t.shape,t.dtype),r=this.bufferSync(t),o=function(o){var a=n.indexToLoc(o),i=a.slice();e.forEach(function(e){return i[e]=t.shape[e]-1-i[e]}),n.set.apply(n,[r.get.apply(r,i)].concat(a))},a=0;a<n.size;a++)o(a);return n.toTensor()},t.prototype.concat=function(t,e){var n=this;if(\\\"complex64\\\"===t[0].dtype){var r=t.map(function(t){return gn(t)}),o=t.map(function(t){return yn(t)});return mn(this.concat(r,e),this.concat(o,e))}var a=t.map(function(t){var n=g(t.shape.slice(e));return t.as2D(-1,n)}),i=dn(a.map(function(t){return t.shape}),1),s=Zn(i,t[0].dtype).values;if(1===a[0].shape[0]){var u=0;a.forEach(function(t){s.set(n.readSync(t.dataId),u),u+=t.size})}else{var l=0;a.forEach(function(t){for(var e=n.readSync(t.dataId),r=0,o=0;o<t.shape[0];++o)for(var a=o*i[1]+l,u=0;u<t.shape[1];++u)s[a+u]=e[r++];l+=t.shape[1]})}var c=dn(t.map(function(t){return t.shape}),e);return xn(s,c,t[0].dtype)},t.prototype.neg=function(t){return this.assertNotComplex(t,\\\"neg\\\"),this.multiply(wn(-1),t)},t.prototype.add=function(t,e){return\\\"complex64\\\"===t.dtype||\\\"complex64\\\"===e.dtype?this.broadcastedBinaryComplexOp(t.cast(\\\"complex64\\\"),e.cast(\\\"complex64\\\"),function(t,e,n,r){return{real:t+n,imag:e+r}}):this.broadcastedBinaryOp(t,e,xt(t.dtype,e.dtype),function(t,e){return t+e})},t.prototype.addN=function(t){var e=this;this.assertNotComplex(t,\\\"addN\\\");for(var n=t.map(function(t){return e.readSync(t.dataId)}),r=Zn(t[0].shape,t[0].dtype),o=r.values,a=0;a<t.length;a++)for(var i=n[a],s=0;s<o.length;s++)o[s]+=i[s];return r.toTensor()},t.prototype.subtract=function(t,e){return\\\"complex64\\\"===t.dtype||\\\"complex64\\\"===e.dtype?this.broadcastedBinaryComplexOp(t.cast(\\\"complex64\\\"),e.cast(\\\"complex64\\\"),function(t,e,n,r){return{real:t-n,imag:e-r}}):this.broadcastedBinaryOp(t,e,xt(t.dtype,e.dtype),function(t,e){return t-e})},t.prototype.pow=function(t,e){return this.assertNotComplex([t,e],\\\"pow\\\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return Math.pow(t,e)})},t.prototype.batchMatMul=function(t,e,n,r){this.assertNotComplex([t,e],\\\"matMul\\\");for(var o=n?t.shape[1]:t.shape[2],a=n?t.shape[2]:t.shape[1],i=r?e.shape[1]:e.shape[2],s=t.shape[0],u=this.readSync(t.dataId),l=this.readSync(e.dataId),c=n?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],h=c[0],p=c[1],f=c[2],d=r?[1,e.strides[1],e.strides[0]]:[e.strides[1],1,e.strides[0]],v=d[0],m=d[1],g=d[2],y=a*i,x=Zn([s,a,i],t.dtype),b=x.values,w=this.blockSize,C=0;C<s;C++)for(var E=0;E<a;E+=w)for(var R=0;R<i;R+=w)for(var I=0;I<o;I+=w)for(var k=Math.min(E+w,a),N=Math.min(R+w,i),S=Math.min(I+w,o),A=E;A<k;A++)for(var T=R;T<N;T++){for(var D=0,_=I;_<S;_++)D+=u[C*h+A*p+_*f]*l[_*v+T*m+C*g];b[C*y+(A*i+T)]+=D}return x.toTensor()},t.prototype.fusedBatchMatMul=function(t){var e=t.a,n=t.b,r=t.transposeA,o=t.transposeB,a=t.bias,i=t.activation,s=t.preluActivationWeights,u=this.batchMatMul(e,n,r,o);return a&&(u=this.add(u,a)),i&&(u=eh(this,u,i,s)),u},t.prototype.multiply=function(t,e){return\\\"complex64\\\"===t.dtype||\\\"complex64\\\"===e.dtype?this.broadcastedBinaryComplexOp(t.cast(\\\"complex64\\\"),e.cast(\\\"complex64\\\"),function(t,e,n,r){return{real:t*n-e*r,imag:t*r+e*n}}):this.broadcastedBinaryOp(t,e,xt(t.dtype,e.dtype),function(t,e){return t*e})},t.prototype.realDivide=function(t,e){this.assertNotComplex([t,e],\\\"realDivide\\\");return this.broadcastedBinaryOp(t,e,\\\"float32\\\",function(t,e){return t/e})},t.prototype.floorDiv=function(t,e){this.assertNotComplex([t,e],\\\"floorDiv\\\");return this.broadcastedBinaryOp(t,e,\\\"int32\\\",function(t,e){return Math.floor(t/e)})},t.prototype.sum=function(t,e){this.assertNotComplex(t,\\\"sum\\\"),ln(\\\"sum\\\",e,t.rank);for(var n=sn(t.shape,e),r=n[0],o=n[1],a=An(r,xt(t.dtype,\\\"int32\\\")),i=g(o),s=this.readSync(a.dataId),u=this.readSync(t.dataId),l=0;l<s.length;++l){for(var c=l*i,h=0,p=0;p<i;++p)h+=u[c+p];s[l]=h}return a},t.prototype.prod=function(t,e){this.assertNotComplex(t,\\\"sum\\\");for(var n=sn(t.shape,e),r=n[0],o=n[1],a=An(r,xt(t.dtype,\\\"int32\\\")),i=g(o),s=this.readSync(a.dataId),u=this.readSync(t.dataId),l=0;l<s.length;++l){for(var c=l*i,h=1,p=0;p<i;++p)h*=u[c+p];s[l]=h}return a},t.prototype.unsortedSegmentSum=function(t,e,n){this.assertNotComplex(t,\\\"unsortedSegmentSum\\\");for(var r=[],o=t.rank-e.rank,a=0;a<o;++a)e=e.expandDims(a+1);for(a=0;a<n;++a){var i=wn(a,\\\"int32\\\"),s=qu(i,e).asType(\\\"float32\\\").mul(t).sum(0);r.push(s)}return Cr(r)},t.prototype.argMin=function(t,e){this.assertNotComplex(t,\\\"argMin\\\");var n=[e];ln(\\\"argMin\\\",n,t.rank);for(var r=sn(t.shape,n),o=r[0],a=r[1],i=An(o,\\\"int32\\\"),s=g(a),u=this.readSync(i.dataId),l=this.readSync(t.dataId),c=0;c<u.length;++c){for(var h=c*s,p=l[h],f=0,d=0;d<s;++d){var v=l[h+d];v<p&&(p=v,f=d)}u[c]=f}return i},t.prototype.argMax=function(t,e){this.assertNotComplex(t,\\\"argMax\\\");var n=[e];ln(\\\"argMax\\\",n,t.rank);for(var r=sn(t.shape,n),o=r[0],a=r[1],i=An(o,\\\"int32\\\"),s=g(a),u=this.readSync(i.dataId),l=this.readSync(t.dataId),c=0;c<u.length;++c){for(var h=c*s,p=l[h],f=0,d=0;d<s;++d){var v=l[h+d];v>p&&(p=v,f=d)}u[c]=f}return i},t.prototype.cumsum=function(t,e,n,r){if(this.assertNotComplex(t,\\\"cumsum\\\"),e!==t.rank-1)throw new Error(\\\"backend.cumsum in CPU expects an inner-most axis=\\\"+(t.rank-1)+\\\" but got axis=\\\"+e);for(var o=xt(t.dtype,\\\"int32\\\"),a=An(t.shape,o),i=this.readSync(a.dataId),s=this.readSync(t.dataId),u=t.shape[t.rank-1],l=r?function(t,e){return t+u-e-1}:function(t,e){return t+e},c=0;c<s.length;c+=u)for(var h=0;h<u;h++){var p=l(c,h);if(0===h)i[p]=n?0:s[p];else{var f=l(c,h-1);i[p]=n?s[f]+i[f]:s[p]+i[f]}}return a},t.prototype.equal=function(t,e){return this.assertNotComplex([t,e],\\\"equal\\\"),this.broadcastedBinaryOp(t,e,\\\"bool\\\",function(t,e){return t===e?1:0})},t.prototype.notEqual=function(t,e){return this.assertNotComplex([t,e],\\\"notEqual\\\"),this.broadcastedBinaryOp(t,e,\\\"bool\\\",function(t,e){return t!==e?1:0})},t.prototype.less=function(t,e){return this.assertNotComplex([t,e],\\\"less\\\"),this.broadcastedBinaryOp(t,e,\\\"bool\\\",function(t,e){return t<e?1:0})},t.prototype.lessEqual=function(t,e){return this.assertNotComplex([t,e],\\\"lessEqual\\\"),this.broadcastedBinaryOp(t,e,\\\"bool\\\",function(t,e){return t<=e?1:0})},t.prototype.greater=function(t,e){return this.assertNotComplex([t,e],\\\"greater\\\"),this.broadcastedBinaryOp(t,e,\\\"bool\\\",function(t,e){return t>e?1:0})},t.prototype.greaterEqual=function(t,e){return this.assertNotComplex([t,e],\\\"greaterEqual\\\"),this.broadcastedBinaryOp(t,e,\\\"bool\\\",function(t,e){return t>=e?1:0})},t.prototype.logicalNot=function(t){this.assertNotComplex(t,\\\"logicalNot\\\");for(var e=this.readSync(t.dataId),n=new Uint8Array(e.length),r=0;r<e.length;++r)n[r]=e[r]?0:1;return ct.make(t.shape,{values:n},\\\"bool\\\")},t.prototype.logicalAnd=function(t,e){return this.assertNotComplex([t,e],\\\"logicalAnd\\\"),this.broadcastedBinaryOp(t,e,\\\"bool\\\",function(t,e){return t&&e})},t.prototype.logicalOr=function(t,e){return this.assertNotComplex([t,e],\\\"logicalOr\\\"),this.broadcastedBinaryOp(t,e,\\\"bool\\\",function(t,e){return t||e})},t.prototype.select=function(t,e,n){this.assertNotComplex([t,e,n],\\\"select\\\");for(var r=this.readSync(t.dataId),o=this.readSync(e.dataId),a=this.readSync(n.dataId),i=An(e.shape,xt(e.dtype,n.dtype)),s=this.readSync(i.dataId),u=0,l=0===t.rank||t.rank>1||1===e.rank?1:e.shape[1],c=0;c<r.length;c++)for(var h=0;h<l;h++)1===r[c]?s[u++]=o[c]:s[u++]=a[c];return i},t.prototype.where=function(t){this.assertNotComplex([t],\\\"where\\\");var e=this.readSync(t.dataId);return Ao(t.shape,e)},t.prototype.topk=function(t,e,n){return this.assertNotComplex(t,\\\"topk\\\"),So(this.readSync(t.dataId),t.shape,t.dtype,e)},t.prototype.min=function(t,e){this.assertNotComplex(t,\\\"min\\\"),ln(\\\"min\\\",e,t.rank);for(var n=sn(t.shape,e),r=n[0],o=n[1],a=An(r,t.dtype),i=g(o),s=this.readSync(a.dataId),u=this.readSync(t.dataId),l=0;l<s.length;++l){for(var c=l*i,h=u[c],p=0;p<i;++p){var f=u[c+p];f<h&&(h=f)}s[l]=h}return a},t.prototype.minimum=function(t,e){return this.assertNotComplex([t,e],\\\"minimum\\\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return Math.min(t,e)})},t.prototype.mod=function(t,e){return this.assertNotComplex([t,e],\\\"mod\\\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){var n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})},t.prototype.max=function(t,e){this.assertNotComplex(t,\\\"max\\\"),ln(\\\"max\\\",e,t.rank);for(var n=sn(t.shape,e),r=n[0],o=n[1],a=An(r,t.dtype),i=g(o),s=this.readSync(a.dataId),u=this.readSync(t.dataId),l=0;l<s.length;++l){for(var c=l*i,h=u[c],p=0;p<i;++p){var f=u[c+p];f>h&&(h=f)}s[l]=h}return a},t.prototype.maximum=function(t,e){return this.assertNotComplex([t,e],\\\"maximum\\\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return Math.max(t,e)})},t.prototype.all=function(t,e){this.assertNotComplex(t,\\\"all\\\"),ln(\\\"all\\\",e,t.rank);for(var n=sn(t.shape,e),r=n[0],o=n[1],a=An(r,t.dtype),i=g(o),s=this.readSync(a.dataId),u=this.readSync(t.dataId),l=0;l<s.length;++l){for(var c=l*i,h=u[c],p=0;p<i;++p){var f=u[c+p];h=h&&f}s[l]=h}return a},t.prototype.any=function(t,e){this.assertNotComplex(t,\\\"any\\\"),ln(\\\"any\\\",e,t.rank);for(var n=sn(t.shape,e),r=n[0],o=n[1],a=An(r,t.dtype),i=g(o),s=this.readSync(a.dataId),u=this.readSync(t.dataId),l=0;l<s.length;++l){for(var c=l*i,h=u[c],p=0;p<i;++p){var f=u[c+p];h=h||f}s[l]=h}return a},t.prototype.squaredDifference=function(t,e){return this.assertNotComplex([t,e],\\\"squaredDifference\\\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){var n=t-e;return n*n})},t.prototype.ceil=function(t){this.assertNotComplex(t,\\\"ceil\\\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=Math.ceil(e[r]);return ct.make(t.shape,{values:n})},t.prototype.floor=function(t){this.assertNotComplex(t,\\\"floor\\\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=Math.floor(e[r]);return ct.make(t.shape,{values:n})},t.prototype.sign=function(t){this.assertNotComplex(t,\\\"x\\\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r)e[r]<0?n[r]=-1:e[r]>0?n[r]=1:n[r]=0;return ct.make(t.shape,{values:n})},t.prototype.isNaN=function(t){this.assertNotComplex(t,\\\"x\\\");for(var e=this.readSync(t.dataId),n=new Uint8Array(e.length),r=0;r<e.length;++r)Number.isNaN(e[r])&&(n[r]=1);return ct.make(t.shape,{values:n},\\\"bool\\\")},t.prototype.isInf=function(t){this.assertNotComplex(t,\\\"x\\\");for(var e=this.readSync(t.dataId),n=new Uint8Array(e.length),r=0;r<e.length;++r)Math.abs(e[r])===1/0&&(n[r]=1);return ct.make(t.shape,{values:n},\\\"bool\\\")},t.prototype.isFinite=function(t){this.assertNotComplex(t,\\\"x\\\");for(var e=this.readSync(t.dataId),n=new Uint8Array(e.length),r=0;r<e.length;++r)Number.isFinite(e[r])&&(n[r]=1);return ct.make(t.shape,{values:n},\\\"bool\\\")},t.prototype.round=function(t){this.assertNotComplex(t,\\\"round\\\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r){var o=Math.floor(e[r]);e[r]-o<.5?n[r]=Math.floor(e[r]):e[r]-o>.5?n[r]=Math.ceil(e[r]):n[r]=o%2==0?o:o+1}return ct.make(t.shape,{values:n})},t.prototype.exp=function(t){this.assertNotComplex(t,\\\"exp\\\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=Math.exp(e[r]);return ct.make(t.shape,{values:n})},t.prototype.expm1=function(t){this.assertNotComplex(t,\\\"expm1\\\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=Math.expm1(e[r]);return ct.make(t.shape,{values:n})},t.prototype.log=function(t){this.assertNotComplex(t,\\\"log\\\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r){var o=e[r];n[r]=Math.log(o)}return ct.make(t.shape,{values:n})},t.prototype.log1p=function(t){this.assertNotComplex(t,\\\"log1p\\\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r){var o=e[r];n[r]=Math.log1p(o)}return ct.make(t.shape,{values:n})},t.prototype.sqrt=function(t){this.assertNotComplex(t,\\\"sqrt\\\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r){var o=e[r];n[r]=Math.sqrt(o)}return ct.make(t.shape,{values:n})},t.prototype.rsqrt=function(t){this.assertNotComplex(t,\\\"rsqrt\\\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r){var o=e[r];n[r]=1/Math.sqrt(o)}return ct.make(t.shape,{values:n})},t.prototype.square=function(t){this.assertNotComplex(t,\\\"square\\\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r){var o=e[r];n[r]=o*o}return ct.make(t.shape,{values:n})},t.prototype.reciprocal=function(t){this.assertNotComplex(t,\\\"reciprocal\\\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=1/e[r];return ct.make(t.shape,{values:n})},t.prototype.linear=function(t){return t},t.prototype.relu=function(t){this.assertNotComplex(t,\\\"relu\\\");for(var e=An(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId),o=0;o<r.length;++o)n[o]=Math.max(0,r[o]);return e},t.prototype.prelu=function(t,e){return this.assertNotComplex([t,e],\\\"prelu\\\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return t<0?e*t:t})},t.prototype.elu=function(t){this.assertNotComplex(t,\\\"elu\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r){var o=n[r];e[r]=o>=0?o:Math.exp(o)-1}return ct.make(t.shape,{values:e})},t.prototype.eluDer=function(t,e){this.assertNotComplex([t,e],\\\"eluDer\\\");for(var n=new Float32Array(e.size),r=this.readSync(e.dataId),o=this.readSync(t.dataId),a=0;a<r.length;++a){var i=r[a];n[a]=i>=1?o[a]:o[a]*(i+1)}return ct.make(e.shape,{values:n})},t.prototype.selu=function(t){this.assertNotComplex(t,\\\"selu\\\");for(var e=ji,n=Xi,r=new Float32Array(t.size),o=this.readSync(t.dataId),a=0;a<o.length;++a){var i=o[a];r[a]=i>=0?n*i:e*(Math.exp(i)-1)}return ct.make(t.shape,{values:r})},t.prototype.clip=function(t,e,n){this.assertNotComplex(t,\\\"clip\\\");for(var r=new Float32Array(t.size),o=this.readSync(t.dataId),a=0;a<o.length;++a){var i=o[a];r[a]=i>n?n:i<e?e:i}return ct.make(t.shape,{values:r})},t.prototype.abs=function(t){for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.abs(n[r]);return ct.make(t.shape,{values:e})},t.prototype.complexAbs=function(t){for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<t.size;++r){var o=n[2*r],a=n[2*r+1];e[r]=Math.hypot(o,a)}return ct.make(t.shape,{values:e})},t.prototype.int=function(t){this.assertNotComplex(t,\\\"int\\\");for(var e=new Int32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=n[r];return ct.make(t.shape,{values:e},\\\"int32\\\")},t.prototype.sigmoid=function(t){this.assertNotComplex(t,\\\"sigmoid\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=1/(1+Math.exp(-n[r]));return ct.make(t.shape,{values:e})},t.prototype.softplus=function(t){this.assertNotComplex(t,\\\"softplus\\\");for(var e=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(t.size),r=this.readSync(t.dataId),o=0;o<r.length;++o){var a=r[o]>-e,i=r[o]<e,s=Math.exp(r[o]),u=void 0;u=i?s:a?r[o]:Math.log(1+s),n[o]=u}return ct.make(t.shape,{values:n})},t.prototype.sin=function(t){this.assertNotComplex(t,\\\"sin\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.sin(n[r]);return ct.make(t.shape,{values:e})},t.prototype.cos=function(t){this.assertNotComplex(t,\\\"cos\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.cos(n[r]);return ct.make(t.shape,{values:e})},t.prototype.tan=function(t){this.assertNotComplex(t,\\\"tan\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.tan(n[r]);return ct.make(t.shape,{values:e})},t.prototype.asin=function(t){this.assertNotComplex(t,\\\"asin\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.asin(n[r]);return ct.make(t.shape,{values:e})},t.prototype.acos=function(t){this.assertNotComplex(t,\\\"acos\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.acos(n[r]);return ct.make(t.shape,{values:e})},t.prototype.atan=function(t){this.assertNotComplex(t,\\\"atan\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.atan(n[r]);return ct.make(t.shape,{values:e})},t.prototype.atan2=function(t,e){return this.assertNotComplex([t,e],\\\"atan2\\\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return Math.atan2(t,e)})},t.prototype.sinh=function(t){this.assertNotComplex(t,\\\"sinh\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.sinh(n[r]);return ct.make(t.shape,{values:e})},t.prototype.cosh=function(t){this.assertNotComplex(t,\\\"cosh\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.cosh(n[r]);return ct.make(t.shape,{values:e})},t.prototype.tanh=function(t){this.assertNotComplex(t,\\\"tanh\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=b(n[r]);return ct.make(t.shape,{values:e})},t.prototype.asinh=function(t){this.assertNotComplex(t,\\\"asinh\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.asinh(n[r]);return ct.make(t.shape,{values:e})},t.prototype.acosh=function(t){this.assertNotComplex(t,\\\"acosh\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.acosh(n[r]);return ct.make(t.shape,{values:e})},t.prototype.atanh=function(t){this.assertNotComplex(t,\\\"atanh\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.atanh(n[r]);return ct.make(t.shape,{values:e})},t.prototype.erf=function(t){this.assertNotComplex(t,\\\"erf\\\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r){var o=n[r],a=1/(1+.3275911*o);e[r]=1-((((1.061405429*a-1.453152027)*a+1.421413741)*a-.284496736)*a+.254829592)*a*Math.exp(-o*o)}return ct.make(t.shape,{values:e})},t.prototype.step=function(t,e){void 0===e&&(e=0),this.assertNotComplex(t,\\\"step\\\");for(var n=new Float32Array(t.size),r=this.readSync(t.dataId),o=0;o<r.length;++o){var a=r[o];isNaN(a)?n[o]=NaN:n[o]=a>0?1:e}return ct.make(t.shape,{values:n})},t.prototype.fusedConv2d=function(t,e,n,r,o,a){var i=this.conv2d(t,e,n);return r&&(i=this.add(i,r)),o&&(i=eh(this,i,o,a)),i},t.prototype.conv2d=function(t,e,n){this.assertNotComplex([t,e],\\\"conv2d\\\");for(var r=n.filterHeight,o=n.filterWidth,a=n.dilationHeight,i=n.dilationWidth,s=n.padInfo.left,u=n.padInfo.top,l=\\\"channelsLast\\\"===n.dataFormat,c=Zn(n.outShape,t.dtype),h=t.strides[0],p=l?t.strides[1]:t.strides[2],f=l?t.strides[2]:1,d=l?1:t.strides[1],v=c.strides[0],m=l?c.strides[1]:c.strides[2],g=l?c.strides[2]:1,y=l?1:c.strides[1],x=this.readSync(t.dataId),b=this.readSync(e.dataId),w=c.values,C=0;C<n.batchSize;++C)for(var E=C*h,R=C*v,I=0;I<n.outHeight;++I)for(var k=R+I*m,N=I*n.strideHeight-u,S=0;S<r;S++){var A=N+S*a;if(!(A<0||A>=n.inHeight))for(var T=S*e.strides[0],D=E+A*p,_=0;_<n.outWidth;++_)for(var O=k+_*g,F=_*n.strideWidth-s,M=0;M<o;M++){var B=F+M*i;if(!(B<0||B>=n.inWidth))for(var P=D+B*f,L=T+M*e.strides[1],W=0;W<n.inChannels;++W){for(var U=x[P+W*d],V=0;V<n.outChannels;++V)w[O+V*y]+=U*b[L+V];L+=n.outChannels}}}return c.toTensor()},t.prototype.conv3d=function(t,e,n){for(var r=n.filterDepth,o=n.filterHeight,a=n.filterWidth,i=n.dilationDepth,s=n.dilationHeight,u=n.dilationWidth,l=n.padInfo.front,c=n.padInfo.left,h=n.padInfo.top,p=Zn(n.outShape,t.dtype),f=this.readSync(t.dataId),d=this.readSync(e.dataId),v=p.values,m=0;m<n.batchSize;++m)for(var g=m*t.strides[0],y=m*p.strides[0],x=0;x<n.outDepth;++x)for(var b=y+x*p.strides[1],w=x*n.strideDepth-l,C=0;C<r;C++){var E=w+C*i;if(!(E<0||E>=n.inDepth))for(var R=C*e.strides[0],I=g+E*t.strides[1],k=0;k<n.outHeight;++k)for(var N=b+k*p.strides[2],S=k*n.strideHeight-h,A=0;A<o;A++){var T=S+A*s;if(!(T<0||T>=n.inHeight))for(var D=R+A*e.strides[1],_=I+T*t.strides[2],O=0;O<n.outWidth;++O)for(var F=N+O*n.outChannels,M=O*n.strideWidth-c,B=0;B<a;B++){var P=M+B*u;if(!(P<0||P>=n.inWidth))for(var L=D+B*e.strides[2],W=_+P*n.inChannels,U=L,V=0;V<n.inChannels;++V){for(var z=f[W+V],G=0;G<n.outChannels;++G)v[F+G]+=z*d[U+G];U+=n.outChannels}}}}return p.toTensor()},t.prototype.conv2dDerInput=function(t,e,n){this.assertNotComplex([t,e],\\\"conv2dDerInput\\\");for(var r=Zn(n.inShape,\\\"float32\\\"),o=r.values,a=this.readSync(t.dataId),i=this.readSync(e.dataId),s=e.strides,u=s[0],l=s[1],c=s[2],h=n.batchSize,p=n.filterHeight,f=n.filterWidth,d=n.inChannels,v=n.inHeight,m=n.inWidth,g=n.outChannels,y=n.outHeight,x=n.outWidth,b=n.strideHeight,w=n.strideWidth,C=n.dataFormat,E=p-1-n.padInfo.top,R=f-1-n.padInfo.left,I=\\\"channelsLast\\\"===C,k=r.strides[0],N=I?r.strides[1]:r.strides[2],S=I?r.strides[2]:1,A=I?1:r.strides[1],T=t.strides[0],D=I?t.strides[1]:t.strides[2],_=I?t.strides[2]:1,O=I?1:t.strides[1],F=0;F<h;++F)for(var M=0;M<d;++M)for(var B=0;B<v;++B)for(var P=B-E,L=Math.max(0,Math.ceil(P/b)),W=Math.min(y,(p+P)/b),U=0;U<m;++U){for(var V=U-R,z=Math.max(0,Math.ceil(V/w)),G=Math.min(x,(f+V)/w),H=0,q=L;q<W;++q)for(var $=q*b-P,K=z;K<G;++K)for(var j=T*F+D*q+_*K,X=u*(p-1-$)+l*(f-1-(K*w-V))+c*M,Y=0;Y<g;++Y){H+=a[j+O*Y]*i[X+Y]}o[k*F+N*B+S*U+A*M]=H}return r.toTensor()},t.prototype.conv3dDerInput=function(t,e,n){for(var r=Zn(n.inShape,\\\"float32\\\"),o=r.values,a=r.strides,i=a[0],s=a[1],u=a[2],l=a[3],c=this.readSync(t.dataId),h=t.strides,p=h[0],f=h[1],d=h[2],v=h[3],m=this.readSync(e.dataId),g=e.strides,y=g[0],x=g[1],b=g[2],w=g[3],C=n.batchSize,E=n.filterDepth,R=n.filterHeight,I=n.filterWidth,k=n.inChannels,N=n.inDepth,S=n.inHeight,A=n.inWidth,T=n.outChannels,D=n.outDepth,_=n.outHeight,O=n.outWidth,F=n.strideDepth,M=n.strideHeight,B=n.strideWidth,P=E-1-n.padInfo.front,L=R-1-n.padInfo.top,W=I-1-n.padInfo.left,U=0;U<C;++U)for(var V=0;V<k;++V)for(var z=0;z<N;++z)for(var G=z-P,H=Math.max(0,Math.ceil(G/F)),q=Math.min(D,(E+G)/F),$=0;$<S;++$)for(var K=$-L,j=Math.max(0,Math.ceil(K/M)),X=Math.min(_,(R+K)/M),Y=0;Y<A;++Y){for(var Q=Y-W,J=Math.max(0,Math.ceil(Q/B)),Z=Math.min(O,(I+Q)/B),tt=0,et=H;et<q;++et)for(var nt=et*F-G,rt=j;rt<X;++rt)for(var ot=rt*M-K,at=J;at<Z;++at)for(var it=p*U+f*et+d*rt+v*at,st=y*(E-1-nt)+x*(R-1-ot)+b*(I-1-(at*B-Q))+w*V,ut=0;ut<T;++ut){tt+=c[it+ut]*m[st+ut]}o[i*U+s*z+u*$+l*Y+V]=tt}return r.toTensor()},t.prototype.conv2dDerFilter=function(t,e,n){this.assertNotComplex([t,e],\\\"conv2dDerFilter\\\");for(var r=n.strideHeight,o=n.strideWidth,a=n.filterHeight,i=n.filterWidth,s=\\\"channelsLast\\\"===n.dataFormat,u=Zn(n.filterShape,\\\"float32\\\"),l=n.padInfo.left,c=n.padInfo.top,h=this.bufferSync(t),p=this.bufferSync(e),f=0;f<a;++f)for(var d=Math.max(0,Math.ceil((c-f)/r)),v=Math.min(n.outHeight,(n.inHeight+c-f)/r),m=0;m<i;++m)for(var g=Math.max(0,Math.ceil((l-m)/o)),y=Math.min(n.outWidth,(n.inWidth+l-m)/o),x=0;x<n.inChannels;++x)for(var b=0;b<n.outChannels;++b){for(var w=0,C=0;C<n.batchSize;++C)for(var E=d;E<v;++E)for(var R=f+E*r-c,I=g;I<y;++I){var k=m+I*o-l;w+=s?h.get(C,R,k,x)*p.get(C,E,I,b):h.get(C,x,R,k)*p.get(C,b,E,I)}u.set(w,f,m,x,b)}return u.toTensor()},t.prototype.conv3dDerFilter=function(t,e,n){for(var r=n.strideDepth,o=n.strideHeight,a=n.strideWidth,i=n.filterDepth,s=n.filterHeight,u=n.filterWidth,l=Zn(n.filterShape,\\\"float32\\\"),c=l.values,h=l.strides,p=h[0],f=h[1],d=h[2],v=h[3],m=this.readSync(e.dataId),g=e.strides,y=g[0],x=g[1],b=g[2],w=g[3],C=this.readSync(t.dataId),E=t.strides,R=E[0],I=E[1],k=E[2],N=E[3],S=n.padInfo.front,A=n.padInfo.left,T=n.padInfo.top,D=0;D<i;++D)for(var _=Math.max(0,Math.ceil((S-D)/r)),O=Math.min(n.outDepth,(n.inDepth+S-D)/r),F=D*p,M=0;M<s;++M)for(var B=Math.max(0,Math.ceil((T-M)/o)),P=Math.min(n.outHeight,(n.inHeight+T-M)/o),L=M*f+F,W=0;W<u;++W)for(var U=Math.max(0,Math.ceil((A-W)/a)),V=Math.min(n.outWidth,(n.inWidth+A-W)/a),z=W*d+L,G=0;G<n.inChannels;++G)for(var H=G*v+z,q=0;q<n.outChannels;++q){for(var $=0,K=0;K<n.batchSize;++K)for(var j=K*R,X=K*y,Y=_;Y<O;++Y)for(var Q=(D+Y*r-S)*I+j,J=Y*x+X,Z=B;Z<P;++Z)for(var tt=(M+Z*o-T)*k+Q,et=Z*b+J,nt=U;nt<V;++nt){var rt=nt*w+et;$+=C[(W+nt*a-A)*N+tt+G]*m[rt+q]}c[H+q]=$}return l.toTensor()},t.prototype.depthwiseConv2D=function(t,e,n){this.assertNotComplex([t,e],\\\"depthwiseConv2D\\\");for(var r=n.filterHeight,o=n.filterWidth,a=n.dilationHeight,i=n.dilationWidth,s=n.padInfo.left,u=n.padInfo.top,l=n.outChannels/n.inChannels,c=Zn(n.outShape,t.dtype),h=this.readSync(t.dataId),p=this.readSync(e.dataId),f=c.values,d=0;d<n.batchSize;++d)for(var v=d*t.strides[0],m=d*c.strides[0],g=0;g<n.outHeight;++g)for(var y=m+g*c.strides[1],x=g*n.strideHeight-s,b=0;b<r;++b){var w=x+b*a;if(!(w<0||w>=n.inHeight))for(var C=b*e.strides[0],E=v+w*t.strides[1],R=0;R<n.outWidth;++R)for(var I=y+R*c.strides[2],k=R*n.strideWidth-u,N=0;N<o;++N){var S=k+N*i;if(!(S<0||S>=n.inWidth))for(var A=C+N*e.strides[1],T=E+S*n.inChannels,D=I,_=A,O=0;O<n.inChannels;++O){for(var F=h[T+O],M=0;M<l;++M)f[D+M]+=F*p[_+M];D+=l,_+=l}}}return c.toTensor()},t.prototype.depthwiseConv2DDerInput=function(t,e,n){this.assertNotComplex([t,e],\\\"depthwiseConv2DDerInput\\\");for(var r=Zn(n.inShape,\\\"float32\\\"),o=r.values,a=r.strides,i=a[0],s=a[1],u=a[2],l=this.readSync(t.dataId),c=t.strides,h=c[0],p=c[1],f=c[2],d=this.readSync(e.dataId),v=e.strides,m=v[0],g=v[1],y=v[2],x=n.batchSize,b=n.filterHeight,w=n.filterWidth,C=n.inChannels,E=n.inHeight,R=n.inWidth,I=n.outChannels,k=n.outHeight,N=n.outWidth,S=n.strideHeight,A=n.strideWidth,T=b-1-n.padInfo.top,D=w-1-n.padInfo.left,_=I/C,O=0;O<x;++O)for(var F=0;F<C;++F)for(var M=0;M<E;++M)for(var B=M-T,P=Math.max(0,Math.ceil(B/S)),L=Math.min(k,(b+B)/S),W=0;W<R;++W){for(var U=W-D,V=Math.max(0,Math.ceil(U/A)),z=Math.min(N,(w+U)/A),G=0,H=P;H<L;++H)for(var q=H*S-B,$=V;$<z;++$)for(var K=h*O+p*H+f*$,j=m*(b-1-q)+g*(w-1-($*A-U))+y*F,X=0;X<_;++X){G+=l[K+(F*_+X)]*d[j+X]}o[i*O+s*M+u*W+F]=G}return r.toTensor()},t.prototype.depthwiseConv2DDerFilter=function(t,e,n){this.assertNotComplex([t,e],\\\"depthwiseConv2DDerFilter\\\");for(var r=n.strideHeight,o=n.strideWidth,a=n.filterHeight,i=n.filterWidth,s=Zn(n.filterShape,\\\"float32\\\"),u=n.padInfo.left,l=n.padInfo.top,c=n.outChannels/n.inChannels,h=this.bufferSync(t),p=this.bufferSync(e),f=0;f<a;++f)for(var d=Math.max(0,Math.ceil((l-f)/r)),v=Math.min(n.outHeight,(n.inHeight+l-f)/r),m=0;m<i;++m)for(var g=Math.max(0,Math.ceil((u-m)/o)),y=Math.min(n.outWidth,(n.inWidth+u-m)/o),x=0;x<n.outChannels;++x){for(var b=Math.trunc(x/c),w=x%c,C=0,E=0;E<n.batchSize;++E)for(var R=d;R<v;++R)for(var I=f+R*r-l,k=g;k<y;++k){var N=m+k*o-u;C+=h.get(E,I,N,b)*p.get(E,R,k,x)}s.set(C,f,m,b,w)}return s.toTensor()},t.prototype.tile=function(t,e){return this.assertNotComplex(t,\\\"tile\\\"),No(this.bufferSync(t),e)},t.prototype.pad=function(t,e,n){this.assertNotComplex(t,\\\"pad\\\");var r=e.map(function(e,n){return e[0]+t.shape[n]+e[1]}),o=e.map(function(t){return t[0]}),a=this.bufferSync(t),i=Zn(r,t.dtype);0!==n&&i.values.fill(n);for(var s=0;s<t.size;s++){var u=a.indexToLoc(s),l=u.map(function(t,e){return t+o[e]});i.set.apply(i,[a.get.apply(a,u)].concat(l))}return i.toTensor()},t.prototype.transpose=function(t,e){this.assertNotComplex(t,\\\"transpose\\\");for(var n=new Array(t.rank),r=0;r<n.length;r++)n[r]=t.shape[e[r]];var o=this.readSync(t.dataId),a=Zn(n,t.dtype),i=this.bufferSync(t);for(r=0;r<t.size;++r){for(var s=i.indexToLoc(r),u=new Array(s.length),l=0;l<u.length;l++)u[l]=s[e[l]];var c=a.locToIndex(u);a.values[c]=o[r]}return a.toTensor()},t.prototype.gather=function(t,e,n){this.assertNotComplex([t,e],\\\"gather\\\");var r=t.shape.slice(),o=this.readSync(e.dataId);r[n]=o.length;for(var a=Zn(r,t.dtype),i=this.bufferSync(t),s=0;s<a.size;++s){var u=a.indexToLoc(s),l=u.slice();l[n]=o[u[n]];var c=i.locToIndex(l);a.values[s]=i.values[c]}return a.toTensor()},t.prototype.batchToSpaceND=function(t,e,n){this.assertNotComplex([t],\\\"batchToSpaceND\\\");var r=e.reduce(function(t,e){return t*e}),o=Nr(t.shape,e,r),a=Sr(o.length,e.length),i=Ar(t.shape,e,r),s=Tr(n,e.length),u=Dr(i,n,e.length);return t.reshape(o).transpose(a).reshape(i).slice(s,u)},t.prototype.spaceToBatchND=function(t,e,n){this.assertNotComplex([t],\\\"spaceToBatchND\\\");var r=e.reduce(function(t,e){return t*e}),o=[[0,0]];o.push.apply(o,n);for(var a=1+e.length;a<t.shape.length;++a)o.push([0,0]);var i=t.pad(o),s=Nr(i.shape,e,r,!1),u=Sr(s.length,e.length,!1),l=Ar(i.shape,e,r,!1);return i.reshape(s).transpose(u).reshape(l)},t.prototype.pool=function(t,e,n){this.assertNotComplex(t,\\\"pool\\\");for(var r=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,s=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=e.padInfo.top,c=e.padInfo.left,h=\\\"max\\\"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,p=this.readSync(t.dataId),f=Zn(e.outShape,t.dtype),d=f.values,v=e.outShape[1]*e.outShape[2]*e.outShape[3],m=e.outShape[2]*e.outShape[3],g=e.outShape[3],y=0;y<e.batchSize;++y)for(var x=y*v,b=y*t.strides[0],w=0;w<e.inChannels;++w)for(var C=0;C<e.outHeight;++C)for(var E=C*r-l,R=Math.max(0,E),I=Math.min(e.inHeight,s+E),k=x+C*m,N=0;N<e.outWidth;++N){for(var S=N*o-c,A=Math.max(0,S),T=Math.min(e.inWidth,u+S),D=h,_=0,O=0,F=R;F<I;F+=a){for(var M=b+F*t.strides[1],B=A;B<T;B+=i){var P=p[M+B*t.strides[2]+w];\\\"max\\\"===n&&P>D?D=P:\\\"avg\\\"===n&&(_+=P,O++)}if(isNaN(D))break}d[k+N*g+w]=\\\"avg\\\"===n?_/O:D}return f.toTensor()},t.prototype.maxPool=function(t,e){return this.pool(t,e,\\\"max\\\")},t.prototype.maxPoolPositions=function(t,e){for(var n=Zn(e.outShape,\\\"int32\\\"),r=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,s=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=e.padInfo.top,c=e.padInfo.left,h=this.bufferSync(t),p=0;p<e.batchSize;++p)for(var f=0;f<e.inChannels;++f)for(var d=0;d<e.outHeight;++d){for(var v=d*r-l,m=v;m<0;)m+=a;for(var g=Math.min(e.inHeight,s+v),y=0;y<e.outWidth;++y){for(var x=y*o-c,b=x;b<0;)b+=i;for(var w=Math.min(e.inWidth,u+x),C=Number.NEGATIVE_INFINITY,E=-1,R=m;R<g;R+=a)for(var I=R-v,k=b;k<w;k+=i){var N=k-x,S=h.get(p,R,k,f);S>C&&(C=S,E=I*u+N)}n.set(E,p,d,y,f)}}return n.toTensor()},t.prototype.maxPoolBackprop=function(t,e,n,r){this.assertNotComplex([e,n],\\\"maxPoolBackprop\\\");for(var o=this.maxPoolPositions(e,r),a=r.strideHeight,i=r.strideWidth,s=r.dilationHeight,u=r.dilationWidth,l=r.effectiveFilterHeight,c=r.effectiveFilterWidth,h=c-1-r.padInfo.left,p=l-1-r.padInfo.top,f=Zn(e.shape,\\\"float32\\\"),d=this.bufferSync(o),v=this.bufferSync(t),m=0;m<r.batchSize;++m)for(var g=0;g<r.inChannels;++g)for(var y=0;y<r.inHeight;++y)for(var x=0;x<r.inWidth;++x){for(var b=y-p,w=x-h,C=0,E=0;E<l;E+=s){var R=(b+E)/a;if(!(R<0||R>=r.outHeight||Math.floor(R)!==R))for(var I=0;I<c;I+=u){var k=(w+I)/i;if(!(k<0||k>=r.outWidth||Math.floor(k)!==k)){var N=l*c-1-d.get(m,R,k,g)===E*c+I?1:0;if(0!==N)C+=v.get(m,R,k,g)*N}}}f.set(C,m,y,x,g)}return f.toTensor()},t.prototype.avgPoolBackprop=function(t,e,n){this.assertNotComplex([t,e],\\\"avgPoolBackprop\\\");for(var r=n.strideHeight,o=n.strideWidth,a=n.filterHeight,i=n.filterWidth,s=n.dilationHeight,u=n.dilationWidth,l=n.effectiveFilterHeight,c=n.effectiveFilterWidth,h=c-1-n.padInfo.left,p=l-1-n.padInfo.top,f=Zn(e.shape,\\\"float32\\\"),d=1/(a*i),v=this.bufferSync(t),m=0;m<n.batchSize;++m)for(var g=0;g<n.inChannels;++g)for(var y=0;y<n.inHeight;++y)for(var x=0;x<n.inWidth;++x){for(var b=y-p,w=x-h,C=0,E=0;E<l;E+=s){var R=(b+E)/r;if(!(R<0||R>=n.outHeight||Math.floor(R)!==R))for(var I=0;I<c;I+=u){var k=(w+I)/o;if(!(k<0||k>=n.outWidth||Math.floor(k)!==k))C+=v.get(m,R,k,g)}}f.set(C*d,m,y,x,g)}return f.toTensor()},t.prototype.pool3d=function(t,e,n){this.assertNotComplex(t,\\\"pool3d\\\");for(var r=e.strideDepth,o=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,s=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,d=e.padInfo.left,v=\\\"max\\\"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=this.readSync(t.dataId),g=Zn(e.outShape,t.dtype),y=g.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],b=e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[3]*e.outShape[4],C=e.outShape[4],E=0;E<e.batchSize;++E)for(var R=E*x,I=E*t.strides[0],k=0;k<e.inChannels;++k)for(var N=0;N<e.outDepth;++N){for(var S=N*r-p,A=S;A<0;)A+=i;for(var T=Math.min(e.inDepth,l+S),D=R+N*b,_=0;_<e.outHeight;++_){for(var O=_*o-f,F=O;F<0;)F+=s;for(var M=Math.min(e.inHeight,c+O),B=D+_*w,P=0;P<e.outWidth;++P){for(var L=P*a-d,W=L;W<0;)W+=u;for(var U=Math.min(e.inWidth,h+L),V=B+P*C,z=v,G=0,H=0,q=A;q<T;q+=i){for(var $=I+q*t.strides[1],K=F;K<M;K+=s){for(var j=$+K*t.strides[2],X=W;X<U;X+=u){var Y=m[j+X*t.strides[3]+k];if(\\\"max\\\"===n&&Y>z?z=Y:\\\"avg\\\"===n&&(G+=Y,H++),isNaN(z))break}if(isNaN(z))break}if(isNaN(z))break}y[V+k]=\\\"avg\\\"===n?G/H:z}}}return g.toTensor()},t.prototype.avgPool3d=function(t,e){return this.assertNotComplex(t,\\\"avgPool3d\\\"),this.pool3d(t,e,\\\"avg\\\").toFloat()},t.prototype.avgPool3dBackprop=function(t,e,n){this.assertNotComplex([t,e],\\\"avgPool3dBackprop\\\");for(var r=n.strideDepth,o=n.strideHeight,a=n.strideWidth,i=n.filterDepth,s=n.filterHeight,u=n.filterWidth,l=n.dilationDepth,c=n.dilationHeight,h=n.dilationWidth,p=n.effectiveFilterDepth,f=n.effectiveFilterHeight,d=n.effectiveFilterWidth,v=p-1-n.padInfo.front,m=d-1-n.padInfo.left,g=f-1-n.padInfo.top,y=Zn(e.shape,\\\"float32\\\"),x=1/(i*s*u),b=this.bufferSync(t),w=0;w<n.batchSize;++w)for(var C=0;C<n.inChannels;++C)for(var E=0;E<n.inDepth;++E)for(var R=0;R<n.inHeight;++R)for(var I=0;I<n.inWidth;++I){for(var k=E-v,N=R-g,S=I-m,A=0,T=0;T<p;T+=l){var D=(k+T)/r;if(!(D<0||D>=n.outDepth||Math.floor(D)!==D))for(var _=0;_<f;_+=c){var O=(N+_)/o;if(!(O<0||O>=n.outHeight||Math.floor(O)!==O))for(var F=0;F<d;F+=h){var M=(S+F)/a;if(!(M<0||M>=n.outWidth||Math.floor(M)!==M))A+=b.get(w,D,O,M,C)}}}y.set(A*x,w,E,R,I,C)}return y.toTensor()},t.prototype.maxPool3d=function(t,e){return this.assertNotComplex(t,\\\"maxPool3d\\\"),this.pool3d(t,e,\\\"max\\\").toFloat()},t.prototype.maxPool3dPositions=function(t,e){for(var n=Zn(e.outShape,\\\"int32\\\"),r=e.strideDepth,o=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,s=e.dilationHeight,u=e.dilationWidth,l=e.effectiveFilterDepth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.front,f=e.padInfo.top,d=e.padInfo.left,v=this.bufferSync(t),m=0;m<e.batchSize;++m)for(var g=0;g<e.inChannels;++g)for(var y=0;y<e.outDepth;++y){for(var x=y*r-p,b=x;b<0;)b+=i;for(var w=Math.min(e.inDepth,l+x),C=0;C<e.outHeight;++C){for(var E=C*o-f,R=E;R<0;)R+=s;for(var I=Math.min(e.inHeight,c+E),k=0;k<e.outWidth;++k){for(var N=k*a-d,S=N;S<0;)S+=u;for(var A=Math.min(e.inWidth,h+N),T=Number.NEGATIVE_INFINITY,D=-1,_=b;_<w;_+=i)for(var O=_-x,F=R;F<I;F+=s)for(var M=F-E,B=S;B<A;B+=u){var P=B-N,L=v.get(m,_,F,B,g);L>=T&&(T=L,D=O*c*h+M*c+P)}n.set(D,m,y,C,k,g)}}}return n.toTensor()},t.prototype.maxPool3dBackprop=function(t,e,n,r){this.assertNotComplex([e,n],\\\"maxPool3dBackprop\\\");for(var o=this.maxPool3dPositions(e,r),a=r.strideDepth,i=r.strideHeight,s=r.strideWidth,u=r.dilationDepth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,d=h-1-r.padInfo.front,v=f-1-r.padInfo.left,m=p-1-r.padInfo.top,g=Zn(e.shape,\\\"float32\\\"),y=this.bufferSync(o),x=this.bufferSync(t),b=0;b<r.batchSize;++b)for(var w=0;w<r.inChannels;++w)for(var C=0;C<r.inDepth;++C)for(var E=0;E<r.inHeight;++E)for(var R=0;R<r.inWidth;++R){for(var I=C-d,k=E-m,N=R-v,S=0,A=0;A<h;A+=u){var T=(I+A)/a;if(!(T<0||T>=r.outDepth||Math.floor(T)!==T))for(var D=0;D<p;D+=l){var _=(k+D)/i;if(!(_<0||_>=r.outHeight||Math.floor(_)!==_))for(var O=0;O<f;O+=c){var F=(N+O)/s;if(!(F<0||F>=r.outWidth||Math.floor(F)!==F)){var M=h*p*f-1-y.get(b,T,_,F,w)===A*p*f+D*f+O?1:0;if(0!==M)S+=x.get(b,T,_,F,w)*M}}}}g.set(S,b,C,E,R,w)}return g.toTensor()},t.prototype.cast=function(t,e){return mo(t,e,this)},t.prototype.reshape=function(t,e){return go(t,e)},t.prototype.avgPool=function(t,e){return this.assertNotComplex(t,\\\"avgPool\\\"),this.pool(t,e,\\\"avg\\\").toFloat()},t.prototype.resizeBilinear=function(t,e,n,r){this.assertNotComplex(t,\\\"resizeBilinear\\\");for(var o=t.shape,a=o[0],i=o[1],s=o[2],u=o[3],l=this.readSync(t.dataId),c=new Float32Array(g([a,e,n,u])),h=[r&&e>1?i-1:i,r&&n>1?s-1:s],p=[r&&e>1?e-1:e,r&&n>1?n-1:n],f=0,d=h[0]/p[0],v=h[1]/p[1],m=0;m<a;m++)for(var y=0;y<e;y++)for(var x=d*y,b=Math.floor(x),w=x-b,C=Math.min(i-1,Math.ceil(x)),E=m*t.strides[0]+b*t.strides[1],R=m*t.strides[0]+C*t.strides[1],I=0;I<n;I++)for(var k=v*I,N=Math.floor(k),S=k-N,A=Math.min(s-1,Math.ceil(k)),T=E+N*t.strides[2],D=R+N*t.strides[2],_=E+ +A*t.strides[2],O=R+A*t.strides[2],F=0;F<u;F++){var M=l[T+F],B=l[D+F],P=M+(l[_+F]-M)*S,L=P+(B+(l[O+F]-B)*S-P)*w;c[f++]=L}return xn(c,[a,e,n,u])},t.prototype.resizeBilinearBackprop=function(t,e,n){this.assertNotComplex([t,e],\\\"resizeBilinearBackprop\\\");for(var r=e.shape,o=r[0],a=r[1],i=r[2],s=r[3],u=t.shape,l=u[1],c=u[2],h=new Float32Array(o*a*i*s),p=[n&&l>1?a-1:a,n&&c>1?i-1:i],f=[n&&l>1?l-1:l,n&&c>1?c-1:c],d=p[0]/f[0],v=p[1]/f[1],m=this.readSync(t.dataId),g=0,y=0;y<o;y++)for(var x=y*e.strides[0],b=0;b<l;b++)for(var w=b*d,C=Math.floor(w),E=Math.min(Math.ceil(w),a-1),R=x+C*e.strides[1],I=x+E*e.strides[1],k=w-C,N=1-k,S=0;S<c;S++)for(var A=S*v,T=Math.floor(A),D=Math.min(Math.ceil(A),i-1),_=A-T,O=1-_,F=R+T*e.strides[2],M=R+D*e.strides[2],B=I+T*e.strides[2],P=I+D*e.strides[2],L=N*O,W=N*_,U=k*O,V=k*_,z=0;z<s;z++){var G=m[g++];h[F+z]+=G*L,h[M+z]+=G*W,h[B+z]+=G*U,h[P+z]+=G*V}return In(h,[o,i,a,s],e.dtype)},t.prototype.resizeNearestNeighbor=function(t,e,n,r){this.assertNotComplex(t,\\\"resizeNearestNeighbor\\\");for(var o=t.shape,a=o[0],i=o[1],s=o[2],u=o[3],l=this.readSync(t.dataId),c=new Float32Array(a*e*n*u),h=[r&&e>1?i-1:i,r&&n>1?s-1:s],p=[r&&e>1?e-1:e,r&&n>1?n-1:n],f=h[0]/p[0],d=h[1]/p[1],v=0,m=0;m<a;m++)for(var g=m*t.strides[0],y=0;y<e;y++)for(var x=f*y,b=g+Math.min(i-1,r?Math.round(x):Math.floor(x))*t.strides[1],w=0;w<n;w++)for(var C=d*w,E=b+Math.min(s-1,r?Math.round(C):Math.floor(C))*t.strides[2],R=0;R<u;R++){var I=l[E+R];c[v++]=I}return xn(c,[a,e,n,u],t.dtype)},t.prototype.resizeNearestNeighborBackprop=function(t,e,n){this.assertNotComplex([t,e],\\\"resizeNearestNeighborBackprop\\\");for(var r=e.shape,o=r[0],a=r[1],i=r[2],s=r[3],u=t.shape,l=u[1],c=u[2],h=new Float32Array(o*a*i*s),p=this.readSync(t.dataId),f=[n&&l>1?a-1:a,n&&c>1?i-1:i],d=[n&&l>1?l-1:l,n&&c>1?c-1:c],v=f[0]/d[0],m=f[1]/d[1],g=1/v,y=1/m,x=2*Math.ceil(g)+2,b=2*Math.ceil(y)+2,w=0;w<o;w++)for(var C=w*e.strides[0],E=0;E<a;E++)for(var R=C+E*e.strides[1],I=Math.floor(E*g),k=Math.floor(I-x/2),N=0;N<i;N++)for(var S=R+N*e.strides[2],A=Math.floor(N*y),T=Math.floor(A-b/2),D=0;D<s;D++){for(var _=0,O=0;O<x;O++){var F=O+k;if(!(F<0||F>=l)){var M=C+F*t.strides[1],B=F*v;if(E===Math.min(a-1,n?Math.round(B):Math.floor(B)))for(var P=0;P<b;P++){var L=P+T;if(!(L<0||L>=c)){var W=M+L*t.strides[2],U=L*m;N===Math.min(i-1,n?Math.round(U):Math.floor(U))&&(_+=p[W+D])}}}}h[S+D]=_}return In(h,e.shape,e.dtype)},t.prototype.batchNormalization=function(t,e,n,r,o,a){this.assertNotComplex([t,e,n,o,a],\\\"batchNorm\\\");for(var i=this.readSync(t.dataId),s=this.readSync(e.dataId),u=this.readSync(n.dataId),l=o?this.readSync(o.dataId):new Float32Array([1]),c=a?this.readSync(a.dataId):new Float32Array([0]),h=new Float32Array(i.length),p=c.length,f=l.length,d=u.length,v=s.length,m=0,g=0,y=0,x=0,b=0;b<i.length;++b)h[b]=c[m++]+(i[b]-s[g++])*l[y++]/Math.sqrt(u[x++]+r),m>=p&&(m=0),g>=v&&(g=0),y>=f&&(y=0),x>=d&&(x=0);return In(h,t.shape)},t.prototype.localResponseNormalization4D=function(t,e,n,r,o){this.assertNotComplex(t,\\\"localResponseNormalization4D\\\");var a=t.shape[3],i=a-1,s=this.readSync(t.dataId),u=t.size,l=new Float32Array(u);function c(t){for(var n=t%a,r=t-n+Math.max(0,n-e),o=t-n+Math.min(n+e,i),u=0;r<=o;r++){var l=s[r];u+=l*l}return u}for(var h=0;h<u;h++){var p=c(h),f=s[h]*Math.pow(n+r*p,-o);l[h]=f}return In(l,t.shape)},t.prototype.LRNGrad=function(t,e,n,r,o,a,i){this.assertNotComplex(t,\\\"LRNGrad\\\");for(var s=t.shape[3],u=this.readSync(t.dataId),l=this.readSync(e.dataId),c=this.readSync(n.dataId),h=new Float32Array(t.size),p=t.size,f=0;f<p;f++){for(var d=f%s,v=f-d+Math.max(0,d-r),m=f-d+Math.min(s,d+r+1),g=0,y=v;y<m;y++)g+=Math.pow(l[y],2);g=a*g+o;for(y=v;y<m;y++){var x=-2*a*i*l[y]*c[f]/g;f===y&&(x+=Math.pow(g,-i)),x*=u[f],h[y]+=x}}return In(h,t.shape)},t.prototype.multinomial=function(t,e,n,r){this.assertNotComplex(t,\\\"multinomial\\\");for(var o=e?t:Yr(t),a=o.shape[0],i=o.shape[1],s=An([a,n],\\\"int32\\\"),u=this.readSync(s.dataId),l=this.readSync(o.dataId),c=0;c<a;++c){var h=c*i,p=new Float32Array(i-1);p[0]=l[h];for(var f=1;f<p.length;++f)p[f]=p[f-1]+l[h+f];for(var d=Xn(r.toString()),v=c*n,m=0;m<n;++m){var g=d();u[v+m]=p.length;for(var y=0;y<p.length;y++)if(g<p[y]){u[v+m]=y;break}}}return s},t.prototype.oneHot=function(t,e,n,r){this.assertNotComplex(t,\\\"oneHot\\\");var o=new Float32Array(t.size*e);o.fill(r);for(var a=this.readSync(t.dataId),i=0;i<t.size;++i)a[i]>=0&&a[i]<e&&(o[i*e+a[i]]=n);return En(o,[t.size,e],\\\"int32\\\")},t.prototype.nonMaxSuppression=function(t,e,n,r,o){return this.assertNotComplex(t,\\\"nonMaxSuppression\\\"),Ro(this.readSync(t.dataId),this.readSync(e.dataId),n,r,o)},t.prototype.fft=function(t){return this.fftBatch(t,!1)},t.prototype.ifft=function(t){return this.fftBatch(t,!0)},t.prototype.fftBatch=function(t,e){for(var n=t.shape[0],r=t.shape[1],o=Zn(t.shape,\\\"float32\\\"),a=Zn(t.shape,\\\"float32\\\"),i=gn(t).as2D(n,r),s=yn(t).as2D(n,r),u=0;u<n;u++)for(var l=i.slice([u,0],[1,r]),c=s.slice([u,0],[1,r]),h=mn(l,c),p=this.readSync(this.fftImpl(h,e).dataId),f=0;f<r;f++){var d=wo(p,f);o.values[u*r+f]=d.real,a.values[u*r+f]=d.imag}return mn(o.toTensor(),a.toTensor()).as2D(n,r)},t.prototype.fftImpl=function(t,e){var n=t.as1D(),r=n.size;if(this.isExponentOf2(r)){var o=this.fftRadix2(n,r,e).as2D(t.shape[0],t.shape[1]);return e&&(o=mn(gn(o).div(wn(r)),yn(o).div(wn(r)))),o}var a=this.readSync(t.dataId),i=function(t){for(var e=new Float32Array(t.length/2),n=new Float32Array(t.length/2),r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}(this.fourierTransformByMatmul(a,r,e));return mn(i.real,i.imag).as2D(t.shape[0],t.shape[1])},t.prototype.isExponentOf2=function(t){return 0==(t&t-1)},t.prototype.fftRadix2=function(t,e,n){if(1===e)return t;var r=this.readSync(t.dataId),o=e/2,a=function(t){for(var e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e),o=0;o<t.length;o+=4)n[Math.floor(o/4)]=t[o],r[Math.floor(o/4)]=t[o+1];return{real:n,imag:r}}(r),i=mn(a.real,a.imag).as1D(),s=function(t){for(var e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e),o=2;o<t.length;o+=4)n[Math.floor(o/4)]=t[o],r[Math.floor(o/4)]=t[o+1];return{real:n,imag:r}}(r),u=mn(s.real,s.imag).as1D();i=this.fftRadix2(i,o,n),u=this.fftRadix2(u,o,n);var l=function(t,e){for(var n=new Float32Array(t/2),r=new Float32Array(t/2),o=0;o<Math.ceil(t/2);o++){var a=(e?2:-2)*Math.PI*(o/t);n[o]=Math.cos(a),r[o]=Math.sin(a)}return{real:n,imag:r}}(e,n),c=mn(l.real,l.imag).mul(u),h=i.add(c),p=i.sub(c),f=gn(h).concat(gn(p)),d=yn(h).concat(yn(p));return mn(f,d).as1D()},t.prototype.fourierTransformByMatmul=function(t,e,n){for(var r=new Float32Array(2*e),o=0;o<e;o++){for(var a=0,i=0,s=0;s<e;s++){var u=Eo(o*s,e,n),l=wo(t,s);a+=l.real*u.real-l.imag*u.imag,i+=l.real*u.imag+l.imag*u.real}n&&(a/=e,i/=e),Co(r,a,i,o)}return r},t.prototype.depthToSpace=function(t,e,n){f(\\\"NHWC\\\"===n,function(){return\\\"Only NHWC dataFormat supported on CPU for depthToSpace. Got \\\"+n}),f(e>1,function(){return\\\"blockSize should be > 1 for depthToSpace, but was: \\\"+e});for(var r=t.shape[0],o=t.shape[1],a=t.shape[2],i=t.shape[3],s=o*e,u=a*e,l=i/(e*e),c=this.readSync(t.dataId),h=new Float32Array(r*s*u*l),p=0,d=0;d<r;++d)for(var v=0;v<s;++v)for(var m=Math.floor(v/e),g=v%e,y=0;y<u;++y)for(var x=Math.floor(y/e),b=(g*e+y%e)*l,w=0;w<l;++w){var C=w+b+i*(x+a*(m+o*d));h[p++]=c[C]}return In(h,[r,s,u,l])},t.prototype.broadcastedBinaryOp=function(t,e,n,r){var o=no(t.shape,e.shape),a=Zn(o,n),i=this.readSync(t.dataId),s=this.readSync(e.dataId),u=to(t.shape,o),l=to(e.shape,o),c=a.values;if(u.length+l.length===0)for(var h=0;h<c.length;++h)c[h]=r(i[h%i.length],s[h%s.length]);else{var p=this.bufferSync(t),f=this.bufferSync(e),d=function(n){var o=a.indexToLoc(n),h=o.slice(-t.rank);u.forEach(function(t){return h[t]=0});var d=p.locToIndex(h),v=o.slice(-e.rank);l.forEach(function(t){return v[t]=0});var m=f.locToIndex(v);c[n]=r(i[d],s[m])};for(h=0;h<c.length;++h)d(h)}return a.toTensor()},t.prototype.broadcastedBinaryComplexOp=function(t,e,n){var r=no(t.shape,e.shape),o=Zn(r,\\\"float32\\\"),a=Zn(r,\\\"float32\\\"),i=this.readSync(t.dataId),s=this.readSync(e.dataId),u=to(t.shape,r),l=to(e.shape,r),c=o.values,h=a.values;if(u.length+l.length===0)for(var p=0;p<c.length;p++){var f=p%i.length,d=p%s.length,v=n(i[2*f],i[2*f+1],s[2*d],s[2*d+1]);c[p]=v.real,h[p]=v.imag}else{var m=this.bufferSync(this.data.get(t.dataId).complexTensors.real),g=this.bufferSync(this.data.get(e.dataId).complexTensors.real),y=function(r){var a=o.indexToLoc(r),p=a.slice(-t.rank);u.forEach(function(t){return p[t]=0});var f=m.locToIndex(p),d=a.slice(-e.rank);l.forEach(function(t){return d[t]=0});var v=g.locToIndex(d),y=n(i[2*f],i[2*f+1],s[2*v],s[2*v+1]);c[r]=y.real,h[r]=y.imag};for(p=0;p<c.length;p++)y(p)}return this.complex(o.toTensor(),a.toTensor())},t.prototype.split=function(t,e,n){return ko(t,e,n)},t.prototype.dispose=function(){},t.prototype.floatPrecision=function(){return 32},t.prototype.epsilon=function(){return 1e-7},t.prototype.cropAndResize=function(t,e,n,r,o,a){for(var i=t.shape,s=i[0],u=i[1],l=i[2],c=i[3],h=e.shape[0],p=r[0],f=r[1],d=Zn([h,p,f,c],t.dtype),v=this.readSync(e.dataId),m=this.readSync(n.dataId),g=this.readSync(t.dataId),y=t.strides,x=d.strides,b=0;b<h;b++){var w=4*b,C=v[w],E=v[w+1],R=v[w+2],I=v[w+3],k=m[b];if(!(k>=s))for(var N=p>1?(R-C)*(u-1)/(p-1):0,S=f>1?(I-E)*(l-1)/(f-1):0,A=0;A<p;A++){var T=p>1?C*(u-1)+A*N:.5*(C+R)*(u-1);if(T<0||T>u-1)for(var D=0;D<f;D++)for(var _=0;_<c;_++){var O=_+D*x[2]+A*x[1]+b*x[0];d.values[O]=a}else if(\\\"bilinear\\\"===o){var F=Math.floor(T),M=Math.ceil(T),B=T-F;for(D=0;D<f;D++){if((q=f>1?E*(l-1)+D*S:.5*(E+I)*(l-1))<0||q>l-1)for(_=0;_<c;_++){O=_+D*x[2]+A*x[1]+b*x[0];d.values[O]=a}else{var P=Math.floor(q),L=Math.ceil(q),W=q-P;for(_=0;_<c;_++){var U=g[O=_+P*y[2]+F*y[1]+k*y[0]],V=g[O=_+L*y[2]+F*y[1]+k*y[0]],z=g[O=_+P*y[2]+M*y[1]+k*y[0]],G=U+(V-U)*W,H=z+(g[O=_+L*y[2]+M*y[1]+k*y[0]]-z)*W;O=_+D*x[2]+A*x[1]+b*x[0],d.values[O]=G+(H-G)*B}}}}else for(D=0;D<f;++D){var q;if((q=f>1?E*(l-1)+D*S:.5*(E+I)*(l-1))<0||q>l-1)for(_=0;_<c;_++){O=_+D*x[2]+A*x[1]+b*x[0];d.values[O]=a}else{var $=Math.round(q),K=Math.round(T);for(_=0;_<c;_++){var j=_+$*y[2]+K*y[1]+k*y[0],X=_+D*x[2]+A*x[1]+b*x[0];d.values[X]=g[j]}}}}}return d.toTensor()},t.prototype.sparseToDense=function(t,e,n,r){var o=Br(0,t,n),a=o.sliceRank,i=o.numUpdates,s=o.sliceSize,u=o.strides,l=o.outputSize;return this.scatter(t,e,n,l,s,i,a,u,r,!1)},t.prototype.gatherND=function(t,e){var n=e.shape,r=n[n.length-1],o=_r(t,e),a=o[0],i=o[1],s=o[2],u=o[3];if(0===i)return xn([],a,t.dtype);for(var l=new it([i,s],t.dtype),c=this.readSync(e.dataId),h=this.readSync(t.dataId),p=0;p<i;p++){for(var f=[],d=0,v=0;v<r;v++){var m=c[p*r+v];d+=m*u[v],f.push(m)}if(d<0||d>=t.size/s)throw new Error(\\\"Invalid indices: \\\"+f+\\\" does not index into \\\"+t.shape);for(var g=0;g<s;g++)l.values[p*s+g]=h[d*s+g]}return l.toTensor().reshape(a)},t.prototype.scatterND=function(t,e,n){var r=Br(0,t,n),o=r.sliceRank,a=r.numUpdates,i=r.sliceSize,s=r.strides,u=r.outputSize,l=wn(0);return this.scatter(t,e,n,u,i,a,o,s,l,!0)},t.prototype.fill=function(t,e,n){var r=S(n=n||L(e),g(t));return r.fill(e),ct.make(t,{values:r},n)},t.prototype.onesLike=function(t){if(\\\"string\\\"===t.dtype)throw new Error(\\\"onesLike is not supported for string tensors\\\");return this.fill(t.shape,1,t.dtype)},t.prototype.zerosLike=function(t){var e=S(t.dtype,g(t.shape));return ct.make(t.shape,{values:e},t.dtype)},t.prototype.linspace=function(t,e,n){return yo(t,e,n)},t.prototype.scatter=function(t,e,n,r,o,a,i,s,u,l){var c=[r/o,o],h=this.readSync(t.dataId),p=this.readSync(e.dataId);if(0===r)return xn([],n,e.dtype);var f=new it(c,e.dtype);f.values.fill(this.readSync(u.dataId)[0]);for(var d=0;d<a;d++){for(var v=[],m=0,g=0;g<i;g++){var y=h[d*i+g];v.push(y),m+=y*s[g]}if(m<0||m>=r/o)throw new Error(\\\"Invalid indices: \\\"+v+\\\" does not index into \\\"+n);for(var x=0;x<o;x++)l?f.values[m*o+x]+=p[d*o+x]:f.values[m*o+x]=0===e.rank?p[0]:p[d*o+x]}return f.toTensor().reshape(n)},t}();St.registerBackend(\\\"cpu\\\",function(){return new nh},1);var rh=function(){function t(){this.textEncoder=new TextEncoder}return t.prototype.fetch=function(t,e){return fetch(t,e)},t.prototype.now=function(){return performance.now()},t.prototype.encode=function(t,e){if(\\\"utf-8\\\"!==e&&\\\"utf8\\\"!==e)throw new Error(\\\"Browser's encoder only supports utf-8, but got \\\"+e);return this.textEncoder.encode(t)},t.prototype.decode=function(t,e){return new TextDecoder(e).decode(t)},t}();i.get(\\\"IS_BROWSER\\\")&&i.setPlatform(\\\"browser\\\",new rh);var oh,ah=function(){return require(\\\"node-fetch\\\")},ih=function(){function t(){this.util=require(\\\"util\\\"),this.textEncoder=new this.util.TextEncoder}return t.prototype.fetch=function(t,e){return null!=i.global.fetch?i.global.fetch(t,e):(null==oh&&(oh=ah()),oh(t,e))},t.prototype.now=function(){var t=process.hrtime();return 1e3*t[0]+t[1]/1e6},t.prototype.encode=function(t,e){if(\\\"utf-8\\\"!==e&&\\\"utf8\\\"!==e)throw new Error(\\\"Node built-in encoder only supports utf-8, but got \\\"+e);return this.textEncoder.encode(t)},t.prototype.decode=function(t,e){return 0===t.length?\\\"\\\":new this.util.TextDecoder(e).decode(t)},t}();i.get(\\\"IS_NODE\\\")&&i.setPlatform(\\\"node\\\",new ih);var sh={float32:4,int32:4,uint16:2,uint8:1,bool:1},uh=4;function lh(t,e){for(var n={},r=0,o=function(e){var o=e.name,a=e.dtype,i=e.shape,s=g(i),u=void 0;if(\\\"quantization\\\"in e){var l=e.quantization;if(\\\"uint8\\\"!==l.dtype&&\\\"uint16\\\"!==l.dtype)throw new Error(\\\"Weight \\\"+e.name+\\\" has unknown quantization dtype \\\"+l.dtype+\\\". Supported quantization dtypes are: 'uint8' and 'uint16'.\\\");var c=sh[l.dtype],h=t.slice(r,r+s*c),p=\\\"uint8\\\"===l.dtype?new Uint8Array(h):new Uint16Array(h);if(\\\"float32\\\"===a)u=Float32Array.from(p,function(t){return t*l.scale+l.min});else{if(\\\"int32\\\"!==a)throw new Error(\\\"Unsupported dtype in weight '\\\"+o+\\\"': \\\"+a);u=Int32Array.from(p,function(t){return Math.round(t*l.scale+l.min)})}r+=s*c}else if(\\\"string\\\"===a){var f=g(e.shape);u=[];for(var d=0;d<f;d++){var v=new Uint32Array(t.slice(r,r+uh))[0];r+=uh;var m=new Uint8Array(t.slice(r,r+v));u.push(m),r+=v}}else{var y=sh[a];h=t.slice(r,r+s*y);if(\\\"float32\\\"===a)u=new Float32Array(h);else if(\\\"int32\\\"===a)u=new Int32Array(h);else{if(\\\"bool\\\"!==a)throw new Error(\\\"Unsupported dtype in weight '\\\"+o+\\\"': \\\"+a);u=new Uint8Array(h)}r+=s*y}n[o]=xn(u,i,a)},a=0,i=e;a<i.length;a++){o(i[a])}return n}function ch(t){if(null===t)throw new Error(\\\"Invalid input value: \\\"+JSON.stringify(t));var e=0,n=[];t.forEach(function(t){if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(\\\"Unsupported TypedArray subtype: \\\"+t.constructor.name)});var r=new Uint8Array(e),o=0;return n.forEach(function(t){r.set(new Uint8Array(t.buffer),o),o+=t.byteLength}),r.buffer}var hh=\\\"undefined\\\"!=typeof Buffer&&(\\\"undefined\\\"==typeof Blob||\\\"undefined\\\"==typeof atob||\\\"undefined\\\"==typeof btoa);function ph(t){return hh?Buffer.byteLength(t):new Blob([t]).size}function fh(t){var e=0;t.forEach(function(t){e+=t.byteLength});var n=new Uint8Array(e),r=0;return t.forEach(function(t){n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function dh(t){for(t=t.trim();t.endsWith(\\\"/\\\");)t=t.slice(0,t.length-1);var e=t.split(\\\"/\\\");return e[e.length-1]}function vh(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error(\\\"Expected JSON model topology, received ArrayBuffer.\\\");return{dateSaved:new Date,modelTopologyType:\\\"JSON\\\",modelTopologyBytes:null==t.modelTopology?0:ph(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:ph(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}var mh=function(){function t(){this.saveRouters=[],this.loadRouters=[]}return t.getInstance=function(){return null==t.instance&&(t.instance=new t),t.instance},t.registerSaveRouter=function(e){t.getInstance().saveRouters.push(e)},t.registerLoadRouter=function(e){t.getInstance().loadRouters.push(e)},t.getSaveHandlers=function(e){return t.getHandlers(e,\\\"save\\\")},t.getLoadHandlers=function(e,n){return t.getHandlers(e,\\\"load\\\",n)},t.getHandlers=function(e,n,r){var o=[];return(\\\"load\\\"===n?t.getInstance().loadRouters:t.getInstance().saveRouters).forEach(function(t){var n=t(e,r);null!==n&&o.push(n)}),o},t}(),gh=\\\"://\\\",yh=function(){function t(){this.managers={}}return t.getInstance=function(){return null==t.instance&&(t.instance=new t),t.instance},t.registerManager=function(e,n){f(null!=e,function(){return\\\"scheme must not be undefined or null.\\\"}),e.endsWith(gh)&&(e=e.slice(0,e.indexOf(gh))),f(e.length>0,function(){return\\\"scheme must not be an empty string.\\\"});var r=t.getInstance();f(null==r.managers[e],function(){return\\\"A model store manager is already registered for scheme '\\\"+e+\\\"'.\\\"}),r.managers[e]=n},t.getManager=function(t){var e=this.getInstance().managers[t];if(null==e)throw new Error(\\\"Cannot find model manager for scheme '\\\"+t+\\\"'\\\");return e},t.getSchemes=function(){return Object.keys(this.getInstance().managers)},t}();function xh(t){if(-1===t.indexOf(gh))throw new Error(\\\"The url string provided does not contain a scheme. Supported schemes are: \\\"+yh.getSchemes().join(\\\",\\\"));return{scheme:t.split(gh)[0],path:t.split(gh)[1]}}function bh(t,e,o){return void 0===o&&(o=!1),n(this,void 0,void 0,function(){var n,a,i,s,u,l,c,h,p;return r(this,function(r){switch(r.label){case 0:return f(t!==e,function(){return\\\"Old path and new path are the same: '\\\"+t+\\\"'\\\"}),f((n=mh.getLoadHandlers(t)).length>0,function(){return\\\"Copying failed because no load handler is found for source URL \\\"+t+\\\".\\\"}),f(n.length<2,function(){return\\\"Copying failed because more than one (\\\"+n.length+\\\") load handlers for source URL \\\"+t+\\\".\\\"}),a=n[0],f((i=mh.getSaveHandlers(e)).length>0,function(){return\\\"Copying failed because no save handler is found for destination URL \\\"+e+\\\".\\\"}),f(i.length<2,function(){return\\\"Copying failed because more than one (\\\"+n.length+\\\") save handlers for destination URL \\\"+e+\\\".\\\"}),s=i[0],u=xh(t).scheme,l=xh(t).path,c=u===xh(t).scheme,[4,a.load()];case 1:return h=r.sent(),o&&c?[4,yh.getManager(u).removeModel(l)]:[3,3];case 2:r.sent(),r.label=3;case 3:return[4,s.save(h)];case 4:return p=r.sent(),!o||c?[3,6]:[4,yh.getManager(u).removeModel(l)];case 5:r.sent(),r.label=6;case 6:return[2,p.modelArtifactsInfo]}})})}var wh=\\\"models_store\\\",Ch=\\\"model_info_store\\\";function Eh(){if(!i.getBool(\\\"IS_BROWSER\\\"))throw new Error(\\\"Failed to obtain IndexedDB factory because the current environmentis not a web browser.\\\");var t=window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error(\\\"The current browser does not appear to support IndexedDB.\\\");return e}function Rh(t){var e=t.result;e.createObjectStore(wh,{keyPath:\\\"modelPath\\\"}),e.createObjectStore(Ch,{keyPath:\\\"modelPath\\\"})}var Ih=function(){function t(t){if(this.indexedDB=Eh(),null==t||!t)throw new Error(\\\"For IndexedDB, modelPath must not be null, undefined or empty.\\\");this.modelPath=t}return t.prototype.save=function(t){return n(this,void 0,void 0,function(){return r(this,function(e){if(t.modelTopology instanceof ArrayBuffer)throw new Error(\\\"BrowserLocalStorage.save() does not support saving model topology in binary formats yet.\\\");return[2,this.databaseAction(this.modelPath,t)]})})},t.prototype.load=function(){return n(this,void 0,void 0,function(){return r(this,function(t){return[2,this.databaseAction(this.modelPath)]})})},t.prototype.databaseAction=function(t,e){var n=this;return new Promise(function(t,r){var o=n.indexedDB.open(\\\"tensorflowjs\\\",1);o.onupgradeneeded=function(){return Rh(o)},o.onsuccess=function(){var a=o.result;if(null==e){var i=a.transaction(wh,\\\"readonly\\\"),s=i.objectStore(wh).get(n.modelPath);s.onsuccess=function(){if(null==s.result)return a.close(),r(new Error(\\\"Cannot find model with path '\\\"+n.modelPath+\\\"' in IndexedDB.\\\"));t(s.result.modelArtifacts)},s.onerror=function(t){return a.close(),r(s.error)},i.oncomplete=function(){return a.close()}}else{var u,l=vh(e),c=a.transaction(Ch,\\\"readwrite\\\"),h=c.objectStore(Ch),p=h.put({modelPath:n.modelPath,modelArtifactsInfo:l});p.onsuccess=function(){var o=(u=a.transaction(wh,\\\"readwrite\\\")).objectStore(wh).put({modelPath:n.modelPath,modelArtifacts:e,modelArtifactsInfo:l});o.onsuccess=function(){return t({modelArtifactsInfo:l})},o.onerror=function(t){var e=(h=c.objectStore(Ch)).delete(n.modelPath);e.onsuccess=function(){return a.close(),r(o.error)},e.onerror=function(t){return a.close(),r(o.error)}}},p.onerror=function(t){return a.close(),r(p.error)},c.oncomplete=function(){null==u?a.close():u.oncomplete=function(){return a.close()}}}},o.onerror=function(t){return r(o.error)}})},t.URL_SCHEME=\\\"indexeddb://\\\",t}(),kh=function(t){return i.getBool(\\\"IS_BROWSER\\\")&&!Array.isArray(t)&&t.startsWith(Ih.URL_SCHEME)?(e=t.slice(Ih.URL_SCHEME.length),new Ih(e)):null;var e};mh.registerSaveRouter(kh),mh.registerLoadRouter(kh);var Nh=function(){function t(){this.indexedDB=Eh()}return t.prototype.listModels=function(){return n(this,void 0,void 0,function(){var t=this;return r(this,function(e){return[2,new Promise(function(e,n){var r=t.indexedDB.open(\\\"tensorflowjs\\\",1);r.onupgradeneeded=function(){return Rh(r)},r.onsuccess=function(){var t=r.result,o=t.transaction(Ch,\\\"readonly\\\"),a=o.objectStore(Ch).getAll();a.onsuccess=function(){for(var t={},n=0,r=a.result;n<r.length;n++){var o=r[n];t[o.modelPath]=o.modelArtifactsInfo}e(t)},a.onerror=function(e){return t.close(),n(a.error)},o.oncomplete=function(){return t.close()}},r.onerror=function(t){return n(r.error)}})]})})},t.prototype.removeModel=function(t){return n(this,void 0,void 0,function(){var e=this;return r(this,function(n){var r;return t=(r=t).startsWith(Ih.URL_SCHEME)?r.slice(Ih.URL_SCHEME.length):r,[2,new Promise(function(n,r){var o=e.indexedDB.open(\\\"tensorflowjs\\\",1);o.onupgradeneeded=function(){return Rh(o)},o.onsuccess=function(){var e,a=o.result,i=a.transaction(Ch,\\\"readwrite\\\"),s=i.objectStore(Ch),u=s.get(t);u.onsuccess=function(){if(null==u.result)return a.close(),r(new Error(\\\"Cannot find model with path '\\\"+t+\\\"' in IndexedDB.\\\"));var o=s.delete(t),i=function(){var o=(e=a.transaction(wh,\\\"readwrite\\\")).objectStore(wh).delete(t);o.onsuccess=function(){return n(u.result.modelArtifactsInfo)},o.onerror=function(t){return r(u.error)}};o.onsuccess=i,o.onerror=function(t){return i(),a.close(),r(u.error)}},u.onerror=function(t){return a.close(),r(u.error)},i.oncomplete=function(){null==e?a.close():e.oncomplete=function(){return a.close()}}},o.onerror=function(t){return r(o.error)}})]})})},t}();if(i.getBool(\\\"IS_BROWSER\\\"))try{yh.registerManager(Ih.URL_SCHEME,new Nh)}catch(t){}var Sh=\\\"/\\\",Ah=\\\"tensorflowjs_models\\\",Th=\\\"info\\\",Dh=\\\"model_topology\\\",_h=\\\"weight_specs\\\",Oh=\\\"weight_data\\\",Fh=\\\"model_metadata\\\";function Mh(t){return{info:[Ah,t,Th].join(Sh),topology:[Ah,t,Dh].join(Sh),weightSpecs:[Ah,t,_h].join(Sh),weightData:[Ah,t,Oh].join(Sh),modelMetadata:[Ah,t,Fh].join(Sh)}}function Bh(t){var e=t.split(Sh);if(e.length<3)throw new Error(\\\"Invalid key format: \\\"+t);return e.slice(1,e.length-1).join(Sh)}var Ph=function(){function t(t){if(!i.getBool(\\\"IS_BROWSER\\\")||void 0===window.localStorage)throw new Error(\\\"The current environment does not support local storage.\\\");if(this.LS=window.localStorage,null==t||!t)throw new Error(\\\"For local storage, modelPath must not be null, undefined or empty.\\\");this.modelPath=t,this.keys=Mh(this.modelPath)}return t.prototype.save=function(t){return n(this,void 0,void 0,function(){var e,n,o;return r(this,function(r){if(t.modelTopology instanceof ArrayBuffer)throw new Error(\\\"BrowserLocalStorage.save() does not support saving model topology in binary formats yet.\\\");e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),o=vh(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,(a=t.weightData,hh?Buffer.from(a).toString(\\\"base64\\\"):btoa(String.fromCharCode.apply(null,new Uint8Array(a))))),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy})),[2,{modelArtifactsInfo:o}]}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(\\\"Failed to save model '\\\"+this.modelPath+\\\"' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=\\\"+o.modelTopologyBytes+\\\", weightSpecsBytes=\\\"+o.weightSpecsBytes+\\\", weightDataBytes=\\\"+o.weightDataBytes+\\\".\\\")}var a;return[2]})})},t.prototype.load=function(){return n(this,void 0,void 0,function(){var t,e,n,o,a,i,s;return r(this,function(r){if(null==(t=JSON.parse(this.LS.getItem(this.keys.info))))throw new Error(\\\"In local storage, there is no model with name '\\\"+this.modelPath+\\\"'\\\");if(\\\"JSON\\\"!==t.modelTopologyType)throw new Error(\\\"BrowserLocalStorage does not support loading non-JSON model topology yet.\\\");if(e={},null==(n=JSON.parse(this.LS.getItem(this.keys.topology))))throw new Error(\\\"In local storage, the topology of model '\\\"+this.modelPath+\\\"' is missing.\\\");if(e.modelTopology=n,null==(o=JSON.parse(this.LS.getItem(this.keys.weightSpecs))))throw new Error(\\\"In local storage, the weight specs of model '\\\"+this.modelPath+\\\"' are missing.\\\");if(e.weightSpecs=o,null!=(a=this.LS.getItem(this.keys.modelMetadata))&&(i=JSON.parse(a),e.format=i.format,e.generatedBy=i.generatedBy,e.convertedBy=i.convertedBy),null==(s=this.LS.getItem(this.keys.weightData)))throw new Error(\\\"In local storage, the binary weight values of model '\\\"+this.modelPath+\\\"' are missing.\\\");return e.weightData=function(t){if(hh){var e=Buffer.from(t,\\\"base64\\\");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}for(var n=atob(t),r=new Uint8Array(n.length),o=0;o<n.length;++o)r.set([n.charCodeAt(o)],o);return r.buffer}(s),[2,e]})})},t.URL_SCHEME=\\\"localstorage://\\\",t}(),Lh=function(t){return i.getBool(\\\"IS_BROWSER\\\")&&!Array.isArray(t)&&t.startsWith(Ph.URL_SCHEME)?(e=t.slice(Ph.URL_SCHEME.length),new Ph(e)):null;var e};mh.registerSaveRouter(Lh),mh.registerLoadRouter(Lh);var Wh=function(){function t(){f(i.getBool(\\\"IS_BROWSER\\\"),function(){return\\\"Current environment is not a web browser\\\"}),f(void 0!==window.localStorage,function(){return\\\"Current browser does not appear to support localStorage\\\"}),this.LS=window.localStorage}return t.prototype.listModels=function(){return n(this,void 0,void 0,function(){var t,e,n,o,a,i;return r(this,function(r){for(t={},e=Ah+Sh,n=Sh+Th,o=0;o<this.LS.length;++o)(a=this.LS.key(o)).startsWith(e)&&a.endsWith(n)&&(i=Bh(a),t[i]=JSON.parse(this.LS.getItem(a)));return[2,t]})})},t.prototype.removeModel=function(t){return n(this,void 0,void 0,function(){var e,n;return r(this,function(r){var o;if(t=(o=t).startsWith(Ph.URL_SCHEME)?o.slice(Ph.URL_SCHEME.length):o,e=Mh(t),null==this.LS.getItem(e.info))throw new Error(\\\"Cannot find model at path '\\\"+t+\\\"'\\\");return n=JSON.parse(this.LS.getItem(e.info)),this.LS.removeItem(e.info),this.LS.removeItem(e.topology),this.LS.removeItem(e.weightSpecs),this.LS.removeItem(e.weightData),[2,n]})})},t}();if(i.getBool(\\\"IS_BROWSER\\\"))try{yh.registerManager(Ph.URL_SCHEME,new Wh)}catch(t){}var Uh=\\\"model\\\",Vh=\\\".json\\\",zh=\\\".weights.bin\\\";function Gh(t){return new Promise(function(t){return setTimeout(t)}).then(t)}var Hh=function(){function t(e){if(!i.getBool(\\\"IS_BROWSER\\\"))throw new Error(\\\"browserDownloads() cannot proceed because the current environment is not a browser.\\\");e.startsWith(t.URL_SCHEME)&&(e=e.slice(t.URL_SCHEME.length)),null!=e&&0!==e.length||(e=Uh),this.modelTopologyFileName=e+Vh,this.weightDataFileName=e+zh}return t.prototype.save=function(t){return n(this,void 0,void 0,function(){var e,n,o,a,i,s;return r(this,function(r){switch(r.label){case 0:if(\\\"undefined\\\"==typeof document)throw new Error(\\\"Browser downloads are not supported in this environment since `document` is not present\\\");if(e=window.URL.createObjectURL(new Blob([t.weightData],{type:\\\"application/octet-stream\\\"})),!(t.modelTopology instanceof ArrayBuffer))return[3,1];throw new Error(\\\"BrowserDownloads.save() does not support saving model topology in binary formats yet.\\\");case 1:return n=[{paths:[\\\"./\\\"+this.weightDataFileName],weights:t.weightSpecs}],o={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},a=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:\\\"application/json\\\"})),(i=null==this.jsonAnchor?document.createElement(\\\"a\\\"):this.jsonAnchor).download=this.modelTopologyFileName,i.href=a,[4,Gh(function(){return i.dispatchEvent(new MouseEvent(\\\"click\\\"))})];case 2:return r.sent(),null==t.weightData?[3,4]:((s=null==this.weightDataAnchor?document.createElement(\\\"a\\\"):this.weightDataAnchor).download=this.weightDataFileName,s.href=e,[4,Gh(function(){return s.dispatchEvent(new MouseEvent(\\\"click\\\"))})]);case 3:r.sent(),r.label=4;case 4:return[2,{modelArtifactsInfo:vh(t)}]}})})},t.URL_SCHEME=\\\"downloads://\\\",t}(),qh=function(){function t(t){if(null==t||t.length<1)throw new Error(\\\"When calling browserFiles, at least 1 file is required, but received \\\"+t);this.files=t}return t.prototype.load=function(){return n(this,void 0,void 0,function(){var t,e,n=this;return r(this,function(r){return t=this.files[0],e=this.files.slice(1),[2,new Promise(function(r,o){var a=new FileReader;a.onload=function(a){var i=JSON.parse(a.target.result),s=i.modelTopology;if(null!=s){0===e.length&&r({modelTopology:s});var u=i.weightsManifest;if(null!=u){var l;try{l=n.checkManifestAndWeightFiles(u,e)}catch(t){return void o(t)}var c=[],h=[],p=[];u.forEach(function(t){t.paths.forEach(function(t){h.push(t),p.push(null)}),c.push.apply(c,t.weights)}),u.forEach(function(t){t.paths.forEach(function(t){var e=new FileReader;e.onload=function(e){var n=e.target.result,o=h.indexOf(t);p[o]=n,-1===p.indexOf(null)&&r({modelTopology:s,weightSpecs:c,weightData:fh(p)})},e.onerror=function(e){return o(\\\"Failed to weights data from file of path '\\\"+t+\\\"'.\\\")},e.readAsArrayBuffer(l[t])})})}else o(new Error(\\\"weightManifest field is missing from file \\\"+t.name))}else o(new Error(\\\"modelTopology field is missing from file \\\"+t.name))},a.onerror=function(e){return o(\\\"Failed to read model topology and weights manifest JSON from file '\\\"+t.name+\\\"'. BrowserFiles supports loading Keras-style tf.Model artifacts only.\\\")},a.readAsText(t)})]})})},t.prototype.checkManifestAndWeightFiles=function(t,e){for(var n=[],r=e.map(function(t){return dh(t.name)}),o={},a=0,i=t;a<i.length;a++){i[a].paths.forEach(function(t){var a=dh(t);if(-1!==n.indexOf(a))throw new Error(\\\"Duplicate file basename found in weights manifest: '\\\"+a+\\\"'\\\");if(n.push(a),-1===r.indexOf(a))throw new Error(\\\"Weight file with basename '\\\"+a+\\\"' is not provided.\\\");o[t]=e[r.indexOf(a)]})}if(n.length!==e.length)throw new Error(\\\"Mismatch in the number of files in weights manifest (\\\"+n.length+\\\") and the number of weight files provided (\\\"+e.length+\\\").\\\");return o},t}();function $h(t,e,n,r){!function(t){f(null!=t&&Array.isArray(t)&&t.length>0,function(){return\\\"promises must be a none empty array\\\"})}(t),function(t,e){f(t>=0&&t<=1,function(){return\\\"Progress fraction must be in range [0, 1], but got startFraction \\\"+t}),f(e>=0&&e<=1,function(){return\\\"Progress fraction must be in range [0, 1], but got endFraction \\\"+e}),f(e>=t,function(){return\\\"startFraction must be no more than endFraction, but got startFraction \\\"+t+\\\" and endFraction \\\"+e})}(n=null==n?0:n,r=null==r?1:r);var o=0;return Promise.all(t.map(function(a){return a.then(function(a){var i=n+ ++o/t.length*(r-n);return e(i),a}),a}))}function Kh(t,e){return n(this,void 0,void 0,function(){var n,o,a,s,u,l,c,h,p;return r(this,function(r){switch(r.label){case 0:return null==e&&(e={}),n=null==e.fetchFunc?i.platform.fetch:e.fetchFunc,o=t.map(function(t){return n(t,e.requestInit,{isBinary:!0})}),a=0,s=.5,null!=e.onProgress?[3,2]:[4,Promise.all(o)];case 1:return u=r.sent(),[3,4];case 2:return[4,$h(o,e.onProgress,a,s)];case 3:u=r.sent(),r.label=4;case 4:return l=u.map(function(t){return t.arrayBuffer()}),c=.5,h=1,null!=e.onProgress?[3,6]:[4,Promise.all(l)];case 5:return p=r.sent(),[3,8];case 6:return[4,$h(l,e.onProgress,c,h)];case 7:p=r.sent(),r.label=8;case 8:return[2,p]}})})}function jh(t){var e=this;return function(o,a,i){return void 0===a&&(a=\\\"\\\"),n(e,void 0,void 0,function(){var e,n,s,u,l,c,h,p,f,d;return r(this,function(r){switch(r.label){case 0:if(e=o.map(function(){return!1}),n={},s=null!=i?i.map(function(){return!1}):[],u=[],o.forEach(function(t,r){var o=0;t.weights.forEach(function(t){var a=\\\"quantization\\\"in t?t.quantization.dtype:t.dtype,l=sh[a]*g(t.shape),c=function(){e[r]=!0,null==n[r]&&(n[r]=[]),n[r].push({manifestEntry:t,groupOffset:o,sizeBytes:l})};null!=i?i.forEach(function(e,n){e===t.name&&(c(),s[n]=!0)}):c(),u.push(t.name),o+=l})}),!s.every(function(t){return t}))throw l=i.filter(function(t,e){return!s[e]}),new Error(\\\"Could not find weights in manifest with names: \\\"+l.join(\\\", \\\")+\\\". \\\\nManifest JSON has weights with names: \\\"+u.join(\\\", \\\")+\\\".\\\");return c=e.reduce(function(t,e,n){return e&&t.push(n),t},[]),h=[],c.forEach(function(t){o[t].paths.forEach(function(t){var e=a+(a.endsWith(\\\"/\\\")?\\\"\\\":\\\"/\\\")+t;h.push(e)})}),[4,t(h)];case 1:return p=r.sent(),f={},d=0,c.forEach(function(t){for(var e=o[t].paths.length,r=0,a=0;a<e;a++)r+=p[d+a].byteLength;for(var i=new ArrayBuffer(r),s=new Uint8Array(i),u=0,l=0;l<e;l++){var c=new Uint8Array(p[d+l]);s.set(c,u),u+=c.byteLength}n[t].forEach(function(t){var e=lh(i.slice(t.groupOffset,t.groupOffset+t.sizeBytes),[t.manifestEntry]);for(var n in e)f[n]=e[n]}),d+=e}),[2,f]}})})}}mh.registerSaveRouter(function(t){return i.getBool(\\\"IS_BROWSER\\\")&&!Array.isArray(t)&&t.startsWith(Hh.URL_SCHEME)?(e=t.slice(Hh.URL_SCHEME.length),void 0===e&&(e=\\\"model\\\"),new Hh(e)):null;var e});var Xh=function(){function t(t,e){if(this.DEFAULT_METHOD=\\\"POST\\\",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,null!=e.fetchFunc?(f(\\\"function\\\"==typeof e.fetchFunc,function(){return\\\"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\\\"}),this.fetch=e.fetchFunc):this.fetch=i.platform.fetch,f(null!=t&&t.length>0,function(){return\\\"URL path for http must not be null, undefined or empty.\\\"}),Array.isArray(t)&&f(2===t.length,function(){return\\\"URL paths for http must have a length of 2, (actual length is \\\"+t.length+\\\").\\\"}),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error(\\\"requestInit is expected to have no pre-existing body, but has one.\\\");this.requestInit=e.requestInit||{}}return t.prototype.save=function(t){return n(this,void 0,void 0,function(){var e,n,o,a;return r(this,function(r){switch(r.label){case 0:if(t.modelTopology instanceof ArrayBuffer)throw new Error(\\\"BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.\\\");return(e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit)).body=new FormData,n=[{paths:[\\\"./model.weights.bin\\\"],weights:t.weightSpecs}],o={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},e.body.append(\\\"model.json\\\",new Blob([JSON.stringify(o)],{type:\\\"application/json\\\"}),\\\"model.json\\\"),null!=t.weightData&&e.body.append(\\\"model.weights.bin\\\",new Blob([t.weightData],{type:\\\"application/octet-stream\\\"}),\\\"model.weights.bin\\\"),[4,this.fetch(this.path,e)];case 1:if((a=r.sent()).ok)return[2,{modelArtifactsInfo:vh(t),responses:[a]}];throw new Error(\\\"BrowserHTTPRequest.save() failed due to HTTP response status \\\"+a.status+\\\".\\\")}})})},t.prototype.load=function(){return n(this,void 0,void 0,function(){var t,e,n,o,a,i,s,u;return r(this,function(r){switch(r.label){case 0:return[4,this.fetch(this.path,this.requestInit)];case 1:if(!(t=r.sent()).ok)throw new Error(\\\"Request to \\\"+this.path+\\\" failed with status code \\\"+t.status+\\\". Please verify this URL points to the model JSON of the model to load.\\\");r.label=2;case 2:return r.trys.push([2,4,,5]),[4,t.json()];case 3:return e=r.sent(),[3,5];case 4:throw r.sent(),n=\\\"Failed to parse model JSON of response from \\\"+this.path+\\\".\\\",this.path.endsWith(\\\".pb\\\")?n+=\\\" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.\\\":n+=\\\" Please make sure the server is serving valid JSON for this request.\\\",new Error(n);case 5:if(o=e.modelTopology,a=e.weightsManifest,null==o&&null==a)throw new Error(\\\"The JSON from HTTP path \\\"+this.path+\\\" contains neither model topology or manifest for weights.\\\");return null==a?[3,7]:[4,this.loadWeights(a)];case 6:u=r.sent(),i=u[0],s=u[1],r.label=7;case 7:return[2,{modelTopology:o,weightSpecs:i,weightData:s}]}})})},t.prototype.loadWeights=function(t){return n(this,void 0,void 0,function(){var e,n,o,a,i,s,u,l,c,h,p;return r(this,function(r){switch(r.label){case 0:for(e=Array.isArray(this.path)?this.path[1]:this.path,n=function(t){var e=t.lastIndexOf(\\\"/\\\"),n=t.lastIndexOf(\\\"?\\\"),r=t.substring(0,e),o=n>e?t.substring(n):\\\"\\\";return[r+\\\"/\\\",o]}(e),o=n[0],a=n[1],i=this.weightPathPrefix||o,s=[],u=0,l=t;u<l.length;u++)c=l[u],s.push.apply(s,c.weights);return h=[],t.forEach(function(t){t.paths.forEach(function(t){h.push(i+t+a)})}),[4,Kh(h,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})];case 1:return p=r.sent(),[2,[s,fh(p)]]}})})},t.URL_SCHEME_REGEX=/^https?:\\\\/\\\\//,t}();function Yh(t){return null!=t.match(Xh.URL_SCHEME_REGEX)}var Qh=function(t,e){if(\\\"undefined\\\"==typeof fetch)return null;return(Array.isArray(t)?t.every(function(t){return Yh(t)}):Yh(t))?Jh(t,{onProgress:e}):null};function Jh(t,e){return new Xh(t,e)}mh.registerSaveRouter(Qh),mh.registerLoadRouter(Qh);var Zh=function(){function t(t){this.modelArtifacts=t}return t.prototype.load=function(){return n(this,void 0,void 0,function(){return r(this,function(t){return[2,this.modelArtifacts]})})},t}(),tp=function(){function t(t){this.saveHandler=t}return t.prototype.save=function(t){return n(this,void 0,void 0,function(){return r(this,function(e){return[2,this.saveHandler(t)]})})},t}();var ep=Object.freeze({browserFiles:function(t){return new qh(t)},browserHTTPRequest:function(t,e){return Jh(t,e)},concatenateArrayBuffers:fh,decodeWeights:lh,encodeWeights:function(t,e){return n(this,void 0,void 0,function(){var o,a,i,s,u,l=this;return r(this,function(c){switch(c.label){case 0:for(o=[],a=[],i=Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t),s=function(s){var u=i[s],c=Array.isArray(t)?t[s].tensor:t[u];if(\\\"float32\\\"!==c.dtype&&\\\"int32\\\"!==c.dtype&&\\\"bool\\\"!==c.dtype&&\\\"string\\\"!==c.dtype)throw new Error(\\\"Unsupported dtype in weight '\\\"+u+\\\"': \\\"+c.dtype);var h={name:u,shape:c.shape,dtype:c.dtype};if(\\\"string\\\"===c.dtype){var p=new Promise(function(t){return n(l,void 0,void 0,function(){var e,n,o,a,i,s,u;return r(this,function(r){switch(r.label){case 0:return[4,c.bytes()];case 1:for(e=r.sent(),n=e.reduce(function(t,e){return t+e.length},0)+uh*e.length,o=new Uint8Array(n),a=0,i=0;i<e.length;i++)s=e[i],u=new Uint8Array(new Uint32Array([s.length]).buffer),o.set(u,a),a+=uh,o.set(s,a),a+=s.length;return t(o),[2]}})})});a.push(p)}else a.push(c.data());null!=e&&(h.group=e),o.push(h)},u=0;u<i.length;++u)s(u);return[4,Promise.all(a)];case 1:return[2,{data:ch(c.sent()),specs:o}]}})})},fromMemory:function(t,e,n,r){return 1===arguments.length?null!=t.modelTopology||null!=t.weightSpecs?new Zh(t):(console.warn(\\\"Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release.\\\"),new Zh({modelTopology:t})):(console.warn(\\\"Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release.\\\"),new Zh({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r}))},getLoadHandlers:function(t,e){return mh.getLoadHandlers(t,e)},getModelArtifactsInfoForJSON:vh,getSaveHandlers:function(t){return mh.getSaveHandlers(t)},http:Jh,isHTTPScheme:Yh,loadWeights:function(t,e,o,a){return void 0===e&&(e=\\\"\\\"),n(this,void 0,void 0,function(){return r(this,function(n){return[2,jh(function(t){return Kh(t,{requestInit:a})})(t,e,o)]})})},registerLoadRouter:function(t){return mh.registerLoadRouter(t)},registerSaveRouter:function(t){return mh.registerSaveRouter(t)},weightsLoaderFactory:jh,withSaveHandler:function(t){return new tp(t)},copyModel:function(t,e){return n(this,void 0,void 0,function(){return r(this,function(n){return[2,bh(t,e,!1)]})})},listModels:function(){return n(this,void 0,void 0,function(){var t,e,n,o,a,i,s;return r(this,function(r){switch(r.label){case 0:t=yh.getSchemes(),e={},n=0,o=t,r.label=1;case 1:return n<o.length?(a=o[n],[4,yh.getManager(a).listModels()]):[3,4];case 2:for(s in i=r.sent())e[a+gh+s]=i[s];r.label=3;case 3:return n++,[3,1];case 4:return[2,e]}})})},moveModel:function(t,e){return n(this,void 0,void 0,function(){return r(this,function(n){return[2,bh(t,e,!0)]})})},removeModel:function(t){return n(this,void 0,void 0,function(){var e;return r(this,function(n){return e=xh(t),[2,yh.getManager(e.scheme).removeModel(e.path)]})})}});var np=vn({confusionMatrix_:function(t,e,n){var r=nn(t,\\\"labels\\\",\\\"confusionMatrix\\\"),o=nn(e,\\\"predictions\\\",\\\"confusionMatrix\\\");f(null==n||n>0&&Number.isInteger(n),function(){return\\\"If provided, numClasses must be a positive integer, but got \\\"+n}),f(1===r.rank,function(){return\\\"Expected the rank of labels to be 1, but got \\\"+r.rank}),f(1===o.rank,function(){return\\\"Expected the rank of predictions to be 1, but got \\\"+o.rank}),f(r.shape[0]===o.shape[0],function(){return\\\"Mismatch in the number of examples: \\\"+r.shape[0]+\\\" vs. \\\"+o.shape[0]+\\\". Labels and predictions should have the same number of elements.\\\"}),f(n>0&&Number.isInteger(n),function(){return\\\"numClasses is required to be a positive integer, but got \\\"+n});var a=lr(r.asType(\\\"int32\\\"),n),i=lr(o.asType(\\\"int32\\\"),n);return a.transpose().matMul(i).asType(\\\"int32\\\")}}),rp=Object.freeze({confusionMatrix:np});var op=vn({fromPixels_:function(t,e){if(void 0===e&&(e=3),e>4)throw new Error(\\\"Cannot construct Tensor with more than 4 channels from pixels.\\\");var n=\\\"undefined\\\"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement;if(n&&n&&t.readyState<2)throw new Error(\\\"The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.\\\");return St.fromPixels(t,e)}}),ap=Object.freeze({toPixels:function(t,e){return n(this,void 0,void 0,function(){var n,o,a,i,s,u,l,c,h,p,f,d,v,m,g,y,x,b,w,C,E,R,I;return r(this,function(r){switch(r.label){case 0:if(n=nn(t,\\\"img\\\",\\\"toPixels\\\"),t instanceof ct||(n=n.toInt()),2!==n.rank&&3!==n.rank)throw new Error(\\\"toPixels only supports rank 2 or 3 tensors, got rank \\\"+n.rank+\\\".\\\");if(o=n.shape.slice(0,2),a=o[0],i=o[1],(s=2===n.rank?1:n.shape[2])>4||2===s)throw new Error(\\\"toPixels only supports depth of size 1, 3 or 4 but got \\\"+s);return[4,n.data()];case 1:return u=r.sent(),l=n.min(),c=n.max(),[4,Promise.all([l.data(),c.data()])];case 2:if(h=r.sent(),p=h[0],f=h[1],d=p[0],v=f[0],l.dispose(),c.dispose(),\\\"float32\\\"===n.dtype){if(d<0||v>1)throw new Error(\\\"Tensor values for a float32 Tensor must be in the range [0 - 1] but got range [\\\"+d+\\\" - \\\"+v+\\\"].\\\")}else{if(\\\"int32\\\"!==n.dtype)throw new Error(\\\"Unsupported type for toPixels: \\\"+n.dtype+\\\". Please use float32 or int32 tensors.\\\");if(d<0||v>255)throw new Error(\\\"Tensor values for a int32 Tensor must be in the range [0 - 255] but got range [\\\"+d+\\\" - \\\"+v+\\\"].\\\")}for(m=\\\"float32\\\"===n.dtype?255:1,g=new Uint8ClampedArray(i*a*4),y=0;y<a*i;++y)x=void 0,b=void 0,w=void 0,C=void 0,1===s?(x=u[y]*m,b=u[y]*m,w=u[y]*m,C=255):3===s?(x=u[3*y]*m,b=u[3*y+1]*m,w=u[3*y+2]*m,C=255):4===s&&(x=u[4*y]*m,b=u[4*y+1]*m,w=u[4*y+2]*m,C=u[4*y+3]*m),g[0+(E=4*y)]=Math.round(x),g[E+1]=Math.round(b),g[E+2]=Math.round(w),g[E+3]=Math.round(C);return null!=e&&(e.width=i,e.height=a,R=e.getContext(\\\"2d\\\"),I=new ImageData(g,i,a),R.putImageData(I,0,0)),n!==t&&n.dispose(),[2,g]}})})},fromPixels:op}),ip=function(){function t(){}return t.prototype.getClassName=function(){return this.constructor.className},t.fromConfig=function(t,e){return new t(e)},t}(),sp=function(){function t(){this.classNameMap={}}return t.getMap=function(){return null==t.instance&&(t.instance=new t),t.instance},t.register=function(e){t.getMap().classNameMap[e.className]=[e,e.fromConfig]},t}();function up(t){f(null!=t.className,function(){return\\\"Class being registered does not have the static className property defined.\\\"}),f(\\\"string\\\"==typeof t.className,function(){return\\\"className is required to be a string, but got type \\\"+typeof t.className}),f(t.className.length>0,function(){return\\\"Class being registered has an empty-string as its className, which is disallowed.\\\"}),sp.register(t)}var lp=Object.freeze({Serializable:ip,SerializationMap:sp,registerClass:up}),cp=.001,hp=.1;function pp(){return 32===St.backend.floatPrecision()?cp:hp}function fp(t,e,n){var r=!0;if((_(t)||_(e))&&(r=!1),_(t)&&_(e)&&(r=!0),r){var o=t.constructor.name,a=e.constructor.name;if(o!==a)throw new Error(\\\"Arrays are of different type. Actual: \\\"+o+\\\". Expected: \\\"+a)}if(Array.isArray(t)&&Array.isArray(e)){var i=tn(t),s=tn(e);if(!y(i,s))throw new Error(\\\"Arrays have different shapes. Actual: [\\\"+i+\\\"]. Expected: [\\\"+s+\\\"]\\\")}var u=_(t)?t:m(t),l=_(e)?e:m(e);if(u.length!==l.length)throw new Error(\\\"Arrays have different lengths actual: \\\"+u.length+\\\" vs expected: \\\"+l.length+\\\".\\\\nActual:   \\\"+u+\\\".\\\\nExpected: \\\"+l+\\\".\\\");for(var c=0;c<l.length;++c){var h=u[c],p=l[c];if(!n(h,p))throw new Error(\\\"Arrays differ: actual[\\\"+c+\\\"] = \\\"+h+\\\", expected[\\\"+c+\\\"] = \\\"+p+\\\".\\\\nActual:   \\\"+u+\\\".\\\\nExpected: \\\"+l+\\\".\\\")}}function dp(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}var vp=Object.freeze({TEST_EPSILON_FLOAT16:hp,expectArraysClose:function(t,e,n){return null==n&&(n=pp()),fp(t,e,function(t,e){return dp(t,e,n)})},testEpsilon:pp,expectPromiseToFail:function(t,e){t().then(function(){return e.fail()},function(){return e()})},expectArraysEqual:function(t,e){var n=\\\"string\\\"==typeof e||\\\"number\\\"==typeof e||\\\"boolean\\\"==typeof e?[e]:e;return M(t)||M(t[0])||M(e)||M(e[0])?fp(t,n,function(t,e){return t==e}):fp(t,e,function(t,e){return dp(t,e,0)})},expectNumbersClose:function(t,e,n){if(null==n&&(n=pp()),!dp(t,e,n))throw new Error(\\\"Numbers differ: actual === \\\"+t+\\\", expected === \\\"+e)},expectValuesInRange:function(t,e,n){for(var r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(\\\"Value out of range:\\\"+t[r]+\\\" low: \\\"+e+\\\", high: \\\"+n)},expectArrayBuffersEqual:function(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}}),mp=\\\"1.2.9\\\";var gp=Object.freeze({gpgpu_util:li,webgl_util:_e,forceHalfFloat:function(){i.set(\\\"WEBGL_FORCE_F16_TEXTURES\\\",!0)},MathBackendWebGL:Cs,setWebGLContext:Ft,GPGPUContext:ci}),yp=function(t){function o(){return null!==t&&t.apply(this,arguments)||this}return e(o,t),o.prototype.minimize=function(t,e,n){void 0===e&&(e=!1);var r=this.computeGradients(t,n),o=r.value,a=r.grads;if(null!=n){var i=n.map(function(t){return{name:t.name,tensor:a[t.name]}});this.applyGradients(i)}else this.applyGradients(a);return Ve(a),e?o:(o.dispose(),null)},Object.defineProperty(o.prototype,\\\"iterations\\\",{get:function(){return null==this.iterations_&&(this.iterations_=0),this.iterations_},enumerable:!0,configurable:!0}),o.prototype.incrementIterations=function(){this.iterations_=this.iterations+1},o.prototype.computeGradients=function(t,e){return Kr(t,e)},o.prototype.dispose=function(){null!=this.iterations_&&Ve(this.iterations_)},o.prototype.saveIterations=function(){return n(this,void 0,void 0,function(){return r(this,function(t){return null==this.iterations_&&(this.iterations_=0),[2,{name:\\\"iter\\\",tensor:wn(this.iterations_,\\\"int32\\\")}]})})},o.prototype.getWeights=function(){return n(this,void 0,void 0,function(){return r(this,function(t){throw new Error(\\\"getWeights() is not implemented for this optimizer yet.\\\")})})},o.prototype.setWeights=function(t){return n(this,void 0,void 0,function(){return r(this,function(t){throw new Error(\\\"setWeights() is not implemented for this optimizer class \\\"+this.getClassName())})})},o.prototype.extractIterations=function(t){return n(this,void 0,void 0,function(){var e;return r(this,function(n){switch(n.label){case 0:return e=this,[4,t[0].tensor.data()];case 1:return e.iterations_=n.sent()[0],[2,t.slice(1)]}})})},o}(ip);Object.defineProperty(yp,Symbol.hasInstance,{value:function(t){return null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients}});var xp=function(t){function o(e,n,r){void 0===r&&(r=null);var o=t.call(this)||this;return o.learningRate=e,o.rho=n,o.epsilon=r,o.accumulatedGrads=[],o.accumulatedUpdates=[],null==r&&(o.epsilon=St.backend.epsilon()),o}return e(o,t),o.prototype.applyGradients=function(t){var e=this;(Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t)).forEach(function(n,r){var o=St.registeredVariables[n];null==e.accumulatedGrads[r]&&(e.accumulatedGrads[r]={originalName:n+\\\"/accum_grad\\\",variable:Ue(function(){return Fn(o).variable(!1)})}),null==e.accumulatedUpdates[r]&&(e.accumulatedUpdates[r]={originalName:n+\\\"/accum_var\\\",variable:Ue(function(){return Fn(o).variable(!1)})});var a=Array.isArray(t)?t[r].tensor:t[n];if(null!=a){var i=e.accumulatedGrads[r].variable,s=e.accumulatedUpdates[r].variable;Ue(function(){var t=i.mul(e.rho).add(a.square().mul(1-e.rho)),n=s.add(e.epsilon).sqrt().div(i.add(e.epsilon).sqrt()).mul(a),r=s.mul(e.rho).add(n.square().mul(1-e.rho));i.assign(t),s.assign(r);var u=n.mul(-e.learningRate).add(o);o.assign(u)})}}),this.incrementIterations()},o.prototype.dispose=function(){null!=this.accumulatedUpdates&&(Ve(this.accumulatedGrads.map(function(t){return t.variable})),Ve(this.accumulatedUpdates.map(function(t){return t.variable})))},o.prototype.getWeights=function(){return n(this,void 0,void 0,function(){var t;return r(this,function(e){switch(e.label){case 0:return t=this.accumulatedGrads.concat(this.accumulatedUpdates),[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(t.map(function(t){return{name:t.originalName,tensor:t.variable}}))]}})})},o.prototype.setWeights=function(t){return n(this,void 0,void 0,function(){var e;return r(this,function(n){switch(n.label){case 0:return[4,this.extractIterations(t)];case 1:return t=n.sent(),e=t.length/2,!1,this.accumulatedGrads=t.slice(0,e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),this.accumulatedUpdates=t.slice(e,2*e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),[2]}})})},o.prototype.getConfig=function(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}},o.fromConfig=function(t,e){return new t(e.learningRate,e.rho,e.epsilon)},o.className=\\\"Adadelta\\\",o}(yp);up(xp);var bp=function(t){function o(e,n){void 0===n&&(n=.1);var r=t.call(this)||this;return r.learningRate=e,r.initialAccumulatorValue=n,r.accumulatedGrads=[],r}return e(o,t),o.prototype.applyGradients=function(t){var e=this;(Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t)).forEach(function(n,r){var o=St.registeredVariables[n];if(null==e.accumulatedGrads[r]){e.accumulatedGrads[r]={originalName:n+\\\"/accumulator\\\",variable:Ue(function(){return Tn(o.shape,e.initialAccumulatorValue).variable(!1)})}}var a=Array.isArray(t)?t[r].tensor:t[n];if(null!=a){var i=e.accumulatedGrads[r].variable;Ue(function(){var t=i.add(a.square());i.assign(t);var n=a.div(t.add(St.backend.epsilon()).sqrt()).mul(-e.learningRate).add(o);o.assign(n)})}}),this.incrementIterations()},o.prototype.dispose=function(){null!=this.accumulatedGrads&&Ve(this.accumulatedGrads.map(function(t){return t.variable}))},o.prototype.getWeights=function(){return n(this,void 0,void 0,function(){return r(this,function(t){switch(t.label){case 0:return[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(this.accumulatedGrads.map(function(t){return{name:t.originalName,tensor:t.variable}}))]}})})},o.prototype.setWeights=function(t){return n(this,void 0,void 0,function(){return r(this,function(e){switch(e.label){case 0:return[4,this.extractIterations(t)];case 1:return t=e.sent(),!1,this.accumulatedGrads=t.map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),[2]}})})},o.prototype.getConfig=function(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}},o.fromConfig=function(t,e){return new t(e.learningRate,e.initialAccumulatorValue)},o.className=\\\"Adagrad\\\",o}(yp);up(bp);var wp=function(t){function o(e,n,r,o){void 0===o&&(o=null);var a=t.call(this)||this;return a.learningRate=e,a.beta1=n,a.beta2=r,a.epsilon=o,a.accumulatedFirstMoment=[],a.accumulatedSecondMoment=[],Ue(function(){a.accBeta1=wn(n).variable(),a.accBeta2=wn(r).variable()}),null==o&&(a.epsilon=St.backend.epsilon()),a}return e(o,t),o.prototype.applyGradients=function(t){var e=this,n=Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t);Ue(function(){var r=Gu(1,e.accBeta1),o=Gu(1,e.accBeta2);n.forEach(function(n,a){var i=St.registeredVariables[n];null==e.accumulatedFirstMoment[a]&&(e.accumulatedFirstMoment[a]={originalName:n+\\\"/m\\\",variable:Ue(function(){return Fn(i).variable(!1)})}),null==e.accumulatedSecondMoment[a]&&(e.accumulatedSecondMoment[a]={originalName:n+\\\"/v\\\",variable:Ue(function(){return Fn(i).variable(!1)})});var s=Array.isArray(t)?t[a].tensor:t[n];if(null!=s){var u=e.accumulatedFirstMoment[a].variable,l=e.accumulatedSecondMoment[a].variable,c=u.mul(e.beta1).add(s.mul(1-e.beta1)),h=l.mul(e.beta2).add(s.square().mul(1-e.beta2)),p=c.div(r),f=h.div(o);u.assign(c),l.assign(h);var d=p.div(f.sqrt().add(e.epsilon)).mul(-e.learningRate).add(i);i.assign(d)}}),e.accBeta1.assign(e.accBeta1.mul(e.beta1)),e.accBeta2.assign(e.accBeta2.mul(e.beta2))}),this.incrementIterations()},o.prototype.dispose=function(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Ve(this.accumulatedFirstMoment.map(function(t){return t.variable})),null!=this.accumulatedSecondMoment&&Ve(this.accumulatedSecondMoment.map(function(t){return t.variable}))},o.prototype.getWeights=function(){return n(this,void 0,void 0,function(){var t;return r(this,function(e){switch(e.label){case 0:return t=this.accumulatedFirstMoment.concat(this.accumulatedSecondMoment),[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(t.map(function(t){return{name:t.originalName,tensor:t.variable}}))]}})})},o.prototype.setWeights=function(t){return n(this,void 0,void 0,function(){var e,n=this;return r(this,function(r){switch(r.label){case 0:return[4,this.extractIterations(t)];case 1:return t=r.sent(),Ue(function(){n.accBeta1.assign(Wu(n.beta1,n.iterations_+1)),n.accBeta2.assign(Wu(n.beta2,n.iterations_+1))}),e=t.length/2,!1,this.accumulatedFirstMoment=t.slice(0,e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),this.accumulatedSecondMoment=t.slice(e,2*e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),[2]}})})},o.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}},o.fromConfig=function(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)},o.className=\\\"Adam\\\",o}(yp);up(wp);var Cp=function(t){function o(e,n,r,o,a){void 0===o&&(o=null),void 0===a&&(a=0);var i=t.call(this)||this;return i.learningRate=e,i.beta1=n,i.beta2=r,i.epsilon=o,i.decay=a,i.accumulatedFirstMoment=[],i.accumulatedWeightedInfNorm=[],Ue(function(){i.iteration=wn(0).variable(),i.accBeta1=wn(n).variable()}),null==o&&(i.epsilon=St.backend.epsilon()),i}return e(o,t),o.prototype.applyGradients=function(t){var e=this,n=Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t);Ue(function(){var r=Gu(1,e.accBeta1),o=Su(-e.learningRate,e.iteration.mul(e.decay).add(1));n.forEach(function(n,a){var i=St.registeredVariables[n];null==e.accumulatedFirstMoment[a]&&(e.accumulatedFirstMoment[a]={originalName:n+\\\"/m\\\",variable:Fn(i).variable(!1)}),null==e.accumulatedWeightedInfNorm[a]&&(e.accumulatedWeightedInfNorm[a]={originalName:n+\\\"/v\\\",variable:Fn(i).variable(!1)});var s=Array.isArray(t)?t[a].tensor:t[n];if(null!=s){var u=e.accumulatedFirstMoment[a].variable,l=e.accumulatedWeightedInfNorm[a].variable,c=u.mul(e.beta1).add(s.mul(1-e.beta1)),h=l.mul(e.beta2),p=s.abs(),f=h.maximum(p);u.assign(c),l.assign(f);var d=o.div(r).mul(c.div(f.add(e.epsilon))).add(i);i.assign(d)}}),e.iteration.assign(e.iteration.add(1)),e.accBeta1.assign(e.accBeta1.mul(e.beta1))}),this.incrementIterations()},o.prototype.dispose=function(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Ve(this.accumulatedFirstMoment.map(function(t){return t.variable})),null!=this.accumulatedWeightedInfNorm&&Ve(this.accumulatedWeightedInfNorm.map(function(t){return t.variable}))},o.prototype.getWeights=function(){return n(this,void 0,void 0,function(){return r(this,function(t){throw new Error(\\\"getWeights() is not implemented for Adamax yet.\\\")})})},o.prototype.setWeights=function(t){return n(this,void 0,void 0,function(){return r(this,function(t){throw new Error(\\\"setWeights() is not implemented for Adamax yet.\\\")})})},o.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}},o.fromConfig=function(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)},o.className=\\\"Adamax\\\",o}(yp);up(Cp);var Ep=function(t){function o(e){var n=t.call(this)||this;return n.learningRate=e,n.setLearningRate(e),n}return e(o,t),o.prototype.applyGradients=function(t){var e=this;(Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t)).forEach(function(n,r){var o=Array.isArray(t)?t[r].tensor:t[n];if(null!=o){var a=St.registeredVariables[n];Ue(function(){var t=e.c.mul(o).add(a);a.assign(t)})}}),this.incrementIterations()},o.prototype.setLearningRate=function(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=ze(wn(-t))},o.prototype.dispose=function(){this.c.dispose()},o.prototype.getWeights=function(){return n(this,void 0,void 0,function(){return r(this,function(t){switch(t.label){case 0:return[4,this.saveIterations()];case 1:return[2,[t.sent()]]}})})},o.prototype.setWeights=function(t){return n(this,void 0,void 0,function(){return r(this,function(e){switch(e.label){case 0:return[4,this.extractIterations(t)];case 1:if(0!==(t=e.sent()).length)throw new Error(\\\"SGD optimizer does not have settable weights.\\\");return[2]}})})},o.prototype.getConfig=function(){return{learningRate:this.learningRate}},o.fromConfig=function(t,e){return new t(e.learningRate)},o.className=\\\"SGD\\\",o}(yp);up(Ep);var Rp=function(t){function o(e,n,r){void 0===r&&(r=!1);var o=t.call(this,e)||this;return o.learningRate=e,o.momentum=n,o.useNesterov=r,o.accumulations=[],o.m=wn(o.momentum),o}return e(o,t),o.prototype.applyGradients=function(t){var e=this;(Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t)).forEach(function(n,r){var o=St.registeredVariables[n];if(null==e.accumulations[r]){e.accumulations[r]={originalName:n+\\\"/momentum\\\",variable:Ue(function(){return Fn(o).variable(!1)})}}var a=e.accumulations[r].variable,i=Array.isArray(t)?t[r].tensor:t[n];null!=i&&Ue(function(){var t,n=e.m.mul(a).add(i);t=e.useNesterov?e.c.mul(i.add(n.mul(e.m))).add(o):e.c.mul(n).add(o),a.assign(n),o.assign(t)})}),this.incrementIterations()},o.prototype.dispose=function(){this.m.dispose(),null!=this.accumulations&&Ve(this.accumulations.map(function(t){return t.variable}))},o.prototype.setMomentum=function(t){this.momentum=t},o.prototype.getWeights=function(){return n(this,void 0,void 0,function(){return r(this,function(t){switch(t.label){case 0:return[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(this.accumulations.map(function(t){return{name:t.originalName,tensor:t.variable}}))]}})})},o.prototype.setWeights=function(t){return n(this,void 0,void 0,function(){return r(this,function(e){switch(e.label){case 0:return[4,this.extractIterations(t)];case 1:return t=e.sent(),!1,this.accumulations=t.map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),[2]}})})},o.prototype.getConfig=function(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}},o.fromConfig=function(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)},o.className=\\\"Momentum\\\",o}(Ep);up(Rp);var Ip=function(t){function o(e,n,r,o,a){void 0===n&&(n=.9),void 0===r&&(r=0),void 0===o&&(o=null),void 0===a&&(a=!1);var i=t.call(this)||this;return i.learningRate=e,i.decay=n,i.momentum=r,i.epsilon=o,i.accumulatedMeanSquares=[],i.accumulatedMoments=[],i.accumulatedMeanGrads=[],i.centered=a,null==o&&(i.epsilon=St.backend.epsilon()),i}return e(o,t),o.prototype.applyGradients=function(t){var e=this;(Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t)).forEach(function(n,r){var o=St.registeredVariables[n];null==e.accumulatedMeanSquares[r]&&(e.accumulatedMeanSquares[r]={originalName:n+\\\"/rms\\\",variable:Ue(function(){return Fn(o).variable(!1)})}),null==e.accumulatedMoments[r]&&(e.accumulatedMoments[r]={originalName:n+\\\"/momentum\\\",variable:Ue(function(){return Fn(o).variable(!1)})}),null==e.accumulatedMeanGrads[r]&&e.centered&&(e.accumulatedMeanGrads[r]={originalName:n+\\\"/mg\\\",variable:Ue(function(){return Fn(o).variable(!1)})});var a=Array.isArray(t)?t[r].tensor:t[n];if(null!=a){var i=e.accumulatedMeanSquares[r].variable,s=e.accumulatedMoments[r].variable;Ue(function(){var t=i.mul(e.decay).add(a.square().mul(1-e.decay));if(e.centered){var n=e.accumulatedMeanGrads[r].variable,u=n.mul(e.decay).add(a.mul(1-e.decay)),l=s.mul(e.momentum).add(a.mul(e.learningRate).div(t.sub(u.square().add(e.epsilon)).sqrt()));i.assign(t),n.assign(u),s.assign(l);var c=o.sub(l);o.assign(c)}else{var h=i.mul(e.decay).add(a.square().mul(1-e.decay));l=s.mul(e.momentum).add(a.mul(e.learningRate).div(h.add(e.epsilon).sqrt()));i.assign(h),s.assign(l);c=o.sub(l);o.assign(c)}})}}),this.incrementIterations()},o.prototype.dispose=function(){null!=this.accumulatedMeanSquares&&Ve(this.accumulatedMeanSquares.map(function(t){return t.variable})),null!=this.accumulatedMeanGrads&&this.centered&&Ve(this.accumulatedMeanGrads.map(function(t){return t.variable})),null!=this.accumulatedMoments&&Ve(this.accumulatedMoments.map(function(t){return t.variable}))},o.prototype.getWeights=function(){return n(this,void 0,void 0,function(){var t;return r(this,function(e){switch(e.label){case 0:return t=this.accumulatedMeanSquares.concat(this.accumulatedMoments),this.centered&&t.push.apply(t,this.accumulatedMeanGrads),[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(t.map(function(t){return{name:t.originalName,tensor:t.variable}}))]}})})},o.prototype.setWeights=function(t){return n(this,void 0,void 0,function(){var e;return r(this,function(n){switch(n.label){case 0:return[4,this.extractIterations(t)];case 1:return t=n.sent(),e=this.centered?t.length/3:t.length/2,!1,this.accumulatedMeanSquares=t.slice(0,e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),this.accumulatedMoments=t.slice(e,2*e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}})),[2]}})})},o.prototype.getConfig=function(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}},o.fromConfig=function(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)},o.className=\\\"RMSProp\\\",o}(yp);up(Ip);var kp=function(){function t(){}return t.sgd=function(t){return new Ep(t)},t.momentum=function(t,e,n){return void 0===n&&(n=!1),new Rp(t,e,n)},t.rmsprop=function(t,e,n,r,o){return void 0===e&&(e=.9),void 0===n&&(n=0),void 0===r&&(r=null),void 0===o&&(o=!1),new Ip(t,e,n,r,o)},t.adam=function(t,e,n,r){return void 0===t&&(t=.001),void 0===e&&(e=.9),void 0===n&&(n=.999),void 0===r&&(r=null),new wp(t,e,n,r)},t.adadelta=function(t,e,n){return void 0===t&&(t=.001),void 0===e&&(e=.95),void 0===n&&(n=null),new xp(t,e,n)},t.adamax=function(t,e,n,r,o){return void 0===t&&(t=.002),void 0===e&&(e=.9),void 0===n&&(n=.999),void 0===r&&(r=null),void 0===o&&(o=0),new Cp(t,e,n,r,o)},t.adagrad=function(t,e){return void 0===e&&(e=.1),new bp(t,e)},t}(),Np={sgd:kp.sgd,momentum:kp.momentum,adadelta:kp.adadelta,adagrad:kp.adagrad,rmsprop:kp.rmsprop,adamax:kp.adamax,adam:kp.adam},Sp=\\\"undefined\\\"!=typeof requestAnimationFrame?requestAnimationFrame:\\\"undefined\\\"!=typeof setImmediate?setImmediate:function(t){return t()};function Ap(){return new Promise(function(t){return Sp(function(){return t()})})}ut=th;export{xp as AdadeltaOptimizer,bp as AdagradOptimizer,wp as AdamOptimizer,Cp as AdamaxOptimizer,Jr as DataStorage,i as ENV,o as Environment,Zr as KernelBackend,Rp as MomentumOptimizer,yp as Optimizer,Ip as RMSPropOptimizer,pt as Rank,Sc as Reduction,Ep as SGDOptimizer,ct as Tensor,it as TensorBuffer,ht as Variable,Es as abs,Rs as acos,Is as acosh,Ru as add,Iu as addN,ku as addStrict,zl as all,Gl as any,Hl as argMax,ql as argMin,ks as asin,Ns as asinh,Ss as atan,Nu as atan2,As as atanh,_l as avgPool,Ml as avgPool3d,Qe as backend,xo as backend_util,sc as basicLSTMCell,du as batchNorm,vu as batchNorm2d,mu as batchNorm3d,gu as batchNorm4d,fu as batchNormalization,cu as batchNormalization2d,hu as batchNormalization3d,pu as batchNormalization4d,er as batchToSpaceND,sl as booleanMaskAsync,ap as browser,Zn as buffer,nr as cast,Ts as ceil,Ds as clipByValue,rr as clone,mn as complex,Mn as concat,Bn as concat1d,Pn as concat2d,Ln as concat3d,Wn as concat4d,pl as conv1d,fl as conv2d,vl as conv2dDerFilter,ml as conv2dDerInput,xl as conv2dTranspose,dl as conv3d,bl as conv3dTranspose,_s as cos,Os as cosh,or as cumsum,jr as customGrad,Be as deprecationWarn,ar as depthToSpace,gl as depthwiseConv2d,bc as diag,Me as disableDeprecationWarnings,Ve as dispose,Pe as disposeVariables,Su as div,Au as divStrict,Cl as dot,wc as dropout,Zl as elu,Fe as enableDebugMode,Oe as enableProdMode,u as environment,qu as equal,$u as equalStrict,Fs as erf,Ms as exp,ir as expandDims,Bs as expm1,sr as eye,fc as fft,Tn as fill,je as findBackend,Xe as findBackendFactory,Ps as floor,Tu as floorDiv,Ic as frame,Zc as fused,al as gather,xc as gatherND,$e as getBackend,Gr as grad,Hr as grads,Ku as greater,ju as greaterEqual,Xu as greaterEqualStrict,Yu as greaterStrict,Rc as hammingWindow,Ec as hannWindow,dc as ifft,yn as imag,Yc as image,Ac as inTopKAsync,ep as io,mc as irfft,Xs as isFinite,js as isInf,Ks as isNaN,ze as keep,tc as leakyRelu,Qu as less,Ju as lessEqual,Zu as lessEqualStrict,tl as lessStrict,Gc as linalg,Dn as linspace,ac as localResponseNormalization,Ls as log,Ws as log1p,Us as logSigmoid,Qr as logSoftmax,$l as logSumExp,yu as logicalAnd,xu as logicalNot,bu as logicalOr,wu as logicalXor,Wc as losses,wl as matMul,rp as math,Kl as max,Dl as maxPool,Fl as maxPool3d,Du as maximum,_u as maximumStrict,jl as mean,Le as memory,Xl as min,Ou as minimum,Fu as minimumStrict,Mu as mod,Bu as modStrict,Yl as moments,lc as movingAverage,Pu as mul,Lu as mulStrict,uc as multiRNNCell,ur as multinomial,Vs as neg,Ap as nextFrame,ic as norm,el as notEqual,nl as notEqualStrict,lr as oneHot,Sn as ones,On as onesLike,vn as op,El as outerProduct,cr as pad,hr as pad1d,pr as pad2d,fr as pad3d,dr as pad4d,Ol as pool,Wu as pow,Uu as powStrict,ec as prelu,tr as print,Jl as prod,We as profile,vr as rand,gr as randomGamma,mr as randomNormal,yr as randomUniform,_n as range,qe as ready,gn as real,zs as reciprocal,Ye as registerBackend,nc as relu,Ke as removeBackend,xr as reshape,Rl as reverse,Il as reverse1d,kl as reverse2d,Nl as reverse3d,Sl as reverse4d,vc as rfft,Gs as round,Hs as rsqrt,wn as scalar,pc as scatterND,rc as selu,yl as separableConv2d,lp as serialization,He as setBackend,Je as setPlatform,kr as setdiff1dAsync,qs as sigmoid,$s as sign,Nc as signal,Ys as sin,Qs as sinh,Bl as slice,Pl as slice1d,Ll as slice2d,Wl as slice3d,Ul as slice4d,Yr as softmax,Js as softplus,br as spaceToBatchND,yc as sparseToDense,gc as spectral,Un as split,Zs as sqrt,tu as square,Vu as squaredDifference,zu as squaredDifferenceStrict,wr as squeeze,Cr as stack,eu as step,kc as stft,cc as stridedSlice,Gu as sub,Hu as subStrict,Ql as sum,nu as tan,ru as tanh,xn as tensor,Cn as tensor1d,En as tensor2d,Rn as tensor3d,In as tensor4d,kn as tensor5d,Nn as tensor6d,It as tensor_util,vp as test_util,Ue as tidy,Er as tile,Ge as time,hc as topk,Np as train,oc as transpose,Rr as truncatedNormal,il as unsortedSegmentSum,Ir as unstack,Y as util,qr as valueAndGrad,$r as valueAndGrads,gt as variable,Kr as variableGrads,mp as version_core,gp as webgl,Cu as where,Eu as whereAsync,An as zeros,Fn as zerosLike};\\n//# sourceMappingURL=tf-core.esm.js.map\\n\",\"var g;\\n\\n// This works in non-strict mode\\ng = (function() {\\n\\treturn this;\\n})();\\n\\ntry {\\n\\t// This works if eval is allowed (see CSP)\\n\\tg = g || new Function(\\\"return this\\\")();\\n} catch (e) {\\n\\t// This works if the window reference is available\\n\\tif (typeof window === \\\"object\\\") g = window;\\n}\\n\\n// g can still be undefined, but nothing to do about it...\\n// We return undefined, instead of nothing here, so it's\\n// easier to handle this case. if(!global) { ...}\\n\\nmodule.exports = g;\\n\",\"// shim for using process in browser\\nvar process = module.exports = {};\\n\\n// cached from whatever global is present so that test runners that stub it\\n// don't break things.  But we need to wrap it in a try catch in case it is\\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\\n// function because try/catches deoptimize in certain engines.\\n\\nvar cachedSetTimeout;\\nvar cachedClearTimeout;\\n\\nfunction defaultSetTimout() {\\n    throw new Error('setTimeout has not been defined');\\n}\\nfunction defaultClearTimeout () {\\n    throw new Error('clearTimeout has not been defined');\\n}\\n(function () {\\n    try {\\n        if (typeof setTimeout === 'function') {\\n            cachedSetTimeout = setTimeout;\\n        } else {\\n            cachedSetTimeout = defaultSetTimout;\\n        }\\n    } catch (e) {\\n        cachedSetTimeout = defaultSetTimout;\\n    }\\n    try {\\n        if (typeof clearTimeout === 'function') {\\n            cachedClearTimeout = clearTimeout;\\n        } else {\\n            cachedClearTimeout = defaultClearTimeout;\\n        }\\n    } catch (e) {\\n        cachedClearTimeout = defaultClearTimeout;\\n    }\\n} ())\\nfunction runTimeout(fun) {\\n    if (cachedSetTimeout === setTimeout) {\\n        //normal enviroments in sane situations\\n        return setTimeout(fun, 0);\\n    }\\n    // if setTimeout wasn't available but was latter defined\\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\\n        cachedSetTimeout = setTimeout;\\n        return setTimeout(fun, 0);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedSetTimeout(fun, 0);\\n    } catch(e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\\n            return cachedSetTimeout.call(null, fun, 0);\\n        } catch(e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\\n            return cachedSetTimeout.call(this, fun, 0);\\n        }\\n    }\\n\\n\\n}\\nfunction runClearTimeout(marker) {\\n    if (cachedClearTimeout === clearTimeout) {\\n        //normal enviroments in sane situations\\n        return clearTimeout(marker);\\n    }\\n    // if clearTimeout wasn't available but was latter defined\\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\\n        cachedClearTimeout = clearTimeout;\\n        return clearTimeout(marker);\\n    }\\n    try {\\n        // when when somebody has screwed with setTimeout but no I.E. maddness\\n        return cachedClearTimeout(marker);\\n    } catch (e){\\n        try {\\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\\n            return cachedClearTimeout.call(null, marker);\\n        } catch (e){\\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\\n            return cachedClearTimeout.call(this, marker);\\n        }\\n    }\\n\\n\\n\\n}\\nvar queue = [];\\nvar draining = false;\\nvar currentQueue;\\nvar queueIndex = -1;\\n\\nfunction cleanUpNextTick() {\\n    if (!draining || !currentQueue) {\\n        return;\\n    }\\n    draining = false;\\n    if (currentQueue.length) {\\n        queue = currentQueue.concat(queue);\\n    } else {\\n        queueIndex = -1;\\n    }\\n    if (queue.length) {\\n        drainQueue();\\n    }\\n}\\n\\nfunction drainQueue() {\\n    if (draining) {\\n        return;\\n    }\\n    var timeout = runTimeout(cleanUpNextTick);\\n    draining = true;\\n\\n    var len = queue.length;\\n    while(len) {\\n        currentQueue = queue;\\n        queue = [];\\n        while (++queueIndex < len) {\\n            if (currentQueue) {\\n                currentQueue[queueIndex].run();\\n            }\\n        }\\n        queueIndex = -1;\\n        len = queue.length;\\n    }\\n    currentQueue = null;\\n    draining = false;\\n    runClearTimeout(timeout);\\n}\\n\\nprocess.nextTick = function (fun) {\\n    var args = new Array(arguments.length - 1);\\n    if (arguments.length > 1) {\\n        for (var i = 1; i < arguments.length; i++) {\\n            args[i - 1] = arguments[i];\\n        }\\n    }\\n    queue.push(new Item(fun, args));\\n    if (queue.length === 1 && !draining) {\\n        runTimeout(drainQueue);\\n    }\\n};\\n\\n// v8 likes predictible objects\\nfunction Item(fun, array) {\\n    this.fun = fun;\\n    this.array = array;\\n}\\nItem.prototype.run = function () {\\n    this.fun.apply(null, this.array);\\n};\\nprocess.title = 'browser';\\nprocess.browser = true;\\nprocess.env = {};\\nprocess.argv = [];\\nprocess.version = ''; // empty string to avoid regexp issues\\nprocess.versions = {};\\n\\nfunction noop() {}\\n\\nprocess.on = noop;\\nprocess.addListener = noop;\\nprocess.once = noop;\\nprocess.off = noop;\\nprocess.removeListener = noop;\\nprocess.removeAllListeners = noop;\\nprocess.emit = noop;\\nprocess.prependListener = noop;\\nprocess.prependOnceListener = noop;\\n\\nprocess.listeners = function (name) { return [] }\\n\\nprocess.binding = function (name) {\\n    throw new Error('process.binding is not supported');\\n};\\n\\nprocess.cwd = function () { return '/' };\\nprocess.chdir = function (dir) {\\n    throw new Error('process.chdir is not supported');\\n};\\nprocess.umask = function() { return 0; };\\n\",\"/*!\\n * The buffer module from node.js, for the browser.\\n *\\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\\n * @license  MIT\\n */\\n/* eslint-disable no-proto */\\n\\n'use strict'\\n\\nvar base64 = require('base64-js')\\nvar ieee754 = require('ieee754')\\nvar isArray = require('isarray')\\n\\nexports.Buffer = Buffer\\nexports.SlowBuffer = SlowBuffer\\nexports.INSPECT_MAX_BYTES = 50\\n\\n/**\\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\\n *   === true    Use Uint8Array implementation (fastest)\\n *   === false   Use Object implementation (most compatible, even IE6)\\n *\\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\\n * Opera 11.6+, iOS 4.2+.\\n *\\n * Due to various browser bugs, sometimes the Object implementation will be used even\\n * when the browser supports typed arrays.\\n *\\n * Note:\\n *\\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\\n *\\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\\n *\\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\\n *     incorrect length in some situations.\\n\\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\\n * get the Object implementation, which is slower but behaves correctly.\\n */\\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\\n  ? global.TYPED_ARRAY_SUPPORT\\n  : typedArraySupport()\\n\\n/*\\n * Export kMaxLength after typed array support is determined.\\n */\\nexports.kMaxLength = kMaxLength()\\n\\nfunction typedArraySupport () {\\n  try {\\n    var arr = new Uint8Array(1)\\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\\n    return arr.foo() === 42 && // typed array instances can be augmented\\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\\n  } catch (e) {\\n    return false\\n  }\\n}\\n\\nfunction kMaxLength () {\\n  return Buffer.TYPED_ARRAY_SUPPORT\\n    ? 0x7fffffff\\n    : 0x3fffffff\\n}\\n\\nfunction createBuffer (that, length) {\\n  if (kMaxLength() < length) {\\n    throw new RangeError('Invalid typed array length')\\n  }\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    // Return an augmented `Uint8Array` instance, for best performance\\n    that = new Uint8Array(length)\\n    that.__proto__ = Buffer.prototype\\n  } else {\\n    // Fallback: Return an object instance of the Buffer class\\n    if (that === null) {\\n      that = new Buffer(length)\\n    }\\n    that.length = length\\n  }\\n\\n  return that\\n}\\n\\n/**\\n * The Buffer constructor returns instances of `Uint8Array` that have their\\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\\n * returns a single octet.\\n *\\n * The `Uint8Array` prototype remains unmodified.\\n */\\n\\nfunction Buffer (arg, encodingOrOffset, length) {\\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\\n    return new Buffer(arg, encodingOrOffset, length)\\n  }\\n\\n  // Common case.\\n  if (typeof arg === 'number') {\\n    if (typeof encodingOrOffset === 'string') {\\n      throw new Error(\\n        'If encoding is specified then the first argument must be a string'\\n      )\\n    }\\n    return allocUnsafe(this, arg)\\n  }\\n  return from(this, arg, encodingOrOffset, length)\\n}\\n\\nBuffer.poolSize = 8192 // not used by this implementation\\n\\n// TODO: Legacy, not needed anymore. Remove in next major version.\\nBuffer._augment = function (arr) {\\n  arr.__proto__ = Buffer.prototype\\n  return arr\\n}\\n\\nfunction from (that, value, encodingOrOffset, length) {\\n  if (typeof value === 'number') {\\n    throw new TypeError('\\\"value\\\" argument must not be a number')\\n  }\\n\\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\\n  }\\n\\n  if (typeof value === 'string') {\\n    return fromString(that, value, encodingOrOffset)\\n  }\\n\\n  return fromObject(that, value)\\n}\\n\\n/**\\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\\n * if value is a number.\\n * Buffer.from(str[, encoding])\\n * Buffer.from(array)\\n * Buffer.from(buffer)\\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\\n **/\\nBuffer.from = function (value, encodingOrOffset, length) {\\n  return from(null, value, encodingOrOffset, length)\\n}\\n\\nif (Buffer.TYPED_ARRAY_SUPPORT) {\\n  Buffer.prototype.__proto__ = Uint8Array.prototype\\n  Buffer.__proto__ = Uint8Array\\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\\n      Buffer[Symbol.species] === Buffer) {\\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\\n    Object.defineProperty(Buffer, Symbol.species, {\\n      value: null,\\n      configurable: true\\n    })\\n  }\\n}\\n\\nfunction assertSize (size) {\\n  if (typeof size !== 'number') {\\n    throw new TypeError('\\\"size\\\" argument must be a number')\\n  } else if (size < 0) {\\n    throw new RangeError('\\\"size\\\" argument must not be negative')\\n  }\\n}\\n\\nfunction alloc (that, size, fill, encoding) {\\n  assertSize(size)\\n  if (size <= 0) {\\n    return createBuffer(that, size)\\n  }\\n  if (fill !== undefined) {\\n    // Only pay attention to encoding if it's a string. This\\n    // prevents accidentally sending in a number that would\\n    // be interpretted as a start offset.\\n    return typeof encoding === 'string'\\n      ? createBuffer(that, size).fill(fill, encoding)\\n      : createBuffer(that, size).fill(fill)\\n  }\\n  return createBuffer(that, size)\\n}\\n\\n/**\\n * Creates a new filled Buffer instance.\\n * alloc(size[, fill[, encoding]])\\n **/\\nBuffer.alloc = function (size, fill, encoding) {\\n  return alloc(null, size, fill, encoding)\\n}\\n\\nfunction allocUnsafe (that, size) {\\n  assertSize(size)\\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\\n    for (var i = 0; i < size; ++i) {\\n      that[i] = 0\\n    }\\n  }\\n  return that\\n}\\n\\n/**\\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\\n * */\\nBuffer.allocUnsafe = function (size) {\\n  return allocUnsafe(null, size)\\n}\\n/**\\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\\n */\\nBuffer.allocUnsafeSlow = function (size) {\\n  return allocUnsafe(null, size)\\n}\\n\\nfunction fromString (that, string, encoding) {\\n  if (typeof encoding !== 'string' || encoding === '') {\\n    encoding = 'utf8'\\n  }\\n\\n  if (!Buffer.isEncoding(encoding)) {\\n    throw new TypeError('\\\"encoding\\\" must be a valid string encoding')\\n  }\\n\\n  var length = byteLength(string, encoding) | 0\\n  that = createBuffer(that, length)\\n\\n  var actual = that.write(string, encoding)\\n\\n  if (actual !== length) {\\n    // Writing a hex string, for example, that contains invalid characters will\\n    // cause everything after the first invalid character to be ignored. (e.g.\\n    // 'abxxcd' will be treated as 'ab')\\n    that = that.slice(0, actual)\\n  }\\n\\n  return that\\n}\\n\\nfunction fromArrayLike (that, array) {\\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\\n  that = createBuffer(that, length)\\n  for (var i = 0; i < length; i += 1) {\\n    that[i] = array[i] & 255\\n  }\\n  return that\\n}\\n\\nfunction fromArrayBuffer (that, array, byteOffset, length) {\\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\\n\\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\\n    throw new RangeError('\\\\'offset\\\\' is out of bounds')\\n  }\\n\\n  if (array.byteLength < byteOffset + (length || 0)) {\\n    throw new RangeError('\\\\'length\\\\' is out of bounds')\\n  }\\n\\n  if (byteOffset === undefined && length === undefined) {\\n    array = new Uint8Array(array)\\n  } else if (length === undefined) {\\n    array = new Uint8Array(array, byteOffset)\\n  } else {\\n    array = new Uint8Array(array, byteOffset, length)\\n  }\\n\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    // Return an augmented `Uint8Array` instance, for best performance\\n    that = array\\n    that.__proto__ = Buffer.prototype\\n  } else {\\n    // Fallback: Return an object instance of the Buffer class\\n    that = fromArrayLike(that, array)\\n  }\\n  return that\\n}\\n\\nfunction fromObject (that, obj) {\\n  if (Buffer.isBuffer(obj)) {\\n    var len = checked(obj.length) | 0\\n    that = createBuffer(that, len)\\n\\n    if (that.length === 0) {\\n      return that\\n    }\\n\\n    obj.copy(that, 0, 0, len)\\n    return that\\n  }\\n\\n  if (obj) {\\n    if ((typeof ArrayBuffer !== 'undefined' &&\\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\\n        return createBuffer(that, 0)\\n      }\\n      return fromArrayLike(that, obj)\\n    }\\n\\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\\n      return fromArrayLike(that, obj.data)\\n    }\\n  }\\n\\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\\n}\\n\\nfunction checked (length) {\\n  // Note: cannot use `length < kMaxLength()` here because that fails when\\n  // length is NaN (which is otherwise coerced to zero.)\\n  if (length >= kMaxLength()) {\\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\\n  }\\n  return length | 0\\n}\\n\\nfunction SlowBuffer (length) {\\n  if (+length != length) { // eslint-disable-line eqeqeq\\n    length = 0\\n  }\\n  return Buffer.alloc(+length)\\n}\\n\\nBuffer.isBuffer = function isBuffer (b) {\\n  return !!(b != null && b._isBuffer)\\n}\\n\\nBuffer.compare = function compare (a, b) {\\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\\n    throw new TypeError('Arguments must be Buffers')\\n  }\\n\\n  if (a === b) return 0\\n\\n  var x = a.length\\n  var y = b.length\\n\\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\\n    if (a[i] !== b[i]) {\\n      x = a[i]\\n      y = b[i]\\n      break\\n    }\\n  }\\n\\n  if (x < y) return -1\\n  if (y < x) return 1\\n  return 0\\n}\\n\\nBuffer.isEncoding = function isEncoding (encoding) {\\n  switch (String(encoding).toLowerCase()) {\\n    case 'hex':\\n    case 'utf8':\\n    case 'utf-8':\\n    case 'ascii':\\n    case 'latin1':\\n    case 'binary':\\n    case 'base64':\\n    case 'ucs2':\\n    case 'ucs-2':\\n    case 'utf16le':\\n    case 'utf-16le':\\n      return true\\n    default:\\n      return false\\n  }\\n}\\n\\nBuffer.concat = function concat (list, length) {\\n  if (!isArray(list)) {\\n    throw new TypeError('\\\"list\\\" argument must be an Array of Buffers')\\n  }\\n\\n  if (list.length === 0) {\\n    return Buffer.alloc(0)\\n  }\\n\\n  var i\\n  if (length === undefined) {\\n    length = 0\\n    for (i = 0; i < list.length; ++i) {\\n      length += list[i].length\\n    }\\n  }\\n\\n  var buffer = Buffer.allocUnsafe(length)\\n  var pos = 0\\n  for (i = 0; i < list.length; ++i) {\\n    var buf = list[i]\\n    if (!Buffer.isBuffer(buf)) {\\n      throw new TypeError('\\\"list\\\" argument must be an Array of Buffers')\\n    }\\n    buf.copy(buffer, pos)\\n    pos += buf.length\\n  }\\n  return buffer\\n}\\n\\nfunction byteLength (string, encoding) {\\n  if (Buffer.isBuffer(string)) {\\n    return string.length\\n  }\\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\\n    return string.byteLength\\n  }\\n  if (typeof string !== 'string') {\\n    string = '' + string\\n  }\\n\\n  var len = string.length\\n  if (len === 0) return 0\\n\\n  // Use a for loop to avoid recursion\\n  var loweredCase = false\\n  for (;;) {\\n    switch (encoding) {\\n      case 'ascii':\\n      case 'latin1':\\n      case 'binary':\\n        return len\\n      case 'utf8':\\n      case 'utf-8':\\n      case undefined:\\n        return utf8ToBytes(string).length\\n      case 'ucs2':\\n      case 'ucs-2':\\n      case 'utf16le':\\n      case 'utf-16le':\\n        return len * 2\\n      case 'hex':\\n        return len >>> 1\\n      case 'base64':\\n        return base64ToBytes(string).length\\n      default:\\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\\n        encoding = ('' + encoding).toLowerCase()\\n        loweredCase = true\\n    }\\n  }\\n}\\nBuffer.byteLength = byteLength\\n\\nfunction slowToString (encoding, start, end) {\\n  var loweredCase = false\\n\\n  // No need to verify that \\\"this.length <= MAX_UINT32\\\" since it's a read-only\\n  // property of a typed array.\\n\\n  // This behaves neither like String nor Uint8Array in that we set start/end\\n  // to their upper/lower bounds if the value passed is out of range.\\n  // undefined is handled specially as per ECMA-262 6th Edition,\\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\\n  if (start === undefined || start < 0) {\\n    start = 0\\n  }\\n  // Return early if start > this.length. Done here to prevent potential uint32\\n  // coercion fail below.\\n  if (start > this.length) {\\n    return ''\\n  }\\n\\n  if (end === undefined || end > this.length) {\\n    end = this.length\\n  }\\n\\n  if (end <= 0) {\\n    return ''\\n  }\\n\\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\\n  end >>>= 0\\n  start >>>= 0\\n\\n  if (end <= start) {\\n    return ''\\n  }\\n\\n  if (!encoding) encoding = 'utf8'\\n\\n  while (true) {\\n    switch (encoding) {\\n      case 'hex':\\n        return hexSlice(this, start, end)\\n\\n      case 'utf8':\\n      case 'utf-8':\\n        return utf8Slice(this, start, end)\\n\\n      case 'ascii':\\n        return asciiSlice(this, start, end)\\n\\n      case 'latin1':\\n      case 'binary':\\n        return latin1Slice(this, start, end)\\n\\n      case 'base64':\\n        return base64Slice(this, start, end)\\n\\n      case 'ucs2':\\n      case 'ucs-2':\\n      case 'utf16le':\\n      case 'utf-16le':\\n        return utf16leSlice(this, start, end)\\n\\n      default:\\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\\n        encoding = (encoding + '').toLowerCase()\\n        loweredCase = true\\n    }\\n  }\\n}\\n\\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\\n// Buffer instances.\\nBuffer.prototype._isBuffer = true\\n\\nfunction swap (b, n, m) {\\n  var i = b[n]\\n  b[n] = b[m]\\n  b[m] = i\\n}\\n\\nBuffer.prototype.swap16 = function swap16 () {\\n  var len = this.length\\n  if (len % 2 !== 0) {\\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\\n  }\\n  for (var i = 0; i < len; i += 2) {\\n    swap(this, i, i + 1)\\n  }\\n  return this\\n}\\n\\nBuffer.prototype.swap32 = function swap32 () {\\n  var len = this.length\\n  if (len % 4 !== 0) {\\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\\n  }\\n  for (var i = 0; i < len; i += 4) {\\n    swap(this, i, i + 3)\\n    swap(this, i + 1, i + 2)\\n  }\\n  return this\\n}\\n\\nBuffer.prototype.swap64 = function swap64 () {\\n  var len = this.length\\n  if (len % 8 !== 0) {\\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\\n  }\\n  for (var i = 0; i < len; i += 8) {\\n    swap(this, i, i + 7)\\n    swap(this, i + 1, i + 6)\\n    swap(this, i + 2, i + 5)\\n    swap(this, i + 3, i + 4)\\n  }\\n  return this\\n}\\n\\nBuffer.prototype.toString = function toString () {\\n  var length = this.length | 0\\n  if (length === 0) return ''\\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\\n  return slowToString.apply(this, arguments)\\n}\\n\\nBuffer.prototype.equals = function equals (b) {\\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\\n  if (this === b) return true\\n  return Buffer.compare(this, b) === 0\\n}\\n\\nBuffer.prototype.inspect = function inspect () {\\n  var str = ''\\n  var max = exports.INSPECT_MAX_BYTES\\n  if (this.length > 0) {\\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\\n    if (this.length > max) str += ' ... '\\n  }\\n  return '<Buffer ' + str + '>'\\n}\\n\\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\\n  if (!Buffer.isBuffer(target)) {\\n    throw new TypeError('Argument must be a Buffer')\\n  }\\n\\n  if (start === undefined) {\\n    start = 0\\n  }\\n  if (end === undefined) {\\n    end = target ? target.length : 0\\n  }\\n  if (thisStart === undefined) {\\n    thisStart = 0\\n  }\\n  if (thisEnd === undefined) {\\n    thisEnd = this.length\\n  }\\n\\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\\n    throw new RangeError('out of range index')\\n  }\\n\\n  if (thisStart >= thisEnd && start >= end) {\\n    return 0\\n  }\\n  if (thisStart >= thisEnd) {\\n    return -1\\n  }\\n  if (start >= end) {\\n    return 1\\n  }\\n\\n  start >>>= 0\\n  end >>>= 0\\n  thisStart >>>= 0\\n  thisEnd >>>= 0\\n\\n  if (this === target) return 0\\n\\n  var x = thisEnd - thisStart\\n  var y = end - start\\n  var len = Math.min(x, y)\\n\\n  var thisCopy = this.slice(thisStart, thisEnd)\\n  var targetCopy = target.slice(start, end)\\n\\n  for (var i = 0; i < len; ++i) {\\n    if (thisCopy[i] !== targetCopy[i]) {\\n      x = thisCopy[i]\\n      y = targetCopy[i]\\n      break\\n    }\\n  }\\n\\n  if (x < y) return -1\\n  if (y < x) return 1\\n  return 0\\n}\\n\\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\\n//\\n// Arguments:\\n// - buffer - a Buffer to search\\n// - val - a string, Buffer, or number\\n// - byteOffset - an index into `buffer`; will be clamped to an int32\\n// - encoding - an optional encoding, relevant is val is a string\\n// - dir - true for indexOf, false for lastIndexOf\\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\\n  // Empty buffer means no match\\n  if (buffer.length === 0) return -1\\n\\n  // Normalize byteOffset\\n  if (typeof byteOffset === 'string') {\\n    encoding = byteOffset\\n    byteOffset = 0\\n  } else if (byteOffset > 0x7fffffff) {\\n    byteOffset = 0x7fffffff\\n  } else if (byteOffset < -0x80000000) {\\n    byteOffset = -0x80000000\\n  }\\n  byteOffset = +byteOffset  // Coerce to Number.\\n  if (isNaN(byteOffset)) {\\n    // byteOffset: it it's undefined, null, NaN, \\\"foo\\\", etc, search whole buffer\\n    byteOffset = dir ? 0 : (buffer.length - 1)\\n  }\\n\\n  // Normalize byteOffset: negative offsets start from the end of the buffer\\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\\n  if (byteOffset >= buffer.length) {\\n    if (dir) return -1\\n    else byteOffset = buffer.length - 1\\n  } else if (byteOffset < 0) {\\n    if (dir) byteOffset = 0\\n    else return -1\\n  }\\n\\n  // Normalize val\\n  if (typeof val === 'string') {\\n    val = Buffer.from(val, encoding)\\n  }\\n\\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\\n  if (Buffer.isBuffer(val)) {\\n    // Special case: looking for empty string/buffer always fails\\n    if (val.length === 0) {\\n      return -1\\n    }\\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\\n  } else if (typeof val === 'number') {\\n    val = val & 0xFF // Search for a byte value [0-255]\\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\\n        typeof Uint8Array.prototype.indexOf === 'function') {\\n      if (dir) {\\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\\n      } else {\\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\\n      }\\n    }\\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\\n  }\\n\\n  throw new TypeError('val must be string, number or Buffer')\\n}\\n\\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\\n  var indexSize = 1\\n  var arrLength = arr.length\\n  var valLength = val.length\\n\\n  if (encoding !== undefined) {\\n    encoding = String(encoding).toLowerCase()\\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\\n        encoding === 'utf16le' || encoding === 'utf-16le') {\\n      if (arr.length < 2 || val.length < 2) {\\n        return -1\\n      }\\n      indexSize = 2\\n      arrLength /= 2\\n      valLength /= 2\\n      byteOffset /= 2\\n    }\\n  }\\n\\n  function read (buf, i) {\\n    if (indexSize === 1) {\\n      return buf[i]\\n    } else {\\n      return buf.readUInt16BE(i * indexSize)\\n    }\\n  }\\n\\n  var i\\n  if (dir) {\\n    var foundIndex = -1\\n    for (i = byteOffset; i < arrLength; i++) {\\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\\n        if (foundIndex === -1) foundIndex = i\\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\\n      } else {\\n        if (foundIndex !== -1) i -= i - foundIndex\\n        foundIndex = -1\\n      }\\n    }\\n  } else {\\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\\n    for (i = byteOffset; i >= 0; i--) {\\n      var found = true\\n      for (var j = 0; j < valLength; j++) {\\n        if (read(arr, i + j) !== read(val, j)) {\\n          found = false\\n          break\\n        }\\n      }\\n      if (found) return i\\n    }\\n  }\\n\\n  return -1\\n}\\n\\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\\n  return this.indexOf(val, byteOffset, encoding) !== -1\\n}\\n\\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\\n}\\n\\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\\n}\\n\\nfunction hexWrite (buf, string, offset, length) {\\n  offset = Number(offset) || 0\\n  var remaining = buf.length - offset\\n  if (!length) {\\n    length = remaining\\n  } else {\\n    length = Number(length)\\n    if (length > remaining) {\\n      length = remaining\\n    }\\n  }\\n\\n  // must be an even number of digits\\n  var strLen = string.length\\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\\n\\n  if (length > strLen / 2) {\\n    length = strLen / 2\\n  }\\n  for (var i = 0; i < length; ++i) {\\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\\n    if (isNaN(parsed)) return i\\n    buf[offset + i] = parsed\\n  }\\n  return i\\n}\\n\\nfunction utf8Write (buf, string, offset, length) {\\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\\n}\\n\\nfunction asciiWrite (buf, string, offset, length) {\\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\\n}\\n\\nfunction latin1Write (buf, string, offset, length) {\\n  return asciiWrite(buf, string, offset, length)\\n}\\n\\nfunction base64Write (buf, string, offset, length) {\\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\\n}\\n\\nfunction ucs2Write (buf, string, offset, length) {\\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\\n}\\n\\nBuffer.prototype.write = function write (string, offset, length, encoding) {\\n  // Buffer#write(string)\\n  if (offset === undefined) {\\n    encoding = 'utf8'\\n    length = this.length\\n    offset = 0\\n  // Buffer#write(string, encoding)\\n  } else if (length === undefined && typeof offset === 'string') {\\n    encoding = offset\\n    length = this.length\\n    offset = 0\\n  // Buffer#write(string, offset[, length][, encoding])\\n  } else if (isFinite(offset)) {\\n    offset = offset | 0\\n    if (isFinite(length)) {\\n      length = length | 0\\n      if (encoding === undefined) encoding = 'utf8'\\n    } else {\\n      encoding = length\\n      length = undefined\\n    }\\n  // legacy write(string, encoding, offset, length) - remove in v0.13\\n  } else {\\n    throw new Error(\\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\\n    )\\n  }\\n\\n  var remaining = this.length - offset\\n  if (length === undefined || length > remaining) length = remaining\\n\\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\\n    throw new RangeError('Attempt to write outside buffer bounds')\\n  }\\n\\n  if (!encoding) encoding = 'utf8'\\n\\n  var loweredCase = false\\n  for (;;) {\\n    switch (encoding) {\\n      case 'hex':\\n        return hexWrite(this, string, offset, length)\\n\\n      case 'utf8':\\n      case 'utf-8':\\n        return utf8Write(this, string, offset, length)\\n\\n      case 'ascii':\\n        return asciiWrite(this, string, offset, length)\\n\\n      case 'latin1':\\n      case 'binary':\\n        return latin1Write(this, string, offset, length)\\n\\n      case 'base64':\\n        // Warning: maxLength not taken into account in base64Write\\n        return base64Write(this, string, offset, length)\\n\\n      case 'ucs2':\\n      case 'ucs-2':\\n      case 'utf16le':\\n      case 'utf-16le':\\n        return ucs2Write(this, string, offset, length)\\n\\n      default:\\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\\n        encoding = ('' + encoding).toLowerCase()\\n        loweredCase = true\\n    }\\n  }\\n}\\n\\nBuffer.prototype.toJSON = function toJSON () {\\n  return {\\n    type: 'Buffer',\\n    data: Array.prototype.slice.call(this._arr || this, 0)\\n  }\\n}\\n\\nfunction base64Slice (buf, start, end) {\\n  if (start === 0 && end === buf.length) {\\n    return base64.fromByteArray(buf)\\n  } else {\\n    return base64.fromByteArray(buf.slice(start, end))\\n  }\\n}\\n\\nfunction utf8Slice (buf, start, end) {\\n  end = Math.min(buf.length, end)\\n  var res = []\\n\\n  var i = start\\n  while (i < end) {\\n    var firstByte = buf[i]\\n    var codePoint = null\\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\\n      : (firstByte > 0xDF) ? 3\\n      : (firstByte > 0xBF) ? 2\\n      : 1\\n\\n    if (i + bytesPerSequence <= end) {\\n      var secondByte, thirdByte, fourthByte, tempCodePoint\\n\\n      switch (bytesPerSequence) {\\n        case 1:\\n          if (firstByte < 0x80) {\\n            codePoint = firstByte\\n          }\\n          break\\n        case 2:\\n          secondByte = buf[i + 1]\\n          if ((secondByte & 0xC0) === 0x80) {\\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\\n            if (tempCodePoint > 0x7F) {\\n              codePoint = tempCodePoint\\n            }\\n          }\\n          break\\n        case 3:\\n          secondByte = buf[i + 1]\\n          thirdByte = buf[i + 2]\\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\\n              codePoint = tempCodePoint\\n            }\\n          }\\n          break\\n        case 4:\\n          secondByte = buf[i + 1]\\n          thirdByte = buf[i + 2]\\n          fourthByte = buf[i + 3]\\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\\n              codePoint = tempCodePoint\\n            }\\n          }\\n      }\\n    }\\n\\n    if (codePoint === null) {\\n      // we did not generate a valid codePoint so insert a\\n      // replacement char (U+FFFD) and advance only 1 byte\\n      codePoint = 0xFFFD\\n      bytesPerSequence = 1\\n    } else if (codePoint > 0xFFFF) {\\n      // encode to utf16 (surrogate pair dance)\\n      codePoint -= 0x10000\\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\\n      codePoint = 0xDC00 | codePoint & 0x3FF\\n    }\\n\\n    res.push(codePoint)\\n    i += bytesPerSequence\\n  }\\n\\n  return decodeCodePointsArray(res)\\n}\\n\\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\\n// the lowest limit is Chrome, with 0x10000 args.\\n// We go 1 magnitude less, for safety\\nvar MAX_ARGUMENTS_LENGTH = 0x1000\\n\\nfunction decodeCodePointsArray (codePoints) {\\n  var len = codePoints.length\\n  if (len <= MAX_ARGUMENTS_LENGTH) {\\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\\n  }\\n\\n  // Decode in chunks to avoid \\\"call stack size exceeded\\\".\\n  var res = ''\\n  var i = 0\\n  while (i < len) {\\n    res += String.fromCharCode.apply(\\n      String,\\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\\n    )\\n  }\\n  return res\\n}\\n\\nfunction asciiSlice (buf, start, end) {\\n  var ret = ''\\n  end = Math.min(buf.length, end)\\n\\n  for (var i = start; i < end; ++i) {\\n    ret += String.fromCharCode(buf[i] & 0x7F)\\n  }\\n  return ret\\n}\\n\\nfunction latin1Slice (buf, start, end) {\\n  var ret = ''\\n  end = Math.min(buf.length, end)\\n\\n  for (var i = start; i < end; ++i) {\\n    ret += String.fromCharCode(buf[i])\\n  }\\n  return ret\\n}\\n\\nfunction hexSlice (buf, start, end) {\\n  var len = buf.length\\n\\n  if (!start || start < 0) start = 0\\n  if (!end || end < 0 || end > len) end = len\\n\\n  var out = ''\\n  for (var i = start; i < end; ++i) {\\n    out += toHex(buf[i])\\n  }\\n  return out\\n}\\n\\nfunction utf16leSlice (buf, start, end) {\\n  var bytes = buf.slice(start, end)\\n  var res = ''\\n  for (var i = 0; i < bytes.length; i += 2) {\\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\\n  }\\n  return res\\n}\\n\\nBuffer.prototype.slice = function slice (start, end) {\\n  var len = this.length\\n  start = ~~start\\n  end = end === undefined ? len : ~~end\\n\\n  if (start < 0) {\\n    start += len\\n    if (start < 0) start = 0\\n  } else if (start > len) {\\n    start = len\\n  }\\n\\n  if (end < 0) {\\n    end += len\\n    if (end < 0) end = 0\\n  } else if (end > len) {\\n    end = len\\n  }\\n\\n  if (end < start) end = start\\n\\n  var newBuf\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    newBuf = this.subarray(start, end)\\n    newBuf.__proto__ = Buffer.prototype\\n  } else {\\n    var sliceLen = end - start\\n    newBuf = new Buffer(sliceLen, undefined)\\n    for (var i = 0; i < sliceLen; ++i) {\\n      newBuf[i] = this[i + start]\\n    }\\n  }\\n\\n  return newBuf\\n}\\n\\n/*\\n * Need to make sure that buffer isn't trying to write out of bounds.\\n */\\nfunction checkOffset (offset, ext, length) {\\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\\n}\\n\\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\\n  offset = offset | 0\\n  byteLength = byteLength | 0\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\n\\n  var val = this[offset]\\n  var mul = 1\\n  var i = 0\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    val += this[offset + i] * mul\\n  }\\n\\n  return val\\n}\\n\\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\\n  offset = offset | 0\\n  byteLength = byteLength | 0\\n  if (!noAssert) {\\n    checkOffset(offset, byteLength, this.length)\\n  }\\n\\n  var val = this[offset + --byteLength]\\n  var mul = 1\\n  while (byteLength > 0 && (mul *= 0x100)) {\\n    val += this[offset + --byteLength] * mul\\n  }\\n\\n  return val\\n}\\n\\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 1, this.length)\\n  return this[offset]\\n}\\n\\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\n  return this[offset] | (this[offset + 1] << 8)\\n}\\n\\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\n  return (this[offset] << 8) | this[offset + 1]\\n}\\n\\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n\\n  return ((this[offset]) |\\n      (this[offset + 1] << 8) |\\n      (this[offset + 2] << 16)) +\\n      (this[offset + 3] * 0x1000000)\\n}\\n\\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n\\n  return (this[offset] * 0x1000000) +\\n    ((this[offset + 1] << 16) |\\n    (this[offset + 2] << 8) |\\n    this[offset + 3])\\n}\\n\\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\\n  offset = offset | 0\\n  byteLength = byteLength | 0\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\n\\n  var val = this[offset]\\n  var mul = 1\\n  var i = 0\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    val += this[offset + i] * mul\\n  }\\n  mul *= 0x80\\n\\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\\n\\n  return val\\n}\\n\\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\\n  offset = offset | 0\\n  byteLength = byteLength | 0\\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\\n\\n  var i = byteLength\\n  var mul = 1\\n  var val = this[offset + --i]\\n  while (i > 0 && (mul *= 0x100)) {\\n    val += this[offset + --i] * mul\\n  }\\n  mul *= 0x80\\n\\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\\n\\n  return val\\n}\\n\\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 1, this.length)\\n  if (!(this[offset] & 0x80)) return (this[offset])\\n  return ((0xff - this[offset] + 1) * -1)\\n}\\n\\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\n  var val = this[offset] | (this[offset + 1] << 8)\\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\\n}\\n\\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 2, this.length)\\n  var val = this[offset + 1] | (this[offset] << 8)\\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\\n}\\n\\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n\\n  return (this[offset]) |\\n    (this[offset + 1] << 8) |\\n    (this[offset + 2] << 16) |\\n    (this[offset + 3] << 24)\\n}\\n\\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n\\n  return (this[offset] << 24) |\\n    (this[offset + 1] << 16) |\\n    (this[offset + 2] << 8) |\\n    (this[offset + 3])\\n}\\n\\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n  return ieee754.read(this, offset, true, 23, 4)\\n}\\n\\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 4, this.length)\\n  return ieee754.read(this, offset, false, 23, 4)\\n}\\n\\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 8, this.length)\\n  return ieee754.read(this, offset, true, 52, 8)\\n}\\n\\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\\n  if (!noAssert) checkOffset(offset, 8, this.length)\\n  return ieee754.read(this, offset, false, 52, 8)\\n}\\n\\nfunction checkInt (buf, value, offset, ext, max, min) {\\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\\\"buffer\\\" argument must be a Buffer instance')\\n  if (value > max || value < min) throw new RangeError('\\\"value\\\" argument is out of bounds')\\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\\n}\\n\\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  byteLength = byteLength | 0\\n  if (!noAssert) {\\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\\n  }\\n\\n  var mul = 1\\n  var i = 0\\n  this[offset] = value & 0xFF\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    this[offset + i] = (value / mul) & 0xFF\\n  }\\n\\n  return offset + byteLength\\n}\\n\\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  byteLength = byteLength | 0\\n  if (!noAssert) {\\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\\n  }\\n\\n  var i = byteLength - 1\\n  var mul = 1\\n  this[offset + i] = value & 0xFF\\n  while (--i >= 0 && (mul *= 0x100)) {\\n    this[offset + i] = (value / mul) & 0xFF\\n  }\\n\\n  return offset + byteLength\\n}\\n\\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\\n  this[offset] = (value & 0xff)\\n  return offset + 1\\n}\\n\\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\\n  if (value < 0) value = 0xffff + value + 1\\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\\n      (littleEndian ? i : 1 - i) * 8\\n  }\\n}\\n\\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = (value & 0xff)\\n    this[offset + 1] = (value >>> 8)\\n  } else {\\n    objectWriteUInt16(this, value, offset, true)\\n  }\\n  return offset + 2\\n}\\n\\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = (value >>> 8)\\n    this[offset + 1] = (value & 0xff)\\n  } else {\\n    objectWriteUInt16(this, value, offset, false)\\n  }\\n  return offset + 2\\n}\\n\\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\\n  if (value < 0) value = 0xffffffff + value + 1\\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\\n  }\\n}\\n\\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset + 3] = (value >>> 24)\\n    this[offset + 2] = (value >>> 16)\\n    this[offset + 1] = (value >>> 8)\\n    this[offset] = (value & 0xff)\\n  } else {\\n    objectWriteUInt32(this, value, offset, true)\\n  }\\n  return offset + 4\\n}\\n\\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = (value >>> 24)\\n    this[offset + 1] = (value >>> 16)\\n    this[offset + 2] = (value >>> 8)\\n    this[offset + 3] = (value & 0xff)\\n  } else {\\n    objectWriteUInt32(this, value, offset, false)\\n  }\\n  return offset + 4\\n}\\n\\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  if (!noAssert) {\\n    var limit = Math.pow(2, 8 * byteLength - 1)\\n\\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\\n  }\\n\\n  var i = 0\\n  var mul = 1\\n  var sub = 0\\n  this[offset] = value & 0xFF\\n  while (++i < byteLength && (mul *= 0x100)) {\\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\\n      sub = 1\\n    }\\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\\n  }\\n\\n  return offset + byteLength\\n}\\n\\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  if (!noAssert) {\\n    var limit = Math.pow(2, 8 * byteLength - 1)\\n\\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\\n  }\\n\\n  var i = byteLength - 1\\n  var mul = 1\\n  var sub = 0\\n  this[offset + i] = value & 0xFF\\n  while (--i >= 0 && (mul *= 0x100)) {\\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\\n      sub = 1\\n    }\\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\\n  }\\n\\n  return offset + byteLength\\n}\\n\\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\\n  if (value < 0) value = 0xff + value + 1\\n  this[offset] = (value & 0xff)\\n  return offset + 1\\n}\\n\\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = (value & 0xff)\\n    this[offset + 1] = (value >>> 8)\\n  } else {\\n    objectWriteUInt16(this, value, offset, true)\\n  }\\n  return offset + 2\\n}\\n\\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = (value >>> 8)\\n    this[offset + 1] = (value & 0xff)\\n  } else {\\n    objectWriteUInt16(this, value, offset, false)\\n  }\\n  return offset + 2\\n}\\n\\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = (value & 0xff)\\n    this[offset + 1] = (value >>> 8)\\n    this[offset + 2] = (value >>> 16)\\n    this[offset + 3] = (value >>> 24)\\n  } else {\\n    objectWriteUInt32(this, value, offset, true)\\n  }\\n  return offset + 4\\n}\\n\\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\\n  value = +value\\n  offset = offset | 0\\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\\n  if (value < 0) value = 0xffffffff + value + 1\\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\\n    this[offset] = (value >>> 24)\\n    this[offset + 1] = (value >>> 16)\\n    this[offset + 2] = (value >>> 8)\\n    this[offset + 3] = (value & 0xff)\\n  } else {\\n    objectWriteUInt32(this, value, offset, false)\\n  }\\n  return offset + 4\\n}\\n\\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\\n  if (offset < 0) throw new RangeError('Index out of range')\\n}\\n\\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\\n  if (!noAssert) {\\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\\n  }\\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\\n  return offset + 4\\n}\\n\\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\\n  return writeFloat(this, value, offset, true, noAssert)\\n}\\n\\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\\n  return writeFloat(this, value, offset, false, noAssert)\\n}\\n\\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\\n  if (!noAssert) {\\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\\n  }\\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\\n  return offset + 8\\n}\\n\\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\\n  return writeDouble(this, value, offset, true, noAssert)\\n}\\n\\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\\n  return writeDouble(this, value, offset, false, noAssert)\\n}\\n\\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\\n  if (!start) start = 0\\n  if (!end && end !== 0) end = this.length\\n  if (targetStart >= target.length) targetStart = target.length\\n  if (!targetStart) targetStart = 0\\n  if (end > 0 && end < start) end = start\\n\\n  // Copy 0 bytes; we're done\\n  if (end === start) return 0\\n  if (target.length === 0 || this.length === 0) return 0\\n\\n  // Fatal error conditions\\n  if (targetStart < 0) {\\n    throw new RangeError('targetStart out of bounds')\\n  }\\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\\n\\n  // Are we oob?\\n  if (end > this.length) end = this.length\\n  if (target.length - targetStart < end - start) {\\n    end = target.length - targetStart + start\\n  }\\n\\n  var len = end - start\\n  var i\\n\\n  if (this === target && start < targetStart && targetStart < end) {\\n    // descending copy from end\\n    for (i = len - 1; i >= 0; --i) {\\n      target[i + targetStart] = this[i + start]\\n    }\\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\\n    // ascending copy from start\\n    for (i = 0; i < len; ++i) {\\n      target[i + targetStart] = this[i + start]\\n    }\\n  } else {\\n    Uint8Array.prototype.set.call(\\n      target,\\n      this.subarray(start, start + len),\\n      targetStart\\n    )\\n  }\\n\\n  return len\\n}\\n\\n// Usage:\\n//    buffer.fill(number[, offset[, end]])\\n//    buffer.fill(buffer[, offset[, end]])\\n//    buffer.fill(string[, offset[, end]][, encoding])\\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\\n  // Handle string cases:\\n  if (typeof val === 'string') {\\n    if (typeof start === 'string') {\\n      encoding = start\\n      start = 0\\n      end = this.length\\n    } else if (typeof end === 'string') {\\n      encoding = end\\n      end = this.length\\n    }\\n    if (val.length === 1) {\\n      var code = val.charCodeAt(0)\\n      if (code < 256) {\\n        val = code\\n      }\\n    }\\n    if (encoding !== undefined && typeof encoding !== 'string') {\\n      throw new TypeError('encoding must be a string')\\n    }\\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\\n      throw new TypeError('Unknown encoding: ' + encoding)\\n    }\\n  } else if (typeof val === 'number') {\\n    val = val & 255\\n  }\\n\\n  // Invalid ranges are not set to a default, so can range check early.\\n  if (start < 0 || this.length < start || this.length < end) {\\n    throw new RangeError('Out of range index')\\n  }\\n\\n  if (end <= start) {\\n    return this\\n  }\\n\\n  start = start >>> 0\\n  end = end === undefined ? this.length : end >>> 0\\n\\n  if (!val) val = 0\\n\\n  var i\\n  if (typeof val === 'number') {\\n    for (i = start; i < end; ++i) {\\n      this[i] = val\\n    }\\n  } else {\\n    var bytes = Buffer.isBuffer(val)\\n      ? val\\n      : utf8ToBytes(new Buffer(val, encoding).toString())\\n    var len = bytes.length\\n    for (i = 0; i < end - start; ++i) {\\n      this[i + start] = bytes[i % len]\\n    }\\n  }\\n\\n  return this\\n}\\n\\n// HELPER FUNCTIONS\\n// ================\\n\\nvar INVALID_BASE64_RE = /[^+\\\\/0-9A-Za-z-_]/g\\n\\nfunction base64clean (str) {\\n  // Node strips out invalid characters like \\\\n and \\\\t from the string, base64-js does not\\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\\n  // Node converts strings with length < 2 to ''\\n  if (str.length < 2) return ''\\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\\n  while (str.length % 4 !== 0) {\\n    str = str + '='\\n  }\\n  return str\\n}\\n\\nfunction stringtrim (str) {\\n  if (str.trim) return str.trim()\\n  return str.replace(/^\\\\s+|\\\\s+$/g, '')\\n}\\n\\nfunction toHex (n) {\\n  if (n < 16) return '0' + n.toString(16)\\n  return n.toString(16)\\n}\\n\\nfunction utf8ToBytes (string, units) {\\n  units = units || Infinity\\n  var codePoint\\n  var length = string.length\\n  var leadSurrogate = null\\n  var bytes = []\\n\\n  for (var i = 0; i < length; ++i) {\\n    codePoint = string.charCodeAt(i)\\n\\n    // is surrogate component\\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\\n      // last char was a lead\\n      if (!leadSurrogate) {\\n        // no lead yet\\n        if (codePoint > 0xDBFF) {\\n          // unexpected trail\\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\n          continue\\n        } else if (i + 1 === length) {\\n          // unpaired lead\\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\n          continue\\n        }\\n\\n        // valid lead\\n        leadSurrogate = codePoint\\n\\n        continue\\n      }\\n\\n      // 2 leads in a row\\n      if (codePoint < 0xDC00) {\\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\n        leadSurrogate = codePoint\\n        continue\\n      }\\n\\n      // valid surrogate pair\\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\\n    } else if (leadSurrogate) {\\n      // valid bmp char, but last char was a lead\\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\\n    }\\n\\n    leadSurrogate = null\\n\\n    // encode utf8\\n    if (codePoint < 0x80) {\\n      if ((units -= 1) < 0) break\\n      bytes.push(codePoint)\\n    } else if (codePoint < 0x800) {\\n      if ((units -= 2) < 0) break\\n      bytes.push(\\n        codePoint >> 0x6 | 0xC0,\\n        codePoint & 0x3F | 0x80\\n      )\\n    } else if (codePoint < 0x10000) {\\n      if ((units -= 3) < 0) break\\n      bytes.push(\\n        codePoint >> 0xC | 0xE0,\\n        codePoint >> 0x6 & 0x3F | 0x80,\\n        codePoint & 0x3F | 0x80\\n      )\\n    } else if (codePoint < 0x110000) {\\n      if ((units -= 4) < 0) break\\n      bytes.push(\\n        codePoint >> 0x12 | 0xF0,\\n        codePoint >> 0xC & 0x3F | 0x80,\\n        codePoint >> 0x6 & 0x3F | 0x80,\\n        codePoint & 0x3F | 0x80\\n      )\\n    } else {\\n      throw new Error('Invalid code point')\\n    }\\n  }\\n\\n  return bytes\\n}\\n\\nfunction asciiToBytes (str) {\\n  var byteArray = []\\n  for (var i = 0; i < str.length; ++i) {\\n    // Node's code seems to be doing this and not & 0x7F..\\n    byteArray.push(str.charCodeAt(i) & 0xFF)\\n  }\\n  return byteArray\\n}\\n\\nfunction utf16leToBytes (str, units) {\\n  var c, hi, lo\\n  var byteArray = []\\n  for (var i = 0; i < str.length; ++i) {\\n    if ((units -= 2) < 0) break\\n\\n    c = str.charCodeAt(i)\\n    hi = c >> 8\\n    lo = c % 256\\n    byteArray.push(lo)\\n    byteArray.push(hi)\\n  }\\n\\n  return byteArray\\n}\\n\\nfunction base64ToBytes (str) {\\n  return base64.toByteArray(base64clean(str))\\n}\\n\\nfunction blitBuffer (src, dst, offset, length) {\\n  for (var i = 0; i < length; ++i) {\\n    if ((i + offset >= dst.length) || (i >= src.length)) break\\n    dst[i + offset] = src[i]\\n  }\\n  return i\\n}\\n\\nfunction isnan (val) {\\n  return val !== val // eslint-disable-line no-self-compare\\n}\\n\",\"/**\\n * @license\\n * Copyright 2019 Google LLC. All Rights Reserved.\\n * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n * you may not use this file except in compliance with the License.\\n * You may obtain a copy of the License at\\n *\\n * http://www.apache.org/licenses/LICENSE-2.0\\n *\\n * Unless required by applicable law or agreed to in writing, software\\n * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n * See the License for the specific language governing permissions and\\n * limitations under the License.\\n * =============================================================================\\n */\\nimport{ENV,concat,slice,stack,tensor,tidy,unstack,util,io,Tensor,add,addN,mod,mul,div,floorDiv,sub,minimum,maximum,pow,squaredDifference,abs,acos,acosh,asin,asinh,atan,atan2,atanh,ceil,complex,cos,cosh,elu,erf,exp,expm1,floor,log,log1p,imag,neg,reciprocal,real,relu,round,selu,sigmoid,sin,sign,sinh,softplus,sqrt,square,tanh,tan,clipByValue,rsqrt,prod,leakyRelu,scalar,conv1d,conv2d,fused,conv2dTranspose,depthwiseConv2d,conv3d,avgPool,maxPool,avgPool3d,maxPool3d,fill,linspace,multinomial,oneHot,ones,onesLike,randomUniform,range,truncatedNormal,zeros,zerosLike,image,whereAsync,setdiff1dAsync,topk,tensor1d,equal,notEqual,greater,greaterEqual,less,lessEqual,logicalAnd,logicalNot,logicalOr,where,matMul,transpose,batchNorm,localResponseNormalization,softmax,logSoftmax,sparseToDense,max,mean,min,sum,all,any,argMax,argMin,gather,reverse,stridedSlice,tile,split,scatterND,gatherND,fft,ifft,rfft,irfft,cast,expandDims,squeeze,reshape,pad,spaceToBatchND,batchToSpaceND,depthToSpace}from\\\"@tensorflow/tfjs-core\\\";var DataType,SaverDef,__assign=function(){return(__assign=Object.assign||function(e){for(var t,a=1,r=arguments.length;a<r;a++)for(var n in t=arguments[a])Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n]);return e}).apply(this,arguments)};function __awaiter(e,t,a,r){return new(a||(a=Promise))(function(n,s){function o(e){try{u(r.next(e))}catch(e){s(e)}}function p(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){e.done?n(e.value):new a(function(t){t(e.value)}).then(o,p)}u((r=r.apply(e,t||[])).next())})}function __generator(e,t){var a,r,n,s,o={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return s={next:p(0),throw:p(1),return:p(2)},\\\"function\\\"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function p(s){return function(p){return function(s){if(a)throw new TypeError(\\\"Generator is already executing.\\\");for(;o;)try{if(a=1,r&&(n=2&s[0]?r.return:s[0]?r.throw||((n=r.return)&&n.call(r),0):r.next)&&!(n=n.call(r,s[1])).done)return n;switch(r=0,n&&(s=[2&s[0],n.value]),s[0]){case 0:case 1:n=s;break;case 4:return o.label++,{value:s[1],done:!1};case 5:o.label++,r=s[1],s=[0];continue;case 7:s=o.ops.pop(),o.trys.pop();continue;default:if(!(n=(n=o.trys).length>0&&n[n.length-1])&&(6===s[0]||2===s[0])){o=0;continue}if(3===s[0]&&(!n||s[1]>n[0]&&s[1]<n[3])){o.label=s[1];break}if(6===s[0]&&o.label<n[1]){o.label=n[1],n=s;break}if(n&&o.label<n[2]){o.label=n[2],o.ops.push(s);break}n[2]&&o.ops.pop(),o.trys.pop();continue}s=t.call(e,o)}catch(e){s=[6,e],r=0}finally{a=n=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,p])}}}!function(e){e[e.DT_INVALID=0]=\\\"DT_INVALID\\\",e[e.DT_FLOAT=1]=\\\"DT_FLOAT\\\",e[e.DT_DOUBLE=2]=\\\"DT_DOUBLE\\\",e[e.DT_INT32=3]=\\\"DT_INT32\\\",e[e.DT_UINT8=4]=\\\"DT_UINT8\\\",e[e.DT_INT16=5]=\\\"DT_INT16\\\",e[e.DT_INT8=6]=\\\"DT_INT8\\\",e[e.DT_STRING=7]=\\\"DT_STRING\\\",e[e.DT_COMPLEX64=8]=\\\"DT_COMPLEX64\\\",e[e.DT_INT64=9]=\\\"DT_INT64\\\",e[e.DT_BOOL=10]=\\\"DT_BOOL\\\",e[e.DT_QINT8=11]=\\\"DT_QINT8\\\",e[e.DT_QUINT8=12]=\\\"DT_QUINT8\\\",e[e.DT_QINT32=13]=\\\"DT_QINT32\\\",e[e.DT_BFLOAT16=14]=\\\"DT_BFLOAT16\\\",e[e.DT_FLOAT_REF=101]=\\\"DT_FLOAT_REF\\\",e[e.DT_DOUBLE_REF=102]=\\\"DT_DOUBLE_REF\\\",e[e.DT_INT32_REF=103]=\\\"DT_INT32_REF\\\",e[e.DT_UINT8_REF=104]=\\\"DT_UINT8_REF\\\",e[e.DT_INT16_REF=105]=\\\"DT_INT16_REF\\\",e[e.DT_INT8_REF=106]=\\\"DT_INT8_REF\\\",e[e.DT_STRING_REF=107]=\\\"DT_STRING_REF\\\",e[e.DT_COMPLEX64_REF=108]=\\\"DT_COMPLEX64_REF\\\",e[e.DT_INT64_REF=109]=\\\"DT_INT64_REF\\\",e[e.DT_BOOL_REF=110]=\\\"DT_BOOL_REF\\\",e[e.DT_QINT8_REF=111]=\\\"DT_QINT8_REF\\\",e[e.DT_QUINT8_REF=112]=\\\"DT_QUINT8_REF\\\",e[e.DT_QINT32_REF=113]=\\\"DT_QINT32_REF\\\",e[e.DT_BFLOAT16_REF=114]=\\\"DT_BFLOAT16_REF\\\"}(DataType||(DataType={})),function(e){!function(e){e[e.LEGACY=0]=\\\"LEGACY\\\",e[e.V1=1]=\\\"V1\\\",e[e.V2=2]=\\\"V2\\\"}(e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(SaverDef||(SaverDef={}));var CUSTOM_OPS={};function registerOp(e,t){var a={tfOpName:e,category:\\\"custom\\\",inputs:[],attrs:[],customExecutor:t};CUSTOM_OPS[e]=a}function getRegisteredOp(e){return CUSTOM_OPS[e]}function deregisterOp(e){delete CUSTOM_OPS[e]}function getParamValue(e,t,a,r){var n=t.inputParams[e];if(n&&void 0!==n.inputIndexStart){var s=n.inputIndexStart,o=0===n.inputIndexEnd?void 0:void 0===n.inputIndexEnd?s+1:n.inputIndexEnd;if(\\\"tensor\\\"===n.type)return getTensor(t.inputNames[n.inputIndexStart],a,r);if(\\\"tensors\\\"===n.type)return t.inputNames.slice(s,o).map(function(e){return getTensor(e,a,r)});var p=Array.prototype.slice.call(getTensor(t.inputNames.slice(s)[0],a,r).dataSync());return\\\"number\\\"===n.type?p[0]:p}var u=t.attrParams[e];return u&&u.value}function getTensor(e,t,a){var r=parseNodeName(e),n=r[0],s=r[1],o=a.currentContextIds.find(function(e){return!!t[getNodeNameWithContextId(n,e)]});return void 0!==o?t[getNodeNameWithContextId(n,o)][s]:void 0}function getTensorsForCurrentContenxt(e,t,a){return t[getNodeNameWithContextId(e,a.currentContextId)]}function getNodeNameAndIndex(e,t){var a=parseNodeName(e),r=a[0],n=a[1];return[getNodeNameWithContextId(r,t&&t.currentContextId),n]}function getNodeNameWithContextId(e,t){return t?e+\\\"-\\\"+t:e}function parseNodeName(e){var t=e.lastIndexOf(\\\":\\\");return-1===t?[e,0]:[e.substring(0,t),Number(e.substring(t+1))]}function split$1(e,t){for(var a=[],r=0;r<e.length;r+=t)a.push(e.slice(r,r+t));return a}var json=[{tfOpName:\\\"Add\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"AddV2\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"AddN\\\",category:\\\"arithmetic\\\",inputs:[{start:0,end:0,name:\\\"tensors\\\",type:\\\"tensors\\\"}]},{tfOpName:\\\"BiasAdd\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Sub\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"RealDiv\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Div\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"FloorDiv\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Mul\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Maximum\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"Minimum\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"Pow\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"SquaredDifference\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Mod\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"FloorMod\\\",category:\\\"arithmetic\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]}],arithmetic=Object.freeze({json:json}),json$1=[{tfOpName:\\\"Abs\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Acos\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Asin\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Atan\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Atan2\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"y\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Ceil\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"ClipByValue\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"clip_value_min\\\",name:\\\"clipValueMin\\\",type:\\\"number\\\"},{tfName:\\\"clip_value_max\\\",name:\\\"clipValueMax\\\",type:\\\"number\\\"}]},{tfOpName:\\\"Complex\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"real\\\",type:\\\"tensor\\\"},{start:1,name:\\\"imag\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"ComplexAbs\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Cos\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Cosh\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Elu\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Exp\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Floor\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Log\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Imag\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0},{tfName:\\\"Tout\\\",name:\\\"outputType\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Neg\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Real\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0},{tfName:\\\"Tout\\\",name:\\\"outputType\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Prelu\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"alpha\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Relu\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Relu6\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0},{tfName:\\\"clipValueMin\\\",name:\\\"clipValueMin\\\",type:\\\"number\\\",defaultValue:0},{tfName:\\\"clipValueMax\\\",name:\\\"clipValueMax\\\",type:\\\"number\\\",defaultValue:6}]},{tfOpName:\\\"Selu\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Sigmoid\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Sin\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Sinh\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Sqrt\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Rsqrt\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Square\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Tan\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Tanh\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Sign\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Round\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Expm1\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Log1p\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Reciprocal\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Softplus\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Asinh\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Acosh\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Atanh\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Erf\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Prod\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"axes\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"keep_dims\\\",name:\\\"keepDims\\\",type:\\\"bool\\\",notSupported:!0},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"LeakyRelu\\\",category:\\\"basic_math\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"alpha\\\",name:\\\"alpha\\\",type:\\\"number\\\",defaultValue:.2},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]}],basicMath=Object.freeze({json:json$1}),json$2=[{tfOpName:\\\"LoopCond\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"pred\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"Switch\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"data\\\",type:\\\"tensor\\\"},{start:1,name:\\\"pred\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"Merge\\\",category:\\\"control\\\",inputs:[{start:0,end:0,name:\\\"tensors\\\",type:\\\"tensors\\\"}]},{tfOpName:\\\"Enter\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"tensor\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0},{tfName:\\\"frame_name\\\",name:\\\"frameName\\\",type:\\\"string\\\"},{tfName:\\\"is_constant\\\",name:\\\"isConstant\\\",type:\\\"bool\\\"}]},{tfOpName:\\\"Exit\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"tensor\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"NextIteration\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"tensor\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"TensorArrayV3\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"size\\\",type:\\\"number\\\"}],attrs:[{tfName:\\\"dtype\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"},{tfName:\\\"element_shape\\\",name:\\\"elementShape\\\",type:\\\"shape\\\"},{tfName:\\\"dynamic_size\\\",name:\\\"dynamicSize\\\",type:\\\"bool\\\"},{tfName:\\\"clear_after_read\\\",name:\\\"clearAfterRead\\\",type:\\\"bool\\\"},{tfName:\\\"identical_element_shapes\\\",name:\\\"identicalElementShapes\\\",type:\\\"bool\\\"},{tfName:\\\"tensor_array_name\\\",name:\\\"name\\\",type:\\\"string\\\"}]},{tfOpName:\\\"TensorArrayWriteV3\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"tensorArrayId\\\",type:\\\"number\\\"},{start:1,name:\\\"index\\\",type:\\\"number\\\"},{start:2,name:\\\"tensor\\\",type:\\\"tensor\\\"},{start:3,name:\\\"flowIn\\\",type:\\\"number\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"TensorArrayReadV3\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"tensorArrayId\\\",type:\\\"number\\\"},{start:1,name:\\\"index\\\",type:\\\"number\\\"},{start:2,name:\\\"flowIn\\\",type:\\\"number\\\"}],attrs:[{tfName:\\\"dtype\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"TensorArrayGatherV3\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"tensorArrayId\\\",type:\\\"number\\\"},{start:1,name:\\\"indices\\\",type:\\\"number[]\\\"},{start:2,name:\\\"flowIn\\\",type:\\\"number\\\"}],attrs:[{tfName:\\\"dtype\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"},{tfName:\\\"element_shape\\\",name:\\\"elementShape\\\",type:\\\"shape\\\"}]},{tfOpName:\\\"TensorArrayScatterV3\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"tensorArrayId\\\",type:\\\"number\\\"},{start:1,name:\\\"indices\\\",type:\\\"number[]\\\"},{start:2,name:\\\"tensor\\\",type:\\\"tensor\\\"},{start:3,name:\\\"flowIn\\\",type:\\\"number\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"}]},{tfOpName:\\\"TensorArrayConcatV3\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"tensorArrayId\\\",type:\\\"number\\\"},{start:1,name:\\\"flowIn\\\",type:\\\"number\\\"}],attrs:[{tfName:\\\"dtype\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"},{tfName:\\\"element_shape_except0\\\",name:\\\"elementShapeExcept0\\\",type:\\\"shape\\\",notSupported:!0}]},{tfOpName:\\\"TensorArraySplitV3\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"tensorArrayId\\\",type:\\\"number\\\"},{start:1,name:\\\"tensor\\\",type:\\\"tensor\\\"},{start:2,name:\\\"lengths\\\",type:\\\"number[]\\\"},{start:3,name:\\\"flowIn\\\",type:\\\"number\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"}]},{tfOpName:\\\"TensorArraySizeV3\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"tensorArrayId\\\",type:\\\"number\\\"},{start:1,name:\\\"flowIn\\\",type:\\\"number\\\"}]},{tfOpName:\\\"TensorArrayCloseV3\\\",category:\\\"control\\\",inputs:[{start:0,name:\\\"tensorArrayId\\\",type:\\\"number\\\"}]}],control=Object.freeze({json:json$2}),json$3=[{tfOpName:\\\"AvgPool\\\",category:\\\"convolution\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"strides\\\",name:\\\"strides\\\",type:\\\"number[]\\\"},{tfName:\\\"padding\\\",name:\\\"pad\\\",type:\\\"string\\\"},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",notSupported:!0},{tfName:\\\"ksize\\\",name:\\\"kernelSize\\\",type:\\\"number[]\\\"},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"MaxPool\\\",category:\\\"convolution\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"strides\\\",name:\\\"strides\\\",type:\\\"number[]\\\"},{tfName:\\\"padding\\\",name:\\\"pad\\\",type:\\\"string\\\"},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",notSupported:!0},{tfName:\\\"ksize\\\",name:\\\"kernelSize\\\",type:\\\"number[]\\\"},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"AvgPool3D\\\",category:\\\"convolution\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"strides\\\",name:\\\"strides\\\",type:\\\"number[]\\\"},{tfName:\\\"padding\\\",name:\\\"pad\\\",type:\\\"string\\\"},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",notSupported:!0},{tfName:\\\"ksize\\\",name:\\\"kernelSize\\\",type:\\\"number[]\\\"},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"MaxPool3D\\\",category:\\\"convolution\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"strides\\\",name:\\\"strides\\\",type:\\\"number[]\\\"},{tfName:\\\"padding\\\",name:\\\"pad\\\",type:\\\"string\\\"},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",notSupported:!0},{tfName:\\\"ksize\\\",name:\\\"kernelSize\\\",type:\\\"number[]\\\"},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Conv1D\\\",category:\\\"convolution\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"filter\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"stride\\\",name:\\\"stride\\\",type:\\\"number\\\"},{tfName:\\\"padding\\\",name:\\\"pad\\\",type:\\\"string\\\"},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",defaultValue:\\\"NWC\\\"},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0},{tfName:\\\"dilation\\\",name:\\\"dilation\\\",type:\\\"number\\\",defaultValue:1}]},{tfOpName:\\\"Conv2D\\\",category:\\\"convolution\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"filter\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0},{tfName:\\\"strides\\\",name:\\\"strides\\\",type:\\\"number[]\\\"},{tfName:\\\"padding\\\",name:\\\"pad\\\",type:\\\"string\\\"},{tfName:\\\"useCudnnOnGpu\\\",name:\\\"useCudnnOnGpu\\\",type:\\\"bool\\\"},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",defaultValue:\\\"NHWC\\\"},{tfName:\\\"dilations\\\",name:\\\"dilations\\\",type:\\\"number[]\\\"}]},{tfOpName:\\\"_FusedConv2D\\\",category:\\\"convolution\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"filter\\\",type:\\\"tensor\\\"},{start:2,end:0,name:\\\"args\\\",type:\\\"tensors\\\"}],attrs:[{tfName:\\\"num_args\\\",name:\\\"numArgs\\\",type:\\\"number\\\"},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0},{tfName:\\\"strides\\\",name:\\\"strides\\\",type:\\\"number[]\\\"},{tfName:\\\"padding\\\",name:\\\"pad\\\",type:\\\"string\\\"},{tfName:\\\"explicit_paddings\\\",name:\\\"explicitPaddings\\\",type:\\\"number[]\\\",defaultValue:[]},{tfName:\\\"use_cudnn_on_gpu\\\",name:\\\"useCudnnOnGpu\\\",type:\\\"bool\\\",defaultValue:!0},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",defaultValue:\\\"NHWC\\\"},{tfName:\\\"dilations\\\",name:\\\"dilations\\\",type:\\\"number[]\\\",defaultValue:[1,1,1,1]},{tfName:\\\"fused_ops\\\",name:\\\"fusedOps\\\",type:\\\"string[]\\\",defaultValue:[]},{tfName:\\\"epsilon\\\",name:\\\"epsilon\\\",type:\\\"number\\\",defaultValue:1e-4}]},{tfOpName:\\\"Conv2DBackpropInput\\\",category:\\\"convolution\\\",inputs:[{start:2,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"filter\\\",type:\\\"tensor\\\"},{start:0,name:\\\"outputShape\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"strides\\\",name:\\\"strides\\\",type:\\\"number[]\\\"},{tfName:\\\"padding\\\",name:\\\"pad\\\",type:\\\"string\\\"},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",notSupported:!0}]},{tfOpName:\\\"DepthwiseConv2d\\\",category:\\\"convolution\\\",inputs:[{start:0,name:\\\"input\\\",type:\\\"tensor\\\"},{start:1,name:\\\"filter\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"strides\\\",name:\\\"strides\\\",type:\\\"number[]\\\"},{tfName:\\\"padding\\\",name:\\\"pad\\\",type:\\\"string\\\"},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",defaultValue:\\\"NHWC\\\"},{tfName:\\\"dilations\\\",name:\\\"dilations\\\",type:\\\"number[]\\\"}]},{tfOpName:\\\"DepthwiseConv2dNative\\\",category:\\\"convolution\\\",inputs:[{start:0,name:\\\"input\\\",type:\\\"tensor\\\"},{start:1,name:\\\"filter\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"strides\\\",name:\\\"strides\\\",type:\\\"number[]\\\"},{tfName:\\\"padding\\\",name:\\\"pad\\\",type:\\\"string\\\"},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",defaultValue:\\\"NHWC\\\"},{tfName:\\\"dilations\\\",name:\\\"dilations\\\",type:\\\"number[]\\\"}]},{tfOpName:\\\"Conv3D\\\",category:\\\"convolution\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"filter\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"strides\\\",name:\\\"strides\\\",type:\\\"number[]\\\"},{tfName:\\\"padding\\\",name:\\\"pad\\\",type:\\\"string\\\"},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",defaultValue:\\\"NHWC\\\"},{tfName:\\\"dilations\\\",name:\\\"dilations\\\",type:\\\"number[]\\\"}]}],convolution=Object.freeze({json:json$3}),json$4=[{tfOpName:\\\"Fill\\\",category:\\\"creation\\\",inputs:[{start:0,name:\\\"shape\\\",type:\\\"number[]\\\"},{start:1,name:\\\"value\\\",type:\\\"number\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"}]},{tfOpName:\\\"LinSpace\\\",category:\\\"creation\\\",inputs:[{start:0,name:\\\"start\\\",type:\\\"number\\\"},{start:1,name:\\\"stop\\\",type:\\\"number\\\"},{start:2,name:\\\"num\\\",type:\\\"number\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"OneHot\\\",category:\\\"creation\\\",inputs:[{start:0,name:\\\"indices\\\",type:\\\"tensor\\\"},{start:1,name:\\\"depth\\\",type:\\\"number\\\"},{start:2,name:\\\"onValue\\\",type:\\\"number\\\",defaultValue:1},{start:3,name:\\\"offValue\\\",type:\\\"number\\\",defaultValue:0}],attrs:[{tfName:\\\"axis\\\",name:\\\"axis\\\",type:\\\"number\\\",notSupported:!0},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Ones\\\",category:\\\"creation\\\",inputs:[{start:0,name:\\\"shape\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"}]},{tfOpName:\\\"OnesLike\\\",category:\\\"creation\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"dtype\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"}]},{tfOpName:\\\"RandomUniform\\\",category:\\\"creation\\\",inputs:[{start:0,name:\\\"shape\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"minval\\\",name:\\\"minval\\\",type:\\\"number\\\",defaultValue:0},{tfName:\\\"maxval\\\",name:\\\"maxval\\\",type:\\\"number\\\",defaultValue:1},{tfName:\\\"dtype\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"},{tfName:\\\"seed\\\",name:\\\"seed\\\",type:\\\"number\\\",defaultValue:0},{tfName:\\\"seed2\\\",name:\\\"seed2\\\",type:\\\"number\\\",defaultValue:0,notSupported:!0},{tfName:\\\"T\\\",name:\\\"T\\\",type:\\\"number\\\",notSupported:!0}]},{tfOpName:\\\"Range\\\",category:\\\"creation\\\",inputs:[{start:0,name:\\\"start\\\",type:\\\"number\\\"},{start:1,name:\\\"stop\\\",type:\\\"number\\\"},{start:2,name:\\\"step\\\",type:\\\"number\\\",defaultValue:0}],attrs:[{tfName:\\\"Tidx\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"}]},{tfOpName:\\\"TruncatedNormal\\\",category:\\\"creation\\\",inputs:[{start:0,name:\\\"shape\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"means\\\",name:\\\"mean\\\",type:\\\"number\\\",defaultValue:0},{tfName:\\\"stddev\\\",name:\\\"stdDev\\\",type:\\\"number\\\",defaultValue:1},{tfName:\\\"seed\\\",name:\\\"seed\\\",type:\\\"number\\\"},{tfName:\\\"seed2\\\",name:\\\"seed2\\\",type:\\\"number\\\",defaultValue:0,notSupported:!0},{tfName:\\\"dtype\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"},{tfName:\\\"T\\\",name:\\\"T\\\",type:\\\"number\\\",notSupported:!0}]},{tfOpName:\\\"Zeros\\\",category:\\\"creation\\\",inputs:[{start:0,name:\\\"shape\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"}]},{tfOpName:\\\"ZerosLike\\\",category:\\\"creation\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"}]},{tfOpName:\\\"Multinomial\\\",category:\\\"creation\\\",inputs:[{start:0,name:\\\"logits\\\",type:\\\"tensor\\\"},{start:1,name:\\\"numSamples\\\",type:\\\"number\\\"}],attrs:[{tfName:\\\"seed\\\",name:\\\"seed\\\",type:\\\"number\\\"},{tfName:\\\"seed2\\\",name:\\\"seed2\\\",type:\\\"number\\\"},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"},{tfName:\\\"output_dtype\\\",name:\\\"output_dtype\\\",type:\\\"dtype\\\"}]}],creation=Object.freeze({json:json$4}),json$5=[{tfOpName:\\\"NonMaxSuppressionV2\\\",category:\\\"dynamic\\\",inputs:[{start:0,name:\\\"boxes\\\",type:\\\"tensor\\\"},{start:1,name:\\\"scores\\\",type:\\\"tensor\\\"},{start:2,name:\\\"maxOutputSize\\\",type:\\\"number\\\"},{start:3,name:\\\"iouThreshold\\\",type:\\\"number\\\"}]},{tfOpName:\\\"NonMaxSuppressionV3\\\",category:\\\"dynamic\\\",inputs:[{start:0,name:\\\"boxes\\\",type:\\\"tensor\\\"},{start:1,name:\\\"scores\\\",type:\\\"tensor\\\"},{start:2,name:\\\"maxOutputSize\\\",type:\\\"number\\\"},{start:3,name:\\\"iouThreshold\\\",type:\\\"number\\\"},{start:4,name:\\\"scoreThreshold\\\",type:\\\"number\\\"}]},{tfOpName:\\\"Where\\\",category:\\\"dynamic\\\",inputs:[{start:0,name:\\\"condition\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"ListDiff\\\",category:\\\"dynamic\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"y\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]}],dynamic=Object.freeze({json:json$5}),json$6=[{tfOpName:\\\"TopKV2\\\",category:\\\"evaluation\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"k\\\",type:\\\"number\\\"}],attrs:[{tfName:\\\"sorted\\\",name:\\\"sorted\\\",type:\\\"bool\\\"}]}],evaluation=Object.freeze({json:json$6}),json$7=[{tfOpName:\\\"PlaceholderWithDefault\\\",category:\\\"graph\\\",inputs:[{start:0,name:\\\"default\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"shape\\\",name:\\\"shape\\\",type:\\\"shape\\\"},{tfName:\\\"dtype\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"}]},{tfOpName:\\\"Placeholder\\\",category:\\\"graph\\\",attrs:[{tfName:\\\"shape\\\",name:\\\"shape\\\",type:\\\"shape\\\"},{tfName:\\\"dtype\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"}]},{tfOpName:\\\"Const\\\",category:\\\"graph\\\"},{tfOpName:\\\"Identity\\\",category:\\\"graph\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"IdentityN\\\",category:\\\"graph\\\",inputs:[{start:0,end:0,name:\\\"x\\\",type:\\\"tensors\\\"}]},{tfOpName:\\\"Snapshot\\\",category:\\\"graph\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"Rank\\\",category:\\\"graph\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"Size\\\",category:\\\"graph\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"Shape\\\",category:\\\"graph\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"ShapeN\\\",category:\\\"graph\\\",inputs:[{start:0,end:0,name:\\\"x\\\",type:\\\"tensors\\\"}]},{tfOpName:\\\"Print\\\",category:\\\"graph\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"data\\\",type:\\\"tensors\\\"}],attrs:[{tfName:\\\"message\\\",name:\\\"message\\\",type:\\\"string\\\"},{tfName:\\\"first_n\\\",name:\\\"firstN\\\",type:\\\"number\\\",notSupported:!0},{tfName:\\\"summarize\\\",name:\\\"summarize\\\",type:\\\"number\\\",defaultValue:3}]},{tfOpName:\\\"NoOp\\\",category:\\\"graph\\\",inputs:[]},{tfOpName:\\\"StopGradient\\\",category:\\\"graph\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"FakeQuantWithMinMaxVars\\\",category:\\\"graph\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"min\\\",name:\\\"min\\\",type:\\\"number\\\"},{tfName:\\\"max\\\",name:\\\"max\\\",type:\\\"number\\\"}]}],graph=Object.freeze({json:json$7}),json$8=[{tfOpName:\\\"ResizeBilinear\\\",category:\\\"image\\\",inputs:[{start:0,name:\\\"images\\\",type:\\\"tensor\\\"},{start:1,name:\\\"size\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"align_corners\\\",name:\\\"alignCorners\\\",type:\\\"bool\\\"},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"ResizeNearestNeighbor\\\",category:\\\"image\\\",inputs:[{start:0,name:\\\"images\\\",type:\\\"tensor\\\"},{start:1,name:\\\"size\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"align_corners\\\",name:\\\"alignCorners\\\",type:\\\"bool\\\"},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"CropAndResize\\\",category:\\\"image\\\",inputs:[{start:0,name:\\\"image\\\",type:\\\"tensor\\\"},{start:1,name:\\\"boxes\\\",type:\\\"tensor\\\"},{start:2,name:\\\"boxInd\\\",type:\\\"tensor\\\"},{start:3,name:\\\"cropSize\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"method\\\",name:\\\"method\\\",type:\\\"string\\\"},{tfName:\\\"extrapolation_value\\\",name:\\\"extrapolationValue\\\",type:\\\"number\\\"}]}],image$1=Object.freeze({json:json$8}),json$9=[{tfOpName:\\\"Equal\\\",category:\\\"logical\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"NotEqual\\\",category:\\\"logical\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Greater\\\",category:\\\"logical\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"GreaterEqual\\\",category:\\\"logical\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Less\\\",category:\\\"logical\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"LessEqual\\\",category:\\\"logical\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"LogicalAnd\\\",category:\\\"logical\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"LogicalNot\\\",category:\\\"logical\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"LogicalOr\\\",category:\\\"logical\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Select\\\",category:\\\"logical\\\",inputs:[{start:0,name:\\\"condition\\\",type:\\\"tensor\\\"},{start:1,name:\\\"a\\\",type:\\\"tensor\\\"},{start:2,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]}],logical=Object.freeze({json:json$9}),json$10=[{tfOpName:\\\"MatMul\\\",category:\\\"matrices\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"transpose_a\\\",name:\\\"transposeA\\\",type:\\\"bool\\\",defaultValue:!1},{tfName:\\\"transpose_b\\\",name:\\\"transposeB\\\",type:\\\"bool\\\",defaultValue:!1},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"BatchMatMul\\\",category:\\\"matrices\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"adj_x\\\",name:\\\"transposeA\\\",type:\\\"bool\\\",defaultValue:!1},{tfName:\\\"adj_y\\\",name:\\\"transposeB\\\",type:\\\"bool\\\",defaultValue:!1},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"BatchMatMulV2\\\",category:\\\"matrices\\\",inputs:[{start:0,name:\\\"a\\\",type:\\\"tensor\\\"},{start:1,name:\\\"b\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"adj_x\\\",name:\\\"transposeA\\\",type:\\\"bool\\\",defaultValue:!1},{tfName:\\\"adj_y\\\",name:\\\"transposeB\\\",type:\\\"bool\\\",defaultValue:!1},{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]},{tfOpName:\\\"Transpose\\\",category:\\\"matrices\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"perm\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"T\\\",name:\\\"dtype\\\",type:\\\"dtype\\\",notSupported:!0}]}],matrices=Object.freeze({json:json$10}),json$11=[{tfOpName:\\\"FusedBatchNorm\\\",category:\\\"normalization\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"scale\\\",type:\\\"tensor\\\"},{start:2,name:\\\"offset\\\",type:\\\"tensor\\\"},{start:3,name:\\\"mean\\\",type:\\\"tensor\\\"},{start:4,name:\\\"variance\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"epsilon\\\",name:\\\"epsilon\\\",type:\\\"number\\\",defaultValue:.001},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",notSupported:!0}]},{tfOpName:\\\"FusedBatchNormV2\\\",category:\\\"normalization\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"scale\\\",type:\\\"tensor\\\"},{start:2,name:\\\"offset\\\",type:\\\"tensor\\\"},{start:3,name:\\\"mean\\\",type:\\\"tensor\\\"},{start:4,name:\\\"variance\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"epsilon\\\",name:\\\"epsilon\\\",type:\\\"number\\\",defaultValue:.001},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",notSupported:!0}]},{tfOpName:\\\"FusedBatchNormV3\\\",category:\\\"normalization\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"scale\\\",type:\\\"tensor\\\"},{start:2,name:\\\"offset\\\",type:\\\"tensor\\\"},{start:3,name:\\\"mean\\\",type:\\\"tensor\\\"},{start:4,name:\\\"variance\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"epsilon\\\",name:\\\"epsilon\\\",type:\\\"number\\\",defaultValue:.001},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\",notSupported:!0}]},{tfOpName:\\\"LRN\\\",category:\\\"normalization\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"depth_radius\\\",name:\\\"radius\\\",type:\\\"number\\\",defaultValue:5},{tfName:\\\"bias\\\",name:\\\"bias\\\",type:\\\"number\\\",defaultValue:1},{tfName:\\\"alpha\\\",name:\\\"alpha\\\",type:\\\"number\\\",defaultValue:1},{tfName:\\\"beta\\\",name:\\\"beta\\\",type:\\\"number\\\",defaultValue:.5}]},{tfOpName:\\\"Softmax\\\",category:\\\"normalization\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"LogSoftmax\\\",category:\\\"normalization\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"SparseToDense\\\",category:\\\"normalization\\\",inputs:[{start:0,name:\\\"sparseIndices\\\",type:\\\"tensor\\\"},{start:1,name:\\\"outputShape\\\",type:\\\"number[]\\\"},{start:2,name:\\\"sparseValues\\\",type:\\\"tensor\\\"},{start:3,name:\\\"defaultValue\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"validate_indices\\\",name:\\\"validateIndices\\\",type:\\\"bool\\\",defaultValue:!0,notSupported:!0}]}],normalization=Object.freeze({json:json$11}),json$12=[{tfOpName:\\\"Max\\\",category:\\\"reduction\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"axis\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"keep_dims\\\",name:\\\"keepDims\\\",type:\\\"bool\\\"}]},{tfOpName:\\\"Mean\\\",category:\\\"reduction\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"axis\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"keep_dims\\\",name:\\\"keepDims\\\",type:\\\"bool\\\"}]},{tfOpName:\\\"Min\\\",category:\\\"reduction\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"axis\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"keep_dims\\\",name:\\\"keepDims\\\",type:\\\"bool\\\"}]},{tfOpName:\\\"Sum\\\",category:\\\"reduction\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"axis\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"keep_dims\\\",name:\\\"keepDims\\\",type:\\\"bool\\\"}]},{tfOpName:\\\"All\\\",category:\\\"reduction\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"axis\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"keep_dims\\\",name:\\\"keepDims\\\",type:\\\"bool\\\"}]},{tfOpName:\\\"Any\\\",category:\\\"reduction\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"axis\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"keep_dims\\\",name:\\\"keepDims\\\",type:\\\"bool\\\"}]},{tfOpName:\\\"ArgMax\\\",category:\\\"reduction\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"axis\\\",type:\\\"number\\\"}]},{tfOpName:\\\"ArgMin\\\",category:\\\"reduction\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"axis\\\",type:\\\"number\\\"}]},{tfOpName:\\\"Prod\\\",category:\\\"reduction\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"axis\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"keep_dims\\\",name:\\\"keepDims\\\",type:\\\"bool\\\"}]}],reduction=Object.freeze({json:json$12}),json$13=[{tfOpName:\\\"ConcatV2\\\",category:\\\"slice_join\\\",inputs:[{start:0,end:-1,name:\\\"tensors\\\",type:\\\"tensors\\\"},{start:-1,name:\\\"axis\\\",type:\\\"number\\\"}]},{tfOpName:\\\"Concat\\\",category:\\\"slice_join\\\",inputs:[{start:1,end:0,name:\\\"tensors\\\",type:\\\"tensors\\\"},{start:0,name:\\\"axis\\\",type:\\\"number\\\"}]},{tfOpName:\\\"GatherV2\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"indices\\\",type:\\\"tensor\\\"},{start:2,name:\\\"axis\\\",type:\\\"number\\\",defaultValue:0}]},{tfOpName:\\\"Gather\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"indices\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"axis\\\",name:\\\"axis\\\",type:\\\"number\\\",defaultValue:0},{tfName:\\\"validate_indices\\\",name:\\\"validateIndices\\\",type:\\\"bool\\\",notSupported:!0}]},{tfOpName:\\\"Reverse\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"dims\\\",type:\\\"bool\\\",notSupported:!0}]},{tfOpName:\\\"ReverseV2\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"axis\\\",type:\\\"number[]\\\"}]},{tfOpName:\\\"Slice\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"begin\\\",type:\\\"number[]\\\"},{start:2,name:\\\"size\\\",type:\\\"number[]\\\"}]},{tfOpName:\\\"StridedSlice\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"begin\\\",type:\\\"number[]\\\"},{start:2,name:\\\"end\\\",type:\\\"number[]\\\"},{start:3,name:\\\"strides\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"begin_mask\\\",name:\\\"beginMask\\\",type:\\\"number\\\",defaultValue:0},{tfName:\\\"end_mask\\\",name:\\\"endMask\\\",type:\\\"number\\\",defaultValue:0},{tfName:\\\"new_axis_mask\\\",name:\\\"newAxisMask\\\",type:\\\"number\\\",defaultValue:0},{tfName:\\\"ellipsis_mask\\\",name:\\\"ellipsisMask\\\",type:\\\"number\\\",defaultValue:0},{tfName:\\\"shrink_axis_mask\\\",name:\\\"shrinkAxisMask\\\",type:\\\"number\\\",defaultValue:0}]},{tfOpName:\\\"Pack\\\",category:\\\"slice_join\\\",inputs:[{start:0,end:0,name:\\\"tensors\\\",type:\\\"tensors\\\"}],attrs:[{tfName:\\\"axis\\\",name:\\\"axis\\\",type:\\\"number\\\",defaultValue:0}]},{tfOpName:\\\"Unpack\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"tensor\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"axis\\\",name:\\\"axis\\\",type:\\\"number\\\",defaultValue:0},{tfName:\\\"num\\\",name:\\\"num\\\",type:\\\"number\\\",defaultValue:0,notSupported:!0}]},{tfOpName:\\\"Tile\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"reps\\\",type:\\\"number[]\\\"}]},{tfOpName:\\\"Split\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"axis\\\",type:\\\"number\\\",defaultValue:0},{start:1,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"num_split\\\",name:\\\"numOrSizeSplits\\\",type:\\\"number\\\",defaultValue:1}]},{tfOpName:\\\"SplitV\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"numOrSizeSplits\\\",type:\\\"number[]\\\"},{start:2,name:\\\"axis\\\",type:\\\"number\\\",defaultValue:0}]},{tfOpName:\\\"ScatterNd\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"indices\\\",type:\\\"tensor\\\"},{start:1,name:\\\"values\\\",type:\\\"tensor\\\"},{start:2,name:\\\"shape\\\",type:\\\"number[]\\\"}]},{tfOpName:\\\"GatherNd\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"indices\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"SparseToDense\\\",category:\\\"slice_join\\\",inputs:[{start:0,name:\\\"sparseIndices\\\",type:\\\"tensor\\\"},{start:1,name:\\\"outputShape\\\",type:\\\"number[]\\\"},{start:2,name:\\\"sparseValues\\\",type:\\\"tensor\\\"},{start:3,name:\\\"defaultValue\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"validate_indices\\\",name:\\\"validateIndices\\\",type:\\\"bool\\\",defaultValue:!1,notSupported:!0}]}],sliceJoin=Object.freeze({json:json$13}),json$14=[{tfOpName:\\\"FFT\\\",category:\\\"spectral\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"IFFT\\\",category:\\\"spectral\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}]},{tfOpName:\\\"RFFT\\\",category:\\\"spectral\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"fft_length\\\",type:\\\"number\\\",notSupported:!0}]},{tfOpName:\\\"IRFFT\\\",category:\\\"spectral\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"fft_length\\\",type:\\\"number\\\",notSupported:!0}]}],spectral=Object.freeze({json:json$14}),json$15=[{tfOpName:\\\"Cast\\\",category:\\\"transformation\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"SrcT\\\",name:\\\"sdtype\\\",type:\\\"dtype\\\",notSupported:!0},{tfName:\\\"DstT\\\",name:\\\"dtype\\\",type:\\\"dtype\\\"}]},{tfOpName:\\\"ExpandDims\\\",category:\\\"transformation\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"axis\\\",type:\\\"number\\\"}]},{tfOpName:\\\"Pad\\\",category:\\\"transformation\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"padding\\\",type:\\\"number[]\\\"}],attrs:[{tfName:\\\"constant_value\\\",name:\\\"constantValue\\\",type:\\\"number\\\",defaultValue:0}]},{tfOpName:\\\"PadV2\\\",category:\\\"transformation\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"padding\\\",type:\\\"number[]\\\"},{start:2,name:\\\"constantValue\\\",type:\\\"number\\\",defaultValue:0}]},{tfOpName:\\\"Reshape\\\",category:\\\"transformation\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"shape\\\",type:\\\"number[]\\\"}]},{tfOpName:\\\"Squeeze\\\",category:\\\"transformation\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"axis\\\",tfDeprecatedName:\\\"squeeze_dims\\\",name:\\\"axis\\\",type:\\\"number[]\\\"}]},{tfOpName:\\\"SpaceToBatchND\\\",category:\\\"transformation\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"blockShape\\\",type:\\\"number[]\\\"},{start:2,name:\\\"paddings\\\",type:\\\"number[]\\\"}]},{tfOpName:\\\"BatchToSpaceND\\\",category:\\\"transformation\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"},{start:1,name:\\\"blockShape\\\",type:\\\"number[]\\\"},{start:2,name:\\\"crops\\\",type:\\\"number[]\\\"}]},{tfOpName:\\\"DepthToSpace\\\",category:\\\"transformation\\\",inputs:[{start:0,name:\\\"x\\\",type:\\\"tensor\\\"}],attrs:[{tfName:\\\"block_size\\\",name:\\\"blockSize\\\",type:\\\"number\\\"},{tfName:\\\"data_format\\\",name:\\\"dataFormat\\\",type:\\\"string\\\"}]}],transformation=Object.freeze({json:json$15}),OperationMapper=function(){function e(){var e=[arithmetic,basicMath,control,convolution,creation,dynamic,evaluation,logical,image$1,graph,matrices,normalization,reduction,sliceJoin,spectral,transformation],t=[].concat.apply([],e.map(function(e){return e.json}));this.opMappers=t.reduce(function(e,t){return e[t.tfOpName]=t,e},{})}return Object.defineProperty(e,\\\"Instance\\\",{get:function(){return this._instance||(this._instance=new this)},enumerable:!0,configurable:!0}),e.prototype.transformGraph=function(e){var t=this,a=[],r=[],n=e.node.reduce(function(e,n){return e[n.name]=t.mapNode(n),\\\"Placeholder\\\"===n.op&&a.push(e[n.name]),\\\"Const\\\"===n.op&&r.push(e[n.name]),e},{}),s=[],o=[],p=Object.keys(n);return p.forEach(function(e){var t=n[e];t.inputNames.forEach(function(e){var a=getNodeNameAndIndex(e)[0];t.inputs.push(n[a]),n[a].children.push(t)}),0===t.inputs.length&&s.push(t)}),p.forEach(function(e){var t=n[e];0===t.children.length&&o.push(t)}),{nodes:n,inputs:s,outputs:o,weights:r,placeholders:a}},e.prototype.mapNode=function(e){var t=getRegisteredOp(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});var a={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(function(e){return e.startsWith(\\\"^\\\")?e.substr(1):e}),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr};return null!=t.inputs&&(a.inputParams=t.inputs.reduce(function(e,t){return e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e},{})),null!=t.attrs&&(a.attrParams=t.attrs.reduce(function(t,a){var r=a.type,n=void 0;switch(a.type){case\\\"string\\\":void 0===(n=getStringParam(e.attr,a.tfName,a.defaultValue))&&a.tfDeprecatedName&&(n=getStringParam(e.attr,a.tfDeprecatedName,a.defaultValue));break;case\\\"string[]\\\":void 0===(n=getStringArrayParam(e.attr,a.tfName,a.defaultValue))&&a.tfDeprecatedName&&(n=getStringArrayParam(e.attr,a.tfDeprecatedName,a.defaultValue));break;case\\\"number\\\":void 0===(n=getNumberParam(e.attr,a.tfName,a.defaultValue||0))&&a.tfDeprecatedName&&(n=getNumberParam(e.attr,a.tfDeprecatedName,a.defaultValue));break;case\\\"number[]\\\":void 0===(n=getNumericArrayParam(e.attr,a.tfName,a.defaultValue))&&a.tfDeprecatedName&&(n=getNumericArrayParam(e.attr,a.tfDeprecatedName,a.defaultValue));break;case\\\"bool\\\":void 0===(n=getBoolParam(e.attr,a.tfName,a.defaultValue))&&a.tfDeprecatedName&&(n=getBoolParam(e.attr,a.tfDeprecatedName,a.defaultValue));break;case\\\"bool[]\\\":void 0===(n=getBoolArrayParam(e.attr,a.tfName,a.defaultValue))&&a.tfDeprecatedName&&(n=getBoolArrayParam(e.attr,a.tfDeprecatedName,a.defaultValue));break;case\\\"shape\\\":void 0===(n=getTensorShapeParam(e.attr,a.tfName,a.defaultValue))&&a.tfDeprecatedName&&(n=getTensorShapeParam(e.attr,a.tfDeprecatedName,a.defaultValue));break;case\\\"shape[]\\\":void 0===(n=getTensorShapeArrayParam(e.attr,a.tfName,a.defaultValue))&&a.tfDeprecatedName&&(n=getTensorShapeArrayParam(e.attr,a.tfDeprecatedName,a.defaultValue));break;case\\\"dtype\\\":void 0===(n=getDtypeParam(e.attr,a.tfName,a.defaultValue))&&a.tfDeprecatedName&&(n=getDtypeParam(e.attr,a.tfDeprecatedName,a.defaultValue));break;case\\\"dtype[]\\\":void 0===(n=getDtypeArrayParam(e.attr,a.tfName,a.defaultValue))&&a.tfDeprecatedName&&(n=getDtypeArrayParam(e.attr,a.tfDeprecatedName,a.defaultValue));break;case\\\"tensor\\\":case\\\"tensors\\\":break;default:throw new Error(\\\"Unsupported param type: \\\"+a.type+\\\" for op: \\\"+e.op)}return t[a.name]={value:n,type:r},t},{})),a},e}();function decodeBase64(e){var t=ENV.global;if(void 0!==t.atob)return t.atob(e);if(\\\"undefined\\\"!=typeof Buffer)return new Buffer(e,\\\"base64\\\").toString();throw new Error(\\\"Unable to decode base64 in this environment. Missing built-in atob() or Buffer()\\\")}function parseStringParam(e,t){var a=Array.isArray(e)?String.fromCharCode.apply(null,e):decodeBase64(e);return t?a:a.toLowerCase()}function getStringParam(e,t,a,r){void 0===r&&(r=!1);var n=e[t];return null!=n?parseStringParam(n.s,r):a}function getBoolParam(e,t,a){var r=e[t];return r?r.b:a}function getNumberParam(e,t,a){var r=e[t]||{},n=null!=r.i?r.i:null!=r.f?r.f:a;return\\\"number\\\"==typeof n?n:parseInt(n,10)}function parseDtypeParam(e){switch(\\\"string\\\"==typeof e&&(e=DataType[e]),e){case DataType.DT_FLOAT:return\\\"float32\\\";case DataType.DT_INT32:return\\\"int32\\\";case DataType.DT_BOOL:return\\\"bool\\\";case DataType.DT_DOUBLE:return\\\"float32\\\";case DataType.DT_STRING:return\\\"string\\\";default:return null}}function getDtypeParam(e,t,a){var r=e[t];return r&&r.type?parseDtypeParam(r.type):a}function getDtypeArrayParam(e,t,a){var r=e[t];return r&&r.list&&r.list.type?r.list.type.map(function(e){return parseDtypeParam(e)}):a}function parseTensorShapeParam(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(function(e){return\\\"number\\\"==typeof e.size?e.size:parseInt(e.size,10)}):[]}function getTensorShapeParam(e,t,a){var r=e[t];return r&&r.shape?parseTensorShapeParam(r.shape):a}function getNumericArrayParam(e,t,a){var r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(function(e){return\\\"number\\\"==typeof e?e:parseInt(e,10)}):a}function getStringArrayParam(e,t,a,r){void 0===r&&(r=!1);var n=e[t];return n&&n.list&&n.list.s?n.list.s.map(function(e){return parseStringParam(e,r)}):a}function getTensorShapeArrayParam(e,t,a){var r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(function(e){return parseTensorShapeParam(e)}):a}function getBoolArrayParam(e,t,a){var r=e[t];return r&&r.list&&r.list.b?r.list.b:a}var NodeValueImpl=function(){function e(e,t,a){var r=this;this.node=e,this.tensorMap=t,this.context=a,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(function(e){return r.getInput(e)}),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(function(e,t){return e[t]=r.getAttr(t),e},{}))}return e.prototype.getInput=function(e){return getTensor(e,this.tensorMap,this.context)},e.prototype.getAttr=function(e,t){var a=this.node.rawAttrs[e];if(null!=a.tensor)return getTensor(e,this.tensorMap,this.context);if(null!=a.i||null!=a.f)return getNumberParam(this.node.rawAttrs,e,t);if(null!=a.s)return getStringParam(this.node.rawAttrs,e,t);if(null!=a.b)return getBoolParam(this.node.rawAttrs,e,t);if(null!=a.shape)return getTensorShapeParam(this.node.rawAttrs,e,t);if(null!=a.type)return getDtypeParam(this.node.rawAttrs,e,t);if(null!=a.list){if(null!=a.list.i||null!=a.list.f)return getNumericArrayParam(this.node.rawAttrs,e,t);if(null!=a.list.s)return getStringArrayParam(this.node.rawAttrs,e,t);if(null!=a.list.shape)return getTensorShapeArrayParam(this.node.rawAttrs,e,t);if(null!=a.list.b)return getBoolArrayParam(this.node.rawAttrs,e,t);if(null!=a.list.type)return getDtypeArrayParam(this.node.rawAttrs,e,t)}return t},e}(),executeOp=function(e,t,a){switch(e.op){case\\\"BiasAdd\\\":case\\\"AddV2\\\":case\\\"Add\\\":return[add(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"AddN\\\":return[addN(getParamValue(\\\"tensors\\\",e,t,a))];case\\\"FloorMod\\\":case\\\"Mod\\\":return[mod(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"Mul\\\":return[mul(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"RealDiv\\\":case\\\"Div\\\":return[div(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"FloorDiv\\\":return[floorDiv(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"Sub\\\":return[sub(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"Minimum\\\":return[minimum(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"Maximum\\\":return[maximum(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"Pow\\\":return[pow(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"SquaredDifference\\\":return[squaredDifference(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}},executeOp$1=function(e,t,a){switch(e.op){case\\\"Abs\\\":case\\\"ComplexAbs\\\":return[abs(getParamValue(\\\"x\\\",e,t,a))];case\\\"Acos\\\":return[acos(getParamValue(\\\"x\\\",e,t,a))];case\\\"Acosh\\\":return[acosh(getParamValue(\\\"x\\\",e,t,a))];case\\\"Asin\\\":return[asin(getParamValue(\\\"x\\\",e,t,a))];case\\\"Asinh\\\":return[asinh(getParamValue(\\\"x\\\",e,t,a))];case\\\"Atan\\\":return[atan(getParamValue(\\\"x\\\",e,t,a))];case\\\"Atan2\\\":return[atan2(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"y\\\",e,t,a))];case\\\"Atanh\\\":return[atanh(getParamValue(\\\"x\\\",e,t,a))];case\\\"Ceil\\\":return[ceil(getParamValue(\\\"x\\\",e,t,a))];case\\\"Complex\\\":return[complex(getParamValue(\\\"real\\\",e,t,a),getParamValue(\\\"imag\\\",e,t,a))];case\\\"Cos\\\":return[cos(getParamValue(\\\"x\\\",e,t,a))];case\\\"Cosh\\\":return[cosh(getParamValue(\\\"x\\\",e,t,a))];case\\\"Elu\\\":return[elu(getParamValue(\\\"x\\\",e,t,a))];case\\\"Erf\\\":return[erf(getParamValue(\\\"x\\\",e,t,a))];case\\\"Exp\\\":return[exp(getParamValue(\\\"x\\\",e,t,a))];case\\\"Expm1\\\":return[expm1(getParamValue(\\\"x\\\",e,t,a))];case\\\"Floor\\\":return[floor(getParamValue(\\\"x\\\",e,t,a))];case\\\"Log\\\":return[log(getParamValue(\\\"x\\\",e,t,a))];case\\\"Log1p\\\":return[log1p(getParamValue(\\\"x\\\",e,t,a))];case\\\"Imag\\\":return[imag(getParamValue(\\\"x\\\",e,t,a))];case\\\"Neg\\\":return[neg(getParamValue(\\\"x\\\",e,t,a))];case\\\"Reciprocal\\\":return[reciprocal(getParamValue(\\\"x\\\",e,t,a))];case\\\"Real\\\":return[real(getParamValue(\\\"x\\\",e,t,a))];case\\\"Relu\\\":return[relu(getParamValue(\\\"x\\\",e,t,a))];case\\\"Round\\\":return[round(getParamValue(\\\"x\\\",e,t,a))];case\\\"Selu\\\":return[selu(getParamValue(\\\"x\\\",e,t,a))];case\\\"Sigmoid\\\":return[sigmoid(getParamValue(\\\"x\\\",e,t,a))];case\\\"Sin\\\":return[sin(getParamValue(\\\"x\\\",e,t,a))];case\\\"Sign\\\":return[sign(getParamValue(\\\"x\\\",e,t,a))];case\\\"Sinh\\\":return[sinh(getParamValue(\\\"x\\\",e,t,a))];case\\\"Softplus\\\":return[softplus(getParamValue(\\\"x\\\",e,t,a))];case\\\"Sqrt\\\":return[sqrt(getParamValue(\\\"x\\\",e,t,a))];case\\\"Square\\\":return[square(getParamValue(\\\"x\\\",e,t,a))];case\\\"Tanh\\\":return[tanh(getParamValue(\\\"x\\\",e,t,a))];case\\\"Tan\\\":return[tan(getParamValue(\\\"x\\\",e,t,a))];case\\\"Relu6\\\":case\\\"ClipByValue\\\":return[clipByValue(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"clipValueMin\\\",e,t,a),getParamValue(\\\"clipValueMax\\\",e,t,a))];case\\\"Rsqrt\\\":return[rsqrt(getTensor(e.inputNames[0],t,a))];case\\\"Prod\\\":return[prod(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"axes\\\",e,t,a))];case\\\"LeakyRelu\\\":return[leakyRelu(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"alpha\\\",e,t,a))];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}},TensorArray=function(){function e(t,a,r,n,s,o,p){this.name=t,this.dtype=a,this.maxSize=r,this.elementShape=n,this.identicalElementShapes=s,this.dynamicSize=o,this.clearAfterRead=p,this.tensors=[],this.closed_=!1,this.id=e.nextId++}return Object.defineProperty(e.prototype,\\\"closed\\\",{get:function(){return this.closed_},enumerable:!0,configurable:!0}),e.prototype.clearAndClose=function(){this.tensors.forEach(function(e){return e.tensor.dispose()}),this.tensors=[],this.closed_=!0},e.prototype.size=function(){return this.tensors.length},e.prototype.read=function(e){if(this.closed_)throw new Error(\\\"TensorArray \\\"+this.name+\\\" has already been closed.\\\");if(e<0||e>=this.tensors.length)throw new Error(\\\"Tried to read from index \\\"+e+\\\", but array size is: \\\"+this.tensors.length);var t=this.tensors[e];if(t.cleared)throw new Error(\\\"TensorArray \\\"+this.name+\\\": Could not read index \\\"+e+\\\" twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).\\\");return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor},e.prototype.readMany=function(e){var t=this;return e.map(function(e){return t.read(e)})},e.prototype.write=function(e,t){if(this.closed_)throw new Error(\\\"TensorArray \\\"+this.name+\\\" has already been closed.\\\");if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(\\\"Tried to write to index \\\"+e+\\\", but array is not resizeable and size is: \\\"+this.maxSize);var a=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(\\\"TensorArray \\\"+this.name+\\\": Could not write to TensorArray index \\\"+e+\\\",\\\\n          because the value dtype is \\\"+t.dtype+\\\", but TensorArray dtype is \\\"+this.dtype+\\\".\\\");if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),this.assertShapesMatchAllowUndefinedSize(this.elementShape,t.shape,\\\"TensorArray \\\"+this.name+\\\": Could not write to TensorArray index \\\"+e+\\\".\\\"),a&&a.read)throw new Error(\\\"TensorArray \\\"+this.name+\\\": Could not write to TensorArray index \\\"+e+\\\", because it has already been read.\\\");if(a&&a.written)throw new Error(\\\"TensorArray \\\"+this.name+\\\": Could not write to TensorArray index \\\"+e+\\\", because it has already been written.\\\");a.tensor=t,a.written=!0,this.tensors[e]=a},e.prototype.writeMany=function(e,t){var a=this;if(e.length!==t.length)throw new Error(\\\"TensorArray \\\"+this.name+\\\": could not write multiple tensors,because the index size: \\\"+e.length+\\\" is not the same as tensors size: \\\"+t.length+\\\".\\\");e.forEach(function(e,r){return a.write(e,t[r])})},e.prototype.gather=function(e,t){if(t&&t!==this.dtype)throw new Error(\\\"TensorArray dtype is \\\"+this.dtype+\\\" but gather requested dtype \\\"+t);if(!e){e=[];for(var a=0;a<this.size();a++)e.push(a)}if(0===e.length)return tensor([],[0].concat(this.elementShape));var r=this.readMany(e);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,r[0].shape,\\\"TensorArray shape mismatch: \\\"),stack(r,0)},e.prototype.concat=function(e){if(e&&e!==this.dtype)throw new Error(\\\"TensorArray dtype is \\\"+this.dtype+\\\" but concat requested dtype \\\"+e);if(0===this.size())return tensor([],[0].concat(this.elementShape));for(var t=[],a=0;a<this.size();a++)t.push(a);var r=this.readMany(t);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,r[0].shape,\\\"TensorArray shape mismatch: tensor array shape (\\\"+this.elementShape+\\\") vs first tensor shape (\\\"+r[0].shape+\\\")\\\"),concat(r,0)},e.prototype.scatter=function(e,t){if(t.dtype!==this.dtype)throw new Error(\\\"TensorArray dtype is \\\"+this.dtype+\\\" but tensor has dtype \\\"+t.dtype);if(e.length!==t.shape[0])throw new Error(\\\"Expected len(indices) == tensor.shape[0], but saw: \\\"+e.length+\\\" vs. \\\"+t.shape[0]);var a=Math.max.apply(Math,e);if(!this.dynamicSize&&a>=this.maxSize)throw new Error(\\\"Max index must be < array size (\\\"+a+\\\"  vs. \\\"+this.maxSize+\\\")\\\");this.writeMany(e,unstack(t,0))},e.prototype.split=function(e,t){var a=this;if(t.dtype!==this.dtype)throw new Error(\\\"TensorArray dtype is \\\"+this.dtype+\\\" but tensor has dtype \\\"+t.dtype);var r=0,n=e.map(function(e){return r+=e});if(r!==t.shape[0])throw new Error(\\\"Expected sum of lengths to be equal to\\\\n          tensor.shape[0], but sum of lengths is\\\\n        \\\"+r+\\\", and tensor's shape is: \\\"+t.shape);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(\\\"TensorArray's size is not equal to the size of lengths (\\\"+this.maxSize+\\\" vs. \\\"+e.length+\\\"), and the TensorArray is not marked as dynamically resizeable\\\");var s=0===r?0:t.size/r,o=[];tidy(function(){t=t.reshape([1,r,s]);for(var p=0;p<e.length;++p){var u=[0,0===p?0:n[p-1],0],i=[1,e[p],s];o[p]=slice(t,u,i).reshape(a.elementShape)}return o});for(var p=[],u=0;u<e.length;u++)p[u]=u;this.writeMany(p,o)},e.prototype.assertShapesMatchAllowUndefinedSize=function(e,t,a){void 0===a&&(a=\\\"\\\"),util.assert(this.shapesEqualAllowUndefinedSize(e,t),function(){return a+\\\" Shapes \\\"+e+\\\" and \\\"+t+\\\" must match\\\"})},e.prototype.shapesEqualAllowUndefinedSize=function(e,t){if(e.length!==t.length)return!1;for(var a=0;a<e.length;a++)if(-1!==e[a]&&-1!==t[a]&&e[a]!==t[a])return!1;return!0},e.nextId=0,e}();function executeOp$2(e,t,a){return __awaiter(this,void 0,void 0,function(){var r,n,s,o,p,u,i,m,l,c,d,y,f,g,h,N,x,V,P,b,T,O,S,v,_,w,A,D,E,I,C,M,k,z,j;return __generator(this,function(F){switch(F.label){case 0:switch(e.op){case\\\"LoopCond\\\":return[3,1];case\\\"Switch\\\":return[3,2];case\\\"Merge\\\":return[3,4];case\\\"Enter\\\":return[3,5];case\\\"Exit\\\":return[3,6];case\\\"NextIteration\\\":return[3,7];case\\\"TensorArrayV3\\\":return[3,8];case\\\"TensorArrayWriteV3\\\":return[3,9];case\\\"TensorArrayReadV3\\\":return[3,10];case\\\"TensorArrayGatherV3\\\":return[3,11];case\\\"TensorArrayScatterV3\\\":return[3,12];case\\\"TensorArrayConcatV3\\\":return[3,13];case\\\"TensorArraySplitV3\\\":return[3,14];case\\\"TensorArraySizeV3\\\":return[3,15];case\\\"TensorArrayCloseV3\\\":return[3,16]}return[3,17];case 1:return[2,[getParamValue(\\\"pred\\\",e,t,a).clone()]];case 2:return r=getParamValue(\\\"pred\\\",e,t,a),n=getParamValue(\\\"data\\\",e,t,a),[4,r.data()];case 3:return[2,F.sent()[0]?[void 0,n.clone()]:[n.clone(),void 0]];case 4:return[2,(s=e.inputNames.find(function(e){return void 0!==getTensor(e,t,a)}))?[getTensor(s,t,a).clone()]:void 0];case 5:return o=getParamValue(\\\"frameName\\\",e,t,a),p=getParamValue(\\\"tensor\\\",e,t,a),a.enterFrame(o),[2,[p.clone()]];case 6:return u=getParamValue(\\\"tensor\\\",e,t,a),a.exitFrame(),[2,[u.clone()]];case 7:return i=getParamValue(\\\"tensor\\\",e,t,a),a.nextIteration(),[2,[i.clone()]];case 8:return m=getParamValue(\\\"size\\\",e,t,a),l=getParamValue(\\\"dtype\\\",e,t,a),c=getParamValue(\\\"elementShape\\\",e,t,a),d=getParamValue(\\\"dynamicSize\\\",e,t,a),y=getParamValue(\\\"clearAfterRead\\\",e,t,a),f=getParamValue(\\\"identicalElementShapes\\\",e,t,a),g=getParamValue(\\\"name\\\",e,t,a),h=new TensorArray(g,l,m,c,f,d,y),a.addTensorArray(h),[2,[scalar(h.id),scalar(1)]];case 9:return N=getParamValue(\\\"tensorArrayId\\\",e,t,a),x=getParamValue(\\\"index\\\",e,t,a),V=getParamValue(\\\"tensor\\\",e,t,a),a.getTensorArray(N).write(x,V),[2,[scalar(1)]];case 10:return P=getParamValue(\\\"tensorArrayId\\\",e,t,a),b=getParamValue(\\\"index\\\",e,t,a),[2,[a.getTensorArray(P).read(b)]];case 11:return T=getParamValue(\\\"tensorArrayId\\\",e,t,a),O=getParamValue(\\\"indices\\\",e,t,a),S=getParamValue(\\\"dtype\\\",e,t,a),[2,[a.getTensorArray(T).gather(O,S)]];case 12:return v=getParamValue(\\\"tensorArrayId\\\",e,t,a),_=getParamValue(\\\"indices\\\",e,t,a),w=getParamValue(\\\"tensor\\\",e,t,a),a.getTensorArray(v).scatter(_,w),[2,[scalar(1)]];case 13:return A=getParamValue(\\\"tensorArrayId\\\",e,t,a),D=a.getTensorArray(A),E=getParamValue(\\\"dtype\\\",e,t,a),[2,[D.concat(E)]];case 14:return I=getParamValue(\\\"tensorArrayId\\\",e,t,a),C=getParamValue(\\\"tensor\\\",e,t,a),M=getParamValue(\\\"lengths\\\",e,t,a),a.getTensorArray(I).split(M,C),[2,[scalar(1)]];case 15:return k=getParamValue(\\\"tensorArrayId\\\",e,t,a),z=a.getTensorArray(k),[2,[scalar(z.size(),\\\"int32\\\")]];case 16:return j=getParamValue(\\\"tensorArrayId\\\",e,t,a),a.getTensorArray(j).clearAndClose(),[2,[]];case 17:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}})})}var executeOp$3=function(e,t,a){var r,n;switch(e.op){case\\\"Conv1D\\\":var s=getParamValue(\\\"stride\\\",e,t,a),o=getParamValue(\\\"pad\\\",e,t,a),p=getParamValue(\\\"dataFormat\\\",e,t,a).toUpperCase(),u=getParamValue(\\\"dilation\\\",e,t,a);return[conv1d(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"filter\\\",e,t,a),s,o,p,u)];case\\\"Conv2D\\\":s=getParamValue(\\\"strides\\\",e,t,a),o=getParamValue(\\\"pad\\\",e,t,a),p=getParamValue(\\\"dataFormat\\\",e,t,a).toUpperCase();var i=getParamValue(\\\"dilations\\\",e,t,a);return[conv2d(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"filter\\\",e,t,a),[s[1],s[2]],o,p,[i[1],i[2]])];case\\\"_FusedConv2D\\\":var m=(r=getParamValue(\\\"fusedOps\\\",e,t,a))[0],l=r[1],c=\\\"biasadd\\\"===m,d=\\\"prelu\\\"===l,y=\\\"fusedbatchnorm\\\"===m,f=getParamValue(\\\"numArgs\\\",e,t,a);if(c){if(d&&2!==f)throw new Error(\\\"Fused Conv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.\\\");if(!d&&1!==f)throw new Error(\\\"Fused Conv2d with BiasAdd must have one extra argument: bias.\\\")}if(y)throw new Error(\\\"Fused Conv2d with FusedBatchNorm is not supported.\\\");s=getParamValue(\\\"strides\\\",e,t,a),o=getParamValue(\\\"pad\\\",e,t,a),p=getParamValue(\\\"dataFormat\\\",e,t,a).toUpperCase(),i=getParamValue(\\\"dilations\\\",e,t,a);var g=(n=getParamValue(\\\"args\\\",e,t,a))[0],h=n[1];return[fused.conv2d({x:getParamValue(\\\"x\\\",e,t,a),filter:getParamValue(\\\"filter\\\",e,t,a),strides:[s[1],s[2]],pad:o,dataFormat:p,dilations:[i[1],i[2]],bias:g,activation:l,preluActivationWeights:h})];case\\\"Conv2DBackpropInput\\\":case\\\"Conv2dTranspose\\\":var N=getParamValue(\\\"outputShape\\\",e,t,a);s=getParamValue(\\\"strides\\\",e,t,a),o=getParamValue(\\\"pad\\\",e,t,a);return[conv2dTranspose(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"filter\\\",e,t,a),N,[s[1],s[2]],o)];case\\\"DepthwiseConv2dNative\\\":case\\\"DepthwiseConv2d\\\":s=getParamValue(\\\"strides\\\",e,t,a),o=getParamValue(\\\"pad\\\",e,t,a),i=getParamValue(\\\"dilations\\\",e,t,a),p=getParamValue(\\\"dataFormat\\\",e,t,a).toUpperCase();return[depthwiseConv2d(getParamValue(\\\"input\\\",e,t,a),getParamValue(\\\"filter\\\",e,t,a),[s[1],s[2]],o,p,[i[1],i[2]])];case\\\"Conv3D\\\":s=getParamValue(\\\"strides\\\",e,t,a),o=getParamValue(\\\"pad\\\",e,t,a),p=getParamValue(\\\"dataFormat\\\",e,t,a).toUpperCase(),i=getParamValue(\\\"dilations\\\",e,t,a);return[conv3d(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"filter\\\",e,t,a),[s[1],s[2],s[3]],o,p,[i[1],i[2],i[3]])];case\\\"AvgPool\\\":s=getParamValue(\\\"strides\\\",e,t,a),o=getParamValue(\\\"pad\\\",e,t,a);var x=getParamValue(\\\"kernelSize\\\",e,t,a);return[avgPool(getParamValue(\\\"x\\\",e,t,a),[x[1],x[2]],[s[1],s[2]],o)];case\\\"MaxPool\\\":s=getParamValue(\\\"strides\\\",e,t,a),o=getParamValue(\\\"pad\\\",e,t,a),x=getParamValue(\\\"kernelSize\\\",e,t,a);return[maxPool(getParamValue(\\\"x\\\",e,t,a),[x[1],x[2]],[s[1],s[2]],o)];case\\\"AvgPool3D\\\":s=getParamValue(\\\"strides\\\",e,t,a),o=getParamValue(\\\"pad\\\",e,t,a),x=getParamValue(\\\"kernelSize\\\",e,t,a);return[avgPool3d(getParamValue(\\\"x\\\",e,t,a),[x[1],x[2],x[3]],[s[1],s[2],s[3]],o)];case\\\"MaxPool3D\\\":s=getParamValue(\\\"strides\\\",e,t,a),o=getParamValue(\\\"pad\\\",e,t,a),x=getParamValue(\\\"kernelSize\\\",e,t,a);return[maxPool3d(getParamValue(\\\"x\\\",e,t,a),[x[1],x[2],x[3]],[s[1],s[2],s[3]],o)];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}},executeOp$4=function(e,t,a){switch(e.op){case\\\"Fill\\\":var r=getParamValue(\\\"shape\\\",e,t,a),n=getParamValue(\\\"dtype\\\",e,t,a),s=getParamValue(\\\"value\\\",e,t,a);return[fill(r,s,n)];case\\\"LinSpace\\\":var o=getParamValue(\\\"start\\\",e,t,a),p=getParamValue(\\\"stop\\\",e,t,a),u=getParamValue(\\\"num\\\",e,t,a);return[linspace(o,p,u)];case\\\"Multinomial\\\":var i=getParamValue(\\\"logits\\\",e,t,a),m=getParamValue(\\\"numSamples\\\",e,t,a),l=getParamValue(\\\"seed\\\",e,t,a);return[multinomial(i,m,l)];case\\\"OneHot\\\":var c=getParamValue(\\\"indices\\\",e,t,a),d=getParamValue(\\\"depth\\\",e,t,a),y=getParamValue(\\\"onValue\\\",e,t,a),f=getParamValue(\\\"offValue\\\",e,t,a);return[oneHot(c,d,y,f)];case\\\"Ones\\\":return[ones(getParamValue(\\\"shape\\\",e,t,a),getParamValue(\\\"dtype\\\",e,t,a))];case\\\"OnesLike\\\":return[onesLike(getParamValue(\\\"x\\\",e,t,a))];case\\\"RandomUniform\\\":return[randomUniform(getParamValue(\\\"shape\\\",e,t,a),getParamValue(\\\"minval\\\",e,t,a),getParamValue(\\\"maxval\\\",e,t,a),getParamValue(\\\"dtype\\\",e,t,a))];case\\\"Range\\\":o=getParamValue(\\\"start\\\",e,t,a);var g=getParamValue(\\\"stop\\\",e,t,a),h=getParamValue(\\\"step\\\",e,t,a);return[range(o,g,h,getParamValue(\\\"dtype\\\",e,t,a))];case\\\"TruncatedNormal\\\":r=getParamValue(\\\"shape\\\",e,t,a);var N=getParamValue(\\\"mean\\\",e,t,a),x=getParamValue(\\\"stdDev\\\",e,t,a);l=getParamValue(\\\"seed\\\",e,t,a);return[truncatedNormal(r,N,x,getParamValue(\\\"dtype\\\",e,t,a),l)];case\\\"Zeros\\\":return[zeros(getParamValue(\\\"shape\\\",e,t,a),getParamValue(\\\"dtype\\\",e,t,a))];case\\\"ZerosLike\\\":return[zerosLike(getParamValue(\\\"x\\\",e,t,a))];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}};function executeOp$5(e,t,a){return __awaiter(this,void 0,void 0,function(){var r,n,s,o,p;return __generator(this,function(u){switch(u.label){case 0:switch(e.op){case\\\"NonMaxSuppressionV3\\\":case\\\"NonMaxSuppressionV2\\\":return[3,1];case\\\"Where\\\":return[3,3];case\\\"ListDiff\\\":return[3,5]}return[3,6];case 1:return r=getParamValue(\\\"boxes\\\",e,t,a),n=getParamValue(\\\"scores\\\",e,t,a),s=getParamValue(\\\"maxOutputSize\\\",e,t,a),o=getParamValue(\\\"iouThreshold\\\",e,t,a),p=getParamValue(\\\"scoreThreshold\\\",e,t,a),[4,image.nonMaxSuppressionAsync(r,n,s,o,p)];case 2:return[2,[u.sent()]];case 3:return[4,whereAsync(getParamValue(\\\"condition\\\",e,t,a))];case 4:return[2,[u.sent()]];case 5:return[2,setdiff1dAsync(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"y\\\",e,t,a))];case 6:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}})})}var executeOp$6=function(e,t,a){switch(e.op){case\\\"TopKV2\\\":var r=getParamValue(\\\"x\\\",e,t,a),n=getParamValue(\\\"k\\\",e,t,a),s=getParamValue(\\\"sorted\\\",e,t,a),o=topk(r,n,s);return[o.values,o.indices];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}},executeOp$7=function(e,t,a){switch(e.op){case\\\"Const\\\":return t[e.name];case\\\"PlaceholderWithDefault\\\":var r=getParamValue(\\\"default\\\",e,t,a);return[getTensor(e.name,t,a)||r];case\\\"Placeholder\\\":return[getTensor(e.name,t,a)];case\\\"Identity\\\":case\\\"StopGradient\\\":case\\\"FakeQuantWithMinMaxVars\\\":return[getParamValue(\\\"x\\\",e,t,a).clone()];case\\\"IdentityN\\\":return getParamValue(\\\"x\\\",e,t,a).map(function(e){return e.clone()});case\\\"Snapshot\\\":return[getParamValue(\\\"x\\\",e,t,a).clone()];case\\\"Shape\\\":return[tensor1d(getParamValue(\\\"x\\\",e,t,a).shape,\\\"int32\\\")];case\\\"ShapeN\\\":return getParamValue(\\\"x\\\",e,t,a).map(function(e){return tensor1d(e.shape)});case\\\"Size\\\":return[scalar(getParamValue(\\\"x\\\",e,t,a).size,\\\"int32\\\")];case\\\"Rank\\\":return[scalar(getParamValue(\\\"x\\\",e,t,a).rank,\\\"int32\\\")];case\\\"NoOp\\\":return[];case\\\"Print\\\":var n=getParamValue(\\\"x\\\",e,t,a),s=getParamValue(\\\"data\\\",e,t,a),o=getParamValue(\\\"message\\\",e,t,a),p=getParamValue(\\\"summarize\\\",e,t,a);console.warn(\\\"The graph has a tf.print() operation,usually used for debugging, which slows down performance.\\\"),console.log(o);for(var u=0;u<s.length;u++)console.log(Array.prototype.slice.call(s[u].dataSync()).slice(0,p));return[n];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}},executeOp$8=function(e,t,a){switch(e.op){case\\\"ResizeBilinear\\\":var r=getParamValue(\\\"images\\\",e,t,a),n=getParamValue(\\\"size\\\",e,t,a),s=getParamValue(\\\"alignCorners\\\",e,t,a);return[image.resizeBilinear(r,[n[0],n[1]],s)];case\\\"ResizeNearestNeighbor\\\":r=getParamValue(\\\"images\\\",e,t,a),n=getParamValue(\\\"size\\\",e,t,a),s=getParamValue(\\\"alignCorners\\\",e,t,a);return[image.resizeNearestNeighbor(r,[n[0],n[1]],s)];case\\\"CropAndResize\\\":var o=getParamValue(\\\"image\\\",e,t,a),p=getParamValue(\\\"boxes\\\",e,t,a),u=getParamValue(\\\"boxInd\\\",e,t,a),i=getParamValue(\\\"cropSize\\\",e,t,a),m=getParamValue(\\\"method\\\",e,t,a),l=getParamValue(\\\"extrapolationValue\\\",e,t,a);return[image.cropAndResize(o,p,u,i,m,l)];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}},executeOp$9=function(e,t,a){switch(e.op){case\\\"Equal\\\":return[equal(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"NotEqual\\\":return[notEqual(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"Greater\\\":return[greater(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"GreaterEqual\\\":return[greaterEqual(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"Less\\\":return[less(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"LessEqual\\\":return[lessEqual(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"LogicalAnd\\\":return[logicalAnd(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"LogicalNot\\\":return[logicalNot(getParamValue(\\\"a\\\",e,t,a))];case\\\"LogicalOr\\\":return[logicalOr(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];case\\\"Select\\\":return[where(getParamValue(\\\"condition\\\",e,t,a),getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a))];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}},executeOp$10=function(e,t,a){switch(e.op){case\\\"BatchMatMul\\\":case\\\"BatchMatMulV2\\\":case\\\"MatMul\\\":return[matMul(getParamValue(\\\"a\\\",e,t,a),getParamValue(\\\"b\\\",e,t,a),getParamValue(\\\"transposeA\\\",e,t,a),getParamValue(\\\"transposeB\\\",e,t,a))];case\\\"Transpose\\\":return[transpose(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"perm\\\",e,t,a))];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}},executeOp$11=function(e,t,a){switch(e.op){case\\\"FusedBatchNorm\\\":case\\\"FusedBatchNormV2\\\":case\\\"FusedBatchNormV3\\\":return[batchNorm(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"mean\\\",e,t,a),getParamValue(\\\"variance\\\",e,t,a),getParamValue(\\\"offset\\\",e,t,a),getParamValue(\\\"scale\\\",e,t,a),getParamValue(\\\"epsilon\\\",e,t,a))];case\\\"LRN\\\":return[localResponseNormalization(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"radius\\\",e,t,a),getParamValue(\\\"bias\\\",e,t,a),getParamValue(\\\"alpha\\\",e,t,a),getParamValue(\\\"beta\\\",e,t,a))];case\\\"Softmax\\\":return[softmax(getParamValue(\\\"x\\\",e,t,a))];case\\\"LogSoftmax\\\":return[logSoftmax(getParamValue(\\\"x\\\",e,t,a))];case\\\"SparseToDense\\\":return[sparseToDense(getParamValue(\\\"sparseIndices\\\",e,t,a),getParamValue(\\\"outputShape\\\",e,t,a),getParamValue(\\\"sparseValues\\\",e,t,a),getParamValue(\\\"defaultValue\\\",e,t,a))];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}},executeOp$12=function(e,t,a){switch(e.op){case\\\"Max\\\":var r=getParamValue(\\\"axis\\\",e,t,a),n=getParamValue(\\\"keepDims\\\",e,t,a);return[max(getParamValue(\\\"x\\\",e,t,a),r,n)];case\\\"Mean\\\":r=getParamValue(\\\"axis\\\",e,t,a),n=getParamValue(\\\"keepDims\\\",e,t,a);return[mean(getParamValue(\\\"x\\\",e,t,a),r,n)];case\\\"Min\\\":r=getParamValue(\\\"axis\\\",e,t,a),n=getParamValue(\\\"keepDims\\\",e,t,a);return[min(getParamValue(\\\"x\\\",e,t,a),r,n)];case\\\"Sum\\\":r=getParamValue(\\\"axis\\\",e,t,a),n=getParamValue(\\\"keepDims\\\",e,t,a);return[sum(getParamValue(\\\"x\\\",e,t,a),r,n)];case\\\"All\\\":r=getParamValue(\\\"axis\\\",e,t,a),n=getParamValue(\\\"keepDims\\\",e,t,a);return[all(getParamValue(\\\"x\\\",e,t,a),r,n)];case\\\"Any\\\":r=getParamValue(\\\"axis\\\",e,t,a),n=getParamValue(\\\"keepDims\\\",e,t,a);return[any(getParamValue(\\\"x\\\",e,t,a),r,n)];case\\\"ArgMax\\\":r=getParamValue(\\\"axis\\\",e,t,a);return[argMax(getParamValue(\\\"x\\\",e,t,a),r)];case\\\"ArgMin\\\":r=getParamValue(\\\"axis\\\",e,t,a);return[argMin(getParamValue(\\\"x\\\",e,t,a),r)];case\\\"Prod\\\":r=getParamValue(\\\"axis\\\",e,t,a),n=getParamValue(\\\"keepDims\\\",e,t,a);return[prod(getParamValue(\\\"x\\\",e,t,a),r,n)];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}},executeOp$13=function(e,t,a){switch(e.op){case\\\"ConcatV2\\\":case\\\"Concat\\\":var r=getParamValue(\\\"axis\\\",e,t,a),n=getParamValue(\\\"tensors\\\",e,t,a);return[concat(n,r)];case\\\"GatherV2\\\":case\\\"Gather\\\":r=getParamValue(\\\"axis\\\",e,t,a);var s=getParamValue(\\\"x\\\",e,t,a),o=getParamValue(\\\"indices\\\",e,t,a);return[gather(s,o.asType(\\\"int32\\\"),r)];case\\\"ReverseV2\\\":case\\\"Reverse\\\":r=getParamValue(\\\"axis\\\",e,t,a),s=getParamValue(\\\"x\\\",e,t,a);return[reverse(s,r)];case\\\"Slice\\\":var p=getParamValue(\\\"begin\\\",e,t,a),u=getParamValue(\\\"size\\\",e,t,a);return[slice(getParamValue(\\\"x\\\",e,t,a),p,u)];case\\\"StridedSlice\\\":p=getParamValue(\\\"begin\\\",e,t,a);var i=getParamValue(\\\"end\\\",e,t,a),m=getParamValue(\\\"strides\\\",e,t,a),l=getParamValue(\\\"beginMask\\\",e,t,a),c=getParamValue(\\\"endMask\\\",e,t,a),d=getParamValue(\\\"ellipsisMask\\\",e,t,a),y=getParamValue(\\\"newAxisMask\\\",e,t,a),f=getParamValue(\\\"shrinkAxisMask\\\",e,t,a),g=getParamValue(\\\"x\\\",e,t,a);if(1===p.length&&g.shape.length>1)for(var h=1;h<g.shape.length;h++)p.push(0),i.push(g.shape[h]),m.push(m[0]);return[stridedSlice(g,p,i,m,l,c,d,y,f)];case\\\"Pack\\\":return tidy(function(){var r=getParamValue(\\\"axis\\\",e,t,a),n=getParamValue(\\\"tensors\\\",e,t,a),s=n[0].shape,o=n[0].squeeze().shape,p=n.map(function(e){var t=util.arraysEqual(e.shape,s);if(!t&&!util.arraysEqual(e.squeeze().shape,o))throw new Error(\\\"the input tensors shape does not match\\\");return t?e:e.reshape(s)});return[stack(p,r)]});case\\\"Unpack\\\":return tidy(function(){var r=getParamValue(\\\"axis\\\",e,t,a),n=getParamValue(\\\"tensor\\\",e,t,a);return unstack(n,r)});case\\\"Tile\\\":var N=getParamValue(\\\"reps\\\",e,t,a);return[tile(getParamValue(\\\"x\\\",e,t,a),N)];case\\\"Split\\\":case\\\"SplitV\\\":r=getParamValue(\\\"axis\\\",e,t,a);var x=getParamValue(\\\"numOrSizeSplits\\\",e,t,a);return split(getParamValue(\\\"x\\\",e,t,a),x,r);case\\\"ScatterNd\\\":o=getParamValue(\\\"indices\\\",e,t,a);var V=getParamValue(\\\"values\\\",e,t,a),P=getParamValue(\\\"shape\\\",e,t,a);return[scatterND(o,V,P)];case\\\"GatherNd\\\":var b=getParamValue(\\\"x\\\",e,t,a);o=getParamValue(\\\"indices\\\",e,t,a);return[gatherND(b,o)];case\\\"SparseToDense\\\":o=getParamValue(\\\"sparseIndices\\\",e,t,a),P=getParamValue(\\\"outputShape\\\",e,t,a);var T=getParamValue(\\\"sparseValues\\\",e,t,a),O=getParamValue(\\\"defaultValue\\\",e,t,a);return[sparseToDense(o,T,P,T.dtype===O.dtype?O:O.asType(T.dtype))];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}},executeOp$14=function(e,t,a){switch(e.op){case\\\"FFT\\\":return[fft(getParamValue(\\\"x\\\",e,t,a))];case\\\"IFFT\\\":return[ifft(getParamValue(\\\"x\\\",e,t,a))];case\\\"RFFT\\\":return[rfft(getParamValue(\\\"x\\\",e,t,a))];case\\\"IRFFT\\\":return[irfft(getParamValue(\\\"x\\\",e,t,a))];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}},executeOp$15=function(e,t,a){switch(e.op){case\\\"Cast\\\":return[cast(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"dtype\\\",e,t,a))];case\\\"ExpandDims\\\":var r=getParamValue(\\\"axis\\\",e,t,a);return[expandDims(getParamValue(\\\"x\\\",e,t,a),r)];case\\\"Squeeze\\\":r=getParamValue(\\\"axis\\\",e,t,a);return[squeeze(getParamValue(\\\"x\\\",e,t,a),r)];case\\\"Reshape\\\":return[reshape(getParamValue(\\\"x\\\",e,t,a),getParamValue(\\\"shape\\\",e,t,a))];case\\\"PadV2\\\":case\\\"Pad\\\":return[pad(getParamValue(\\\"x\\\",e,t,a),split$1(getParamValue(\\\"padding\\\",e,t,a),2),getParamValue(\\\"constantValue\\\",e,t,a))];case\\\"SpaceToBatchND\\\":var n=getParamValue(\\\"blockShape\\\",e,t,a),s=split$1(getParamValue(\\\"paddings\\\",e,t,a),2);return[spaceToBatchND(getParamValue(\\\"x\\\",e,t,a),n,s)];case\\\"BatchToSpaceND\\\":n=getParamValue(\\\"blockShape\\\",e,t,a);var o=split$1(getParamValue(\\\"crops\\\",e,t,a),2);return[batchToSpaceND(getParamValue(\\\"x\\\",e,t,a),n,o)];case\\\"DepthToSpace\\\":var p=getParamValue(\\\"blockSize\\\",e,t,a),u=getParamValue(\\\"dataFormat\\\",e,t,a).toUpperCase();return[depthToSpace(getParamValue(\\\"x\\\",e,t,a),p,u)];default:throw TypeError(\\\"Node type \\\"+e.op+\\\" is not implemented\\\")}};function executeOp$16(e,t,a){var r=function(e,t,a){switch(e.category){case\\\"arithmetic\\\":return executeOp(e,t,a);case\\\"basic_math\\\":return executeOp$1(e,t,a);case\\\"control\\\":return executeOp$2(e,t,a);case\\\"convolution\\\":return executeOp$3(e,t,a);case\\\"creation\\\":return executeOp$4(e,t,a);case\\\"dynamic\\\":return executeOp$5(e,t,a);case\\\"evaluation\\\":return executeOp$6(e,t,a);case\\\"image\\\":return executeOp$8(e,t,a);case\\\"graph\\\":return executeOp$7(e,t,a);case\\\"logical\\\":return executeOp$9(e,t,a);case\\\"matrices\\\":return executeOp$10(e,t,a);case\\\"normalization\\\":return executeOp$11(e,t,a);case\\\"reduction\\\":return executeOp$12(e,t,a);case\\\"slice_join\\\":return executeOp$13(e,t,a);case\\\"spectral\\\":return executeOp$14(e,t,a);case\\\"transformation\\\":return executeOp$15(e,t,a);case\\\"custom\\\":var r=getRegisteredOp(e.op);if(r&&r.customExecutor)return r.customExecutor(new NodeValueImpl(e,t,a));throw TypeError(\\\"Custom op \\\"+e.op+\\\" is not registered.\\\");default:throw TypeError(\\\"Unknown op '\\\"+e.op+\\\"'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()\\\")}}(e,t,a);return r instanceof Promise?r.then(function(e){return[].concat(e)}):[].concat(r)}var ExecutionContext=function(){function e(e,t){this.weightMap=e,this.tensorArrayMap=t,this.rootContext={id:0,frameName:\\\"\\\",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}return e.prototype.newFrame=function(e,t){return{id:e,frameName:t,iterationId:0}},Object.defineProperty(e.prototype,\\\"currentContext\\\",{get:function(){return this.contexts},set:function(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\\\"currentContextId\\\",{get:function(){return this._currentContextIds[0]},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\\\"currentContextIds\\\",{get:function(){return this._currentContextIds},enumerable:!0,configurable:!0}),e.prototype.generateCurrentContextIds=function(){for(var e=[],t=0;t<this.contexts.length-1;t++){var a=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(a))}e.push(\\\"\\\"),this._currentContextIds=e},e.prototype.contextIdforContexts=function(e){return e?e.map(function(e){return 0===e.id&&0===e.iterationId?\\\"\\\":e.frameName+\\\"-\\\"+e.iterationId}).join(\\\"/\\\"):\\\"\\\"},e.prototype.enterFrame=function(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))},e.prototype.exitFrame=function(){if(!(this.contexts&&this.contexts.length>1))throw new Error(\\\"Cannot exit frame, the context is empty\\\");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()},e.prototype.nextIteration=function(){if(!(this.contexts&&this.contexts.length>0))throw new Error(\\\"Cannot increase frame iteration, the context is empty\\\");this.contexts=this.contexts.slice(),this.lastId++;var e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))},e.prototype.getWeight=function(e){return this.weightMap[e]},e.prototype.addTensorArray=function(e){this.tensorArrayMap[e.id]=e},e.prototype.getTensorArray=function(e){return this.tensorArrayMap[e]},e}();function getExecutionSubgraph(e,t,a){for(var r=new Set,n=[],s=null,o=null,p=new Set,u=t.slice();u.length>0;){var i=u.pop();(isControlFlow(i)||isDynamicShape(i))&&null==s&&(o=(s=i).children.map(function(e){return e.name}).filter(function(e){return r.has(e)})),r.add(i.name),null==a[i.name]&&(null==e[i.name]&&(0!==i.inputs.length?i.inputs.forEach(function(e){p.has(e.name)||(p.add(e.name),u.push(e))}):n.push(i.name)))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:n,dynamicNode:s,syncInputs:o}}function getNodesInTopologicalOrder(e,t,a){var r=a.usedNodes,n=a.inputs,s=[];Object.keys(n).map(function(t){return e.nodes[t]}).forEach(function(e){r.has(e.name)&&s.push(e)}),e.weights.forEach(function(e){r.has(e.name)&&s.push(e)});for(var o=new Set,p=[];s.length>0;){var u=s.pop();o.add(u.name),t[u.name]||p.push(u),u.children.forEach(function(e){!o.has(e.name)&&r.has(e.name)&&e.inputs.every(function(e){return o.has(e.name)})&&s.push(e)})}return p}var CONTROL_FLOW_OPS=[\\\"Switch\\\",\\\"Merge\\\",\\\"Enter\\\",\\\"Exit\\\",\\\"NextIteration\\\"],DYNAMIC_SHAPE_OPS=[\\\"NonMaxSuppressionV2\\\",\\\"NonMaxSuppressionV3\\\",\\\"Where\\\"];function isControlFlow(e){return CONTROL_FLOW_OPS.indexOf(e.op)>=0}function isDynamicShape(e){return DYNAMIC_SHAPE_OPS.indexOf(e.op)>=0}var GraphExecutor=function(){function e(e){this.graph=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=\\\",\\\",this.placeholders=e.placeholders,this._outputs=e.outputs}return Object.defineProperty(e.prototype,\\\"weightMap\\\",{get:function(){return this._weightMap},set:function(e){var t=Object.keys(e).map(function(t){return e[t].map(function(e){return e.id})});this.weightIds=[].concat.apply([],t),this._weightMap=e},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\\\"inputs\\\",{get:function(){return this.placeholders.map(function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\\\"outputs\\\",{get:function(){return this._outputs.map(function(e){return{name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\\\"inputNodes\\\",{get:function(){return this.placeholders.map(function(e){return e.name})},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\\\"outputNodes\\\",{get:function(){return this.outputs.map(function(e){return e.name})},enumerable:!0,configurable:!0}),e.prototype.getCompilationKey=function(e,t){var a=e.map(function(e){return e.name}).sort(),r=t.map(function(e){return e.name}).sort();return a.join(this.SEPERATOR)+\\\"--\\\"+r.join(this.SEPERATOR)},e.prototype.compile=function(e,t){var a=getExecutionSubgraph(e,t,this.weightMap),r=a.missingInputs,n=a.dynamicNode,s=a.syncInputs;if(null!=n)throw new Error(\\\"This execution contains the node '\\\"+n.name+\\\"', which has the dynamic op '\\\"+n.op+\\\"'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [\\\"+s+\\\"]\\\");if(r.length>0){var o=t.map(function(e){return e.name}),p=Object.keys(e);throw new Error(\\\"Cannot compute the outputs [\\\"+o+\\\"] from the provided inputs [\\\"+p+\\\"]. Missing the following inputs: [\\\"+r+\\\"]\\\")}return getNodesInTopologicalOrder(this.graph,this.weightMap,a)},e.prototype.execute=function(e,t){var a=this,r=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),this.checkOutputs(t);var n=r.map(function(e){return a.graph.nodes[e]}),s=t.map(function(e){return a.graph.nodes[parseNodeName(e)[0]]}),o=this.getCompilationKey(n,s),p=this.compiledMap.get(o);null==p&&(p=this.compile(e,s),this.compiledMap.set(o,p));var u={};return tidy(function(){var r=new ExecutionContext(a._weightMap,u),n=__assign({},a.weightMap);Object.keys(e).forEach(function(t){n[t]=[e[t]]});for(var s=a.getFrozenTensorIds(n),o={},i=0;i<p.length;i++){var m=p[i];if(!n[m.name]){var l=executeOp$16(m,n,r);if(l instanceof Promise)throw new Error(\\\"The execution of the op '\\\"+m.op+\\\"' returned a promise. Please use model.executeAsync() instead.\\\");n[m.name]=l,a.checkTensorForDisposal(m.name,m,n,r,s,t,o)}}return t.map(function(e){return getTensor(e,n,r)})})},e.prototype.getFrozenTensorIds=function(e){var t=[].concat.apply([],Object.keys(e).map(function(t){return e[t]}).map(function(e){return e.map(function(e){return e.id})}));return new Set(t)},e.prototype.checkTensorForDisposal=function(e,t,a,r,n,s,o){\\\"control\\\"!==t.category&&-1===s.indexOf(e)&&(a[e].forEach(function(e){null!=e&&(o[e.id]=(o[e.id]||0)+t.children.length)}),t.inputs.forEach(function(e){if(\\\"control\\\"!==e.category){var t=getTensorsForCurrentContenxt(e.name,a,r);null!=t&&t.forEach(function(e){if(e&&!n.has(e.id)){var t=o[e.id];1===t?(e.dispose(),delete o[e.id]):null!=t&&o[e.id]--}})}}))},e.prototype.executeAsync=function(e,t){return __awaiter(this,void 0,void 0,function(){var a,r,n,s,o,p,u=this;return __generator(this,function(i){switch(i.label){case 0:return this.checkInputs(e),this.checkInputShapeAndType(e),this.checkOutputs(t),a={},r=new ExecutionContext(this._weightMap,a),[4,this.executeWithControlFlow(e,r,t)];case 1:return n=i.sent(),s=t.map(function(e){return getTensor(e,n,r)}),o=new Set(s.map(function(e){return e.id})),p=new Set(Object.keys(e).map(function(t){return e[t].id})),Object.keys(n).forEach(function(e){n[e].forEach(function(e){!e||e.isDisposed||o.has(e.id)||p.has(e.id)||-1!==u.weightIds.indexOf(e.id)||e.dispose()})}),[2,s]}})})},e.prototype.executeWithControlFlow=function(e,t,a){return __awaiter(this,void 0,void 0,function(){var r,n,s,o,p,u,i,m,l,c,d,y,f,g,h,N,x=this;return __generator(this,function(V){switch(V.label){case 0:r=Object.keys(e),n=r.map(function(e){return x.graph.nodes[e]}),s=a.map(function(e){return x.graph.nodes[parseNodeName(e)[0]]}),o=getExecutionSubgraph(e,s,this.weightMap),p=o.usedNodes,u=o.missingInputs,i=o.dynamicNode,m=o.syncInputs,l=n.concat(this.graph.weights).map(function(e){return{node:e,contexts:t.currentContext}}),c=__assign({},this.weightMap),Object.keys(e).forEach(function(t){c[t]=[e[t]]}),d={},y=this.getFrozenTensorIds(c),f={},V.label=1;case 1:return l.length>0?(g=this.processStack(n,l,t,c,f,y,a,d,p),[4,Promise.all(g)]):[3,3];case 2:return V.sent(),[3,1];case 3:if(null==i&&console.warn(\\\"This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.\\\"),(h=s.filter(function(e){return!isControlFlow(e)&&!getTensor(e.name,c,t)}).map(function(e){return e.name})).length>0)throw N=\\\"\\\",null!=i&&(N=\\\"Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [\\\"+m+\\\"]\\\"),new Error(\\\"Cannot compute the outputs [\\\"+h+\\\"] from the provided inputs [\\\"+r+\\\"]. Consider providing the following inputs: [\\\"+u+\\\"]. \\\"+N);return[2,c]}})})},e.prototype.processStack=function(e,t,a,r,n,s,o,p,u){for(var i=this,m=[],l=function(){var l=t.pop();a.currentContext=l.contexts;var d=\\\"\\\";if(\\\"Enter\\\"===l.node.op&&getParamValue(\\\"isConstant\\\",l.node,r,a)&&(d=getNodeNameAndIndex(l.node.name,a)[0]),-1===e.indexOf(l.node)){var y=executeOp$16(l.node,r,a);d||(d=getNodeNameAndIndex(l.node.name,a)[0]);var f=a.currentContext;y instanceof Promise?m.push(y.then(function(e){return r[d]=e,a.currentContext=f,i.checkTensorForDisposal(d,l.node,r,a,s,o,p),i.processChildNodes(l.node,t,a,r,n,u),e})):(r[d]=y,c.checkTensorForDisposal(d,l.node,r,a,s,o,p),c.processChildNodes(l.node,t,a,r,n,u))}else c.processChildNodes(l.node,t,a,r,n,u)},c=this;t.length>0;)l();return m},e.prototype.processChildNodes=function(e,t,a,r,n,s){e.children.forEach(function(e){var o=getNodeNameAndIndex(e.name,a)[0];!n[o]&&s.has(e.name)&&(\\\"Merge\\\"===e.op?e.inputNames.some(function(e){return!!getTensor(e,r,a)})&&(n[o]=!0,t.push({contexts:a.currentContext,node:e})):e.inputNames.every(function(e){return!!getTensor(e,r,a)})&&(n[o]=!0,t.push({contexts:a.currentContext,node:e})))})},e.prototype.dispose=function(){var e=this;Object.keys(this.weightMap).forEach(function(t){return e.weightMap[t].forEach(function(e){return e.dispose()})})},e.prototype.checkInputShapeAndType=function(e){var t=this;Object.keys(e).forEach(function(a){var r=e[a],n=t.graph.nodes[a];if(n.attrParams.shape&&n.attrParams.shape.value){var s=n.attrParams.shape.value,o=s.length===r.shape.length&&r.shape.every(function(e,t){return-1===s[t]||s[t]===e});util.assert(o,function(){return\\\"The shape of dict['\\\"+n.name+\\\"'] provided in model.execute(dict) must be [\\\"+s+\\\"], but was [\\\"+r.shape+\\\"]\\\"})}n.attrParams.dtype&&n.attrParams.dtype.value&&util.assert(r.dtype===n.attrParams.dtype.value,function(){return\\\"The dtype of dict['\\\"+n.name+\\\"'] provided in model.execute(dict) must be \\\"+n.attrParams.dtype.value+\\\", but was \\\"+r.dtype})})},e.prototype.checkInputs=function(e){var t=this,a=Object.keys(e).filter(function(e){return!t.graph.nodes[e]});if(a.length>0)throw new Error(\\\"The dict provided in model.execute(dict) has keys: [\\\"+a+\\\"] that are not part of graph\\\")},e.prototype.checkOutputs=function(e){var t=this;e.forEach(function(e){var a=parseNodeName(e)[0];if(!t.graph.nodes[a])throw new Error(\\\"The output '\\\"+e+\\\"' is not found in the graph\\\")})},e}(),TFHUB_SEARCH_PARAM=\\\"?tfjs-format=file\\\",DEFAULT_MODEL_NAME=\\\"model.json\\\",GraphModel=function(){function e(e,t){void 0===t&&(t={}),this.modelUrl=e,this.loadOptions=t,this.version=\\\"n/a\\\",null==t&&(this.loadOptions={})}return Object.defineProperty(e.prototype,\\\"modelVersion\\\",{get:function(){return this.version},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\\\"inputNodes\\\",{get:function(){return this.executor.inputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\\\"outputNodes\\\",{get:function(){return this.executor.outputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\\\"inputs\\\",{get:function(){return this.executor.inputs},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\\\"outputs\\\",{get:function(){return this.executor.outputs},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,\\\"weights\\\",{get:function(){return this.executor.weightMap},enumerable:!0,configurable:!0}),e.prototype.findIOHandler=function(){var e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=io.browserHTTPRequest(e,this.loadOptions);else{var t=io.getLoadHandlers(e,this.loadOptions.onProgress);if(0===t.length)t.push(io.browserHTTPRequest(e,this.loadOptions));else if(t.length>1)throw new Error(\\\"Found more than one (\\\"+t.length+\\\") load handlers for URL '\\\"+[e]+\\\"'\\\");this.handler=t[0]}},e.prototype.load=function(){return __awaiter(this,void 0,void 0,function(){var e,t,a;return __generator(this,function(r){switch(r.label){case 0:if(this.findIOHandler(),null==this.handler.load)throw new Error(\\\"Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.\\\");return[4,this.handler.load()];case 1:return e=r.sent(),t=e.modelTopology,this.version=t.versions.producer+\\\".\\\"+t.versions.minConsumer,a=io.decodeWeights(e.weightData,e.weightSpecs),this.executor=new GraphExecutor(OperationMapper.Instance.transformGraph(t)),this.executor.weightMap=this.convertTensorMapToTensorsMap(a),[2,!0]}})})},e.prototype.predict=function(e,t){return this.execute(e,this.outputNodes)},e.prototype.normalizeInputs=function(e){if(!(e instanceof Tensor||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(\\\"Input tensor count mismatch,the graph model has \\\"+this.inputNodes.length+\\\" placeholders, while there are \\\"+e.length+\\\" input tensors.\\\");return this.inputNodes.reduce(function(t,a,r){return t[a]=e[r],t},{})},e.prototype.normalizeOutputs=function(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]},e.prototype.execute=function(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);var a=this.executor.execute(e,t);return a.length>1?a:a[0]},e.prototype.executeAsync=function(e,t){return __awaiter(this,void 0,void 0,function(){var a;return __generator(this,function(r){switch(r.label){case 0:return e=this.normalizeInputs(e),t=this.normalizeOutputs(t),[4,this.executor.executeAsync(e,t)];case 1:return[2,(a=r.sent()).length>1?a:a[0]]}})})},e.prototype.convertTensorMapToTensorsMap=function(e){return Object.keys(e).reduce(function(t,a){return t[a]=[e[a]],t},{})},e.prototype.dispose=function(){this.executor.dispose()},e}();function loadGraphModel(e,t){return void 0===t&&(t={}),__awaiter(this,void 0,void 0,function(){var a;return __generator(this,function(r){switch(r.label){case 0:if(null==e)throw new Error(\\\"modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model\\\");return null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith(\\\"/\\\")||(e+=\\\"/\\\"),e=\\\"\\\"+e+DEFAULT_MODEL_NAME+TFHUB_SEARCH_PARAM),[4,(a=new GraphModel(e,t)).load()];case 1:return r.sent(),[2,a]}})})}var version=\\\"1.2.9\\\";export{GraphModel,loadGraphModel,deregisterOp,registerOp,version as version_converter};\\n//# sourceMappingURL=tf-converter.esm.js.map\\n\",\"'use strict'\\n\\nexports.byteLength = byteLength\\nexports.toByteArray = toByteArray\\nexports.fromByteArray = fromByteArray\\n\\nvar lookup = []\\nvar revLookup = []\\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\\n\\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\\nfor (var i = 0, len = code.length; i < len; ++i) {\\n  lookup[i] = code[i]\\n  revLookup[code.charCodeAt(i)] = i\\n}\\n\\n// Support decoding URL-safe base64 strings, as Node.js does.\\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\\nrevLookup['-'.charCodeAt(0)] = 62\\nrevLookup['_'.charCodeAt(0)] = 63\\n\\nfunction placeHoldersCount (b64) {\\n  var len = b64.length\\n  if (len % 4 > 0) {\\n    throw new Error('Invalid string. Length must be a multiple of 4')\\n  }\\n\\n  // the number of equal signs (place holders)\\n  // if there are two placeholders, than the two characters before it\\n  // represent one byte\\n  // if there is only one, then the three characters before it represent 2 bytes\\n  // this is just a cheap hack to not do indexOf twice\\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\\n}\\n\\nfunction byteLength (b64) {\\n  // base64 is 4/3 + up to two characters of the original data\\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\\n}\\n\\nfunction toByteArray (b64) {\\n  var i, l, tmp, placeHolders, arr\\n  var len = b64.length\\n  placeHolders = placeHoldersCount(b64)\\n\\n  arr = new Arr((len * 3 / 4) - placeHolders)\\n\\n  // if there are placeholders, only get up to the last complete 4 chars\\n  l = placeHolders > 0 ? len - 4 : len\\n\\n  var L = 0\\n\\n  for (i = 0; i < l; i += 4) {\\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\\n    arr[L++] = (tmp >> 16) & 0xFF\\n    arr[L++] = (tmp >> 8) & 0xFF\\n    arr[L++] = tmp & 0xFF\\n  }\\n\\n  if (placeHolders === 2) {\\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\\n    arr[L++] = tmp & 0xFF\\n  } else if (placeHolders === 1) {\\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\\n    arr[L++] = (tmp >> 8) & 0xFF\\n    arr[L++] = tmp & 0xFF\\n  }\\n\\n  return arr\\n}\\n\\nfunction tripletToBase64 (num) {\\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\\n}\\n\\nfunction encodeChunk (uint8, start, end) {\\n  var tmp\\n  var output = []\\n  for (var i = start; i < end; i += 3) {\\n    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\\n    output.push(tripletToBase64(tmp))\\n  }\\n  return output.join('')\\n}\\n\\nfunction fromByteArray (uint8) {\\n  var tmp\\n  var len = uint8.length\\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\\n  var output = ''\\n  var parts = []\\n  var maxChunkLength = 16383 // must be multiple of 3\\n\\n  // go through the array every three bytes, we'll deal with trailing stuff later\\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\\n  }\\n\\n  // pad the end with zeros, but make sure to not forget the extra bytes\\n  if (extraBytes === 1) {\\n    tmp = uint8[len - 1]\\n    output += lookup[tmp >> 2]\\n    output += lookup[(tmp << 4) & 0x3F]\\n    output += '=='\\n  } else if (extraBytes === 2) {\\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\\n    output += lookup[tmp >> 10]\\n    output += lookup[(tmp >> 4) & 0x3F]\\n    output += lookup[(tmp << 2) & 0x3F]\\n    output += '='\\n  }\\n\\n  parts.push(output)\\n\\n  return parts.join('')\\n}\\n\",\"exports.read = function (buffer, offset, isLE, mLen, nBytes) {\\n  var e, m\\n  var eLen = nBytes * 8 - mLen - 1\\n  var eMax = (1 << eLen) - 1\\n  var eBias = eMax >> 1\\n  var nBits = -7\\n  var i = isLE ? (nBytes - 1) : 0\\n  var d = isLE ? -1 : 1\\n  var s = buffer[offset + i]\\n\\n  i += d\\n\\n  e = s & ((1 << (-nBits)) - 1)\\n  s >>= (-nBits)\\n  nBits += eLen\\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\\n\\n  m = e & ((1 << (-nBits)) - 1)\\n  e >>= (-nBits)\\n  nBits += mLen\\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\\n\\n  if (e === 0) {\\n    e = 1 - eBias\\n  } else if (e === eMax) {\\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\\n  } else {\\n    m = m + Math.pow(2, mLen)\\n    e = e - eBias\\n  }\\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\\n}\\n\\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\\n  var e, m, c\\n  var eLen = nBytes * 8 - mLen - 1\\n  var eMax = (1 << eLen) - 1\\n  var eBias = eMax >> 1\\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\\n  var i = isLE ? 0 : (nBytes - 1)\\n  var d = isLE ? 1 : -1\\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\\n\\n  value = Math.abs(value)\\n\\n  if (isNaN(value) || value === Infinity) {\\n    m = isNaN(value) ? 1 : 0\\n    e = eMax\\n  } else {\\n    e = Math.floor(Math.log(value) / Math.LN2)\\n    if (value * (c = Math.pow(2, -e)) < 1) {\\n      e--\\n      c *= 2\\n    }\\n    if (e + eBias >= 1) {\\n      value += rt / c\\n    } else {\\n      value += rt * Math.pow(2, 1 - eBias)\\n    }\\n    if (value * c >= 2) {\\n      e++\\n      c /= 2\\n    }\\n\\n    if (e + eBias >= eMax) {\\n      m = 0\\n      e = eMax\\n    } else if (e + eBias >= 1) {\\n      m = (value * c - 1) * Math.pow(2, mLen)\\n      e = e + eBias\\n    } else {\\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\\n      e = 0\\n    }\\n  }\\n\\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\\n\\n  e = (e << mLen) | m\\n  eLen += mLen\\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\\n\\n  buffer[offset + i - d] |= s * 128\\n}\\n\",\"var toString = {}.toString;\\n\\nmodule.exports = Array.isArray || function (arr) {\\n  return toString.call(arr) == '[object Array]';\\n};\\n\",\"var scope = (typeof global !== \\\"undefined\\\" && global) ||\\n            (typeof self !== \\\"undefined\\\" && self) ||\\n            window;\\nvar apply = Function.prototype.apply;\\n\\n// DOM APIs, for completeness\\n\\nexports.setTimeout = function() {\\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\\n};\\nexports.setInterval = function() {\\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\\n};\\nexports.clearTimeout =\\nexports.clearInterval = function(timeout) {\\n  if (timeout) {\\n    timeout.close();\\n  }\\n};\\n\\nfunction Timeout(id, clearFn) {\\n  this._id = id;\\n  this._clearFn = clearFn;\\n}\\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\\nTimeout.prototype.close = function() {\\n  this._clearFn.call(scope, this._id);\\n};\\n\\n// Does not start the time, just sets up the members needed.\\nexports.enroll = function(item, msecs) {\\n  clearTimeout(item._idleTimeoutId);\\n  item._idleTimeout = msecs;\\n};\\n\\nexports.unenroll = function(item) {\\n  clearTimeout(item._idleTimeoutId);\\n  item._idleTimeout = -1;\\n};\\n\\nexports._unrefActive = exports.active = function(item) {\\n  clearTimeout(item._idleTimeoutId);\\n\\n  var msecs = item._idleTimeout;\\n  if (msecs >= 0) {\\n    item._idleTimeoutId = setTimeout(function onTimeout() {\\n      if (item._onTimeout)\\n        item._onTimeout();\\n    }, msecs);\\n  }\\n};\\n\\n// setimmediate attaches itself to the global object\\nrequire(\\\"setimmediate\\\");\\n// On some exotic environments, it's not clear which object `setimmediate` was\\n// able to install onto.  Search each possibility in the same order as the\\n// `setimmediate` library.\\nexports.setImmediate = (typeof self !== \\\"undefined\\\" && self.setImmediate) ||\\n                       (typeof global !== \\\"undefined\\\" && global.setImmediate) ||\\n                       (this && this.setImmediate);\\nexports.clearImmediate = (typeof self !== \\\"undefined\\\" && self.clearImmediate) ||\\n                         (typeof global !== \\\"undefined\\\" && global.clearImmediate) ||\\n                         (this && this.clearImmediate);\\n\",\"(function (global, undefined) {\\n    \\\"use strict\\\";\\n\\n    if (global.setImmediate) {\\n        return;\\n    }\\n\\n    var nextHandle = 1; // Spec says greater than zero\\n    var tasksByHandle = {};\\n    var currentlyRunningATask = false;\\n    var doc = global.document;\\n    var registerImmediate;\\n\\n    function setImmediate(callback) {\\n      // Callback can either be a function or a string\\n      if (typeof callback !== \\\"function\\\") {\\n        callback = new Function(\\\"\\\" + callback);\\n      }\\n      // Copy function arguments\\n      var args = new Array(arguments.length - 1);\\n      for (var i = 0; i < args.length; i++) {\\n          args[i] = arguments[i + 1];\\n      }\\n      // Store and register the task\\n      var task = { callback: callback, args: args };\\n      tasksByHandle[nextHandle] = task;\\n      registerImmediate(nextHandle);\\n      return nextHandle++;\\n    }\\n\\n    function clearImmediate(handle) {\\n        delete tasksByHandle[handle];\\n    }\\n\\n    function run(task) {\\n        var callback = task.callback;\\n        var args = task.args;\\n        switch (args.length) {\\n        case 0:\\n            callback();\\n            break;\\n        case 1:\\n            callback(args[0]);\\n            break;\\n        case 2:\\n            callback(args[0], args[1]);\\n            break;\\n        case 3:\\n            callback(args[0], args[1], args[2]);\\n            break;\\n        default:\\n            callback.apply(undefined, args);\\n            break;\\n        }\\n    }\\n\\n    function runIfPresent(handle) {\\n        // From the spec: \\\"Wait until any invocations of this algorithm started before this one have completed.\\\"\\n        // So if we're currently running a task, we'll need to delay this invocation.\\n        if (currentlyRunningATask) {\\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\\n            // \\\"too much recursion\\\" error.\\n            setTimeout(runIfPresent, 0, handle);\\n        } else {\\n            var task = tasksByHandle[handle];\\n            if (task) {\\n                currentlyRunningATask = true;\\n                try {\\n                    run(task);\\n                } finally {\\n                    clearImmediate(handle);\\n                    currentlyRunningATask = false;\\n                }\\n            }\\n        }\\n    }\\n\\n    function installNextTickImplementation() {\\n        registerImmediate = function(handle) {\\n            process.nextTick(function () { runIfPresent(handle); });\\n        };\\n    }\\n\\n    function canUsePostMessage() {\\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\\n        if (global.postMessage && !global.importScripts) {\\n            var postMessageIsAsynchronous = true;\\n            var oldOnMessage = global.onmessage;\\n            global.onmessage = function() {\\n                postMessageIsAsynchronous = false;\\n            };\\n            global.postMessage(\\\"\\\", \\\"*\\\");\\n            global.onmessage = oldOnMessage;\\n            return postMessageIsAsynchronous;\\n        }\\n    }\\n\\n    function installPostMessageImplementation() {\\n        // Installs an event handler on `global` for the `message` event: see\\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\\n\\n        var messagePrefix = \\\"setImmediate$\\\" + Math.random() + \\\"$\\\";\\n        var onGlobalMessage = function(event) {\\n            if (event.source === global &&\\n                typeof event.data === \\\"string\\\" &&\\n                event.data.indexOf(messagePrefix) === 0) {\\n                runIfPresent(+event.data.slice(messagePrefix.length));\\n            }\\n        };\\n\\n        if (global.addEventListener) {\\n            global.addEventListener(\\\"message\\\", onGlobalMessage, false);\\n        } else {\\n            global.attachEvent(\\\"onmessage\\\", onGlobalMessage);\\n        }\\n\\n        registerImmediate = function(handle) {\\n            global.postMessage(messagePrefix + handle, \\\"*\\\");\\n        };\\n    }\\n\\n    function installMessageChannelImplementation() {\\n        var channel = new MessageChannel();\\n        channel.port1.onmessage = function(event) {\\n            var handle = event.data;\\n            runIfPresent(handle);\\n        };\\n\\n        registerImmediate = function(handle) {\\n            channel.port2.postMessage(handle);\\n        };\\n    }\\n\\n    function installReadyStateChangeImplementation() {\\n        var html = doc.documentElement;\\n        registerImmediate = function(handle) {\\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\\n            var script = doc.createElement(\\\"script\\\");\\n            script.onreadystatechange = function () {\\n                runIfPresent(handle);\\n                script.onreadystatechange = null;\\n                html.removeChild(script);\\n                script = null;\\n            };\\n            html.appendChild(script);\\n        };\\n    }\\n\\n    function installSetTimeoutImplementation() {\\n        registerImmediate = function(handle) {\\n            setTimeout(runIfPresent, 0, handle);\\n        };\\n    }\\n\\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\\n\\n    // Don't get fooled by e.g. browserify environments.\\n    if ({}.toString.call(global.process) === \\\"[object process]\\\") {\\n        // For Node.js before 0.9\\n        installNextTickImplementation();\\n\\n    } else if (canUsePostMessage()) {\\n        // For non-IE10 modern browsers\\n        installPostMessageImplementation();\\n\\n    } else if (global.MessageChannel) {\\n        // For web workers, where supported\\n        installMessageChannelImplementation();\\n\\n    } else if (doc && \\\"onreadystatechange\\\" in doc.createElement(\\\"script\\\")) {\\n        // For IE 6–8\\n        installReadyStateChangeImplementation();\\n\\n    } else {\\n        // For older browsers\\n        installSetTimeoutImplementation();\\n    }\\n\\n    attachTo.setImmediate = setImmediate;\\n    attachTo.clearImmediate = clearImmediate;\\n}(typeof self === \\\"undefined\\\" ? typeof global === \\\"undefined\\\" ? this : global : self));\\n\",\"/**\\n    * @license\\n    * Copyright 2019 Google LLC. All Rights Reserved.\\n    * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n    * you may not use this file except in compliance with the License.\\n    * You may obtain a copy of the License at\\n    *\\n    * http://www.apache.org/licenses/LICENSE-2.0\\n    *\\n    * Unless required by applicable law or agreed to in writing, software\\n    * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n    * See the License for the specific language governing permissions and\\n    * limitations under the License.\\n    * =============================================================================\\n    */\\nimport*as tf from\\\"@tensorflow/tfjs-core\\\";import{tidy,util,oneHot,scalar,range,Tensor,browser,pad3d,slice3d,div,sub}from\\\"@tensorflow/tfjs-core\\\";import{loadGraphModel}from\\\"@tensorflow/tfjs-converter\\\";function __awaiter(e,t,r,a){return new(r||(r=Promise))(function(n,o){function i(e){try{d(a.next(e))}catch(e){o(e)}}function s(e){try{d(a.throw(e))}catch(e){o(e)}}function d(e){e.done?n(e.value):new r(function(t){t(e.value)}).then(i,s)}d((a=a.apply(e,t||[])).next())})}function __generator(e,t){var r,a,n,o,i={label:0,sent:function(){if(1&n[0])throw n[1];return n[1]},trys:[],ops:[]};return o={next:s(0),throw:s(1),return:s(2)},\\\"function\\\"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function s(o){return function(s){return function(o){if(r)throw new TypeError(\\\"Generator is already executing.\\\");for(;i;)try{if(r=1,a&&(n=2&o[0]?a.return:o[0]?a.throw||((n=a.return)&&n.call(a),0):a.next)&&!(n=n.call(a,o[1])).done)return n;switch(a=0,n&&(o=[2&o[0],n.value]),o[0]){case 0:case 1:n=o;break;case 4:return i.label++,{value:o[1],done:!1};case 5:i.label++,a=o[1],o=[0];continue;case 7:o=i.ops.pop(),i.trys.pop();continue;default:if(!(n=(n=i.trys).length>0&&n[n.length-1])&&(6===o[0]||2===o[0])){i=0;continue}if(3===o[0]&&(!n||o[1]>n[0]&&o[1]<n[3])){i.label=o[1];break}if(6===o[0]&&i.label<n[1]){i.label=n[1],n=o;break}if(n&&i.label<n[2]){i.label=n[2],i.ops.push(o);break}n[2]&&i.ops.pop(),i.trys.pop();continue}o=t.call(e,i)}catch(e){o=[6,e],a=0}finally{r=n=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,s])}}}var mobileNet100Architecture=[[\\\"conv2d\\\",2],[\\\"separableConv\\\",1],[\\\"separableConv\\\",2],[\\\"separableConv\\\",1],[\\\"separableConv\\\",2],[\\\"separableConv\\\",1],[\\\"separableConv\\\",2],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",2],[\\\"separableConv\\\",1]],mobileNet75Architecture=[[\\\"conv2d\\\",2],[\\\"separableConv\\\",1],[\\\"separableConv\\\",2],[\\\"separableConv\\\",1],[\\\"separableConv\\\",2],[\\\"separableConv\\\",1],[\\\"separableConv\\\",2],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1]],mobileNet50Architecture=[[\\\"conv2d\\\",2],[\\\"separableConv\\\",1],[\\\"separableConv\\\",2],[\\\"separableConv\\\",1],[\\\"separableConv\\\",2],[\\\"separableConv\\\",1],[\\\"separableConv\\\",2],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1],[\\\"separableConv\\\",1]],mobileNet25Architecture=mobileNet50Architecture,VALID_OUTPUT_STRIDES=[8,16,32];function assertValidOutputStride(e){util.assert(\\\"number\\\"==typeof e,function(){return\\\"outputStride is not a number\\\"}),util.assert(VALID_OUTPUT_STRIDES.indexOf(e)>=0,function(){return\\\"outputStride of \\\"+e+\\\" is invalid. It must be either 8, 16, or 32\\\"})}var mobileNetArchitectures={100:mobileNet100Architecture,75:mobileNet75Architecture,50:mobileNet50Architecture,25:mobileNet25Architecture};function toOutputStridedLayers(e,t){var r=1,a=1;return e.map(function(e,n){var o,i,s=e[0],d=e[1];return r===t?(o=1,i=a,a*=d):(o=d,i=1,r*=d),{blockId:n,convType:s,stride:o,rate:i,outputStride:r}})}var MobileNet=function(){function e(e,t){this.PREPROCESS_DIVISOR=scalar(127.5),this.ONE=scalar(1),this.modelWeights=e,this.convolutionDefinitions=t}return e.prototype.predict=function(e,t){var r=this,a=div(e.toFloat(),this.PREPROCESS_DIVISOR),n=sub(a,this.ONE);return toOutputStridedLayers(this.convolutionDefinitions,t).reduce(function(e,t){var a=t.blockId,n=t.stride,o=t.convType,i=t.rate;if(\\\"conv2d\\\"===o)return r.conv(e,n,a);if(\\\"separableConv\\\"===o)return r.separableConv(e,n,a,i);throw Error(\\\"Unknown conv type of \\\"+o)},n)},e.prototype.convToOutput=function(e,t){return e.conv2d(this.weights(t),1,\\\"same\\\").add(this.convBias(t,!1))},e.prototype.conv=function(e,t,r){var a=this.weights(\\\"Conv2d_\\\"+String(r));return e.conv2d(a,t,\\\"same\\\").add(this.convBias(\\\"Conv2d_\\\"+String(r))).clipByValue(0,6)},e.prototype.separableConv=function(e,t,r,a){void 0===a&&(a=1);var n=\\\"Conv2d_\\\"+String(r)+\\\"_depthwise\\\",o=\\\"Conv2d_\\\"+String(r)+\\\"_pointwise\\\";return e.depthwiseConv2D(this.depthwiseWeights(n),t,\\\"same\\\",\\\"NHWC\\\",a).add(this.depthwiseBias(n)).clipByValue(0,6).conv2d(this.weights(o),[1,1],\\\"same\\\").add(this.convBias(o)).clipByValue(0,6)},e.prototype.weights=function(e){return this.modelWeights.weights(e)},e.prototype.convBias=function(e,t){return void 0===t&&(t=!0),this.modelWeights.convBias(e,t)},e.prototype.depthwiseBias=function(e){return this.modelWeights.depthwiseBias(e)},e.prototype.depthwiseWeights=function(e){return this.modelWeights.depthwiseWeights(e)},e.prototype.dispose=function(){this.modelWeights.dispose()},e}(),BASE_URL=\\\"https://storage.googleapis.com/tfjs-models/savedmodel/\\\",checkpoints={1:{url:BASE_URL+\\\"posenet_mobilenet_100_partmap/\\\",architecture:mobileNetArchitectures[100]},.75:{url:BASE_URL+\\\"posenet_mobilenet_075_partmap/\\\",architecture:mobileNetArchitectures[75]},.5:{url:BASE_URL+\\\"posenet_mobilenet_050_partmap/\\\",architecture:mobileNetArchitectures[50]},.25:{url:BASE_URL+\\\"posenet_mobilenet_025_partmap/\\\",architecture:mobileNetArchitectures[25]}};function toFlattenedOneHotPartMap(e){var t=e.shape[2],r=e.argMax(2).reshape([-1]);return oneHot(r,t)}function clipByMask2d(e,t){return e.mul(t)}function toMask(e,t){return tidy(function(){return e.greater(scalar(t)).toInt()})}function decodePartSegmentation(e,t){var r=t.shape,a=r[0],n=r[1],o=r[2];return tidy(function(){var r=toFlattenedOneHotPartMap(t),i=range(0,o,1,\\\"int32\\\").expandDims(1);return clipByMask2d(r.matMul(i).toInt().reshape([a,n]).add(scalar(1,\\\"int32\\\")),e).sub(scalar(1,\\\"int32\\\"))})}var ModelWeights=function(){function e(e){this.graphModel=e}return e.prototype.weights=function(e){return this.getVariable(\\\"MobilenetV1/\\\"+e+\\\"/weights\\\")},e.prototype.convBias=function(e,t){return void 0===t&&(t=!0),this.getVariable(\\\"MobilenetV1/\\\"+e+\\\"/Conv2D_bias\\\")},e.prototype.depthwiseBias=function(e){return this.getVariable(\\\"MobilenetV1/\\\"+e+\\\"/depthwise_bias\\\")},e.prototype.depthwiseWeights=function(e){return this.getVariable(\\\"MobilenetV1/\\\"+e+\\\"/depthwise_weights\\\")},e.prototype.getVariable=function(e){return this.graphModel.weights[\\\"\\\"+e][0]},e.prototype.dispose=function(){this.graphModel.dispose()},e}();function toInputTensor(e){return e instanceof Tensor?e:browser.fromPixels(e)}function resizeAndPadTo(e,t,r){var a=t[0],n=t[1];void 0===r&&(r=!1);var o,i,s,d,u,l,c=e.shape,p=c[0],h=c[1]/p;if(h>n/a){o=n;var f=a-(i=Math.ceil(o/h));s=0,d=0,u=Math.floor(f/2),l=a-(i+u)}else{i=a;var v=n-(o=Math.ceil(a*h));s=Math.floor(v/2),d=n-(o+s),u=0,l=0}return{resizedAndPadded:tidy(function(){var t;return t=r?e.reverse(1).resizeBilinear([i,o]):e.resizeBilinear([i,o]),pad3d(t,[[u,l],[s,d],[0,0]])}),paddedBy:[[u,l],[s,d]]}}function scaleAndCropToInputTensorShape(e,t,r,a){var n=t[0],o=t[1],i=r[0],s=r[1],d=a[0],u=d[0],l=d[1],c=a[1],p=c[0],h=c[1];return tidy(function(){return removePaddingAndResizeBack(e.resizeBilinear([i,s],!0),[n,o],[[u,l],[p,h]])})}function removePaddingAndResizeBack(e,t,r){var a=t[0],n=t[1],o=r[0],i=o[0],s=o[1],d=r[1],u=d[0],l=d[1],c=e.shape,p=c[0],h=c[1],f=p-(i+s),v=h-(u+l);return tidy(function(){return slice3d(e,[i,u,0],[f,v,e.shape[2]]).resizeBilinear([a,n],!0)})}var _this=void 0,segmentationModelImageDimensions=[353,257],BodyPix=function(){function e(e){this.mobileNet=e}return e.prototype.predictForSegmentation=function(e,t){var r=this;return void 0===t&&(t=16),assertValidOutputStride(t),tidy(function(){var a=r.mobileNet.predict(e,t);return r.mobileNet.convToOutput(a,\\\"segment_2\\\").sigmoid()})},e.prototype.predictForPartMap=function(e,t){var r=this;return void 0===t&&(t=16),assertValidOutputStride(t),tidy(function(){var a=r.mobileNet.predict(e,t),n=r.mobileNet.convToOutput(a,\\\"segment_2\\\"),o=r.mobileNet.convToOutput(a,\\\"part_heatmap_2\\\");return{segmentScores:n.sigmoid(),partHeatmapScores:o.sigmoid()}})},e.prototype.estimatePersonSegmentationActivation=function(e,t,r){var a=this;return void 0===t&&(t=16),void 0===r&&(r=.5),assertValidOutputStride(t),tidy(function(){var n=toInputTensor(e),o=resizeAndPadTo(n,segmentationModelImageDimensions),i=o.resizedAndPadded,s=o.paddedBy,d=a.predictForSegmentation(i,t),u=i.shape,l=u[0],c=u[1],p=n.shape;return toMask(scaleAndCropToInputTensorShape(d,[p[0],p[1]],[l,c],s).squeeze(),r)})},e.prototype.estimatePersonSegmentation=function(e,t,r){return void 0===t&&(t=16),void 0===r&&(r=.5),__awaiter(this,void 0,void 0,function(){var a,n,o,i,s;return __generator(this,function(d){switch(d.label){case 0:return a=this.estimatePersonSegmentationActivation(e,t,r),n=a.shape,o=n[0],i=n[1],[4,a.data()];case 1:return s=d.sent(),a.dispose(),[2,{height:o,width:i,data:s}]}})})},e.prototype.estimatePartSegmentationActivation=function(e,t,r){var a=this;return void 0===t&&(t=16),void 0===r&&(r=.5),assertValidOutputStride(t),tidy(function(){var n=toInputTensor(e),o=resizeAndPadTo(n,segmentationModelImageDimensions),i=o.resizedAndPadded,s=o.paddedBy,d=a.predictForPartMap(i,t),u=d.segmentScores,l=d.partHeatmapScores,c=i.shape,p=c[0],h=c[1],f=n.shape,v=f[0],m=f[1],g=scaleAndCropToInputTensorShape(u,[v,m],[p,h],s),b=scaleAndCropToInputTensorShape(l,[v,m],[p,h],s);return decodePartSegmentation(toMask(g.squeeze(),r),b)})},e.prototype.estimatePartSegmentation=function(e,t,r){return void 0===t&&(t=16),void 0===r&&(r=.5),__awaiter(this,void 0,void 0,function(){var a,n,o,i,s;return __generator(this,function(d){switch(d.label){case 0:return a=this.estimatePartSegmentationActivation(e,t,r),n=a.shape,o=n[0],i=n[1],[4,a.data()];case 1:return s=d.sent(),a.dispose(),[2,{height:o,width:i,data:s}]}})})},e.prototype.dispose=function(){this.mobileNet.dispose()},e}();function load(e){return void 0===e&&(e=.75),__awaiter(this,void 0,void 0,function(){var t,r;return __generator(this,function(a){switch(a.label){case 0:if(null==tf)throw new Error(\\\"Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.\\\");return t=Object.keys(checkpoints),util.assert(\\\"number\\\"==typeof e,function(){return\\\"got multiplier type of \\\"+typeof e+\\\" when it should be a number.\\\"}),util.assert(t.indexOf(e.toString())>=0,function(){return\\\"invalid multiplier value of \\\"+e+\\\".  No checkpoint exists for that multiplier. Must be one of \\\"+t.join(\\\",\\\")+\\\".\\\"}),[4,mobilenetLoader.load(e)];case 1:return r=a.sent(),[2,new BodyPix(r)]}})})}var mobilenetLoader={load:function(e){return __awaiter(_this,void 0,void 0,function(){var t,r,a,n;return __generator(this,function(o){switch(o.label){case 0:return t=checkpoints[e],r=t.url,[4,loadGraphModel(r+\\\"model.json\\\")];case 1:return a=o.sent(),n=new ModelWeights(a),[2,new MobileNet(n,t.architecture)]}})})}};function cpuBlur(e,t,r){for(var a=e.getContext(\\\"2d\\\"),n=0,o=1/(2*Math.PI*5*5),i=r<3?1:2,s=-r;s<=r;s+=i)for(var d=-r;d<=r;d+=i){n+=o*Math.exp(-(d*d+s*s)/50)}for(s=-r;s<=r;s+=i)for(d=-r;d<=r;d+=i)a.globalAlpha=o*Math.exp(-(d*d+s*s)/50)/n*r,a.drawImage(t,d,s);a.globalAlpha=1}var offScreenCanvases={};function isSafari(){return/^((?!chrome|android).)*safari/i.test(navigator.userAgent)}function assertSameDimensions(e,t,r,a){var n=e.width,o=e.height,i=t.width,s=t.height;if(n!==i||o!==s)throw new Error(\\\"error: dimensions must match. \\\"+r+\\\" has dimensions \\\"+n+\\\"x\\\"+o+\\\", \\\"+a+\\\" has dimensions \\\"+i+\\\"x\\\"+s)}function flipCanvasHorizontal(e){var t=e.getContext(\\\"2d\\\");t.scale(-1,1),t.translate(-e.width,0)}function drawWithCompositing(e,t,r){e.globalCompositeOperation=r,e.drawImage(t,0,0)}function createOffScreenCanvas(){return document.createElement(\\\"canvas\\\")}function ensureOffscreenCanvasCreated(e){return offScreenCanvases[e]||(offScreenCanvases[e]=createOffScreenCanvas()),offScreenCanvases[e]}function drawAndBlurImageOnCanvas(e,t,r){var a=e.height,n=e.width,o=r.getContext(\\\"2d\\\");r.width=n,r.height=a,o.clearRect(0,0,n,a),o.save(),isSafari()?cpuBlur(r,e,t):(o.filter=\\\"blur(\\\"+t+\\\"px)\\\",o.drawImage(e,0,0,n,a)),o.restore()}function drawAndBlurImageOnOffScreenCanvas(e,t,r){var a=ensureOffscreenCanvasCreated(r);return 0===t?renderImageToCanvas(e,a):drawAndBlurImageOnCanvas(e,t,a),a}function renderImageToCanvas(e,t){var r=e.width,a=e.height;t.width=r,t.height=a,t.getContext(\\\"2d\\\").drawImage(e,0,0,r,a)}function renderImageDataToCanvas(e,t){t.width=e.width,t.height=e.height,t.getContext(\\\"2d\\\").putImageData(e,0,0)}function renderImageDataToOffScreenCanvas(e,t){var r=ensureOffscreenCanvasCreated(t);return renderImageDataToCanvas(e,r),r}function toMaskImageData(e,t){void 0===t&&(t=!0);for(var r=e.width,a=e.height,n=e.data,o=new Uint8ClampedArray(r*a*4),i=0;i<a*r;++i){var s=255*(t?1-n[i]:n[i]),d=4*i;o[d+0]=0,o[d+1]=0,o[d+2]=0,o[d+3]=Math.round(s)}return new ImageData(o,r,a)}function toColoredPartImageData(e,t){for(var r=e.width,a=e.height,n=e.data,o=new Uint8ClampedArray(r*a*4),i=0;i<a*r;++i){var s=Math.round(n[i]),d=4*i;if(-1===s)o[d+0]=255,o[d+1]=255,o[d+2]=255,o[d+3]=255;else{var u=t[s];if(!u)throw new Error(\\\"No color could be found for part id \\\"+s);o[d+0]=u[0],o[d+1]=u[1],o[d+2]=u[2],o[d+3]=255}}return new ImageData(o,r,a)}var CANVAS_NAMES={blurred:\\\"blurred\\\",blurredMask:\\\"blurred-mask\\\",mask:\\\"mask\\\",lowresPartMask:\\\"lowres-part-mask\\\"};function drawMask(e,t,r,a,n,o){void 0===a&&(a=.7),void 0===n&&(n=0),void 0===o&&(o=!1),assertSameDimensions(t,r,\\\"image\\\",\\\"mask\\\");var i=drawAndBlurImageOnOffScreenCanvas(renderImageDataToOffScreenCanvas(r,CANVAS_NAMES.mask),n,CANVAS_NAMES.blurredMask);e.width=i.width,e.height=i.height;var s=e.getContext(\\\"2d\\\");s.save(),o&&flipCanvasHorizontal(e),s.drawImage(t,0,0),s.globalAlpha=a,s.drawImage(i,0,0),s.restore()}function drawPixelatedMask(e,t,r,a,n,o,i){void 0===a&&(a=.7),void 0===n&&(n=0),void 0===o&&(o=!1),void 0===i&&(i=10),assertSameDimensions(t,r,\\\"image\\\",\\\"mask\\\");var s=drawAndBlurImageOnOffScreenCanvas(renderImageDataToOffScreenCanvas(r,CANVAS_NAMES.mask),n,CANVAS_NAMES.blurredMask);e.width=s.width,e.height=s.height;var d=e.getContext(\\\"2d\\\");d.save(),o&&flipCanvasHorizontal(e);var u=ensureOffscreenCanvasCreated(CANVAS_NAMES.lowresPartMask),l=u.getContext(\\\"2d\\\");u.width=s.width*(1/i),u.height=s.height*(1/i),l.drawImage(s,0,0,s.width,s.height,0,0,u.width,u.height),d.imageSmoothingEnabled=!1,d.drawImage(u,0,0,u.width,u.height,0,0,e.width,e.height);for(var c=0;c<u.width;c++)d.beginPath(),d.strokeStyle=\\\"#ffffff\\\",d.moveTo(i*c,0),d.lineTo(i*c,e.height),d.stroke();for(c=0;c<u.height;c++)d.beginPath(),d.strokeStyle=\\\"#ffffff\\\",d.moveTo(0,i*c),d.lineTo(e.width,i*c),d.stroke();d.globalAlpha=1-a,d.drawImage(t,0,0),d.restore()}function createPersonMask(e,t){var r=renderImageDataToOffScreenCanvas(toMaskImageData(e,!1),CANVAS_NAMES.mask);return 0===t?r:drawAndBlurImageOnOffScreenCanvas(r,t,CANVAS_NAMES.blurredMask)}function drawBokehEffect(e,t,r,a,n,o){void 0===a&&(a=3),void 0===n&&(n=3),void 0===o&&(o=!1),assertSameDimensions(t,r,\\\"image\\\",\\\"segmentation\\\");var i=drawAndBlurImageOnOffScreenCanvas(t,a,CANVAS_NAMES.blurred),s=createPersonMask(r,n),d=e.getContext(\\\"2d\\\");d.save(),o&&flipCanvasHorizontal(e),d.drawImage(t,0,0),drawWithCompositing(d,s,\\\"destination-in\\\"),drawWithCompositing(d,i,\\\"destination-over\\\"),d.restore()}var partChannels=[\\\"leftFace\\\",\\\"rightFace\\\",\\\"rightUpperLegFront\\\",\\\"rightLowerLegBack\\\",\\\"rightUpperLegBack\\\",\\\"leftLowerLegFront\\\",\\\"leftUpperLegFront\\\",\\\"leftUpperLegBack\\\",\\\"leftLowerLegBack\\\",\\\"rightFeet\\\",\\\"rightLowerLegFront\\\",\\\"leftFeet\\\",\\\"torsoFront\\\",\\\"torsoBack\\\",\\\"rightUpperArmFront\\\",\\\"rightUpperArmBack\\\",\\\"rightLowerArmBack\\\",\\\"leftLowerArmFront\\\",\\\"leftUpperArmFront\\\",\\\"leftUpperArmBack\\\",\\\"leftLowerArmBack\\\",\\\"rightHand\\\",\\\"rightLowerArmFront\\\",\\\"leftHand\\\"];export{BodyPix,load,checkpoints,decodePartSegmentation,toMask,drawBokehEffect,drawMask,drawPixelatedMask,toColoredPartImageData,toMaskImageData,partChannels,resizeAndPadTo,scaleAndCropToInputTensorShape};\\n\",\"\\n/**\\n * SET_INTERVAL constant is used to set interval and it is set in\\n * the id property of the request.data property. timeMs property must\\n * also be set. request.data example:\\n *\\n * {\\n *      id: SET_INTERVAL,\\n *      timeMs: 33\\n * }\\n */\\nexport const SET_INTERVAL = 1;\\n\\n/**\\n * CLEAR_INTERVAL constant is used to clear the interval and it is set in\\n * the id property of the request.data property.\\n *\\n * {\\n *      id: CLEAR_INTERVAL\\n * }\\n */\\nexport const CLEAR_INTERVAL = 2;\\n\\n/**\\n * INTERVAL_TIMEOUT constant is used as response and it is set in the id property.\\n *\\n * {\\n *      id: INTERVAL_TIMEOUT\\n * }\\n */\\nexport const INTERVAL_TIMEOUT = 3;\\n\\n/**\\n * The following code is needed as string to create a URL from a Blob.\\n * The URL is then passed to a WebWorker. Reason for this is to enable\\n * use of setInterval that is not throttled when tab is inactive.\\n */\\nconst code = `\\n    var timer;\\n\\n    onmessage = function(request) {\\n        switch (request.data.id) {\\n        case ${SET_INTERVAL}: {\\n            timer = setInterval(() => {\\n                postMessage({ id: ${INTERVAL_TIMEOUT} });\\n            }, request.data.timeMs);\\n            break;\\n        }\\n        case ${CLEAR_INTERVAL}: {\\n            if (timer) {\\n                clearInterval(timer);\\n            }\\n            break;\\n        }\\n        }\\n    };\\n`;\\n\\nexport const timerWorkerScript = URL.createObjectURL(new Blob([ code ], { type: 'application/javascript' }));\\n\",\"\\nimport { drawBokehEffect } from '@tensorflow-models/body-pix';\\n\\nimport {\\n    CLEAR_INTERVAL,\\n    INTERVAL_TIMEOUT,\\n    SET_INTERVAL,\\n    timerWorkerScript\\n} from './TimerWorker';\\n\\n/**\\n * Represents a modified MediaStream that adds blur to video background.\\n * <tt>JitsiStreamBlurEffect</tt> does the processing of the original\\n * video stream.\\n */\\nexport default class JitsiStreamBlurEffect {\\n    /**\\n     * Represents a modified video MediaStream track.\\n     *\\n     * @class\\n     * @param {BodyPix} bpModel - BodyPix model.\\n     */\\n    constructor(bpModel) {\\n        this._bpModel = bpModel;\\n\\n        // Bind event handler so it is only bound once for every instance.\\n        this._onMaskFrameTimer = this._onMaskFrameTimer.bind(this);\\n        this._onVideoFrameTimer = this._onVideoFrameTimer.bind(this);\\n\\n        this._outputCanvasElement = document.createElement('canvas');\\n\\n        // Workaround for FF issue https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\\n        this._outputCanvasElement.getContext('2d');\\n\\n        this._maskCanvasElement = document.createElement('canvas');\\n        this._inputVideoElement = document.createElement('video');\\n\\n        this._videoFrameTimerWorker = new Worker(timerWorkerScript);\\n        this._maskFrameTimerWorker = new Worker(timerWorkerScript);\\n        this._videoFrameTimerWorker.onmessage = this._onVideoFrameTimer;\\n        this._maskFrameTimerWorker.onmessage = this._onMaskFrameTimer;\\n    }\\n\\n    /**\\n     * EventHandler onmessage for the videoFrameTimerWorker WebWorker.\\n     *\\n     * @private\\n     * @param {EventHandler} response - The onmessage EventHandler parameter.\\n     * @returns {void}\\n     */\\n    _onVideoFrameTimer(response) {\\n        if (response.data.id === INTERVAL_TIMEOUT) {\\n            this._renderVideo();\\n        }\\n    }\\n\\n    /**\\n     * EventHandler onmessage for the maskFrameTimerWorker WebWorker.\\n     *\\n     * @private\\n     * @param {EventHandler} response - The onmessage EventHandler parameter.\\n     * @returns {void}\\n     */\\n    _onMaskFrameTimer(response) {\\n        if (response.data.id === INTERVAL_TIMEOUT) {\\n            this._renderMask();\\n        }\\n    }\\n\\n    /**\\n     * Starts loop to capture video frame and render the segmentation mask.\\n     *\\n     * @param {MediaStream} stream - Stream to be used for processing.\\n     * @returns {MediaStream} - The stream with the applied effect.\\n     */\\n    startEffect(stream) {\\n        const firstVideoTrack = stream.getVideoTracks()[0];\\n        const { height, frameRate, width }\\n            = firstVideoTrack.getSettings ? firstVideoTrack.getSettings() : firstVideoTrack.getConstraints();\\n\\n        this._frameRate = frameRate;\\n        this._height = height;\\n        this._width = width;\\n\\n        this._outputCanvasElement.width = width;\\n        this._outputCanvasElement.height = height;\\n\\n        this._maskCanvasElement.width = width;\\n        this._maskCanvasElement.height = height;\\n\\n        this._maskCanvasContext = this._maskCanvasElement.getContext('2d');\\n        this._inputVideoElement.width = width;\\n        this._inputVideoElement.height = height;\\n        this._inputVideoElement.autoplay = true;\\n        this._inputVideoElement.srcObject = stream;\\n\\n        this._videoFrameTimerWorker.postMessage({\\n            id: SET_INTERVAL,\\n            timeMs: 1000 / this._frameRate\\n        });\\n        this._maskFrameTimerWorker.postMessage({\\n            id: SET_INTERVAL,\\n            timeMs: 50\\n        });\\n\\n        return this._outputCanvasElement.captureStream(this._frameRate);\\n    }\\n\\n    /**\\n     * Stops the capture and render loop.\\n     *\\n     * @returns {void}\\n     */\\n    stopEffect() {\\n        this._videoFrameTimerWorker.postMessage({\\n            id: CLEAR_INTERVAL\\n        });\\n        this._maskFrameTimerWorker.postMessage({\\n            id: CLEAR_INTERVAL\\n        });\\n    }\\n\\n    /**\\n     * Loop function to render the video frame input and draw blur effect.\\n     *\\n     * @private\\n     * @returns {void}\\n     */\\n    _renderVideo() {\\n        this._maskCanvasContext.drawImage(this._inputVideoElement, 0, 0, this._width, this._height);\\n        if (this._segmentationData) {\\n            drawBokehEffect(\\n                this._outputCanvasElement,\\n                this._inputVideoElement,\\n                this._segmentationData,\\n                7, // Constant for background blur, integer values between 0-20\\n                7 // Constant for edge blur, integer values between 0-20\\n            );\\n\\n            // Make sure we clear this buffer before feeding the segmentation data\\n            // to drawBokehEffect for creating the blur. This fixes the memory leak\\n            // that started happening in WebGL in Chrome 77 and up.\\n            this._segmentationData = null;\\n        }\\n    }\\n\\n    /**\\n     * Loop function to render the background mask.\\n     *\\n     * @private\\n     * @returns {void}\\n     */\\n    _renderMask() {\\n        this._bpModel.estimatePersonSegmentation(\\n            this._maskCanvasElement,\\n            32, // Chose 32 for better performance\\n            0.75 // Represents probability that a pixel belongs to a person\\n        )\\n        .then(value => {\\n            this._segmentationData = value;\\n        });\\n    }\\n\\n    /**\\n     * Checks if the local track supports this effect.\\n     *\\n     * @param {JitsiLocalTrack} jitsiLocalTrack - Track to apply effect.\\n     * @returns {boolean} - Returns true if this effect can run on the specified track\\n     * false otherwise.\\n     */\\n    isEnabled(jitsiLocalTrack) {\\n        return jitsiLocalTrack.isVideoTrack() && jitsiLocalTrack.videoType === 'camera';\\n    }\\n}\\n\\n\\n\",\"// @flow\\n\\nimport { load } from '@tensorflow-models/body-pix';\\nimport * as tfc from '@tensorflow/tfjs-core';\\nimport JitsiStreamBlurEffect from './JitsiStreamBlurEffect';\\n\\n/**\\n * This promise represents the loading of the BodyPix model that is used\\n * to extract person segmentation. A multiplier of 0.25 is used to for\\n * improved performance on a larger range of CPUs.\\n */\\nconst bpModelPromise = load(0.25);\\n\\n/**\\n * Configure the Tensor Flow model to use the webgl backend which is the\\n * most powerful backend for the browser.\\n */\\nconst webGlBackend = 'webgl';\\n\\n/**\\n * Creates a new instance of JitsiStreamBlurEffect.\\n *\\n * @returns {Promise<JitsiStreamBlurEffect>}\\n */\\nexport function createBlurEffect() {\\n    if (!MediaStreamTrack.prototype.getSettings && !MediaStreamTrack.prototype.getConstraints) {\\n        return Promise.reject(new Error('JitsiStreamBlurEffect not supported!'));\\n    }\\n\\n    const setBackendPromise = new Promise((resolve, reject) => {\\n        if (tfc.getBackend() === webGlBackend) {\\n            resolve();\\n\\n            return;\\n        }\\n\\n        return tfc.setBackend(webGlBackend)\\n            .then(resolve, reject);\\n    });\\n\\n    return setBackendPromise\\n        .then(() => bpModelPromise)\\n        .then(bpmodel => new JitsiStreamBlurEffect(bpmodel));\\n}\\n\"]}","code":"window.JitsiMeetJS=window.JitsiMeetJS||{},window.JitsiMeetJS.app=window.JitsiMeetJS.app||{},window.JitsiMeetJS.app.effects=function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"/libs/\",n(n.s=13)}([function(t,e,n){\"use strict\";n.r(e),function(t,r,o,a){n.d(e,\"AdadeltaOptimizer\",function(){return cd}),n.d(e,\"AdagradOptimizer\",function(){return ld}),n.d(e,\"AdamOptimizer\",function(){return pd}),n.d(e,\"AdamaxOptimizer\",function(){return dd}),n.d(e,\"DataStorage\",function(){return no}),n.d(e,\"ENV\",function(){return d}),n.d(e,\"Environment\",function(){return l}),n.d(e,\"KernelBackend\",function(){return ro}),n.d(e,\"MomentumOptimizer\",function(){return fd}),n.d(e,\"Optimizer\",function(){return ud}),n.d(e,\"RMSPropOptimizer\",function(){return md}),n.d(e,\"Rank\",function(){return gt}),n.d(e,\"Reduction\",function(){return ml}),n.d(e,\"SGDOptimizer\",function(){return hd}),n.d(e,\"Tensor\",function(){return mt}),n.d(e,\"TensorBuffer\",function(){return pt}),n.d(e,\"Variable\",function(){return vt}),n.d(e,\"abs\",function(){return ms}),n.d(e,\"acos\",function(){return vs}),n.d(e,\"acosh\",function(){return gs}),n.d(e,\"add\",function(){return vu}),n.d(e,\"addN\",function(){return gu}),n.d(e,\"addStrict\",function(){return yu}),n.d(e,\"all\",function(){return Mc}),n.d(e,\"any\",function(){return Fc}),n.d(e,\"argMax\",function(){return Pc}),n.d(e,\"argMin\",function(){return Bc}),n.d(e,\"asin\",function(){return ys}),n.d(e,\"asinh\",function(){return xs}),n.d(e,\"atan\",function(){return bs}),n.d(e,\"atan2\",function(){return xu}),n.d(e,\"atanh\",function(){return ws}),n.d(e,\"avgPool\",function(){return Nc}),n.d(e,\"avgPool3d\",function(){return Tc}),n.d(e,\"backend\",function(){return nn}),n.d(e,\"backend_util\",function(){return Eo}),n.d(e,\"basicLSTMCell\",function(){return Zc}),n.d(e,\"batchNorm\",function(){return iu}),n.d(e,\"batchNorm2d\",function(){return su}),n.d(e,\"batchNorm3d\",function(){return uu}),n.d(e,\"batchNorm4d\",function(){return cu}),n.d(e,\"batchNormalization\",function(){return au}),n.d(e,\"batchNormalization2d\",function(){return nu}),n.d(e,\"batchNormalization3d\",function(){return ru}),n.d(e,\"batchNormalization4d\",function(){return ou}),n.d(e,\"batchToSpaceND\",function(){return ir}),n.d(e,\"booleanMaskAsync\",function(){return Zu}),n.d(e,\"browser\",function(){return Xp}),n.d(e,\"buffer\",function(){return or}),n.d(e,\"cast\",function(){return sr}),n.d(e,\"ceil\",function(){return Cs}),n.d(e,\"clipByValue\",function(){return Es}),n.d(e,\"clone\",function(){return ur}),n.d(e,\"complex\",function(){return wn}),n.d(e,\"concat\",function(){return zn}),n.d(e,\"concat1d\",function(){return Wn}),n.d(e,\"concat2d\",function(){return Un}),n.d(e,\"concat3d\",function(){return jn}),n.d(e,\"concat4d\",function(){return Gn}),n.d(e,\"conv1d\",function(){return oc}),n.d(e,\"conv2d\",function(){return ac}),n.d(e,\"conv2dDerFilter\",function(){return sc}),n.d(e,\"conv2dDerInput\",function(){return uc}),n.d(e,\"conv2dTranspose\",function(){return pc}),n.d(e,\"conv3d\",function(){return ic}),n.d(e,\"conv3dTranspose\",function(){return dc}),n.d(e,\"cos\",function(){return Ns}),n.d(e,\"cosh\",function(){return Ss}),n.d(e,\"cumsum\",function(){return cr}),n.d(e,\"customGrad\",function(){return Jr}),n.d(e,\"deprecationWarn\",function(){return We}),n.d(e,\"depthToSpace\",function(){return lr}),n.d(e,\"depthwiseConv2d\",function(){return cc}),n.d(e,\"diag\",function(){return dl}),n.d(e,\"disableDeprecationWarnings\",function(){return ze}),n.d(e,\"dispose\",function(){return qe}),n.d(e,\"disposeVariables\",function(){return Ue}),n.d(e,\"div\",function(){return bu}),n.d(e,\"divStrict\",function(){return wu}),n.d(e,\"dot\",function(){return fc}),n.d(e,\"dropout\",function(){return hl}),n.d(e,\"elu\",function(){return Hc}),n.d(e,\"enableDebugMode\",function(){return Ve}),n.d(e,\"enableProdMode\",function(){return Le}),n.d(e,\"environment\",function(){return f}),n.d(e,\"equal\",function(){return Bu}),n.d(e,\"equalStrict\",function(){return Lu}),n.d(e,\"erf\",function(){return Rs}),n.d(e,\"exp\",function(){return Ts}),n.d(e,\"expandDims\",function(){return pr}),n.d(e,\"expm1\",function(){return Is}),n.d(e,\"eye\",function(){return dr}),n.d(e,\"fft\",function(){return al}),n.d(e,\"fill\",function(){return Fn}),n.d(e,\"findBackend\",function(){return Ze}),n.d(e,\"findBackendFactory\",function(){return tn}),n.d(e,\"floor\",function(){return As}),n.d(e,\"floorDiv\",function(){return Cu}),n.d(e,\"frame\",function(){return yl}),n.d(e,\"fused\",function(){return Gl}),n.d(e,\"gather\",function(){return Qu}),n.d(e,\"gatherND\",function(){return pl}),n.d(e,\"getBackend\",function(){return Qe}),n.d(e,\"grad\",function(){return $r}),n.d(e,\"grads\",function(){return Kr}),n.d(e,\"greater\",function(){return Vu}),n.d(e,\"greaterEqual\",function(){return zu}),n.d(e,\"greaterEqualStrict\",function(){return Wu}),n.d(e,\"greaterStrict\",function(){return Uu}),n.d(e,\"hammingWindow\",function(){return gl}),n.d(e,\"hannWindow\",function(){return vl}),n.d(e,\"ifft\",function(){return il}),n.d(e,\"imag\",function(){return En}),n.d(e,\"image\",function(){return Wl}),n.d(e,\"inTopKAsync\",function(){return wl}),n.d(e,\"io\",function(){return Hp}),n.d(e,\"irfft\",function(){return ul}),n.d(e,\"isFinite\",function(){return Ws}),n.d(e,\"isInf\",function(){return zs}),n.d(e,\"isNaN\",function(){return Vs}),n.d(e,\"keep\",function(){return $e}),n.d(e,\"leakyRelu\",function(){return qc}),n.d(e,\"less\",function(){return ju}),n.d(e,\"lessEqual\",function(){return Gu}),n.d(e,\"lessEqualStrict\",function(){return Hu}),n.d(e,\"lessStrict\",function(){return qu}),n.d(e,\"linalg\",function(){return Fl}),n.d(e,\"linspace\",function(){return Pn}),n.d(e,\"localResponseNormalization\",function(){return Qc}),n.d(e,\"log\",function(){return ks}),n.d(e,\"log1p\",function(){return Os}),n.d(e,\"logSigmoid\",function(){return Ds}),n.d(e,\"logSoftmax\",function(){return eo}),n.d(e,\"logSumExp\",function(){return Lc}),n.d(e,\"logicalAnd\",function(){return lu}),n.d(e,\"logicalNot\",function(){return pu}),n.d(e,\"logicalOr\",function(){return du}),n.d(e,\"logicalXor\",function(){return hu}),n.d(e,\"losses\",function(){return Ol}),n.d(e,\"matMul\",function(){return hc}),n.d(e,\"math\",function(){return $p}),n.d(e,\"max\",function(){return Vc}),n.d(e,\"maxPool\",function(){return Ec}),n.d(e,\"maxPool3d\",function(){return Rc}),n.d(e,\"maximum\",function(){return Eu}),n.d(e,\"maximumStrict\",function(){return Nu}),n.d(e,\"mean\",function(){return zc}),n.d(e,\"memory\",function(){return je}),n.d(e,\"min\",function(){return Wc}),n.d(e,\"minimum\",function(){return Su}),n.d(e,\"minimumStrict\",function(){return Ru}),n.d(e,\"mod\",function(){return Tu}),n.d(e,\"modStrict\",function(){return Iu}),n.d(e,\"moments\",function(){return Uc}),n.d(e,\"movingAverage\",function(){return el}),n.d(e,\"mul\",function(){return Au}),n.d(e,\"mulStrict\",function(){return ku}),n.d(e,\"multiRNNCell\",function(){return tl}),n.d(e,\"multinomial\",function(){return hr}),n.d(e,\"neg\",function(){return _s}),n.d(e,\"nextFrame\",function(){return xd}),n.d(e,\"norm\",function(){return Jc}),n.d(e,\"notEqual\",function(){return $u}),n.d(e,\"notEqualStrict\",function(){return Ku}),n.d(e,\"oneHot\",function(){return fr}),n.d(e,\"ones\",function(){return _n}),n.d(e,\"onesLike\",function(){return Ln}),n.d(e,\"op\",function(){return bn}),n.d(e,\"outerProduct\",function(){return mc}),n.d(e,\"pad\",function(){return mr}),n.d(e,\"pad1d\",function(){return vr}),n.d(e,\"pad2d\",function(){return gr}),n.d(e,\"pad3d\",function(){return yr}),n.d(e,\"pad4d\",function(){return xr}),n.d(e,\"pool\",function(){return Sc}),n.d(e,\"pow\",function(){return Ou}),n.d(e,\"powStrict\",function(){return Du}),n.d(e,\"prelu\",function(){return $c}),n.d(e,\"print\",function(){return ar}),n.d(e,\"prod\",function(){return Gc}),n.d(e,\"profile\",function(){return Ge}),n.d(e,\"rand\",function(){return br}),n.d(e,\"randomGamma\",function(){return Cr}),n.d(e,\"randomNormal\",function(){return wr}),n.d(e,\"randomUniform\",function(){return Er}),n.d(e,\"range\",function(){return Bn}),n.d(e,\"ready\",function(){return Ye}),n.d(e,\"real\",function(){return Cn}),n.d(e,\"reciprocal\",function(){return Ms}),n.d(e,\"registerBackend\",function(){return en}),n.d(e,\"relu\",function(){return Kc}),n.d(e,\"removeBackend\",function(){return Je}),n.d(e,\"reshape\",function(){return Nr}),n.d(e,\"reverse\",function(){return vc}),n.d(e,\"reverse1d\",function(){return gc}),n.d(e,\"reverse2d\",function(){return yc}),n.d(e,\"reverse3d\",function(){return xc}),n.d(e,\"reverse4d\",function(){return bc}),n.d(e,\"rfft\",function(){return sl}),n.d(e,\"round\",function(){return Fs}),n.d(e,\"rsqrt\",function(){return Ps}),n.d(e,\"scalar\",function(){return Rn}),n.d(e,\"scatterND\",function(){return ol}),n.d(e,\"selu\",function(){return Xc}),n.d(e,\"separableConv2d\",function(){return lc}),n.d(e,\"serialization\",function(){return Zp}),n.d(e,\"setBackend\",function(){return Xe}),n.d(e,\"setPlatform\",function(){return rn}),n.d(e,\"setdiff1dAsync\",function(){return Or}),n.d(e,\"sigmoid\",function(){return Bs}),n.d(e,\"sign\",function(){return Ls}),n.d(e,\"signal\",function(){return bl}),n.d(e,\"sin\",function(){return Us}),n.d(e,\"sinh\",function(){return js}),n.d(e,\"slice\",function(){return Ic}),n.d(e,\"slice1d\",function(){return Ac}),n.d(e,\"slice2d\",function(){return kc}),n.d(e,\"slice3d\",function(){return Oc}),n.d(e,\"slice4d\",function(){return Dc}),n.d(e,\"softmax\",function(){return to}),n.d(e,\"softplus\",function(){return Gs}),n.d(e,\"spaceToBatchND\",function(){return Sr}),n.d(e,\"sparseToDense\",function(){return ll}),n.d(e,\"spectral\",function(){return cl}),n.d(e,\"split\",function(){return Hn}),n.d(e,\"sqrt\",function(){return Hs}),n.d(e,\"square\",function(){return qs}),n.d(e,\"squaredDifference\",function(){return _u}),n.d(e,\"squaredDifferenceStrict\",function(){return Mu}),n.d(e,\"squeeze\",function(){return Rr}),n.d(e,\"stack\",function(){return Tr}),n.d(e,\"step\",function(){return $s}),n.d(e,\"stft\",function(){return xl}),n.d(e,\"stridedSlice\",function(){return nl}),n.d(e,\"sub\",function(){return Fu}),n.d(e,\"subStrict\",function(){return Pu}),n.d(e,\"sum\",function(){return jc}),n.d(e,\"tan\",function(){return Ks}),n.d(e,\"tanh\",function(){return Xs}),n.d(e,\"tensor\",function(){return Nn}),n.d(e,\"tensor1d\",function(){return Tn}),n.d(e,\"tensor2d\",function(){return In}),n.d(e,\"tensor3d\",function(){return An}),n.d(e,\"tensor4d\",function(){return kn}),n.d(e,\"tensor5d\",function(){return On}),n.d(e,\"tensor6d\",function(){return Dn}),n.d(e,\"tensor_util\",function(){return kt}),n.d(e,\"test_util\",function(){return ad}),n.d(e,\"tidy\",function(){return He}),n.d(e,\"tile\",function(){return Ir}),n.d(e,\"time\",function(){return Ke}),n.d(e,\"topk\",function(){return rl}),n.d(e,\"train\",function(){return gd}),n.d(e,\"transpose\",function(){return Yc}),n.d(e,\"truncatedNormal\",function(){return Ar}),n.d(e,\"unsortedSegmentSum\",function(){return Ju}),n.d(e,\"unstack\",function(){return kr}),n.d(e,\"util\",function(){return nt}),n.d(e,\"valueAndGrad\",function(){return Xr}),n.d(e,\"valueAndGrads\",function(){return Yr}),n.d(e,\"variable\",function(){return Ct}),n.d(e,\"variableGrads\",function(){return Qr}),n.d(e,\"version_core\",function(){return id}),n.d(e,\"webgl\",function(){return sd}),n.d(e,\"where\",function(){return fu}),n.d(e,\"whereAsync\",function(){return mu}),n.d(e,\"zeros\",function(){return Mn}),n.d(e,\"zerosLike\",function(){return Vn});\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */\nvar i=function(t,e){return(i=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function s(t,e){function n(){this.constructor=t}i(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}function u(t,e,n,r){return new(n||(n=Promise))(function(o,a){function i(t){try{u(r.next(t))}catch(t){a(t)}}function s(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){t.done?o(t.value):new n(function(e){e(t.value)}).then(i,s)}u((r=r.apply(t,e||[])).next())})}function c(t,e){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},\"function\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError(\"Generator is already executing.\");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}}var l=function(){function t(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}return t.prototype.setPlatform=function(t,e){null!=this.platform&&console.warn(\"Platform \"+this.platformName+\" has already been set. Overwriting the platform with \"+e+\".\"),this.platformName=t,this.platform=e},t.prototype.registerFlag=function(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){var r=this.urlFlags[t];console.warn(\"Setting feature override from URL \"+t+\": \"+r+\".\"),this.set(t,r)}},t.prototype.get=function(t){return t in this.flags?this.flags[t]:(this.flags[t]=this.evaluateFlag(t),this.flags[t])},t.prototype.getNumber=function(t){return this.get(t)},t.prototype.getBool=function(t){return this.get(t)},t.prototype.getFlags=function(){return this.flags},Object.defineProperty(t.prototype,\"features\",{get:function(){return this.flags},enumerable:!0,configurable:!0}),t.prototype.set=function(t,e){if(null==this.flagRegistry[t])throw new Error(\"Cannot set flag \"+t+\" as it has not been registered.\");this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)},t.prototype.evaluateFlag=function(t){if(null==this.flagRegistry[t])throw new Error(\"Cannot evaluate flag '\"+t+\"': no evaluation function found.\");return this.flagRegistry[t].evaluationFn()},t.prototype.setFlags=function(t){this.flags=Object.assign({},t)},t.prototype.reset=function(){this.flags={},this.urlFlags={},this.populateURLFlags()},t.prototype.populateURLFlags=function(){var t=this;if(void 0!==this.global&&void 0!==this.global.location&&void 0!==this.global.location.search){var e=p(this.global.location.search);\"tfjsflags\"in e&&e.tfjsflags.split(\",\").forEach(function(e){var n=e.split(\":\"),r=n[0],o=n[1];t.urlFlags[r]=function(t,e){if(\"true\"===(e=e.toLowerCase())||\"false\"===e)return\"true\"===e;if(\"\"+ +e===e)return+e;throw new Error(\"Could not parse value flag value \"+e+\" for flag \"+t+\".\")}(r,o)})}},t}();function p(t){var e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,function(t){for(var n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];return function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||\"\")}(e,n[0],n[1]),n.join(\"=\")}),e}var d=null;function h(t){d=t}var f=Object.freeze({Environment:l,getQueryParams:p,get ENV(){return d},setEnvironmentGlobal:h});function m(t){for(var e=t.length,n=0,r=0;e>0;)r=Math.random()*e|0,n=t[--e],t[e]=t[r],t[r]=n}function v(t,e,n){return Math.max(t,Math.min(e,n))}function g(t){return t%2==0?t:t+1}function y(t){for(var e=0,n=0;n<t.length;n++)e+=t[n];return e}function x(t,e){if(!t)throw new Error(\"string\"==typeof e?e:e())}function b(t,e,n){void 0===n&&(n=\"\"),x(N(t,e),function(){return n+\" Shapes \"+t+\" and \"+e+\" must match\"})}function w(t){x(null!=t,function(){return\"The input to the tensor constructor must be a non-null value.\"})}function C(t,e,n){if(void 0===e&&(e=[]),void 0===n&&(n=!1),null==e&&(e=[]),Array.isArray(t)||L(t)&&!n)for(var r=0;r<t.length;++r)C(t[r],e,n);else e.push(t);return e}function E(t){if(0===t.length)return 1;for(var e=t[0],n=1;n<t.length;n++)e*=t[n];return e}function N(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function S(t){return t%1==0}function R(t){if(null!=Math.tanh)return Math.tanh(t);if(t===1/0)return 1;if(t===-1/0)return-1;var e=Math.exp(2*t);return(e-1)/(e+1)}function T(t){var e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function I(t,e){return e<=t.length?t:t+\" \".repeat(e-t.length)}function A(t,e,n){return void 0===e&&(e=function(t){return 0}),new Promise(function(r,o){var a=0,i=function(){if(t())r();else{var s=e(++a);null!=n&&a>=n?o():setTimeout(i,s)}};i()})}function k(t,e){for(var n=1,r=-1,o=0;o<t.length;++o)if(t[o]>=0)n*=t[o];else if(-1===t[o]){if(-1!==r)throw Error(\"Shapes can only have 1 implicit size. Found -1 at dim \"+r+\" and dim \"+o);r=o}else if(t[o]<0)throw Error(\"Shapes can not be < 0. Found \"+t[o]+\" at dim \"+o);if(-1===r){if(e>0&&e!==n)throw Error(\"Size(\"+e+\") must match the product of shape \"+t);return t}if(0===n)throw Error(\"Cannot infer the missing size in [\"+t+\"] when there are 0 elements\");if(e%n!=0)throw Error(\"The implicit shape can't be a fractional number. Got \"+e+\" / \"+n);var a=t.slice();return a[r]=e/n,a}function O(t,e){var n=e.length;return x((t=null==t?e.map(function(t,e){return e}):[].concat(t)).every(function(t){return t>=-n&&t<n}),function(){return\"All values in axis param must be in range [-\"+n+\", \"+n+\") but got axis \"+t}),x(t.every(function(t){return S(t)}),function(){return\"All values in axis param must be integers but got axis \"+t}),t.map(function(t){return t<0?n+t:t})}function D(t,e){for(var n=[],r=[],o=null!=e&&Array.isArray(e)&&0===e.length,a=null==e||o?null:O(e,t).sort(),i=0,s=0;s<t.length;++s){if(null!=a){if(a[i]===s&&1!==t[s])throw new Error(\"Can't squeeze axis \"+s+\" since its dim '\"+t[s]+\"' is not 1\");(null==a[i]||a[i]>s)&&1===t[s]&&(n.push(t[s]),r.push(s)),a[i]<=s&&i++}1!==t[s]&&(n.push(t[s]),r.push(s))}return{newShape:n,keptDims:r}}function _(t,e){var n=null;if(null==t||\"float32\"===t)n=new Float32Array(e);else if(\"int32\"===t)n=new Int32Array(e);else{if(\"bool\"!==t)throw new Error(\"Unknown data type \"+t);n=new Uint8Array(e)}return n}function M(t,e){var n=null;if(null==t||\"float32\"===t)n=new Float32Array(e);else if(\"int32\"===t)n=new Int32Array(e);else if(\"bool\"===t)n=new Uint8Array(e);else{if(\"string\"!==t)throw new Error(\"Unknown data type \"+t);n=new Array(e)}return n}function F(t,e){for(var n=0;n<t.length;n++){var r=t[n];if(isNaN(r)||!isFinite(r))throw Error(\"A tensor of type \"+e+\" being uploaded contains \"+r+\".\")}}function P(t){return\"bool\"===t||\"complex64\"===t||\"float32\"===t||\"int32\"===t||\"string\"===t}function B(t,e){return!(\"complex64\"===e||\"float32\"===e&&\"complex64\"!==t||\"int32\"===e&&\"float32\"!==t&&\"complex64\"!==t||\"bool\"===e&&\"bool\"===t)}function L(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function V(t){if(\"float32\"===t||\"int32\"===t)return 4;if(\"complex64\"===t)return 8;if(\"bool\"===t)return 1;throw new Error(\"Unknown dtype \"+t)}function z(t){if(null==t)return 0;var e=0;return t.forEach(function(t){return e+=t.length}),e}function W(t){return\"string\"==typeof t||t instanceof String}function U(t){return\"boolean\"==typeof t}function j(t){return\"number\"==typeof t}function G(t){return Array.isArray(t)?G(t[0]):t instanceof Float32Array?\"float32\":t instanceof Int32Array||t instanceof Uint8Array?\"int32\":j(t)?\"float32\":W(t)?\"string\":U(t)?\"bool\":\"float32\"}function H(t){return!!(t&&t.constructor&&t.call&&t.apply)}function q(t,e){for(var n=e;n<t;++n)if(t%n==0)return n;return t}function $(t){var e=t.length;if(e<2)return[];var n=new Array(e-1);n[e-2]=t[e-1];for(var r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function K(t,e,n){if(\"string\"===e)throw new Error(\"Cannot convert a string[] to a TypedArray\");if(Array.isArray(t)&&(t=C(t)),n&&F(t,e),function(t,e){return t instanceof Float32Array&&\"float32\"===e||t instanceof Int32Array&&\"int32\"===e||t instanceof Uint8Array&&\"bool\"===e}(t,e))return t;if(null==e||\"float32\"===e||\"complex64\"===e)return new Float32Array(t);if(\"int32\"===e)return new Int32Array(t);if(\"bool\"===e){for(var r=new Uint8Array(t.length),o=0;o<r.length;++o)0!==Math.round(t[o])&&(r[o]=1);return r}throw new Error(\"Unknown data type \"+e)}function X(t,e){if(0===t.length)return e[0];var n=t.reduce(function(t,e){return t*e});if(0===n)return[];if(n!==e.length)throw new Error(\"[\"+t+\"] does not match the input size.\");return function t(e,n,r){var o=new Array;if(1===n.length)for(var a=n[0],i=0;i<a;i++)o[i]=r[e+i];else{a=n[0];var s=n.slice(1),u=s.reduce(function(t,e){return t*e});for(i=0;i<a;i++)o[i]=t(e+i*u,s,r)}return o}(0,t,e)}function Y(t,e){for(var n=Q(t,e),r=0;r<n.length;r++)n[r]=1;return n}function Q(t,e){if(null==e||\"float32\"===e||\"complex64\"===e)return new Float32Array(t);if(\"int32\"===e)return new Int32Array(t);if(\"bool\"===e)return new Uint8Array(t);throw new Error(\"Unknown data type \"+e)}function J(){return d.platform.now()}function Z(t){t.forEach(function(e){x(Number.isInteger(e)&&e>=0,function(){return\"Tensor must have a shape comprised of positive integers but got shape [\"+t+\"].\"})})}function tt(t,e){return void 0===e&&(e=\"utf-8\"),e=e||\"utf-8\",d.platform.encode(t,e)}function et(t,e){return void 0===e&&(e=\"utf-8\"),e=e||\"utf-8\",d.platform.decode(t,e)}var nt=Object.freeze({shuffle:m,clamp:v,nearestLargerEven:g,sum:y,randUniform:function(t,e){var n=Math.random();return e*n+(1-n)*t},distSquared:function(t,e){for(var n=0,r=0;r<t.length;r++){var o=Number(t[r])-Number(e[r]);n+=o*o}return n},assert:x,assertShapesMatch:b,assertNonNull:w,flatten:C,sizeFromShape:E,isScalarShape:function(t){return 0===t.length},arraysEqual:N,isInt:S,tanh:R,sizeToSquarishShape:T,createShuffledIndices:function(t){for(var e=new Uint32Array(t),n=0;n<t;++n)e[n]=n;return m(e),e},rightPad:I,repeatedTry:A,inferFromImplicitShape:k,parseAxisParam:O,squeezeShape:D,getTypedArrayFromDType:_,getArrayFromDType:M,checkConversionForErrors:F,isValidDtype:P,hasEncodingLoss:B,isTypedArray:L,bytesPerElement:V,bytesFromStringArray:z,isString:W,isBoolean:U,isNumber:j,inferDtype:G,isFunction:H,nearestDivisor:q,computeStrides:$,toTypedArray:K,toNestedArray:X,makeOnesTypedArray:Y,makeZerosTypedArray:Q,now:J,assertNonNegativeIntegerDimensions:Z,fetch:function(t,e){return d.platform.fetch(t,e)},encodeString:tt,decodeString:et}),rt=function(){function t(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new ot)}return t.prototype.profileKernel=function(t,e,n){var r,o=this,a=this.backendTimer.time(function(){r=n()});return(Array.isArray(r)?r:[r]).forEach(function(n){n.data().then(function(r){!function(t,e,n){if(\"float32\"!==e)return!1;for(var r=0;r<t.length;r++){var o=t[r];if(isNaN(o)||!isFinite(o))return console.warn(\"Found \"+o+\" in the result of '\"+n+\"'\"),!0}}(r,n.dtype,t),a.then(function(a){var i=\"\";null!=a.getExtraProfileInfo&&(i=a.getExtraProfileInfo()),o.logger.logKernelProfile(t,n,r,a.kernelMs,e,i)})})}),r},t}(),ot=function(){function t(){}return t.prototype.logKernelProfile=function(t,e,n,r,o,a){var i=I(r+\"ms\",9),s=I(t,25),u=e.rank,c=e.size,l=I(e.shape.toString(),14),p=\"\";for(var d in o){var h=o[d].shape,f=h.length;p+=d+\": \"+f+\"D \"+(f>0?h:\"\")+\" \"}console.log(\"%c\"+s+\"\\t%c\"+i+\"\\t%c\"+u+\"D \"+l+\"\\t%c\"+c+\"\\t%c\"+p+\"\\t%c\"+a,\"font-weight:bold\",\"color:red\",\"color:blue\",\"color: orange\",\"color: green\",\"color: steelblue\")},t}(),at=20,it=3,st=7;function ut(t,e,n){return I(Array.isArray(t)?parseFloat(t[0].toFixed(st))+\" + \"+parseFloat(t[1].toFixed(st))+\"j\":W(t)?\"'\"+t+\"'\":\"bool\"===n?ct(t):parseFloat(t.toFixed(st)).toString(),e)}function ct(t){return 0===t?\"false\":\"true\"}function lt(t){for(var e=[],n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var pt=function(){function t(t,e,n){var r=this;if(this.dtype=e,this.shape=t.slice(),this.size=E(t),null!=n){var o=n.length;x(o===this.size,function(){return\"Length of values '\"+o+\"' does not match the size inferred by the shape '\"+r.size+\"'.\"})}if(\"complex64\"===e)throw new Error(\"complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).\");this.values=n||M(e,this.size),this.strides=$(t)}return t.prototype.set=function(t){for(var e=this,n=[],r=1;r<arguments.length;r++)n[r-1]=arguments[r];0===n.length&&(n=[0]),x(n.length===this.rank,function(){return\"The number of provided coordinates (\"+n.length+\") must match the rank (\"+e.rank+\")\"});var o=this.locToIndex(n);this.values[o]=t},t.prototype.get=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];0===t.length&&(t=[0]);for(var n=0,r=0,o=t;r<o.length;r++){var a=o[r];if(a<0||a>=this.shape[n]){var i=\"Requested out of range element at \"+t+\".   Buffer shape=\"+this.shape;throw new Error(i)}n++}for(var s=t[t.length-1],u=0;u<t.length-1;++u)s+=this.strides[u]*t[u];return this.values[s]},t.prototype.locToIndex=function(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];for(var e=t[t.length-1],n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e},t.prototype.indexToLoc=function(t){if(0===this.rank)return[];if(1===this.rank)return[t];for(var e=new Array(this.shape.length),n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e},Object.defineProperty(t.prototype,\"rank\",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),t.prototype.toTensor=function(){return mt.make(this.shape,{values:this.values},this.dtype)},t}(),dt=null,ht=null,ft=null,mt=function(){function t(t,e,n,r,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||\"float32\",this.size=E(t),this.strides=$(t),this.dataId=null!=r?r:{},this.id=dt().nextTensorId(),this.rankType=this.rank<5?this.rank.toString():\"higher\",dt().registerTensor(this,o),null!=n&&dt().write(o,this.dataId,n)}return t.make=function(e,n,r,o){var a=n.values;return null!=n.values&&\"string\"===r&&W(n.values[0])&&(a=n.values.map(function(t){return tt(t)})),new t(e,r,a,n.dataId,o)},t.prototype.flatten=function(){return this.throwIfDisposed(),this.as1D()},t.prototype.asScalar=function(){return this.throwIfDisposed(),x(1===this.size,function(){return\"The array must have only 1 element.\"}),this.reshape([])},t.prototype.as1D=function(){return this.throwIfDisposed(),this.reshape([this.size])},t.prototype.as2D=function(t,e){return this.throwIfDisposed(),this.reshape([t,e])},t.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),this.reshape([t,e,n])},t.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),this.reshape([t,e,n,r])},t.prototype.as5D=function(t,e,n,r,o){return this.throwIfDisposed(),this.reshape([t,e,n,r,o])},t.prototype.asType=function(t){return this.throwIfDisposed(),ht.cast(this,t)},Object.defineProperty(t.prototype,\"rank\",{get:function(){return this.shape.length},enumerable:!0,configurable:!0}),t.prototype.buffer=function(){return u(this,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:return[4,this.data()];case 1:return t=e.sent(),[2,ht.buffer(this.shape,this.dtype,t)]}})})},t.prototype.bufferSync=function(){return ht.buffer(this.shape,this.dtype,this.dataSync())},t.prototype.array=function(){return u(this,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:return[4,this.data()];case 1:return t=e.sent(),[2,X(this.shape,t)]}})})},t.prototype.arraySync=function(){return X(this.shape,this.dataSync())},t.prototype.data=function(){return u(this,void 0,void 0,function(){var t,e;return c(this,function(n){switch(n.label){case 0:return this.throwIfDisposed(),t=dt().read(this.dataId),\"string\"!==this.dtype?[3,2]:[4,t];case 1:e=n.sent();try{return[2,e.map(function(t){return et(t)})]}catch(t){throw new Error(\"Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().\")}n.label=2;case 2:return[2,t]}})})},t.prototype.dataSync=function(){this.throwIfDisposed();var t=dt().readSync(this.dataId);if(\"string\"===this.dtype)try{return t.map(function(t){return et(t)})}catch(t){throw new Error(\"Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().\")}return t},t.prototype.bytes=function(){return u(this,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:return this.throwIfDisposed(),[4,dt().read(this.dataId)];case 1:return t=e.sent(),\"string\"===this.dtype?[2,t]:[2,new Uint8Array(t.buffer)]}})})},t.prototype.dispose=function(){this.isDisposed||(dt().disposeTensor(this),this.isDisposedInternal=!0)},Object.defineProperty(t.prototype,\"isDisposed\",{get:function(){return this.isDisposedInternal},enumerable:!0,configurable:!0}),t.prototype.throwIfDisposed=function(){if(this.isDisposed)throw new Error(\"Tensor is disposed.\")},t.prototype.toFloat=function(){return this.asType(\"float32\")},t.prototype.toInt=function(){return this.asType(\"int32\")},t.prototype.toBool=function(){return this.asType(\"bool\")},t.prototype.print=function(t){return void 0===t&&(t=!1),ht.print(this,t)},t.prototype.reshape=function(t){return this.throwIfDisposed(),ht.reshape(this,t)},t.prototype.reshapeAs=function(t){return this.throwIfDisposed(),this.reshape(t.shape)},t.prototype.expandDims=function(t){return void 0===t&&(t=0),ht.expandDims(this,t)},t.prototype.cumsum=function(t,e,n){return void 0===t&&(t=0),void 0===e&&(e=!1),void 0===n&&(n=!1),ht.cumsum(this,t,e,n)},t.prototype.squeeze=function(t){return this.throwIfDisposed(),ht.squeeze(this,t)},t.prototype.clone=function(){return this.throwIfDisposed(),ht.clone(this)},t.prototype.oneHot=function(t,e,n){return this.throwIfDisposed(),ht.oneHot(this,t,e,n)},t.prototype.toString=function(t){return void 0===t&&(t=!1),function(t,e,n,r){var o=$(e),a=function(t,e,n,r){var o=E(e),a=r[r.length-1],i=new Array(a).fill(0),s=e.length,u=\"complex64\"===n?lt(t):t;if(s>1)for(var c=0;c<o/a;c++)for(var l=c*a,p=0;p<a;p++)i[p]=Math.max(i[p],ut(u[l+p],0,n).length);return i}(t,e,n,o),i=e.length,s=function t(e,n,r,o,a,i){void 0===i&&(i=!0);var s=\"complex64\"===r?2:1,u=n[0],c=n.length;if(0===c)return\"complex64\"===r?[ut(lt(e)[0],0,r)]:\"bool\"===r?[ct(e[0])]:[e[0].toString()];if(1===c){if(u>at){var l=it*s,p=Array.from(e.slice(0,l)),d=Array.from(e.slice(u-it*s,u));return\"complex64\"===r&&(p=lt(p),d=lt(d)),[\"[\"+p.map(function(t,e){return ut(t,a[e],r)}).join(\", \")+\", ..., \"+d.map(function(t,e){return ut(t,a[u-it+e],r)}).join(\", \")+\"]\"]}return[\"[\"+(\"complex64\"===r?lt(e):Array.from(e)).map(function(t,e){return ut(t,a[e],r)}).join(\", \")+\"]\"]}var h=n.slice(1),f=o.slice(1),m=o[0]*s,v=[];if(u>at){for(var g=0;g<it;g++){var y=(x=g*m)+m;v.push.apply(v,t(e.slice(x,y),h,r,f,a,!1))}for(v.push(\"...\"),g=u-it;g<u;g++)y=(x=g*m)+m,v.push.apply(v,t(e.slice(x,y),h,r,f,a,g===u-1))}else for(g=0;g<u;g++){var x;y=(x=g*m)+m,v.push.apply(v,t(e.slice(x,y),h,r,f,a,g===u-1))}var b=2===c?\",\":\"\";for(v[0]=\"[\"+v[0]+b,g=1;g<v.length-1;g++)v[g]=\" \"+v[g]+b;var w=\",\\n\";for(g=2;g<c;g++)w+=\"\\n\";return v[v.length-1]=\" \"+v[v.length-1]+\"]\"+(i?\"\":w),v}(t,e,n,o,a),u=[\"Tensor\"];return r&&(u.push(\"  dtype: \"+n),u.push(\"  rank: \"+i),u.push(\"  shape: [\"+e+\"]\"),u.push(\"  values:\")),u.push(s.map(function(t){return\"    \"+t}).join(\"\\n\")),u.join(\"\\n\")}(this.dataSync(),this.shape,this.dtype,t)},t.prototype.tile=function(t){return this.throwIfDisposed(),ht.tile(this,t)},t.prototype.gather=function(t,e){return void 0===e&&(e=0),this.throwIfDisposed(),ht.gather(this,t,e)},t.prototype.matMul=function(t,e,n){return void 0===e&&(e=!1),void 0===n&&(n=!1),this.throwIfDisposed(),ht.matMul(this,t,e,n)},t.prototype.dot=function(t){return this.throwIfDisposed(),ht.dot(this,t)},t.prototype.norm=function(t,e,n){return void 0===t&&(t=\"euclidean\"),void 0===e&&(e=null),void 0===n&&(n=!1),this.throwIfDisposed(),ht.norm(this,t,e,n)},t.prototype.slice=function(t,e){return this.throwIfDisposed(),ht.slice(this,t,e)},t.prototype.reverse=function(t){return this.throwIfDisposed(),ht.reverse(this,t)},t.prototype.concat=function(e,n){return void 0===n&&(n=0),this.throwIfDisposed(),e instanceof t&&(e=[e]),ht.concat([this].concat(e),n)},t.prototype.split=function(t,e){return void 0===e&&(e=0),this.throwIfDisposed(),ht.split(this,t,e)},t.prototype.stack=function(t,e){return void 0===e&&(e=0),ht.stack([this,t],e)},t.prototype.unstack=function(t){return void 0===t&&(t=0),ht.unstack(this,t)},t.prototype.pad=function(t,e){return void 0===e&&(e=0),ht.pad(this,t,e)},t.prototype.batchNormalization=function(t,e,n,r,o){return void 0===n&&(n=.001),ft(\"tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon\"),this.batchNorm(t,e,o,r,n)},t.prototype.batchNorm=function(t,e,n,r,o){return void 0===o&&(o=.001),this.throwIfDisposed(),ht.batchNorm(this,t,e,n,r,o)},t.prototype.all=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ht.all(this,t,e)},t.prototype.any=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ht.any(this,t,e)},t.prototype.logSumExp=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ht.logSumExp(this,t,e)},t.prototype.sum=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ht.sum(this,t,e)},t.prototype.prod=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ht.prod(this,t,e)},t.prototype.mean=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ht.mean(this,t,e)},t.prototype.min=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ht.min(this,t,e)},t.prototype.max=function(t,e){return void 0===t&&(t=null),void 0===e&&(e=!1),this.throwIfDisposed(),ht.max(this,t,e)},t.prototype.argMin=function(t){return void 0===t&&(t=null),this.throwIfDisposed(),ht.argMin(this,t)},t.prototype.argMax=function(t){return void 0===t&&(t=null),this.throwIfDisposed(),ht.argMax(this,t)},t.prototype.cast=function(t){return this.throwIfDisposed(),ht.cast(this,t)},t.prototype.add=function(t){return this.throwIfDisposed(),ht.add(this,t)},t.prototype.addStrict=function(t){return this.throwIfDisposed(),ht.addStrict(this,t)},t.prototype.atan2=function(t){return this.throwIfDisposed(),ht.atan2(this,t)},t.prototype.sub=function(t){return this.throwIfDisposed(),ht.sub(this,t)},t.prototype.subStrict=function(t){return this.throwIfDisposed(),ht.subStrict(this,t)},t.prototype.pow=function(t){return this.throwIfDisposed(),ht.pow(this,t)},t.prototype.powStrict=function(t){return this.throwIfDisposed(),ht.powStrict(this,t)},t.prototype.mul=function(t){return this.throwIfDisposed(),ht.mul(this,t)},t.prototype.mulStrict=function(t){return this.throwIfDisposed(),ht.mulStrict(this,t)},t.prototype.div=function(t){return this.throwIfDisposed(),ht.div(this,t)},t.prototype.floorDiv=function(t){return this.throwIfDisposed(),ht.floorDiv(this,t)},t.prototype.divStrict=function(t){return this.throwIfDisposed(),ht.divStrict(this,t)},t.prototype.minimum=function(t){return this.throwIfDisposed(),ht.minimum(this,t)},t.prototype.minimumStrict=function(t){return this.throwIfDisposed(),ht.minimumStrict(this,t)},t.prototype.maximum=function(t){return this.throwIfDisposed(),ht.maximum(this,t)},t.prototype.maximumStrict=function(t){return this.throwIfDisposed(),ht.maximumStrict(this,t)},t.prototype.mod=function(t){return this.throwIfDisposed(),ht.mod(this,t)},t.prototype.modStrict=function(t){return this.throwIfDisposed(),ht.modStrict(this,t)},t.prototype.squaredDifference=function(t){return this.throwIfDisposed(),ht.squaredDifference(this,t)},t.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),ht.squaredDifferenceStrict(this,t)},t.prototype.transpose=function(t){return this.throwIfDisposed(),ht.transpose(this,t)},t.prototype.notEqual=function(t){return this.throwIfDisposed(),ht.notEqual(this,t)},t.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),ht.notEqualStrict(this,t)},t.prototype.less=function(t){return this.throwIfDisposed(),ht.less(this,t)},t.prototype.lessStrict=function(t){return this.throwIfDisposed(),ht.lessStrict(this,t)},t.prototype.equal=function(t){return this.throwIfDisposed(),ht.equal(this,t)},t.prototype.equalStrict=function(t){return this.throwIfDisposed(),ht.equalStrict(this,t)},t.prototype.lessEqual=function(t){return this.throwIfDisposed(),ht.lessEqual(this,t)},t.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),ht.lessEqualStrict(this,t)},t.prototype.greater=function(t){return this.throwIfDisposed(),ht.greater(this,t)},t.prototype.greaterStrict=function(t){return this.throwIfDisposed(),ht.greaterStrict(this,t)},t.prototype.greaterEqual=function(t){return this.throwIfDisposed(),ht.greaterEqual(this,t)},t.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),ht.greaterEqualStrict(this,t)},t.prototype.logicalAnd=function(t){return this.throwIfDisposed(),ht.logicalAnd(this,t)},t.prototype.logicalOr=function(t){return this.throwIfDisposed(),ht.logicalOr(this,t)},t.prototype.logicalNot=function(){return this.throwIfDisposed(),ht.logicalNot(this)},t.prototype.logicalXor=function(t){return this.throwIfDisposed(),ht.logicalXor(this,t)},t.prototype.where=function(t,e){return this.throwIfDisposed(),ht.where(t,this,e)},t.prototype.neg=function(){return this.throwIfDisposed(),ht.neg(this)},t.prototype.ceil=function(){return this.throwIfDisposed(),ht.ceil(this)},t.prototype.floor=function(){return this.throwIfDisposed(),ht.floor(this)},t.prototype.sign=function(){return this.throwIfDisposed(),ht.sign(this)},t.prototype.isNaN=function(){return this.throwIfDisposed(),ht.isNaN(this)},t.prototype.isInf=function(){return this.throwIfDisposed(),ht.isInf(this)},t.prototype.isFinite=function(){return this.throwIfDisposed(),ht.isFinite(this)},t.prototype.exp=function(){return this.throwIfDisposed(),ht.exp(this)},t.prototype.expm1=function(){return this.throwIfDisposed(),ht.expm1(this)},t.prototype.log=function(){return this.throwIfDisposed(),ht.log(this)},t.prototype.log1p=function(){return this.throwIfDisposed(),ht.log1p(this)},t.prototype.sqrt=function(){return this.throwIfDisposed(),ht.sqrt(this)},t.prototype.rsqrt=function(){return this.throwIfDisposed(),ht.rsqrt(this)},t.prototype.square=function(){return this.throwIfDisposed(),ht.square(this)},t.prototype.reciprocal=function(){return this.throwIfDisposed(),ht.reciprocal(this)},t.prototype.abs=function(){return this.throwIfDisposed(),ht.abs(this)},t.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),ht.clipByValue(this,t,e)},t.prototype.relu=function(){return this.throwIfDisposed(),ht.relu(this)},t.prototype.elu=function(){return this.throwIfDisposed(),ht.elu(this)},t.prototype.selu=function(){return this.throwIfDisposed(),ht.selu(this)},t.prototype.leakyRelu=function(t){return void 0===t&&(t=.2),this.throwIfDisposed(),ht.leakyRelu(this,t)},t.prototype.prelu=function(t){return this.throwIfDisposed(),ht.prelu(this,t)},t.prototype.sigmoid=function(){return this.throwIfDisposed(),ht.sigmoid(this)},t.prototype.logSigmoid=function(){return this.throwIfDisposed(),ht.logSigmoid(this)},t.prototype.softplus=function(){return this.throwIfDisposed(),ht.softplus(this)},t.prototype.zerosLike=function(){return this.throwIfDisposed(),ht.zerosLike(this)},t.prototype.onesLike=function(){return this.throwIfDisposed(),ht.onesLike(this)},t.prototype.sin=function(){return this.throwIfDisposed(),ht.sin(this)},t.prototype.cos=function(){return this.throwIfDisposed(),ht.cos(this)},t.prototype.tan=function(){return this.throwIfDisposed(),ht.tan(this)},t.prototype.asin=function(){return this.throwIfDisposed(),ht.asin(this)},t.prototype.acos=function(){return this.throwIfDisposed(),ht.acos(this)},t.prototype.atan=function(){return this.throwIfDisposed(),ht.atan(this)},t.prototype.sinh=function(){return this.throwIfDisposed(),ht.sinh(this)},t.prototype.cosh=function(){return this.throwIfDisposed(),ht.cosh(this)},t.prototype.tanh=function(){return this.throwIfDisposed(),ht.tanh(this)},t.prototype.asinh=function(){return this.throwIfDisposed(),ht.asinh(this)},t.prototype.acosh=function(){return this.throwIfDisposed(),ht.acosh(this)},t.prototype.atanh=function(){return this.throwIfDisposed(),ht.atanh(this)},t.prototype.erf=function(){return this.throwIfDisposed(),ht.erf(this)},t.prototype.round=function(){return this.throwIfDisposed(),ht.round(this)},t.prototype.step=function(t){return void 0===t&&(t=0),this.throwIfDisposed(),ht.step(this,t)},t.prototype.softmax=function(t){return void 0===t&&(t=-1),this.throwIfDisposed(),ht.softmax(this,t)},t.prototype.logSoftmax=function(t){return void 0===t&&(t=-1),this.throwIfDisposed(),ht.logSoftmax(this,t)},t.prototype.resizeBilinear=function(t,e){return void 0===e&&(e=!1),this.throwIfDisposed(),ht.image.resizeBilinear(this,t,e)},t.prototype.resizeNearestNeighbor=function(t,e){return void 0===e&&(e=!1),this.throwIfDisposed(),ht.image.resizeNearestNeighbor(this,t,e)},t.prototype.conv1d=function(t,e,n,r,o,a){return void 0===r&&(r=\"NWC\"),void 0===o&&(o=1),this.throwIfDisposed(),ht.conv1d(this,t,e,n,r,o,a)},t.prototype.conv2d=function(t,e,n,r,o,a){return void 0===r&&(r=\"NHWC\"),void 0===o&&(o=[1,1]),this.throwIfDisposed(),ht.conv2d(this,t,e,n,r,o,a)},t.prototype.conv2dTranspose=function(t,e,n,r,o){return this.throwIfDisposed(),ht.conv2dTranspose(this,t,e,n,r,o)},t.prototype.depthwiseConv2D=function(t,e,n,r,o,a){return void 0===r&&(r=\"NHWC\"),void 0===o&&(o=[1,1]),this.throwIfDisposed(),ht.depthwiseConv2d(this,t,e,n,r,o,a)},t.prototype.separableConv2d=function(t,e,n,r,o,a){return void 0===o&&(o=[1,1]),void 0===a&&(a=\"NHWC\"),this.throwIfDisposed(),ht.separableConv2d(this,t,e,n,r,o,a)},t.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),ht.avgPool(this,t,e,n,r)},t.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),ht.maxPool(this,t,e,n,r)},t.prototype.localResponseNormalization=function(t,e,n,r){return void 0===t&&(t=5),void 0===e&&(e=1),void 0===n&&(n=1),void 0===r&&(r=.5),ht.localResponseNormalization(this,t,e,n,r)},t.prototype.pool=function(t,e,n,r,o){return this.throwIfDisposed(),ht.pool(this,t,e,n,r,o)},t.prototype.variable=function(t,e,n){return void 0===t&&(t=!0),this.throwIfDisposed(),vt.variable(this,t,e,n)},t.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),ht.unsortedSegmentSum(this,t,e)},t.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),ht.batchToSpaceND(this,t,e)},t.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),ht.spaceToBatchND(this,t,e)},t.prototype.topk=function(t,e){return void 0===t&&(t=1),void 0===e&&(e=!0),this.throwIfDisposed(),ht.topk(this,t,e)},t.prototype.stridedSlice=function(t,e,n,r,o,a,i,s){return void 0===r&&(r=0),void 0===o&&(o=0),void 0===a&&(a=0),void 0===i&&(i=0),void 0===s&&(s=0),this.throwIfDisposed(),ht.stridedSlice(this,t,e,n,r,o,a,i,s)},t.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),ht.depthToSpace(this,t,e)},t.prototype.fft=function(){return this.throwIfDisposed(),ht.spectral.fft(this)},t.prototype.ifft=function(){return this.throwIfDisposed(),ht.spectral.ifft(this)},t.prototype.rfft=function(){return this.throwIfDisposed(),ht.spectral.rfft(this)},t.prototype.irfft=function(){return this.throwIfDisposed(),ht.spectral.irfft(this)},t}();Object.defineProperty(mt,Symbol.hasInstance,{value:function(t){return!!t&&null!=t.dataId&&null!=t.shape&&null!=t.dtype}});var vt=function(t){function e(e,n,r){void 0===n&&(n=!0);var o=t.call(this,e.shape,e.dtype,null,e.dataId)||this;o.trainable=n,o.name=r,null==o.name&&(o.name=dt().nextVariableId().toString());try{dt().registerVariable(o)}catch(t){throw dt().disposeTensor(o),t}return o}return s(e,t),e.variable=function(t,n,r,o){return void 0===n&&(n=!0),null!=o&&o!==t.dtype&&(t=t.asType(o)),new e(t,n,r)},e.prototype.assign=function(t){if(t.dtype!==this.dtype)throw new Error(\"dtype of the new value (\"+t.dtype+\") and previous value (\"+this.dtype+\") must match\");if(!N(t.shape,this.shape))throw new Error(\"shape of the new value (\"+t.shape+\") and previous value (\"+this.shape+\") must match\");dt().disposeTensor(this),this.dataId=t.dataId,dt().registerTensor(this)},e.prototype.dispose=function(){dt().disposeVariable(this),this.isDisposedInternal=!0},e}(mt);Object.defineProperty(vt,Symbol.hasInstance,{value:function(t){return t instanceof mt&&null!=t.assign&&t.assign instanceof Function}});var gt,yt,xt,bt,wt,Ct=vt.variable;!function(t){t.R0=\"R0\",t.R1=\"R1\",t.R2=\"R2\",t.R3=\"R3\",t.R4=\"R4\",t.R5=\"R5\",t.R6=\"R6\"}(gt||(gt={})),function(t){t.float32=\"float32\",t.int32=\"int32\",t.bool=\"int32\",t.complex64=\"complex64\"}(yt||(yt={})),function(t){t.float32=\"float32\",t.int32=\"int32\",t.bool=\"bool\",t.complex64=\"complex64\"}(xt||(xt={})),function(t){t.float32=\"float32\",t.int32=\"float32\",t.bool=\"float32\",t.complex64=\"complex64\"}(bt||(bt={})),function(t){t.float32=\"complex64\",t.int32=\"complex64\",t.bool=\"complex64\",t.complex64=\"complex64\"}(wt||(wt={}));var Et={float32:bt,int32:yt,bool:xt,complex64:wt};function Nt(t,e){if(\"string\"===t||\"string\"===e){if(\"string\"===t&&\"string\"===e)return\"string\";throw new Error(\"Can not upcast \"+t+\" with \"+e)}return Et[t][e]}function St(t){return Nt(t,\"int32\")}function Rt(t,e){if(t.dtype===e.dtype)return[t,e];var n=Nt(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function Tt(t,e){x(t.dtype===e.dtype,function(){return\"The dtypes of the first(\"+t.dtype+\") and second(\"+e.dtype+\") input must match\"})}function It(t){var e=[];return function t(e,n,r){if(null!=e)if(e instanceof mt)n.push(e);else if(o=e,Array.isArray(o)||\"object\"==typeof o){var o,a=e;for(var i in a){var s=a[i];r.has(s)||(r.add(s),t(s,n,r))}}}(t,e,new Set),e}var At,kt=Object.freeze({makeTypesMatch:Rt,assertTypesMatch:Tt,isTensorInList:function(t,e){for(var n=0;n<e.length;n++)if(e[n].id===t.id)return!0;return!1},getTensorsInContainer:It}),Ot=function(){function t(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}return t.prototype.dispose=function(){for(var t in this.registeredVariables)this.registeredVariables[t].dispose()},t}(),Dt=function(){function t(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ot}return t.prototype.ready=function(){return u(this,void 0,void 0,function(){var t,e,n;return c(this,function(r){switch(r.label){case 0:if(null!=this.pendingBackendInit)return[2,this.pendingBackendInit.then(function(){})];if(null!=this.backendInstance)return[2];t=this.getSortedBackends(),e=0,r.label=1;case 1:return e<t.length?(n=t[e],[4,this.initializeBackend(n).success]):[3,5];case 2:return r.sent()?[4,this.setBackend(n)]:[3,4];case 3:return r.sent(),[2];case 4:return e++,[3,1];case 5:throw new Error(\"Could not initialize any backends, all backend initializations failed.\")}})})},Object.defineProperty(t.prototype,\"backend\",{get:function(){if(null!=this.pendingBackendInit)throw new Error(\"Backend '\"+this.backendName+\"' has not yet been initialized. Make sure to await tf.ready() before calling other methods\");if(null==this.backendInstance){var t=this.initializeBackendsAndReturnBest(),e=t.name;if(t.asyncInit)throw new Error(\"The highest priority backend '\"+e+\"' has not yet been initialized. Make sure to await tf.ready() before calling other methods\");this.setBackend(e)}return this.backendInstance},enumerable:!0,configurable:!0}),t.prototype.backendNames=function(){return Object.keys(this.registryFactory)},t.prototype.findBackend=function(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;if(this.initializeBackend(t).asyncInit)return null}return this.registry[t]},t.prototype.findBackendFactory=function(t){return t in this.registryFactory?this.registryFactory[t].factory:null},t.prototype.registerBackend=function(t,e,n){return void 0===n&&(n=1),t in this.registryFactory?(console.warn(t+\" backend was already registered. Reusing existing backend factory.\"),!1):(this.registryFactory[t]={factory:e,priority:n},!0)},t.prototype.setBackend=function(t){return u(this,void 0,void 0,function(){var e,n,r;return c(this,function(o){switch(o.label){case 0:if(null==this.registryFactory[t])throw new Error(\"Backend name '\"+t+\"' not found in registry\");return this.backendName=t,null!=this.registry[t]?[3,4]:(this.backendInstance=null,e=this.initializeBackend(t),n=e.success,e.asyncInit?[4,n]:[3,2]);case 1:return r=o.sent(),[3,3];case 2:r=n,o.label=3;case 3:if(!r)return[2,!1];o.label=4;case 4:return this.backendInstance=this.registry[t],this.profiler=new rt(this.backendInstance),[2,!0]}})})},t.prototype.initializeBackend=function(t){var e=this,n=this.registryFactory[t];if(null==n)throw new Error(\"Cannot initialize backend \"+t+\", no registration found.\");try{var r=n.factory();if(Promise.resolve(r)===r){var o=++this.pendingBackendInitId,a=r.then(function(n){return!(o<e.pendingBackendInitId||(e.registry[t]=n,e.pendingBackendInit=null,0))}).catch(function(n){return!(o<e.pendingBackendInitId||(e.pendingBackendInit=null,console.warn(\"Initialization of backend \"+t+\" failed\"),console.warn(n.stack||n.message),1))});return this.pendingBackendInit=a,{success:a,asyncInit:!0}}return this.registry[t]=r,{success:!0,asyncInit:!1}}catch(e){return console.warn(\"Initialization of backend \"+t+\" failed\"),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}},t.prototype.removeBackend=function(t){if(!(t in this.registryFactory))throw new Error(t+\" backend not found in registry\");this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)},t.prototype.getSortedBackends=function(){var t=this;if(0===Object.keys(this.registryFactory).length)throw new Error(\"No backend found in registry.\");return Object.keys(this.registryFactory).sort(function(e,n){return t.registryFactory[n].priority-t.registryFactory[e].priority})},t.prototype.initializeBackendsAndReturnBest=function(){for(var t=this.getSortedBackends(),e=0;e<t.length;e++){var n=t[e],r=this.initializeBackend(n),o=r.success,a=r.asyncInit;if(a||o)return{name:n,asyncInit:a}}throw new Error(\"Could not initialize any backends, all backend initializations failed.\")},t.prototype.moveData=function(t,e){this.write(t,e,this.readSync(e))},t.prototype.tidy=function(t,e){var n,r=this,o=null;if(null==e){if(\"function\"!=typeof t)throw new Error(\"Please provide a function to tidy()\");e=t}else{if(\"string\"!=typeof t&&!(t instanceof String))throw new Error(\"When calling with two arguments, the first argument to tidy() must be a string\");if(\"function\"!=typeof e)throw new Error(\"When calling with two arguments, the 2nd argument to tidy() must be a function\");o=t}return this.scopedRun(function(){return r.startScope(o)},function(){return r.endScope(n)},function(){return(n=e())instanceof Promise&&console.error(\"Cannot return a Promise inside of tidy.\"),n})},t.prototype.scopedRun=function(t,e,n){t();try{var r=n();return e(),r}catch(t){throw e(),t}},t.prototype.nextTensorId=function(){return t.nextTensorId++},t.prototype.nextVariableId=function(){return t.nextVariableId++},t.prototype.clone=function(t){var e=mt.make(t.shape,{dataId:t.dataId},t.dtype);return this.addTapeNode([t],e,function(t){return[t.toFloat()]}),e},t.prototype.runKernel=function(t,e,n){var r,o=this,a=[],i=this.isTapeOn(),s=null!=this.state.activeScope?this.state.activeScope.name:\"\",u=function(t){i&&(a=t.map(function(t){return o.keep(o.clone(t))}))},c=this.state.numBytes,l=this.state.numTensors;if(this.scopedRun(function(){return o.state.kernelDepth++},function(){return o.state.kernelDepth--},function(){r=o.ENV.getBool(\"DEBUG\")?o.profiler.profileKernel(s,e,function(){return t(o.backend,u)}):t(o.backend,u)}),i){var p={id:this.state.nextTapeNodeId++,name:s,inputs:e,outputs:Array.isArray(r)?r:[r],saved:a};null!=n&&(p.gradient=function(t){return n(t,a)}),this.state.activeTape.push(p)}return this.state.profiling&&this.state.activeProfile.kernels.push({name:s,bytesAdded:this.state.numBytes-c,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-l,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map(function(t){return e[t].shape}),outputShape:Array.isArray(r)?r.map(function(t){return t.shape}):r.shape}),r},t.prototype.registerTensor=function(t,e){var n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,\"string\"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;var r=0;\"complex64\"!==t.dtype&&\"string\"!==t.dtype&&(r=t.size*V(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:null!=e?e:this.backend,dtype:t.dtype,shape:t.shape,bytes:r,refCount:0}),this.state.numBytes+=r,null!=e?e.register(t.dataId,t.shape,t.dtype):this.backend.register(t.dataId,t.shape,t.dtype)}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof vt||this.track(t)},t.prototype.registerVariable=function(t){if(null!=this.state.registeredVariables[t.name])throw new Error(\"Variable with name \"+t.name+\" was already registered\");this.state.registeredVariables[t.name]=t},t.prototype.disposeTensor=function(t){if(this.state.tensorInfo.has(t.dataId)){this.state.numTensors--,\"string\"===t.dtype&&this.state.numStringTensors--;var e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?(\"complex64\"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}},t.prototype.disposeVariables=function(){for(var t in this.state.registeredVariables){var e=this.state.registeredVariables[t];this.disposeVariable(e)}},t.prototype.disposeVariable=function(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]},t.prototype.memory=function(){var t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push(\"Memory usage by string tensors is approximate (2 bytes per character)\")),t},t.prototype.profile=function(t){return u(this,void 0,void 0,function(){var e,n;return c(this,function(r){return this.state.profiling=!0,e=this.state.numBytes,n=this.state.numTensors,this.state.activeProfile.kernels=[],this.state.activeProfile.result=t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max.apply(Math,this.state.activeProfile.kernels.map(function(t){return t.totalBytesSnapshot})),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n,[2,this.state.activeProfile]})})},t.prototype.isTapeOn=function(){return this.state.gradientDepth>0&&0===this.state.kernelDepth},t.prototype.addTapeNode=function(t,e,n){var r={};t.forEach(function(t,e){r[e]=t});var o={id:this.state.nextTapeNodeId++,name:this.state.activeScope.name,inputs:r,outputs:[e],gradient:function(t){var e=n(t),r={};return e.forEach(function(t,e){r[e]=function(){return t}}),r}};this.state.activeTape.push(o)},t.prototype.keep=function(t){return t.kept=!0,t},t.prototype.startTape=function(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++},t.prototype.endTape=function(){this.state.gradientDepth--},t.prototype.startScope=function(t){var e={track:[],name:\"unnamed scope\",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e},t.prototype.endScope=function(t){for(var e=this,n=It(t),r=new Set(n.map(function(t){return t.id})),o=0;o<this.state.activeScope.track.length;o++){var a=this.state.activeScope.track[o];a.kept||r.has(a.id)||a.dispose()}var i=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],n.forEach(function(t){t.kept||t.scopeId!==i.id||e.track(t)})},t.prototype.gradients=function(t,e,n,r){var o=this;if(void 0===r&&(r=!1),x(e.length>0,function(){return\"gradients() received an empty list of xs.\"}),null!=n&&\"float32\"!==n.dtype)throw new Error(\"dy must have 'float32' dtype, but has '\"+n.dtype+\"'\");var a=this.scopedRun(function(){return o.startTape()},function(){return o.endTape()},function(){return o.tidy(\"forward\",t)});x(a instanceof mt,function(){return\"The result y returned by f() must be a tensor.\"});var i=function(t,e,n){for(var r={},o={},a=0;a<e.length;a++)r[e[a].id]=!0;for(a=0;a<t.length;a++){var i=(f=t[a]).inputs;for(var s in i){for(var u=i[s],c=!1,l=0;l<e.length;l++)if(r[u.id]){f.outputs.forEach(function(t){return r[t.id]=!0}),c=!0,o[f.id]=!0;break}if(c)break}}var p={};p[n.id]=!0;var d={};for(a=t.length-1;a>=0;a--)for(i=(f=t[a]).inputs,l=0;l<f.outputs.length;l++)if(p[f.outputs[l].id]){for(var s in i)p[i[s].id]=!0,d[f.id]=!0;break}var h=[];for(a=0;a<t.length;a++){var f;if(o[(f=t[a]).id]&&d[f.id]){var m={};for(var s in f.inputs){var v=f.inputs[s];r[v.id]&&(m[s]=v)}var g=Object.assign({},f);g.inputs=m,g.outputs=f.outputs,h.push(g)}}return h}(this.state.activeTape,e,a);if(!r&&0===i.length&&e.length>0)throw new Error(\"Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.\");return this.tidy(\"backward\",function(){var t,r,s={};s[a.id]=null==n?(r=Y(E(t=a.shape),\"float32\"),mt.make(t,{values:r})):n,function(t,e,n){for(var r=function(r){var o=e[r],a=[];if(o.outputs.forEach(function(e){var n=t[e.id];if(null!=n)a.push(n);else{var r=mt.make(e.shape,{values:Q(e.size,e.dtype)},e.dtype);a.push(r)}}),null==o.gradient)throw new Error(\"Cannot compute gradient: gradient function not found for \"+o.name+\".\");var i=o.gradient(1===o.outputs.length?a[0]:a),s=function(e){if(!(e in i))throw new Error(\"Cannot backprop through input \"+e+\". Available gradients found: \"+Object.keys(i)+\".\");var r=n(function(){return i[e]()});if(\"float32\"!==r.dtype)throw new Error(\"Error in gradient for op \"+o.name+\". The gradient of input \"+e+\" must have 'float32' dtype, but has '\"+r.dtype+\"'\");var a=o.inputs[e];if(!N(r.shape,a.shape))throw new Error(\"Error in gradient for op \"+o.name+\". The gradient of input '\"+e+\"' has shape '\"+r.shape+\"', which does not match the shape of the input '\"+a.shape+\"'\");if(null==t[a.id])t[a.id]=r;else{var s=t[a.id];t[a.id]=s.add(r),s.dispose()}};for(var u in o.inputs)s(u)},o=e.length-1;o>=0;o--)r(o)}(s,i,function(t){return o.tidy(t)});var u=e.map(function(t){return s[t.id]});return 0===o.state.gradientDepth&&(o.state.activeTape.forEach(function(t){for(var e in t.saved)t.saved[e].dispose()}),o.state.activeTape=null),{value:a,grads:u}})},t.prototype.customGrad=function(t){var e=this;return x(H(t),function(){return\"The f passed in customGrad(f) must be a function.\"}),function(){for(var n,r=[],o=0;o<arguments.length;o++)r[o]=arguments[o];x(r.every(function(t){return t instanceof mt}),function(){return\"The args passed in customGrad(f)(x1, x2,...) must all be tensors\"});var a={};return r.forEach(function(t,e){a[e]=t}),e.runKernel(function(e,o){return x((n=t.apply(void 0,r.concat([o]))).value instanceof mt,function(){return\"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor\"}),x(H(n.gradFunc),function(){return\"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.\"}),n.value},a,function(t,e){var o=n.gradFunc(t,e),a=Array.isArray(o)?o:[o];x(a.length===r.length,function(){return\"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).\"}),x(a.every(function(t){return t instanceof mt}),function(){return\"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.\"});var i={};return a.forEach(function(t,e){i[e]=function(){return t}}),i})}},t.prototype.write=function(t,e,n){var r=this.state.tensorInfo.get(e),o=r.backend;if(t=t||this.backend,\"string\"===r.dtype){var a=z(n);this.state.numBytes+=a-r.bytes,r.bytes=a}t!==o&&(o.disposeData(e),r.backend=t,t.register(e,r.shape,r.dtype)),t.write(e,n)},t.prototype.readSync=function(t){return this.state.tensorInfo.get(t).backend.readSync(t)},t.prototype.read=function(t){return this.state.tensorInfo.get(t).backend.read(t)},t.prototype.fromPixels=function(t,e){return this.backend.fromPixels(t,e)},t.prototype.time=function(t){return u(this,void 0,void 0,function(){var e,n;return c(this,function(r){switch(r.label){case 0:return e=J(),[4,this.backend.time(t)];case 1:return(n=r.sent()).wallMs=J()-e,[2,n]}})})},t.prototype.track=function(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t},Object.defineProperty(t.prototype,\"registeredVariables\",{get:function(){return this.state.registeredVariables},enumerable:!0,configurable:!0}),t.prototype.reset=function(){for(var t in this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ot,this.registry)this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null},t.nextTensorId=0,t.nextVariableId=0,t}(),_t=function(){var e=function(){if(null==At){var e=void 0;if(\"undefined\"!=typeof window)e=window;else if(void 0!==t)e=t;else if(void 0!==r)e=r;else{if(\"undefined\"==typeof self)throw new Error(\"Could not find a global object\");e=self}At=e}return At}();if(null==e._tfengine){var n=new l(e);e._tfengine=new Dt(n)}return h(e._tfengine.ENV),dt=function(){return e._tfengine},e._tfengine}();function Mt(){return\"undefined\"!=typeof window&&null!=window.document||\"undefined\"!=typeof WorkerGlobalScope}d.registerFlag(\"DEBUG\",function(){return!1},function(t){t&&console.warn(\"Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.\")}),d.registerFlag(\"IS_BROWSER\",function(){return Mt()}),d.registerFlag(\"IS_NODE\",function(){return void 0!==r&&void 0!==r.versions&&void 0!==r.versions.node}),d.registerFlag(\"IS_CHROME\",function(){return\"undefined\"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)}),d.registerFlag(\"PROD\",function(){return!1}),d.registerFlag(\"TENSORLIKE_CHECK_SHAPE_CONSISTENCY\",function(){return d.getBool(\"DEBUG\")}),d.registerFlag(\"DEPRECATION_WARNINGS_ENABLED\",function(){return!0}),d.registerFlag(\"IS_TEST\",function(){return!1});var Ft,Pt,Bt={},Lt={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function Vt(t,e){Bt[t]=e}function zt(t){t in Bt||(Bt[t]=function(t){if(1!==t&&2!==t)throw new Error(\"Cannot get WebGL rendering context, WebGL is disabled.\");var e=Wt(t);return e.addEventListener(\"webglcontextlost\",function(e){e.preventDefault(),delete Bt[t]},!1),1===t?e.getContext(\"webgl\",Lt)||e.getContext(\"experimental-webgl\",Lt):e.getContext(\"webgl2\",Lt)}(t));var e=Bt[t];return e.isContextLost()?(delete Bt[t],zt(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),Bt[t])}function Wt(t){if(\"undefined\"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if(\"undefined\"!=typeof document)return document.createElement(\"canvas\");throw new Error(\"Cannot create a canvas in this context\")}function Ut(t,e){return[e,t]}function jt(t){var e=E(t);return T(Math.ceil(e/4))}function Gt(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function Ht(t,e){var n,r,o,a,i,s,u,c,l,p=t;return 2===d.getNumber(\"WEBGL_VERSION\")?(n=p.R32F,r=p.R16F,o=p.RGBA16F,a=p.RGBA32F,i=p.RED,s=4,u=1,c=p.HALF_FLOAT,l=p.FLOAT):(n=t.RGBA,r=t.RGBA,o=t.RGBA,a=p.RGBA,i=t.RGBA,s=4,u=4,c=null!=e?e.HALF_FLOAT_OES:null,l=t.FLOAT),{internalFormatFloat:n,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:t.RGBA,downloadUnpackNumChannels:s,defaultNumChannels:u,textureTypeHalfFloat:c,textureTypeFloat:l}}function qt(t,e,n){var r=n();return e&&function(t){var e=t.getError();if(e!==t.NO_ERROR)throw new Error(\"WebGL Error: \"+Yt(t,e))}(t),r}!function(t){t[t.RENDER=0]=\"RENDER\",t[t.UPLOAD=1]=\"UPLOAD\",t[t.PIXELS=2]=\"PIXELS\",t[t.DOWNLOAD=3]=\"DOWNLOAD\"}(Ft||(Ft={})),function(t){t[t.UNPACKED_FLOAT16=0]=\"UNPACKED_FLOAT16\",t[t.UNPACKED_FLOAT32=1]=\"UNPACKED_FLOAT32\",t[t.PACKED_4X1_UNSIGNED_BYTE=2]=\"PACKED_4X1_UNSIGNED_BYTE\",t[t.PACKED_2X2_FLOAT32=3]=\"PACKED_2X2_FLOAT32\",t[t.PACKED_2X2_FLOAT16=4]=\"PACKED_2X2_FLOAT16\"}(Pt||(Pt={}));var $t=5.96e-8,Kt=65504;function Xt(t){return!!(d.getBool(\"WEBGL_RENDER_FLOAT32_ENABLED\")||0===t||$t<Math.abs(t)&&Math.abs(t)<Kt)}function Yt(t,e){switch(e){case t.NO_ERROR:return\"NO_ERROR\";case t.INVALID_ENUM:return\"INVALID_ENUM\";case t.INVALID_VALUE:return\"INVALID_VALUE\";case t.INVALID_OPERATION:return\"INVALID_OPERATION\";case t.INVALID_FRAMEBUFFER_OPERATION:return\"INVALID_FRAMEBUFFER_OPERATION\";case t.OUT_OF_MEMORY:return\"OUT_OF_MEMORY\";case t.CONTEXT_LOST_WEBGL:return\"CONTEXT_LOST_WEBGL\";default:return\"Unknown error code \"+e}}function Qt(t,e,n){return be(t,e,function(){return t.getExtension(n)},'Extension \"'+n+'\" not supported on this browser.')}function Jt(t,e,n){var r=be(t,e,function(){return t.createShader(t.VERTEX_SHADER)},\"Unable to create vertex WebGLShader.\");if(qt(t,e,function(){return t.shaderSource(r,n)}),qt(t,e,function(){return t.compileShader(r)}),!1===t.getShaderParameter(r,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(r)),new Error(\"Failed to compile vertex shader.\");return r}function Zt(t,e,n){var r=be(t,e,function(){return t.createShader(t.FRAGMENT_SHADER)},\"Unable to create fragment WebGLShader.\");if(qt(t,e,function(){return t.shaderSource(r,n)}),qt(t,e,function(){return t.compileShader(r)}),!1===t.getShaderParameter(r,t.COMPILE_STATUS))throw function(t,e){var n=ne.exec(e);if(null==n)return console.log(\"Couldn't parse line number in error: \"+e),void console.log(t);for(var r=+n[1],o=t.split(\"\\n\"),a=o.length.toString().length+2,i=o.map(function(t,e){return I((e+1).toString(),a)+t}),s=0,u=0;u<i.length;u++)s=Math.max(i[u].length,s);var c=i.slice(0,r-1),l=i.slice(r-1,r),p=i.slice(r);console.log(c.join(\"\\n\")),console.log(e.split(\"\\n\")[0]),console.log(\"%c \"+I(l[0],s),\"border:1px solid red; background-color:#e3d2d2; color:#a61717\"),console.log(p.join(\"\\n\"))}(n,t.getShaderInfoLog(r)),new Error(\"Failed to compile fragment shader.\");return r}var te,ee,ne=/ERROR: [0-9]+:([0-9]+):/g;function re(t,e){return be(t,e,function(){return t.createProgram()},\"Unable to create WebGLProgram.\")}function oe(t,e,n){if(qt(t,e,function(){return t.linkProgram(n)}),!1===t.getProgramParameter(n,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(n)),new Error(\"Failed to link vertex and fragment shaders.\")}function ae(t,e,n){if(qt(t,e,function(){return t.validateProgram(n)}),!1===t.getProgramParameter(n,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(n)),new Error(\"Shader program validation failed.\")}function ie(t,e,n){var r=be(t,e,function(){return t.createBuffer()},\"Unable to create WebGLBuffer\");return qt(t,e,function(){return t.bindBuffer(t.ARRAY_BUFFER,r)}),qt(t,e,function(){return t.bufferData(t.ARRAY_BUFFER,n,t.STATIC_DRAW)}),r}function se(t,e,n){var r=be(t,e,function(){return t.createBuffer()},\"Unable to create WebGLBuffer\");return qt(t,e,function(){return t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,r)}),qt(t,e,function(){return t.bufferData(t.ELEMENT_ARRAY_BUFFER,n,t.STATIC_DRAW)}),r}function ue(t,e){return be(t,e,function(){return t.createTexture()},\"Unable to create WebGLTexture.\")}function ce(t,e){var n=d.getNumber(\"WEBGL_MAX_TEXTURE_SIZE\");if(t<=0||e<=0){var r=\"[\"+t+\"x\"+e+\"]\";throw new Error(\"Requested texture size \"+r+\" is invalid.\")}if(t>n||e>n)throw r=\"[\"+t+\"x\"+e+\"]\",new Error(\"Requested texture size \"+r+\" greater than WebGL maximum on this browser / GPU [\"+n+\"x\"+n+\"].\")}function le(t,e){return be(t,e,function(){return t.createFramebuffer()},\"Unable to create WebGLFramebuffer.\")}function pe(t,e,n,r,o,a,i,s){var u=t.getAttribLocation(n,r);return-1!==u&&(qt(t,e,function(){return t.bindBuffer(t.ARRAY_BUFFER,o)}),qt(t,e,function(){return t.vertexAttribPointer(u,a,t.FLOAT,!1,i,s)}),qt(t,e,function(){return t.enableVertexAttribArray(u)}),!0)}function de(t,e,n,r){we(t,r),qt(t,e,function(){return t.activeTexture(t.TEXTURE0+r)}),qt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,n)})}function he(t,e,n,r){return be(t,e,function(){return t.getUniformLocation(n,r)},'uniform \"'+r+'\" not present in program.')}function fe(t,e,n){return t.getUniformLocation(e,n)}function me(t,e,n,r,o,a){qt(t,e,function(){return de(t,e,r,a)}),qt(t,e,function(){return t.uniform1i(o,a)})}function ve(t,e,n,r){qt(t,e,function(){return t.bindFramebuffer(t.FRAMEBUFFER,r)}),qt(t,e,function(){return t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0)})}function ge(t,e,n){qt(t,e,function(){return t.bindFramebuffer(t.FRAMEBUFFER,n)}),qt(t,e,function(){return t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)})}function ye(t){var e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error(\"Error binding framebuffer: \"+xe(t,e))}function xe(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return\"FRAMEBUFFER_INCOMPLETE_ATTACHMENT\";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return\"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT\";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return\"FRAMEBUFFER_INCOMPLETE_DIMENSIONS\";case t.FRAMEBUFFER_UNSUPPORTED:return\"FRAMEBUFFER_UNSUPPORTED\";default:return\"unknown error \"+e}}function be(t,e,n,r){var o=qt(t,e,function(){return n()});if(null==o)throw new Error(r);return o}function we(t,e){var n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(\"textureUnit must be in [gl.TEXTURE0, gl.TEXTURE\"+n+\"].\")}function Ce(t,e){return void 0===e&&(e=2),E(t.slice(0,t.length-e))}function Ee(t){if(0===t.length)throw Error(\"Cannot get rows and columns of an empty shape array.\");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function Ne(t){var e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[Ce(t)].concat(Ee(t))),e}function Se(t,e){var n;void 0===e&&(e=!1);var r=d.getNumber(\"WEBGL_MAX_TEXTURE_SIZE\");if(e&&(r*=2,1===(t=t.map(function(e,n){return n>=t.length-2?g(t[n]):t[n]})).length&&(t=[2,t[0]])),2!==t.length){var o=D(t);t=o.newShape}var a=E(t);if(t.length<=1&&a<=r)return[1,a];if(2===t.length&&t[0]<=r&&t[1]<=r)return t;if(3===t.length&&t[0]*t[1]<=r&&t[2]<=r)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=r&&t[1]*t[2]<=r)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=r&&t[3]<=r)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=r&&t[1]*t[2]*t[3]<=r)return[t[0],t[1]*t[2]*t[3]];if(e){var i=Ce(t),s=2,u=2;return t.length&&(s=(n=Ee(t))[0],u=n[1]),T(a=i*(s/2)*(u/2)).map(function(t){return 2*t})}return T(a)}function Re(t){return t%2==0}function Te(t,e){if(N(t=t.slice(-2),e=e.slice(-2)))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){var n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(Re(n)&&Re(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&Re(t[0])&&Re(e[0])}function Ie(t){if(null==te){var e=zt(t);te=e.getParameter(e.MAX_TEXTURE_SIZE)}return te}function Ae(t){if(null==ee){var e=zt(t);ee=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,ee)}function ke(t){if(0===t)return 0;var e=zt(t);return Oe(e,\"EXT_disjoint_timer_query_webgl2\")&&2===t?2:Oe(e,\"EXT_disjoint_timer_query\")?1:0}function Oe(t,e){return null!=t.getExtension(e)}function De(t){try{if(null!=zt(t))return!0}catch(t){return!1}return!1}function _e(t){if(0===t)return!1;var e=zt(t);if(1===t){if(!Oe(e,\"OES_texture_float\"))return!1}else if(!Oe(e,\"EXT_color_buffer_float\"))return!1;return Fe(e)}function Me(t){if(0===t)return!1;var e=zt(t);if(1!==t){if(Oe(e,\"EXT_color_buffer_float\"))return Fe(e);if(Oe(e,\"EXT_color_buffer_half_float\")){var n=e.getExtension(\"EXT_color_buffer_half_float\");return function(t,e){var n=Ht(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);var o=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,o),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);var a=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(o),a}(e,n)}return!1}return!!Oe(e,\"OES_texture_float\")&&!!Oe(e,\"WEBGL_color_buffer_float\")&&Fe(e)}function Fe(t){var e=Ht(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);var r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);var o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),o}function Pe(t){return 2===t&&null!=zt(t).fenceSync}var Be=Object.freeze({callAndCheck:qt,canBeRepresented:Xt,getWebGLErrorMessage:Yt,getExtensionOrThrow:Qt,createVertexShader:Jt,createFragmentShader:Zt,createProgram:re,linkProgram:oe,validateProgram:ae,createStaticVertexBuffer:ie,createStaticIndexBuffer:se,getNumChannels:function(){return 2===d.getNumber(\"WEBGL_VERSION\")?1:4},createTexture:ue,validateTextureSize:ce,createFramebuffer:le,bindVertexBufferToProgramAttribute:pe,bindTextureUnit:de,unbindTextureUnit:function(t,e,n){we(t,n),qt(t,e,function(){return t.activeTexture(t.TEXTURE0+n)}),qt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,null)})},getProgramUniformLocationOrThrow:he,getProgramUniformLocation:fe,bindTextureToProgramUniformSampler:me,bindCanvasToFramebuffer:function(t,e){qt(t,e,function(){return t.bindFramebuffer(t.FRAMEBUFFER,null)}),qt(t,e,function(){return t.viewport(0,0,t.canvas.width,t.canvas.height)}),qt(t,e,function(){return t.scissor(0,0,t.canvas.width,t.canvas.height)})},bindColorTextureToFramebuffer:ve,unbindColorTextureFromFramebuffer:ge,validateFramebuffer:ye,getFramebufferErrorMessage:xe,getBatchDim:Ce,getRowsCols:Ee,getShapeAs3D:Ne,getTextureShapeFromLogicalShape:Se,isReshapeFree:Te,getWebGLMaxTextureSize:Ie,resetMaxTextureSize:function(){te=null},resetMaxTexturesInShader:function(){ee=null},getMaxTexturesInShader:Ae,getWebGLDisjointQueryTimerVersion:ke,hasExtension:Oe,isWebGLVersionEnabled:De,isCapableOfRenderingToFloatTexture:_e,isDownloadFloatTextureEnabled:Me,isWebGLFenceEnabled:Pe});function Le(){d.set(\"PROD\",!0)}function Ve(){d.set(\"DEBUG\",!0)}function ze(){d.set(\"DEPRECATION_WARNINGS_ENABLED\",!1),console.warn(\"TensorFlow.js deprecation warnings have been disabled.\")}function We(t){d.getBool(\"DEPRECATION_WARNINGS_ENABLED\")&&console.warn(t+\" You can disable deprecation warnings with tf.disableDeprecationWarnings().\")}function Ue(){_t.disposeVariables()}function je(){return _t.memory()}function Ge(t){return _t.profile(t)}function He(t,e){return _t.tidy(t,e)}function qe(t){It(t).forEach(function(t){return t.dispose()})}function $e(t){return _t.keep(t)}function Ke(t){return _t.time(t)}function Xe(t){return _t.setBackend(t)}function Ye(){return _t.ready()}function Qe(){return _t.backendName}function Je(t){_t.removeBackend(t)}function Ze(t){return _t.findBackend(t)}function tn(t){return _t.findBackendFactory(t)}function en(t,e,n){return void 0===n&&(n=1),_t.registerBackend(t,e,n)}function nn(){return _t.backend}function rn(t,e){d.setPlatform(t,e)}function on(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];d.getBool(\"IS_TEST\")||console.warn.apply(console,t)}function an(t,e){var n=t;if(L(t))return\"string\"===e?[]:[t.length];if(!Array.isArray(t))return[];for(var r=[];Array.isArray(n)||L(n)&&\"string\"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&d.getBool(\"TENSORLIKE_CHECK_SHAPE_CONSISTENCY\")&&function t(e,n,r){if(r=r||[],Array.isArray(e)||L(e)){x(n.length>0,function(){return\"Element arr[\"+r.join(\"][\")+\"] should be a primitive, but is an array of \"+e.length+\" elements\"}),x(e.length===n[0],function(){return\"Element arr[\"+r.join(\"][\")+\"] should have \"+n[0]+\" elements, but has \"+e.length+\" elements\"});for(var o=n.slice(1),a=0;a<e.length;++a)t(e[a],o,r.concat(a))}else x(0===n.length,function(){return\"Element arr[\"+r.join(\"][\")+\"] is a primitive, but should be an array/TypedArray of \"+n[0]+\" elements\"})}(t,r,[]),r}function sn(t,e,n,r){if(null!=t&&(\"numeric\"!==t&&t!==e||\"numeric\"===t&&\"string\"===e))throw new Error(\"Argument '\"+n+\"' passed to '\"+r+\"' must be \"+t+\" tensor, but got \"+e+\" tensor\")}function un(t,e,n,r){if(void 0===r&&(r=\"numeric\"),t instanceof mt)return sn(r,t.dtype,e,n),t;var o=G(t);if(\"string\"!==o&&[\"bool\",\"int32\",\"float32\"].indexOf(r)>=0&&(o=r),sn(r,o,e,n),null==t||!L(t)&&!Array.isArray(t)&&\"number\"!=typeof t&&\"boolean\"!=typeof t&&\"string\"!=typeof t){var a=null==t?\"null\":t.constructor.name;throw new Error(\"Argument '\"+e+\"' passed to '\"+n+\"' must be a Tensor or TensorLike, but got '\"+a+\"'\")}var i=an(t,o);L(t)||Array.isArray(t)||(t=[t]);var s=\"string\"!==o?K(t,o,d.getBool(\"DEBUG\")):C(t,[],!0);return mt.make(i,{values:s},o)}function cn(t,e,n,r){if(void 0===r&&(r=\"numeric\"),!Array.isArray(t))throw new Error(\"Argument \"+e+\" passed to \"+n+\" must be a `Tensor[]` or `TensorLike[]`\");return t.map(function(t,r){return un(t,e+\"[\"+r+\"]\",n)},r)}function ln(t,e){for(var n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function pn(t,e,n){for(var r=t.length+e.length,o=[],a=0,i=0,s=0;s<r;s++)-1===n.indexOf(s)?o.push(t[a++]):o.push(e[i++]);return o}function dn(t,e){for(var n=[],r=t.length,o=0;o<r;o++)-1===e.indexOf(o)&&n.push(t[o]);return[n,e.map(function(e){return t[e]})]}function hn(t,e){return pn(t,e.map(function(t){return 1}),e)}function fn(t,e,n){x(ln(e,n),function(){return t+\" supports only inner-most axes for now. Got axes \"+e+\" and rank-\"+n+\" input.\"})}function mn(t,e){if(ln(t,e))return null;for(var n=[],r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach(function(t){return n.push(t)}),n}function vn(t){return t.map(function(t,e){return[e,t]}).sort(function(t,e){return t[1]-e[1]}).map(function(t){return t[0]})}function gn(t,e){for(var n=[],r=e-t;r<e;++r)n.push(r);return n}function yn(t,e){var n=t[0].length;t.forEach(function(t,e){x(t.length===n,function(){return\"Error in concat\"+n+\"D: rank of tensors[\"+e+\"] must be the same as the rank of the rest (\"+n+\")\"})}),x(e>=0&&e<n,function(){return\"Error in concat\"+n+\"D: axis must be between 0 and \"+(n-1)+\".\"});var r=t[0];t.forEach(function(t,o){for(var a=0;a<n;a++)x(a===e||t[a]===r[a],function(){return\"Error in concat\"+n+\"D: Shape of tensors[\"+o+\"] (\"+t+\") does not match the shape of the rest (\"+r+\") along the non-concatenated axis \"+o+\".\"})})}function xn(t,e){for(var n=t[0].slice(),r=1;r<t.length;r++)n[e]+=t[r][e];return n}function bn(t){var e=Object.keys(t);if(1!==e.length)throw new Error(\"Please provide an object with a single key (operation name) mapping to a function. Got an object with \"+e.length+\" keys.\");var n=e[0],r=t[n];n.endsWith(\"_\")&&(n=n.substring(0,n.length-1));var o=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];_t.startScope(n);try{var o=r.apply(void 0,t);return o instanceof Promise&&console.error(\"Cannot return a Promise inside of tidy.\"),_t.endScope(o),o}catch(t){throw _t.endScope(null),t}};return Object.defineProperty(o,\"name\",{value:n,configurable:!0}),o}d.registerFlag(\"HAS_WEBGL\",function(){return d.getNumber(\"WEBGL_VERSION\")>0}),d.registerFlag(\"WEBGL_VERSION\",function(){return De(2)?2:De(1)?1:0}),d.registerFlag(\"WEBGL_BUFFER_SUPPORTED\",function(){return 2===d.get(\"WEBGL_VERSION\")}),d.registerFlag(\"WEBGL_CPU_FORWARD\",function(){return!0}),d.registerFlag(\"WEBGL_FORCE_F16_TEXTURES\",function(){return!1}),d.registerFlag(\"WEBGL_PACK\",function(){return d.getBool(\"HAS_WEBGL\")}),d.registerFlag(\"WEBGL_PACK_NORMALIZATION\",function(){return d.getBool(\"WEBGL_PACK\")}),d.registerFlag(\"WEBGL_PACK_CLIP\",function(){return d.getBool(\"WEBGL_PACK\")}),d.registerFlag(\"WEBGL_PACK_DEPTHWISECONV\",function(){return!1}),d.registerFlag(\"WEBGL_PACK_BINARY_OPERATIONS\",function(){return d.getBool(\"WEBGL_PACK\")}),d.registerFlag(\"WEBGL_PACK_UNARY_OPERATIONS\",function(){return d.getBool(\"WEBGL_PACK\")}),d.registerFlag(\"WEBGL_PACK_ARRAY_OPERATIONS\",function(){return d.getBool(\"WEBGL_PACK\")}),d.registerFlag(\"WEBGL_PACK_IMAGE_OPERATIONS\",function(){return d.getBool(\"WEBGL_PACK\")}),d.registerFlag(\"WEBGL_PACK_REDUCE\",function(){return d.getBool(\"WEBGL_PACK\")}),d.registerFlag(\"WEBGL_LAZILY_UNPACK\",function(){return d.getBool(\"WEBGL_PACK\")}),d.registerFlag(\"WEBGL_CONV_IM2COL\",function(){return d.getBool(\"WEBGL_PACK\")}),d.registerFlag(\"WEBGL_MAX_TEXTURE_SIZE\",function(){return Ie(d.getNumber(\"WEBGL_VERSION\"))}),d.registerFlag(\"WEBGL_MAX_TEXTURES_IN_SHADER\",function(){return Ae(d.getNumber(\"WEBGL_VERSION\"))}),d.registerFlag(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\",function(){var t=d.getNumber(\"WEBGL_VERSION\");return 0===t?0:ke(t)}),d.registerFlag(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE\",function(){return d.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\")>0&&(t=navigator.userAgent||navigator.vendor||window.opera,!(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(t.substr(0,4))));var t}),d.registerFlag(\"WEBGL_RENDER_FLOAT32_CAPABLE\",function(){return _e(d.getNumber(\"WEBGL_VERSION\"))}),d.registerFlag(\"WEBGL_RENDER_FLOAT32_ENABLED\",function(){return!d.getBool(\"WEBGL_FORCE_F16_TEXTURES\")&&d.getBool(\"WEBGL_RENDER_FLOAT32_CAPABLE\")}),d.registerFlag(\"WEBGL_DOWNLOAD_FLOAT_ENABLED\",function(){return Me(d.getNumber(\"WEBGL_VERSION\"))}),d.registerFlag(\"WEBGL_FENCE_API_ENABLED\",function(){return Pe(d.getNumber(\"WEBGL_VERSION\"))}),d.registerFlag(\"WEBGL_SIZE_UPLOAD_UNIFORM\",function(){return d.getBool(\"WEBGL_RENDER_FLOAT32_ENABLED\")?4:0}),ft=We;var wn=bn({complex_:function(t,e){var n=un(t,\"real\",\"complex\"),r=un(e,\"imag\",\"complex\");return b(n.shape,r.shape,\"real and imag shapes, \"+n.shape+\" and \"+r.shape+\", must match in call to tf.complex().\"),_t.runKernel(function(t){return t.complex(n,r)},{$real:n,$imag:r})}}),Cn=bn({real_:function(t){var e=un(t,\"input\",\"real\");return _t.runKernel(function(t){return t.real(e)},{$input:e})}}),En=bn({imag_:function(t){var e=un(t,\"input\",\"imag\");return _t.runKernel(function(t){return t.imag(e)},{$input:e})}});function Nn(t,e,n){return Sn(t,e,an(t,n),n)}function Sn(t,e,n,r){if(null==r&&(r=G(t)),\"complex64\"===r)throw new Error(\"Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).\");if(!L(t)&&!Array.isArray(t)&&\"number\"!=typeof t&&\"boolean\"!=typeof t&&\"string\"!=typeof t)throw new Error(\"values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray\");if(null!=e){Z(e);var o=E(e),a=E(n);x(o===a,function(){return\"Based on the provided shape, [\"+e+\"], the tensor should have \"+o+\" values but has \"+a});for(var i=0;i<n.length;++i){var s=n[i],u=i!==n.length-1||s!==E(e.slice(i));x(n[i]===e[i]||!u,function(){return\"Error creating a new Tensor. Inferred shape (\"+n+\") does not match the provided shape (\"+e+\"). \"})}}return L(t)||Array.isArray(t)||(t=[t]),e=e||n,t=\"string\"!==r?K(t,r,d.getBool(\"DEBUG\")):C(t,[],!0),mt.make(e,{values:t},r)}function Rn(t,e){if((L(t)&&\"string\"!==e||Array.isArray(t))&&\"complex64\"!==e)throw new Error(\"Error creating a new Scalar: value must be a primitive (number|boolean|string)\");if(\"string\"===e&&L(t)&&!(t instanceof Uint8Array))throw new Error(\"When making a scalar from encoded string, the value must be `Uint8Array`.\");return Sn(t,[],[],e)}function Tn(t,e){w(t);var n=an(t,e);if(1!==n.length)throw new Error(\"tensor1d() requires values to be a flat/TypedArray\");return Sn(t,null,n,e)}function In(t,e,n){if(w(t),null!=e&&2!==e.length)throw new Error(\"tensor2d() requires shape to have two numbers\");var r=an(t,n);if(2!==r.length&&1!==r.length)throw new Error(\"tensor2d() requires values to be number[][] or flat/TypedArray\");if(1===r.length&&null==e)throw new Error(\"tensor2d() requires shape to be provided when `values` are a flat/TypedArray\");return Sn(t,e,r,n)}function An(t,e,n){if(w(t),null!=e&&3!==e.length)throw new Error(\"tensor3d() requires shape to have three numbers\");var r=an(t,n);if(3!==r.length&&1!==r.length)throw new Error(\"tensor3d() requires values to be number[][][] or flat/TypedArray\");if(1===r.length&&null==e)throw new Error(\"tensor3d() requires shape to be provided when `values` are a flat array\");return Sn(t,e,r,n)}function kn(t,e,n){if(w(t),null!=e&&4!==e.length)throw new Error(\"tensor4d() requires shape to have four numbers\");var r=an(t,n);if(4!==r.length&&1!==r.length)throw new Error(\"tensor4d() requires values to be number[][][][] or flat/TypedArray\");if(1===r.length&&null==e)throw new Error(\"tensor4d() requires shape to be provided when `values` are a flat array\");return Sn(t,e,r,n)}function On(t,e,n){if(w(t),null!=e&&5!==e.length)throw new Error(\"tensor5d() requires shape to have five numbers\");var r=an(t,n);if(5!==r.length&&1!==r.length)throw new Error(\"tensor5d() requires values to be number[][][][][] or flat/TypedArray\");if(1===r.length&&null==e)throw new Error(\"tensor5d() requires shape to be provided when `values` are a flat array\");return Sn(t,e,r,n)}function Dn(t,e,n){if(w(t),null!=e&&6!==e.length)throw new Error(\"tensor6d() requires shape to have six numbers\");var r=an(t,n);if(6!==r.length&&1!==r.length)throw new Error(\"tensor6d() requires values to be number[][][][][][] or flat/TypedArray\");if(1===r.length&&null==e)throw new Error(\"tensor6d() requires shape to be provided when `values` are a flat array\");return Sn(t,e=e||r,r,n)}function _n(t,e){if(void 0===e&&(e=\"float32\"),\"complex64\"===e){var n=_n(t,\"float32\"),r=Mn(t,\"float32\");return wn(n,r)}var o=Y(E(t),e);return mt.make(t,{values:o},e)}function Mn(t,e){if(void 0===e&&(e=\"float32\"),\"complex64\"===e){var n=Mn(t,\"float32\"),r=Mn(t,\"float32\");return wn(n,r)}var o=Q(E(t),e);return mt.make(t,{values:o},e)}function Fn(t,e,n){return _t.runKernel(function(r){return r.fill(t,e,n)},{})}function Pn(t,e,n){if(n<=0)throw new Error(\"The number of values should be positive.\");return _t.runKernel(function(r){return r.linspace(t,e,n)},{})}function Bn(t,e,n,r){if(void 0===n&&(n=1),void 0===r&&(r=\"float32\"),0===n)throw new Error(\"Cannot have a step of zero\");if(t===e||t<e&&n<0||e<t&&n>1)return Mn([0],r);var o=Q(Math.abs(Math.ceil((e-t)/n)),r);e<t&&1===n&&(n=-1),o[0]=t;for(var a=1;a<o.length;a++)o[a]=o[a-1]+n;return Tn(o,r)}var Ln=bn({onesLike_:function(t){var e=un(t,\"x\",\"onesLike\");if(\"complex64\"===e.dtype){var n=Ln(Cn(e)),r=Vn(En(e));return wn(n,r)}return _t.runKernel(function(t){return t.onesLike(e)},{$x:e},function(t,e){return{$x:function(){return Vn(t)}}})}}),Vn=bn({zerosLike_:function(t){var e=un(t,\"x\",\"zerosLike\");return _t.runKernel(function(t){return t.zerosLike(e)},{$x:e},function(t,e){return{$x:function(){return Vn(t)}}})}}),zn=bn({concat_:function(t,e){void 0===e&&(e=0),x(t.length>=1,function(){return\"Pass at least one tensor to concat\"});var n=cn(t,\"tensors\",\"concat\");\"complex64\"===n[0].dtype&&n.forEach(function(t){if(\"complex64\"!==t.dtype)throw new Error(\"Cannot concatenate complex64 tensors with a tensor\\n          with dtype \"+t.dtype+\". \")}),e=O(e,n[0].shape)[0];var r=xn(n.map(function(t){return t.shape}),e);if(0===E(r))return Nn([],r);if(1===(n=n.filter(function(t){return t.size>0})).length)return n[0];var o=n.map(function(t){return t.shape});yn(o,e);var a=n;return _t.runKernel(function(t){return t.concat(n,e)},a,function(t){var n=o.map(function(t){return t[e]});return Hn(t,n,e).map(function(t){return function(){return t}})})}}),Wn=bn({concat1d_:function(t){return zn(t,0)}}),Un=bn({concat2d_:function(t,e){return zn(t,e)}}),jn=bn({concat3d_:function(t,e){return zn(t,e)}}),Gn=bn({concat4d_:function(t,e){return zn(t,e)}}),Hn=bn({split_:function(t,e,n){void 0===n&&(n=0);var r,o=un(t,\"x\",\"split\");return n=O(n,o.shape)[0],\"number\"==typeof e?(x(o.shape[n]%e==0,function(){return\"Number of splits must evenly divide the axis.\"}),r=new Array(e).fill(o.shape[n]/e)):(x(o.shape[n]===e.reduce(function(t,e){return t+e}),function(){return\"The sum of sizes must match the size of the axis dimension.\"}),r=e),_t.runKernel(function(t){return t.split(o,r,n)},{$x:o},function(t){return{$x:function(){return zn(t,n)}}})}});function qn(t,e){return t(e={exports:{}},e.exports),e.exports}\"undefined\"!=typeof globalThis?globalThis:\"undefined\"!=typeof window?window:void 0!==t||\"undefined\"!=typeof self&&self;var $n=qn(function(t){!function(t,e,n){function r(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(\" \"),n.s1=r(\" \"),n.s2=r(\" \"),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function o(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function a(t,e){var n=new r(t),a=e&&e.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+1.1102230246251565e-16*(2097152*i()|0)},i.quick=i,a&&(\"object\"==typeof a&&o(a,n),i.state=function(){return o(n,{})}),i}e&&e.exports?e.exports=a:this.alea=a}(0,t)}),Kn=qn(function(t){!function(t,e,n){function r(t){var e=this,n=\"\";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(\"object\"==typeof a&&o(a,n),i.state=function(){return o(n,{})}),i}e&&e.exports?e.exports=a:this.xor128=a}(0,t)}),Xn=qn(function(t){!function(t,e,n){function r(t){var e=this,n=\"\";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function o(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(\"object\"==typeof a&&o(a,n),i.state=function(){return o(n,{})}),i}e&&e.exports?e.exports=a:this.xorwow=a}(0,t)}),Yn=qn(function(t){!function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.x,o=e.i;return t=r[o],n=(t^=t>>>7)^t<<24,n^=(t=r[o+1&7])^t>>>10,n^=(t=r[o+3&7])^t>>>3,n^=(t=r[o+4&7])^t<<7,t=r[o+7&7],n^=(t^=t<<13)^t<<9,r[o]=n,e.i=o+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=\"\"+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function o(t,e){return e.x=t.x.slice(),e.i=t.i,e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.x&&o(a,n),i.state=function(){return o(n,{})}),i}e&&e.exports?e.exports=a:this.xorshift7=a}(0,t)}),Qn=qn(function(t){!function(t,e,n){function r(t){var e=this;e.next=function(){var t,n,r=e.w,o=e.X,a=e.i;return e.w=r=r+1640531527|0,n=o[a+34&127],t=o[a=a+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=o[a]=n^t,e.i=a,n+(r^r>>>16)|0},function(t,e){var n,r,o,a,i,s=[],u=128;for(e===(0|e)?(r=e,e=null):(e+=\"\\0\",r=0,u=Math.max(u,e.length)),o=0,a=-32;a<u;++a)e&&(r^=e.charCodeAt((a+32)%e.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,o=0==(n=s[127&a]^=r+i)?o+1:0);for(o>=128&&(s[127&(e&&e.length||0)]=-1),o=127,a=512;a>0;--a)r=s[o+34&127],n=s[o=o+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,s[o]=r^n;t.w=i,t.X=s,t.i=o}(e,t)}function o(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function a(t,e){null==t&&(t=+new Date);var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(a.X&&o(a,n),i.state=function(){return o(n,{})}),i}e&&e.exports?e.exports=a:this.xor4096=a}(0,t)}),Jn=qn(function(t){!function(t,e,n){function r(t){var e=this,n=\"\";e.next=function(){var t=e.b,n=e.c,r=e.d,o=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^o,o=o-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^o,e.a=o-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function o(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function a(t,e){var n=new r(t),a=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,a&&(\"object\"==typeof a&&o(a,n),i.state=function(){return o(n,{})}),i}e&&e.exports?e.exports=a:this.tychei=a}(0,t)}),Zn=qn(function(t){!function(e,r){var o,a=this,i=256,s=6,u=\"random\",c=r.pow(i,s),l=r.pow(2,52),p=2*l,d=i-1;function h(t,n,d){var h=[],y=v(function t(e,n){var r,o=[],a=typeof e;if(n&&\"object\"==a)for(r in e)try{o.push(t(e[r],n-1))}catch(t){}return o.length?o:\"string\"==a?e:e+\"\\0\"}((n=1==n?{entropy:!0}:n||{}).entropy?[t,g(e)]:null==t?function(){try{var t;return o&&(t=o.randomBytes)?t=t(i):(t=new Uint8Array(i),(a.crypto||a.msCrypto).getRandomValues(t)),g(t)}catch(t){var n=a.navigator,r=n&&n.plugins;return[+new Date,a,r,a.screen,g(e)]}}():t,3),h),x=new f(h),b=function(){for(var t=x.g(s),e=c,n=0;t<l;)t=(t+n)*i,e*=i,n=x.g(1);for(;t>=p;)t/=2,e/=2,n>>>=1;return(t+n)/e};return b.int32=function(){return 0|x.g(4)},b.quick=function(){return x.g(4)/4294967296},b.double=b,v(g(x.S),e),(n.pass||d||function(t,e,n,o){return o&&(o.S&&m(o,x),t.state=function(){return m(x,{})}),n?(r[u]=t,e):t})(b,y,\"global\"in n?n.global:this==r,n.state)}function f(t){var e,n=t.length,r=this,o=0,a=r.i=r.j=0,s=r.S=[];for(n||(t=[n++]);o<i;)s[o]=o++;for(o=0;o<i;o++)s[o]=s[a=d&a+t[o%n]+(e=s[o])],s[a]=e;(r.g=function(t){for(var e,n=0,o=r.i,a=r.j,s=r.S;t--;)e=s[o=d&o+1],n=n*i+s[d&(s[o]=s[a=d&a+e])+(s[a]=e)];return r.i=o,r.j=a,n})(i)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function v(t,e){for(var n,r=t+\"\",o=0;o<r.length;)e[d&o]=d&(n^=19*e[d&o])+r.charCodeAt(o++);return g(e)}function g(t){return String.fromCharCode.apply(0,t)}if(r[\"seed\"+u]=h,v(r.random(),e),t.exports){t.exports=h;try{o=n(10)}catch(t){}}}([],Math)});Zn.alea=$n,Zn.xor128=Kn,Zn.xorwow=Xn,Zn.xorshift7=Yn,Zn.xor4096=Qn,Zn.tychei=Jn;var tr=Zn.alea,er=function(){function t(t,e,n,r,o){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);var a=o||Math.random();this.random=tr(a.toString())}return t.prototype.nextValue=function(){if(!isNaN(this.nextVal)){var t=this.nextVal;return this.nextVal=NaN,t}for(var e,n,r=!1;!r;){var o=void 0,a=void 0,i=void 0;do{i=(o=2*this.random()-1)*o+(a=2*this.random()-1)*a}while(i>=1||0===i);var s=Math.sqrt(-2*Math.log(i)/i);e=this.mean+this.stdDev*o*s,n=this.mean+this.stdDev*a*s,this.truncated&&!this.isValidTruncated(e)||(r=!0)}return this.truncated&&!this.isValidTruncated(n)||(this.nextVal=this.convertValue(n)),this.convertValue(e)},t.prototype.convertValue=function(t){return null==this.dtype||\"float32\"===this.dtype?t:Math.round(t)},t.prototype.isValidTruncated=function(t){return t<=this.upper&&t>=this.lower},t}(),nr=function(){function t(t,e,n,r){this.alpha=t,this.beta=1/e,this.dtype=n;var o=r||Math.random();this.randu=tr(o.toString()),this.randn=new er(0,1,n,!1,this.randu()),this.d=t<1?t+2/3:t-1/3,this.c=1/Math.sqrt(9*this.d)}return t.prototype.nextValue=function(){for(var t,e,n,r,o,a;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=1-.331*(t=r*r)*t,n=.5*t+this.d*(1-a+Math.log(a)),(o=this.randu())<e||Math.log(o)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)},t.prototype.convertValue=function(t){return\"float32\"===this.dtype?t:Math.round(t)},t}(),rr=function(){function t(t,e,n,r){var o=this;if(void 0===t&&(t=0),void 0===e&&(e=1),this.canReturnFloat=function(){return null==o.dtype||\"float32\"===o.dtype},this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),\"number\"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(\"The difference between \"+t+\" - \"+e+\" <= 1 and dtype is not float\");this.random=tr(r)}return t.prototype.convertValue=function(t){return this.canReturnFloat()?t:Math.round(t)},t.prototype.nextValue=function(){return this.convertValue(this.min+this.range*this.random())},t}();function or(t,e,n){return void 0===e&&(e=\"float32\"),e=e||\"float32\",Z(t),new pt(t,e,n)}function ar(t,e){void 0===e&&(e=!1),console.log(t.toString(e))}var ir=bn({batchToSpaceND_:function(t,e,n){var r=un(t,\"x\",\"batchToSpaceND\"),o=e.reduce(function(t,e){return t*e});return x(r.rank>=1+e.length,function(){return\"input rank is \"+r.rank+\" but should be > than blockShape.length \"+e.length}),x(n.length===e.length,function(){return\"crops.length is \"+n.length+\" but should be equal to blockShape.length  \"+e.length}),x(r.shape[0]%o==0,function(){return\"input tensor batch is \"+r.shape[0]+\" but is not divisible by the product of the elements of blockShape \"+e.join(\" * \")+\" === \"+o}),_t.runKernel(function(t){return t.batchToSpaceND(r,e,n)},{$x:r},function(t){return{$x:function(){return t.spaceToBatchND(e,n)}}})}}),sr=bn({cast_:function(t,e){var n=un(t,\"x\",\"cast\");if(!P(e))throw new Error(\"Failed to cast to unknown dtype \"+e);if(\"string\"===e&&\"string\"!==n.dtype||\"string\"!==e&&\"string\"===n.dtype)throw new Error(\"Only strings can be casted to strings\");return _t.runKernel(function(t){return t.cast(n,e)},{$x:n},function(t){return{$x:function(){return t.clone()}}})}}),ur=bn({clone_:function(t){var e=un(t,\"x\",\"clone\",null);return _t.runKernel(function(t){return mt.make(e.shape,{dataId:e.dataId},e.dtype)},{$x:e},function(t){return{$x:function(){return t.toFloat()}}})}}),cr=bn({cumsum_:function(t,e,n,r){void 0===e&&(e=0),void 0===n&&(n=!1),void 0===r&&(r=!1);var o=un(t,\"x\",\"cumsum\"),a=mn([e|=0],o.rank),i=o;null!=a&&(i=o.transpose(a));var s=gn(1,o.rank)[0],u=_t.runKernel(function(t){return t.cumsum(i,s,n,r)},{permutedX:i},function(t){return{permutedX:function(){return t.cumsum(e,n,!r)}}});return null!=a&&(u=u.transpose(a)),u}}),lr=bn({depthToSpace_:function(t,e,n){void 0===n&&(n=\"NHWC\");var r=un(t,\"x\",\"depthToSpace\"),o=\"NHWC\"===n?r.shape[1]:r.shape[2],a=\"NHWC\"===n?r.shape[2]:r.shape[3],i=\"NHWC\"===n?r.shape[3]:r.shape[1];return x(o*e>=0,function(){return\"Negative dimension size caused by overflow when multiplying\\n      \"+o+\" and \"+e+\"  for depthToSpace with input shape\\n      \"+r.shape}),x(a*e>=0,function(){return\"Negative dimension size caused by overflow when multiplying\\n      \"+a+\" and \"+e+\" for depthToSpace with input shape\\n          \"+r.shape}),x(i%(e*e)==0,function(){return\"Dimension size must be evenly divisible by \"+e*e+\" but is \"+i+\" for depthToSpace with input shape \"+r.shape}),_t.runKernel(function(t){return t.depthToSpace(r,e,n)},{$x:r})}}),pr=bn({expandDims_:function(t,e){void 0===e&&(e=0);var n=un(t,\"x\",\"expandDims\",null);x(e<=n.rank,function(){return\"Axis must be <= rank of the tensor\"});var r=n.shape.slice();return e<0&&(x(-(n.rank+1)<=e,function(){return\"Axis must be in the interval [\"+-(n.rank+1)+\", \"+n.rank+\"]\"}),e=n.rank+e+1),r.splice(e,0,1),Nr(n,r)}}),dr=bn({eye_:function(t,e,n,r){void 0===r&&(r=\"float32\"),null==e&&(e=t);for(var o=or([t,e],r),a=t<=e?t:e,i=0;i<a;++i)o.set(1,i,i);var s=o.toTensor().as2D(t,e);if(null==n)return s;if(1===n.length)return Ir(pr(s,0),[n[0],1,1]);if(2===n.length)return Ir(pr(pr(s,0),0),[n[0],n[1],1,1]);if(3===n.length)return Ir(pr(pr(pr(s,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(\"eye() currently supports only 1D and 2D batchShapes, but received \"+n.length+\"D.\")}}),hr=bn({multinomial_:function(t,e,n,r){void 0===r&&(r=!1);var o=un(t,\"logits\",\"multinomial\"),a=o.size,i=o.rank;if(a<2)throw new Error(\"Error in multinomial: you need at least 2 outcomes, but got \"+a+\".\");if(i>2)throw new Error(\"Rank of probabilities must be 1 or 2, but is \"+i);n=n||Math.random();var s=1===i?o.as2D(1,-1):o,u=_t.runKernel(function(t){return t.multinomial(s,r,e,n)},{logits2D:s});return 1===i?u.as1D():u}}),fr=bn({oneHot_:function(t,e,n,r){if(void 0===n&&(n=1),void 0===r&&(r=0),e<2)throw new Error(\"Error in oneHot: depth must be >=2, but it is \"+e);var o=un(t,\"indices\",\"oneHot\",\"int32\"),a=o.shape.concat([e]);return o=o.flatten(),_t.runKernel(function(t){return t.oneHot(o,e,n,r)},{$indices:o},function(t){return{$indices:function(){return Mn(o.shape,\"float32\")}}}).reshape(a)}}),mr=bn({pad_:function(t,e,n){void 0===n&&(n=0);var r=un(t,\"x\",\"pad\");if(0===r.rank)throw new Error(\"pad(scalar) is not defined. Pass non-scalar to pad\");var o=e.map(function(t){return t[0]});return _t.runKernel(function(t){return t.pad(r,e,n)},{$x:r},function(t){return{$x:function(){return t.slice(o,r.shape)}}})}}),vr=bn({pad1d_:function(t,e,n){return void 0===n&&(n=0),x(2===e.length,function(){return\"Invalid number of paddings. Must be length of 2.\"}),mr(t,[e],n)}}),gr=bn({pad2d_:function(t,e,n){return void 0===n&&(n=0),x(2===e.length&&2===e[0].length&&2===e[1].length,function(){return\"Invalid number of paddings. Must be length of 2 each.\"}),mr(t,e,n)}}),yr=bn({pad3d_:function(t,e,n){return void 0===n&&(n=0),x(3===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length,function(){return\"Invalid number of paddings. Must be length of 2 each.\"}),mr(t,e,n)}}),xr=bn({pad4d_:function(t,e,n){return void 0===n&&(n=0),x(4===e.length&&2===e[0].length&&2===e[1].length&&2===e[2].length&&2===e[3].length,function(){return\"Invalid number of paddings. Must be length of 2 each.\"}),mr(t,e,n)}}),br=bn({rand_:function(t,e,n){var r=E(t),o=null;if(null==n||\"float32\"===n)o=new Float32Array(r);else if(\"int32\"===n)o=new Int32Array(r);else{if(\"bool\"!==n)throw new Error(\"Unknown data type \"+n);o=new Uint8Array(r)}for(var a=0;a<r;a++)o[a]=e();return mt.make(t,{values:o},n)}}),wr=bn({randomNormal_:function(t,e,n,r,o){if(void 0===e&&(e=0),void 0===n&&(n=1),null!=r&&\"bool\"===r)throw new Error(\"Unsupported data type \"+r);for(var a=new er(e,n,r,!1,o),i=or(t,r),s=0;s<i.values.length;s++)i.values[s]=a.nextValue();return i.toTensor()}}),Cr=bn({randomGamma_:function(t,e,n,r,o){if(void 0===n&&(n=1),void 0===r&&(r=\"float32\"),null==n&&(n=1),null==r&&(r=\"float32\"),\"float32\"!==r&&\"int32\"!==r)throw new Error(\"Unsupported data type \"+r);for(var a=new nr(e,n,r,o),i=or(t,r),s=0;s<i.values.length;s++)i.values[s]=a.nextValue();return i.toTensor()}}),Er=bn({randomUniform_:function(t,e,n,r,o){void 0===e&&(e=0),void 0===n&&(n=1),void 0===r&&(r=\"float32\");for(var a=or(t,r),i=new rr(e,n,null,o),s=0;s<a.values.length;s++)a.values[s]=i.nextValue();return a.toTensor()}}),Nr=bn({reshape_:function(t,e){var n=un(t,\"x\",\"reshape\",null);return e=k(e,n.size),x(n.size===E(e),function(){return\"new shape and old shape must have the same number of elements.\"}),_t.runKernel(function(t){return t.reshape(n,e)},{$x:n},function(t){return{$x:function(){return t.reshape(n.shape)}}})}}),Sr=bn({spaceToBatchND_:function(t,e,n){var r=un(t,\"x\",\"spaceToBatchND\");return x(r.rank>=1+e.length,function(){return\"input rank \"+r.rank+\" should be > than [blockShape] \"+e.length}),x(n.length===e.length,function(){return\"paddings.shape[0] \"+n.length+\" must be equal to [blockShape] \"+e.length}),x(r.shape.reduce(function(t,r,o){return o>0&&o<=e.length?t&&(r+n[o-1][0]+n[o-1][1])%e[o-1]==0:t},!0),function(){return\"input spatial dimensions \"+r.shape.slice(1)+\" with paddings \"+n.toString()+\" must be divisible by blockShapes \"+e.toString()}),_t.runKernel(function(t){return t.spaceToBatchND(r,e,n)},{$x:r},function(t){return{$x:function(){return t.batchToSpaceND(e,n)}}})}}),Rr=bn({squeeze_:function(t,e){var n=un(t,\"x\",\"squeeze\");return Nr(n,D(n.shape,e).newShape)}}),Tr=bn({stack_:function(t,e){void 0===e&&(e=0);var n=cn(t,\"tensors\",\"stack\");if(x(n.length>=1,function(){return\"Pass at least one tensor to tf.stack\"}),1===n.length)return n[0].expandDims(e);var r=n[0].rank,o=n[0].shape,a=n[0].dtype;x(e<=r,function(){return\"Axis must be <= rank of the tensor\"}),n.forEach(function(t){b(o,t.shape,\"All tensors passed to stack must have matching shapes\")}),n.forEach(function(t){x(a===t.dtype,function(){return\"All tensors passed to stack must have matching dtypes\"})});var i=n.map(function(t){return t.expandDims(e)});return zn(i,e)}}),Ir=bn({tile_:function(t,e){var n=un(t,\"x\",\"tile\",null);return x(n.rank===e.length,function(){return\"Error in transpose: rank of input \"+n.rank+\" must match length of reps \"+e+\".\"}),_t.runKernel(function(t,r){var o=t.tile(n,e);return r([n]),o},{$x:n},function(t,n){var r=n[0];return{$x:function(){var n=Vn(r);if(1===r.rank)for(var o=0;o<e[0];++o)n=n.add(t.slice([o*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(o=0;o<e[0];++o)for(var a=0;a<e[1];++a)n=n.add(t.slice([o*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(o=0;o<e[0];++o)for(a=0;a<e[1];++a)for(var i=0;i<e[2];++i)n=n.add(t.slice([o*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(\"Gradient for tile operation is not implemented for rank-\"+r.rank+\" tensors yet.\");for(o=0;o<e[0];++o)for(a=0;a<e[1];++a)for(i=0;i<e[2];++i)for(var s=0;s<e[3];++s)n=n.add(t.slice([o*r.shape[0],a*r.shape[1],i*r.shape[2],s*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return n}}})}}),Ar=bn({truncatedNormal_:function(t,e,n,r,o){if(void 0===e&&(e=0),void 0===n&&(n=1),null!=r&&\"bool\"===r)throw new Error(\"Unsupported data type \"+r);for(var a=new er(e,n,r,!0,o),i=or(t,r),s=0;s<i.values.length;s++)i.values[s]=a.nextValue();return i.toTensor()}}),kr=bn({unstack_:function(t,e){void 0===e&&(e=0),e=e||0;var n=un(t,\"x\",\"unstack\");return x(e>=-n.shape.length&&e<n.shape.length,function(){return\"Axis = \"+e+\" is not in [-\"+n.shape.length+\", \"+n.shape.length+\")\"}),e<0&&(e+=n.shape.length),_t.runKernel(function(t){return t.unstack(n,e)},{$x:n},function(t){return{$x:function(){return Tr(t,e)}}})}}),Or=function(t,e){return u(this,void 0,void 0,function(){var n,r,o,a,i,s,u,l,p,d;return c(this,function(c){switch(c.label){case 0:return n=un(t,\"x\",\"setdiff1d\"),r=un(e,\"y\",\"setdiff1d\"),x(n.dtype===r.dtype,function(){return\"x and y should have the same dtype, but got x (\"+n.dtype+\") and y (\"+r.dtype+\").\"}),x(1===n.rank,function(){return\"x should be 1D tensor, but got x (\"+n.shape+\").\"}),x(1===r.rank,function(){return\"y should be 1D tensor, but got y (\"+r.shape+\").\"}),[4,n.data()];case 1:return o=c.sent(),[4,r.data()];case 2:for(a=c.sent(),i=new Set(a),s=0,p=0;p<o.length;p++)i.has(o[p])||s++;for(u=new pt([s],n.dtype),l=new pt([s],\"int32\"),p=0,d=0;p<o.length;p++)i.has(o[p])||(u.values[d]=o[p],l.values[d]=p,d++);return[2,[u.toTensor(),l.toTensor()]]}})})};function Dr(t,e,n,r){void 0===r&&(r=!0);var o=[];if(r)(o=o.concat(e.slice(0))).push(t[0]/n),o=o.concat(t.slice(1));else{o=o.concat(t[0]);for(var a=e.length,i=0;i<a;++i)o=o.concat([t[i+1]/e[i],e[i]]);o=o.concat(t.slice(a+1))}return o}function _r(t,e,n){void 0===n&&(n=!0);var r=[];if(n){r.push(e);for(var o=e+1;o<t;++o)o<=2*e?(r.push(o),r.push(o-(e+1))):r.push(o)}else{var a=[],i=[];for(o=1;o<t;++o)o>=2*e+1||o%2==1?i.push(o):a.push(o);r.push.apply(r,a),r.push(0),r.push.apply(r,i)}return r}function Mr(t,e,n,r){void 0===r&&(r=!0);var o=[];r?o.push(t[0]/n):o.push(t[0]*n);for(var a=1;a<t.length;++a)a<=e.length?r?o.push(e[a-1]*t[a]):o.push(t[a]/e[a-1]):o.push(t[a]);return o}function Fr(t,e){for(var n=[0],r=0;r<e;++r)n.push(t[r][0]);return n}function Pr(t,e,n){for(var r=t.slice(0,1),o=0;o<n;++o)r.push(t[o+1]-e[o][0]-e[o][1]);return r}function Br(t,e){if(t.rank<1)throw new Error(\"tf.gatherND() expects the input to be rank 1 or higher, but the rank was \"+t.rank+\".\");if(e.rank<1)throw new Error(\"tf.gatherND() expects the indices to be rank 1 or higher, but the rank was \"+e.rank+\".\");if(\"int32\"!==e.dtype)throw new Error(\"tf.gatherND() expects the indices to be int32 type, but the dtype was \"+e.dtype+\".\");if(e.shape[e.rank-1]>t.rank)throw new Error(\"index innermost dimension length must be <= tensor rank; saw: \"+e.shape[e.rank-1]+\" vs. \"+t.rank);if(0===t.size)throw new Error(\"Requested more than 0 entries, but input is empty. Input shape: \"+t.shape+\".\");for(var n=e.shape,r=n[n.length-1],o=1,a=0;a<n.length-1;++a)o*=n[a];var i=t.shape,s=n.slice();s.pop();var u=1;for(a=r;a<t.rank;++a)u*=i[a],s.push(i[a]);var c=$(t.shape).map(function(t){return t/u}).concat([1]).slice(0,r);return[s,o,u,c]}var Lr=30;function Vr(t){return t<=Lr?t:q(t,Math.floor(Math.sqrt(t)))}function zr(t,e,n){for(var r=e.rank>1?e.shape[e.rank-1]:1,o=n.length,a=1,i=r;i<o;++i)a*=n[i];var s=r<1?1:r;return{sliceRank:r,numUpdates:e.size/s,sliceSize:a,strides:$(n.slice(0,r)).concat([1]),outputSize:E(n)}}function Wr(t){for(var e=[],n=0;t>0;)1&t&&e.push(n),t/=2,n++;return e}function Ur(t,e,n){for(var r=[],o=0;o<t.length;o++)r[o]=Math.ceil((e[o]-t[o])/n[o]);return r}function jr(t,e,n,r,o){var a=e[o],i=n[o]||1;(t&1<<o||null==a)&&(a=i>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);var s=r[o];return a<0&&(a+=s),v(0,a,s-1)}function Gr(t,e,n,r,o){var a=e[o],i=n[o]||1;(t&1<<o||null==a)&&(a=i>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);var s=r[o];return a<0&&(a+=s),i>0?v(0,a,s):v(-1,a,s-1)}function Hr(t,e,n){for(var r=n.length,o=0;o<n.length;o++)if(n[o]>1){r=o;break}for(o=r+1;o<n.length;o++)if(e[o]>0||n[o]!==t[o])return!1;return!0}function qr(t,e){for(var n=t.length>0?t[t.length-1]:1,r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function $r(t){return x(H(t),function(){return\"The f passed in grad(f) must be a function\"}),function(e,n){var r=un(e,\"x\",\"tf.grad\",null),o=null!=n?un(n,\"dy\",\"tf.grad\"):null;return _t.tidy(function(){var e=_t.gradients(function(){return t(r)},[r],o),n=e.value,a=e.grads;return null!=o&&b(n.shape,o.shape,\"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)\"),Zr(a),a[0]})}}function Kr(t){return x(H(t),function(){return\"The f passed in grads(f) must be a function\"}),function(e,n){x(Array.isArray(e),function(){return\"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s\"});var r=cn(e,\"args\",\"tf.grads\",null),o=null!=n?un(n,\"dy\",\"tf.grads\"):null;return _t.tidy(function(){var e=_t.gradients(function(){return t.apply(void 0,r)},r,o),n=e.value,a=e.grads;return null!=o&&b(n.shape,o.shape,\"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])\"),Zr(a),a})}}function Xr(t){return x(H(t),function(){return\"The f passed in valueAndGrad(f) must be a function\"}),function(e,n){x(e instanceof mt,function(){return\"The x passed in valueAndGrad(f)(x) must be a tensor\"}),x(null==n||n instanceof mt,function(){return\"The dy passed in valueAndGrad(f)(x, dy) must be a tensor\"});var r=_t.gradients(function(){return t(e)},[e],n),o=r.grads,a=r.value;return Zr(o),{grad:o[0],value:a}}}function Yr(t){return x(H(t),function(){return\"The f passed in valueAndGrads(f) must be a function\"}),function(e,n){x(Array.isArray(e)&&e.every(function(t){return t instanceof mt}),function(){return\"The args passed in valueAndGrads(f)(args) must be array of tensors\"}),x(null==n||n instanceof mt,function(){return\"The dy passed in valueAndGrads(f)(args, dy) must be a tensor\"});var r=_t.gradients(function(){return t.apply(void 0,e)},e,n);return null!=n&&b(r.value.shape,n.shape,\"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])\"),Zr(r.grads),r}}function Qr(t,e){x(H(t),function(){return\"The f passed in variableGrads(f) must be a function\"}),x(null==e||Array.isArray(e)&&e.every(function(t){return t instanceof vt}),function(){return\"The varList passed in variableGrads(f, varList) must be an array of variables\"});var n=null!=e;if(!n)for(var r in e=[],_t.registeredVariables)e.push(_t.registeredVariables[r]);var o=n?e.filter(function(t){return!t.trainable}):null,a=e.length;x((e=e.filter(function(t){return t.trainable})).length>0,function(){return\"variableGrads() expects at least one of the input variables to be trainable, but none of the \"+a+\" variables is trainable.\"});var i=_t.gradients(t,e,null,!0),s=i.value,u=i.grads;x(u.some(function(t){return null!=t}),function(){return\"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().\"}),x(0===s.rank,function(){return\"The f passed in variableGrads(f) must return a scalar, but it returned a rank-\"+s.rank+\" tensor\"});var c={};return e.forEach(function(t,e){null!=u[e]&&(c[t.name]=u[e])}),null!=o&&o.forEach(function(t){return c[t.name]=null}),{value:s,grads:c}}function Jr(t){return _t.customGrad(t)}function Zr(t){if(t.filter(function(t){return null==t}).length>0)throw new Error(\"Cannot compute gradient of y=f(x) with respect to x. Make sure that\\n    the f you passed encloses all operations that lead from x to y.\")}var to=bn({softmax_:function(t,e){void 0===e&&(e=-1);var n=un(t,\"logits\",\"softmax\");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(\"Softmax along a non-last dimension is not yet supported. Logits was rank \"+n.rank+\" and dim was \"+e);return Jr(function(t,n){var r=t.logSumExp([e],!0),o=t.toFloat().sub(r).exp();return n([o]),{value:o,gradFunc:function(t,n){var r=n[0],o=t.mul(r);return o.sub(o.sum([e],!0).mul(r))}}})(n)}}),eo=bn({logSoftmax_:function(t,e){void 0===e&&(e=-1);var n=un(t,\"logits\",\"logSoftmax\");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(\"Log Softmax along a non-last dimension is not yet supported. Logits was rank \"+n.rank+\" and axis was \"+e);return Jr(function(t,n){var r=t.max(e,!0),o=t.sub(r),a=o.toFloat().sub(o.exp().sum(e,!0).log());return n([a]),{value:a,gradFunc:function(t,n){var r=n[0].exp();return t.sub(t.sum(e,!0).mul(r))}}})(n)}}),no=function(){function t(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap}return t.prototype.get=function(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)},t.prototype.set=function(t,e){this.data.set(t,e)},t.prototype.has=function(t){return this.data.has(t)},t.prototype.delete=function(t){return this.data.delete(t)},t}(),ro=function(){function t(){}return t.prototype.time=function(t){throw new Error(\"Not yet implemented.\")},t.prototype.read=function(t){throw new Error(\"Not yet implemented.\")},t.prototype.readSync=function(t){throw new Error(\"Not yet implemented.\")},t.prototype.disposeData=function(t){throw new Error(\"Not yet implemented.\")},t.prototype.write=function(t,e){throw new Error(\"Not yet implemented.\")},t.prototype.fromPixels=function(t,e){throw new Error(\"Not yet implemented.\")},t.prototype.register=function(t,e,n){throw new Error(\"Not yet implemented.\")},t.prototype.memory=function(){throw new Error(\"Not yet implemented.\")},t.prototype.floatPrecision=function(){throw new Error(\"Not yet implemented\")},t.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},t.prototype.batchMatMul=function(t,e,n,r){throw new Error(\"Not yet implemented\")},t.prototype.fusedBatchMatMul=function(t){throw t.a,t.b,t.transposeA,t.transposeB,t.bias,t.activation,t.preluActivationWeights,new Error(\"Not yet implemented\")},t.prototype.slice=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.stridedSlice=function(t,e,n,r){throw new Error(\"Not yet implemented\")},t.prototype.unstack=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.reverse=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.concat=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.neg=function(t){throw new Error(\"Not yet implemented\")},t.prototype.add=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.addN=function(t){throw new Error(\"Not yet implemented\")},t.prototype.subtract=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.multiply=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.realDivide=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.floorDiv=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.sum=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.prod=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.unsortedSegmentSum=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.argMin=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.argMax=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.equal=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.notEqual=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.less=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.lessEqual=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.greater=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.greaterEqual=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.logicalNot=function(t){throw new Error(\"Not yet implemented\")},t.prototype.logicalAnd=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.logicalOr=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.where=function(t){throw new Error(\"Not yet implemented\")},t.prototype.select=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.topk=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.min=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.minimum=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.mod=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.max=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.maximum=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.all=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.any=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.squaredDifference=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.ceil=function(t){throw new Error(\"Not yet implemented\")},t.prototype.floor=function(t){throw new Error(\"Not yet implemented\")},t.prototype.round=function(t){throw new Error(\"Not yet implemented\")},t.prototype.sign=function(t){throw new Error(\"Not yet implemented\")},t.prototype.isNaN=function(t){throw new Error(\"Not yet implemented\")},t.prototype.isInf=function(t){throw new Error(\"Not yet implemented\")},t.prototype.isFinite=function(t){throw new Error(\"Not yet implemented\")},t.prototype.pow=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.exp=function(t){throw new Error(\"Not yet implemented\")},t.prototype.expm1=function(t){throw new Error(\"Not yet implemented\")},t.prototype.log=function(t){throw new Error(\"Not yet implemented\")},t.prototype.log1p=function(t){throw new Error(\"Not yet implemented\")},t.prototype.sqrt=function(t){throw new Error(\"Not yet implemented\")},t.prototype.rsqrt=function(t){throw new Error(\"Not yet implemented\")},t.prototype.square=function(t){throw new Error(\"Not yet implemented\")},t.prototype.reciprocal=function(t){throw new Error(\"Not yet implemented\")},t.prototype.relu=function(t){throw new Error(\"Not yet implemented\")},t.prototype.prelu=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.elu=function(t){throw new Error(\"Not yet implemented\")},t.prototype.eluDer=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.selu=function(t){throw new Error(\"Not yet implemented\")},t.prototype.int=function(t){throw new Error(\"Not yet implemented\")},t.prototype.clip=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.abs=function(t){throw new Error(\"Not yet implemented\")},t.prototype.complexAbs=function(t){throw new Error(\"Not yet implemented\")},t.prototype.sigmoid=function(t){throw new Error(\"Not yet implemented\")},t.prototype.softplus=function(t){throw new Error(\"Not yet implemented\")},t.prototype.sin=function(t){throw new Error(\"Not yet implemented\")},t.prototype.cos=function(t){throw new Error(\"Not yet implemented\")},t.prototype.tan=function(t){throw new Error(\"Not yet implemented\")},t.prototype.asin=function(t){throw new Error(\"Not yet implemented\")},t.prototype.acos=function(t){throw new Error(\"Not yet implemented\")},t.prototype.atan=function(t){throw new Error(\"Not yet implemented\")},t.prototype.atan2=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.sinh=function(t){throw new Error(\"Not yet implemented\")},t.prototype.cosh=function(t){throw new Error(\"Not yet implemented\")},t.prototype.tanh=function(t){throw new Error(\"Not yet implemented\")},t.prototype.asinh=function(t){throw new Error(\"Not yet implemented\")},t.prototype.acosh=function(t){throw new Error(\"Not yet implemented\")},t.prototype.atanh=function(t){throw new Error(\"Not yet implemented\")},t.prototype.erf=function(t){throw new Error(\"Not yet implemented\")},t.prototype.step=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.fusedConv2d=function(t,e,n,r,o,a){throw new Error(\"Not yet implemented\")},t.prototype.conv2d=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.conv2dDerInput=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.conv2dDerFilter=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.depthwiseConv2D=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.depthwiseConv2DDerInput=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.depthwiseConv2DDerFilter=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.conv3d=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.conv3dDerInput=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.conv3dDerFilter=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.maxPool=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.maxPoolBackprop=function(t,e,n,r){throw new Error(\"Not yet implemented\")},t.prototype.avgPool=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.avgPoolBackprop=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.avgPool3d=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.avgPool3dBackprop=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.maxPool3d=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.maxPool3dBackprop=function(t,e,n,r){throw new Error(\"Not yet implemented\")},t.prototype.reshape=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.cast=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.tile=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.pad=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.transpose=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.gather=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.gatherND=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.scatterND=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.batchToSpaceND=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.spaceToBatchND=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.resizeBilinear=function(t,e,n,r){throw new Error(\"Not yet implemented\")},t.prototype.resizeBilinearBackprop=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.resizeNearestNeighbor=function(t,e,n,r){throw new Error(\"Not yet implemented\")},t.prototype.resizeNearestNeighborBackprop=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.batchNormalization=function(t,e,n,r,o,a){throw new Error(\"Not yet implemented\")},t.prototype.localResponseNormalization4D=function(t,e,n,r,o){throw new Error(\"Not yet implemented\")},t.prototype.LRNGrad=function(t,e,n,r,o,a,i){throw new Error(\"Not yet implemented\")},t.prototype.multinomial=function(t,e,n,r){throw new Error(\"Not yet implemented\")},t.prototype.oneHot=function(t,e,n,r){throw new Error(\"Not yet implemented\")},t.prototype.cumsum=function(t,e,n,r){throw new Error(\"Not yet implemented\")},t.prototype.nonMaxSuppression=function(t,e,n,r,o){throw new Error(\"Not yet implemented\")},t.prototype.fft=function(t){throw new Error(\"Not yet implemented\")},t.prototype.ifft=function(t){throw new Error(\"Not yet implemented\")},t.prototype.complex=function(t,e){throw new Error(\"Not yet implemented\")},t.prototype.real=function(t){throw new Error(\"Not yet implemented\")},t.prototype.imag=function(t){throw new Error(\"Not yet implemented\")},t.prototype.cropAndResize=function(t,e,n,r,o,a){throw new Error(\"Not yet implemented\")},t.prototype.depthToSpace=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.split=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.sparseToDense=function(t,e,n,r){throw new Error(\"Not yet implemented\")},t.prototype.diag=function(t){throw new Error(\"Not yet implemented\")},t.prototype.fill=function(t,e,n){throw new Error(\"Not yet implemented.\")},t.prototype.onesLike=function(t){throw new Error(\"Not yet implemented\")},t.prototype.zerosLike=function(t){throw new Error(\"Not yet implemented\")},t.prototype.linspace=function(t,e,n){throw new Error(\"Not yet implemented\")},t.prototype.dispose=function(){throw new Error(\"Not yet implemented\")},t}();function oo(t,e){for(var n=t.length,r=[],o=0;o<n;o++){var a=n-1-o,i=t[a]||1;(e[e.length-1-o]||1)>1&&1===i&&r.unshift(a)}return r}function ao(t,e){for(var n=[],r=0;r<e.length;r++){var o=t[t.length-r-1],a=e.length-r-1,i=e[a];(null==o||1===o&&i>1)&&n.unshift(a)}return n}function io(t,e){for(var n=[],r=Math.max(t.length,e.length),o=0;o<r;o++){var a=t[t.length-o-1];null==a&&(a=1);var i=e[e.length-o-1];if(null==i&&(i=1),1===a)n.unshift(i);else if(1===i)n.unshift(a);else{if(a!==i)throw Error(\"Operands could not be broadcast together with shapes \"+t+\" and \"+e+\".\");n.unshift(a)}}return n}function so(t,e,n,r,o,a,i){void 0===i&&(i=\"channelsLast\");var s,u=ho(e),c=u[0],l=u[1];if(\"channelsLast\"===i)s=[c,l,t[3],t[3]];else{if(\"channelsFirst\"!==i)throw new Error(\"Unknown dataFormat \"+i);s=[c,l,t[1],t[1]]}return co(t,s,n,r,o,a,!1,i)}function uo(t,e,n,r,o,a,i){void 0===i&&(i=\"NDHWC\");var s,u,c=fo(e),l=c[0],p=c[1],d=c[2];if(\"NDHWC\"===i)u=\"channelsLast\",s=[l,p,d,t[4],t[4]];else{if(\"NCDHW\"!==i)throw new Error(\"Unknown dataFormat \"+i);u=\"channelsFirst\",s=[l,p,d,t[1],t[1]]}return lo(t,s,n,r,o,!1,u,a)}function co(t,e,n,r,o,a,i,s){void 0===i&&(i=!1),void 0===s&&(s=\"channelsLast\");var u=[-1,-1,-1,-1],c=u[0],l=u[1],p=u[2],d=u[3];if(\"channelsLast\"===s)c=t[0],l=t[1],p=t[2],d=t[3];else{if(\"channelsFirst\"!==s)throw new Error(\"Unknown dataFormat \"+s);c=t[0],d=t[1],l=t[2],p=t[3]}var h,f=e[0],m=e[1],v=e[3],g=ho(n),y=g[0],b=g[1],w=ho(r),C=w[0],E=w[1],N=mo(f,C),R=mo(m,E),T=function(t,e,n,r,o,a,i,s){var u,c,l;if(\"number\"==typeof t){u={top:t,bottom:t,left:t,right:t,type:0===t?\"VALID\":\"NUMBER\"};var p=function(t,e,n,r,o){null==r&&(r=po(t,e,n));var a=t[1],i=vo((t[0]-e+2*r)/n+1,o);x(S(i),function(){return\"The output # of rows (\"+i+\") must be an integer. Change the stride and/or zero pad parameters\"});var s=vo((a-e+2*r)/n+1,o);return x(S(s),function(){return\"The output # of columns (\"+s+\") must be an integer. Change the stride and/or zero pad parameters\"}),[i,s]}([e,n],a,r,t,s);c=p[0],l=p[1]}else if(\"same\"===t){c=Math.ceil(e/r),l=Math.ceil(n/o);var d=Math.max(0,(c-1)*r+a-e),h=Math.max(0,(l-1)*o+i-n),f=Math.floor(d/2),m=d-f,v=Math.floor(h/2);u={top:f,bottom:m,left:v,right:h-v,type:\"SAME\"}}else{if(\"valid\"!==t)throw Error(\"Unknown padding parameter: \"+t);u={top:0,bottom:0,left:0,right:0,type:\"VALID\"},c=Math.ceil((e-a+1)/r),l=Math.ceil((n-i+1)/o)}return{padInfo:u,outHeight:c,outWidth:l}}(o,l,p,y,b,N,R,a),I=T.padInfo,A=T.outHeight,k=T.outWidth,O=i?v*d:v;return\"channelsFirst\"===s?h=[c,O,A,k]:\"channelsLast\"===s&&(h=[c,A,k,O]),{batchSize:c,dataFormat:s,inHeight:l,inWidth:p,inChannels:d,outHeight:A,outWidth:k,outChannels:O,padInfo:I,strideHeight:y,strideWidth:b,filterHeight:f,filterWidth:m,effectiveFilterHeight:N,effectiveFilterWidth:R,dilationHeight:C,dilationWidth:E,inShape:t,outShape:h,filterShape:e}}function lo(t,e,n,r,o,a,i,s){void 0===a&&(a=!1),void 0===i&&(i=\"channelsLast\");var u=[-1,-1,-1,-1,-1],c=u[0],l=u[1],p=u[2],d=u[3],h=u[4];if(\"channelsLast\"===i)c=t[0],l=t[1],p=t[2],d=t[3],h=t[4];else{if(\"channelsFirst\"!==i)throw new Error(\"Unknown dataFormat \"+i);c=t[0],h=t[1],l=t[2],p=t[3],d=t[4]}var f,m=e[0],v=e[1],g=e[2],y=e[4],b=fo(n),w=b[0],C=b[1],E=b[2],N=fo(r),R=N[0],T=N[1],I=N[2],A=mo(m,R),k=mo(v,T),O=mo(g,I),D=function(t,e,n,r,o,a,i,s,u,c,l){var p,d,h,f;if(\"number\"==typeof t){p={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?\"VALID\":\"NUMBER\"};var m=function(t,e,n,r,o,a){null==o&&(o=po(t,e,r));var i=t[1],s=t[2],u=vo((t[0]-e+2*o)/r+1,a);x(S(u),function(){return\"The output # of depths (\"+u+\") must be an integer. Change the stride and/or zero pad parameters\"});var c=vo((i-e+2*o)/r+1,a);x(S(c),function(){return\"The output # of rows (\"+c+\") must be an integer. Change the stride and/or zero pad parameters\"});var l=vo((s-e+2*o)/r+1,a);return x(S(l),function(){return\"The output # of columns (\"+l+\") must be an integer. Change the stride and/or zero pad parameters\"}),[u,c,l,1]}([e,n,r,1],s,0,o,t,l);d=m[0],h=m[1],f=m[2]}else if(\"same\"===t){var v=((d=Math.ceil(e/o))-1)*o+s-e,g=((h=Math.ceil(n/a))-1)*a+u-n,y=((f=Math.ceil(r/i))-1)*i+c-r,b=Math.floor(v/2),w=v-b,C=Math.floor(g/2),E=g-C,N=Math.floor(y/2);p={top:C,bottom:E,left:N,right:y-N,front:b,back:w,type:\"SAME\"}}else{if(\"valid\"!==t)throw Error(\"Unknown padding parameter: \"+t);p={top:0,bottom:0,left:0,right:0,front:0,back:0,type:\"VALID\"},d=Math.ceil((e-s+1)/o),h=Math.ceil((n-u+1)/a),f=Math.ceil((r-c+1)/i)}return{padInfo:p,outDepth:d,outHeight:h,outWidth:f}}(o,l,p,d,w,C,E,A,k,O,s),_=D.padInfo,M=D.outDepth,F=D.outHeight,P=D.outWidth,B=a?y*h:y;return\"channelsFirst\"===i?f=[c,B,M,F,P]:\"channelsLast\"===i&&(f=[c,M,F,P,B]),{batchSize:c,dataFormat:i,inDepth:l,inHeight:p,inWidth:d,inChannels:h,outDepth:M,outHeight:F,outWidth:P,outChannels:B,padInfo:_,strideDepth:w,strideHeight:C,strideWidth:E,filterDepth:m,filterHeight:v,filterWidth:g,effectiveFilterDepth:A,effectiveFilterHeight:k,effectiveFilterWidth:O,dilationDepth:R,dilationHeight:T,dilationWidth:I,inShape:t,outShape:f,filterShape:e}}function po(t,e,n,r){void 0===r&&(r=1);var o=mo(e,r);return Math.floor((t[0]*(n-1)-n+o)/2)}function ho(t){return\"number\"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function fo(t){return\"number\"==typeof t?[t,t,t]:t}function mo(t,e){return e<=1?t:t+(t-1)*(e-1)}function vo(t,e){if(!e)return t;switch(e){case\"round\":return Math.round(t);case\"ceil\":return Math.ceil(t);case\"floor\":return Math.floor(t);default:throw new Error(\"Unknown roundingMode \"+e)}}function go(t){var e=ho(t),n=e[0],r=e[1],o=e[2];return 1===n&&1===r&&1===o}function yo(t,e){return go(t)||go(e)}function xo(t){if(\"NHWC\"===t)return\"channelsLast\";if(\"NCHW\"===t)return\"channelsFirst\";throw new Error(\"Unknown dataFormat \"+t)}function bo(t,e,n){if(\"complex64\"===e){if(\"complex64\"===t.dtype)return t.clone();var r=Mn(t.shape),o=t.toFloat(),a=n.complex(o,r);return r.dispose(),o.dispose(),a}if(!B(t.dtype,e))return mt.make(t.shape,{dataId:t.dataId},e);if(\"complex64\"===t.dtype){var i=n.real(t);return a=i.cast(e),i.dispose(),a}if(\"int32\"===e)return n.int(t);if(\"bool\"===e){var s=Rn(0,t.dtype);return a=n.notEqual(t,s),s.dispose(),a}throw new Error(\"Error in Cast: failed to cast \"+t.dtype+\" to \"+e)}function wo(t,e){return mt.make(e,{dataId:t.dataId},t.dtype)}function Co(t,e,n){var r=(e-t)/(n-1),o=Q(n,\"float32\");o[0]=t;for(var a=1;a<o.length;a++)o[a]=o[a-1]+r;return Tn(o,\"float32\")}var Eo=Object.freeze({castTensor:bo,reshapeTensor:wo,linspaceImpl:Co,upcastType:Nt,axesAreInnerMostDims:ln,combineLocations:pn,computeOutAndReduceShapes:dn,expandShapeToKeepDim:hn,assertAxesAreInnerMostDims:fn,getAxesPermutation:mn,getUndoAxesPermutation:vn,getInnerMostAxes:gn,getBroadcastDims:oo,getReductionAxes:ao,assertAndGetBroadcastShape:io,assertParamsConsistent:yn,computeOutShape:xn,computePool2DInfo:so,computePool3DInfo:uo,computeConv2DInfo:co,computeConv3DInfo:lo,computeDefaultPad:po,tupleValuesAreOne:go,eitherStridesOrDilationsAreOne:yo,convertConv2DDataFormat:xo});function No(t,e){if(t.length!==e.length)throw new Error(\"Cannot merge real and imag arrays of different lengths. real:\"+t.length+\", imag: \"+e.length+\".\");for(var n=new Float32Array(2*t.length),r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function So(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Ro(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function To(t,e,n){var r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}function Io(t,e,n,r,o){for(var a=Array.from(e).map(function(t,e){return{score:t,boxIndex:e}}).filter(function(t){return t.score>o}).sort(function(t,e){return e.score-t.score}),i=[],s=0;s<a.length;s++){var u=a[s],c=u.score,l=u.boxIndex;if(c<o)break;for(var p=!1,d=i.length-1;d>=0;--d)if(Ao(t,l,i[d])>=r){p=!0;break}if(!p&&(i.push(l),i.length>=n))break}return Tn(i,\"int32\")}function Ao(t,e,n){var r=t.subarray(4*e,4*e+4),o=t.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),s=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(o[0],o[2]),l=Math.min(o[1],o[3]),p=Math.max(o[0],o[2]),d=Math.max(o[1],o[3]),h=(s-a)*(u-i),f=(p-c)*(d-l);if(h<=0||f<=0)return 0;var m=Math.max(a,c),v=Math.max(i,l),g=Math.min(s,p),y=Math.min(u,d),x=Math.max(g-m,0)*Math.max(y-v,0);return x/(h+f-x)}function ko(t,e,n){var r=new Array(t.rank).fill(0),o=t.shape.slice();return e.map(function(e){o[n]=e;var a=t.slice(r,o);return r[n]+=e,a})}function Oo(t,e){for(var n=new Array(t.rank),r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];var o=or(n,t.dtype);for(r=0;r<o.values.length;++r){for(var a=o.indexToLoc(r),i=new Array(t.rank),s=0;s<i.length;s++)i[s]=a[s]%t.shape[s];var u=t.locToIndex(i);o.values[r]=t.values[u]}return o.toTensor()}function Do(t,e,n,r,o){for(var a=e[e.length-1],i=[t.length/a,a],s=i[0],u=i[1],c=_(n,s*r),l=_(\"int32\",s*r),p=0;p<s;p++){for(var d=p*u,h=t.subarray(d,d+u),f=[],m=0;m<h.length;m++)f.push({value:h[m],index:m});f.sort(function(t,e){return e.value-t.value});var v=p*r,g=c.subarray(v,v+r),y=l.subarray(v,v+r);for(m=0;m<r;m++)g[m]=f[m].value,y[m]=f[m].index}var x=e.slice();return x[x.length-1]=r,[Nn(c,x,n),Nn(l,x,\"int32\")]}function _o(t,e){for(var n=[],r=0;r<e.length;r++)e[r]&&n.push(r);var o=or(t,\"int32\"),a=or([n.length,t.length],\"int32\");for(r=0;r<n.length;r++){var i=o.indexToLoc(n[r]),s=r*t.length;a.values.set(i,s)}return a.toTensor()}var Mo=function(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(function(t,e){return\"T\"+e});var n=[];this.variableNames.forEach(function(t){n.push(\"float v\"+t+\" = get\"+t+\"AtOutCoords();\")});var r=this.variableNames.map(function(t){return\"v\"+t}).join(\" + \");this.userCode=\"\\n      void main() {\\n        \"+n.join(\"\\n        \")+\"\\n\\n        float result = \"+r+\";\\n        setOutput(result);\\n      }\\n    \"},Fo=function(t,e){this.outputShape=[],this.usesPackedTextures=!0,this.outputShape=t,this.variableNames=e.map(function(t,e){return\"T\"+e});var n=[];this.variableNames.forEach(function(t){n.push(\"vec4 v\"+t+\" = get\"+t+\"AtOutCoords();\")});var r=this.variableNames.map(function(t){return\"v\"+t}).join(\" + \");this.userCode=\"\\n      void main() {\\n        \"+n.join(\"\\n        \")+\"\\n\\n        vec4 result = \"+r+\";\\n        setOutput(result);\\n      }\\n    \"},Po=function(t,e,n){this.variableNames=[\"A\"];var r=t.windowSize,o=t.batchSize,a=t.inSize,i=Math.ceil(a/r);n||this.variableNames.push(\"bestIndicesA\"),this.outputShape=[o,i];var s=\"max\"===e?\">\":\"<\",u=n?\"inOffset + i;\":\"round(getBestIndicesA(batch, inOffset + i));\";this.userCode=\"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \"+r+\";\\n\\n        int bestIndex = inOffset;\\n        float bestValue = getA(batch, bestIndex);\\n\\n        for (int i = 0; i < \"+r+\"; i++) {\\n          int inIdx = \"+u+\";\\n          float candidate = getA(batch, inIdx);\\n          if (candidate \"+s+\" bestValue) {\\n            bestValue = candidate;\\n            bestIndex = inIdx;\\n          }\\n        }\\n        setOutput(float(bestIndex));\\n      }\\n    \"};function Bo(t,e){return[\"x\",\"y\",\"z\",\"w\",\"u\",\"v\"].slice(0,e).map(function(e){return t+\".\"+e})}function Lo(t,e){return 1===e?[t]:Bo(t,e)}function Vo(){var t,e,n,r,o,a,i,s,u,c;return 2===d.getNumber(\"WEBGL_VERSION\")?(t=\"#version 300 es\",e=\"in\",n=\"out\",r=\"in\",o=\"texture\",a=\"outputColor\",i=\"out vec4 outputColor;\",s=\"\\n      bool isnan_custom(float val) {\\n        return (val > 0. || val < 0. || val == 0.) ? false : true;\\n      }\\n    \",u=\"\",c=\"\\n      #define round(value) newRound(value)\\n      int newRound(float value) {\\n        return int(floor(value + 0.5));\\n      }\\n\\n      ivec4 newRound(vec4 value) {\\n        return ivec4(floor(value + vec4(0.5)));\\n      }\\n    \"):(t=\"\",e=\"attribute\",n=\"varying\",r=\"varying\",o=\"texture2D\",a=\"gl_FragColor\",i=\"\",s=\"\\n      bool isnan_custom(float val) {\\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\\n      }\\n    \",u=\"\\n      uniform float INFINITY;\\n\\n      bool isinf(float val) {\\n        return abs(val) == INFINITY;\\n      }\\n      bvec4 isinf(vec4 val) {\\n        return equal(abs(val), vec4(INFINITY));\\n      }\\n    \",c=\"\\n      int round(float value) {\\n        return int(floor(value + 0.5));\\n      }\\n\\n      ivec4 round(vec4 value) {\\n        return ivec4(floor(value + vec4(0.5)));\\n      }\\n    \"),{version:t,attribute:e,varyingVs:n,varyingFs:r,texture2D:o,output:a,defineOutput:i,defineSpecialNaN:s,defineSpecialInf:u,defineRound:c}}function zo(t,e,n){void 0===n&&(n=\"index\");var r=$(e);return r.map(function(e,o){return\"int \"+t[o]+\" = \"+n+\" / \"+e+\"; \"+(o===r.length-1?\"int \"+t[o+1]+\" = \"+n+\" - \"+t[o]+\" * \"+e:\"index -= \"+t[o]+\" * \"+e)+\";\"}).join(\"\")}function Wo(t){var e=$(t).map(function(t){return t.toString()});return\"\\n  int getFlatIndex(ivec3 coords) {\\n    return coords.x * \"+e[0]+\" + coords.y * \"+e[1]+\" + coords.z;\\n  }\\n\"}var Uo=\"\\n  const float FLOAT_MAX = 1.70141184e38;\\n  const float FLOAT_MIN = 1.17549435e-38;\\n\\n  lowp vec4 encode_float(highp float v) {\\n    if (isnan(v)) {\\n      return vec4(255, 255, 255, 255);\\n    }\\n\\n    highp float av = abs(v);\\n\\n    if(av < FLOAT_MIN) {\\n      return vec4(0.0, 0.0, 0.0, 0.0);\\n    } else if(v > FLOAT_MAX) {\\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\\n    } else if(v < -FLOAT_MAX) {\\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\\n    }\\n\\n    highp vec4 c = vec4(0,0,0,0);\\n\\n    highp float e = floor(log2(av));\\n    highp float m = exp2(fract(log2(av))) - 1.0;\\n\\n    c[2] = floor(128.0 * m);\\n    m -= c[2] / 128.0;\\n    c[1] = floor(32768.0 * m);\\n    m -= c[1] / 32768.0;\\n    c[0] = floor(8388608.0 * m);\\n\\n    highp float ebias = e + 127.0;\\n    c[3] = floor(ebias / 2.0);\\n    ebias -= c[3] * 2.0;\\n    c[2] += floor(ebias) * 128.0;\\n\\n    c[3] += 128.0 * step(0.0, -v);\\n\\n    return c / 255.0;\\n  }\\n\";function jo(t,e,n,r){var o=[];t.forEach(function(t){var e=E(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?o.push(\"uniform float \"+t.name+(e>1?\"[\"+e+\"]\":\"\")+\";\"):(o.push(\"uniform sampler2D \"+t.name+\";\"),o.push(\"uniform int offset\"+t.name+\";\"))});var a,i,s=o.join(\"\\n\"),u=t.map(function(t){return function(t,e,n){void 0===n&&(n=!1);var r=\"\";r+=n?function t(e){var n,r,o;switch(e.shapeInfo.logicalShape.length){case 0:return n=e.name,r=\"get\"+n.charAt(0).toUpperCase()+n.slice(1),o=Vo(),\"\\n    vec4 \"+r+\"() {\\n      return \"+o.texture2D+\"(\"+n+\", halfCR);\\n    }\\n  \";case 1:return function(t){var e=t.name,n=\"get\"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],a=Vo();return\"\\n    vec4 \"+n+\"(int index) {\\n      vec2 uv = packedUVfrom1D(\\n        \"+o[0]+\", \"+o[1]+\", index);\\n      return \"+a.texture2D+\"(\"+e+\", uv);\\n    }\\n  \"}(e);case 2:return function(t){var e=t.shapeInfo.logicalShape,n=t.name,r=\"get\"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape,a=o[0],i=o[1],s=Vo();if(null!=o&&N(e,o))return\"\\n      vec4 \"+r+\"(int row, int col) {\\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(\"+i+\".0, \"+a+\".0);\\n\\n        return \"+s.texture2D+\"(\"+n+\", uv);\\n      }\\n    \";var u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],c=Math.ceil(e[1]/2);return\"\\n    vec4 \"+r+\"(int row, int col) {\\n      vec2 uv = packedUVfrom2D(\"+c+\", \"+u[0]+\", \"+u[1]+\", row, col);\\n      return \"+s.texture2D+\"(\"+n+\", uv);\\n    }\\n  \"}(e);case 3:return function(e){var n=e.shapeInfo.logicalShape,r=e.name,o=\"get\"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){var s=n.slice(1),u=Qo(e,s);return\"\\n        \"+t(u)+\"\\n        vec4 \"+o+\"(int b, int row, int col) {\\n          return \"+o+\"(\"+Jo([\"b\",\"row\",\"col\"],[1,2])+\");\\n        }\\n      \"}var c=i[0],l=i[1],p=Math.ceil(n[2]/2),d=p*Math.ceil(n[1]/2),h=Vo();return\"\\n    vec4 \"+o+\"(int b, int row, int col) {\\n      vec2 uv = packedUVfrom3D(\\n        \"+c+\", \"+l+\", \"+d+\", \"+p+\", b, row, col);\\n      return \"+h.texture2D+\"(\"+r+\", uv);\\n    }\\n  \"}(e);default:return function(t){for(var e=t.shapeInfo.logicalShape,n=e.length,r=t.name,o=\"get\"+r.charAt(0).toUpperCase()+r.slice(1),a=t.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)],s=i[0],u=i[1],c=Math.ceil(e[n-1]/2),l=c*Math.ceil(e[n-2]/2),p=\"int b, int row, int col\",d=\"b * \"+l+\" + (row / 2) * \"+c+\" + (col / 2)\",h=2;h<n-1;h++)p=\"int b\"+h+\", \"+p,l*=e[n-h-1],d=\"b\"+h+\" * \"+l+\" + \"+d;var f=Vo();return\"\\n    vec4 \"+o+\"(\"+p+\") {\\n      int index = \"+d+\";\\n      int texR = index / \"+u+\";\\n      int texC = index - texR * \"+u+\";\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\"+u+\", \"+s+\");\\n      return \"+f.texture2D+\"(\"+r+\", uv);\\n    }\\n  \"}(e)}}(t):function t(e){var n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(t){var e=t.name,n=\"get\"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return\"float \"+n+\"() {return \"+e+\";}\";var r=t.shapeInfo.texShape,o=r[0],a=r[1];if(1===o&&1===a)return\"\\n      float \"+n+\"() {\\n        return sampleTexture(\"+e+\", halfCR);\\n      }\\n    \";var i=t.shapeInfo.texShape,s=i[0],u=i[1],c=Ko(e);return\"\\n    float \"+n+\"() {\\n      vec2 uv = uvFromFlat(\"+s+\", \"+u+\", \"+c+\");\\n      return sampleTexture(\"+e+\", uv);\\n    }\\n  \"}(e);case 1:return function(t){var e=t.name,n=\"get\"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return\"\\n      float \"+n+\"(int index) {\\n        \"+Xo(t)+\"\\n      }\\n    \";var r=t.shapeInfo.texShape,o=r[0],a=r[1];if(1===a&&1===o)return\"\\n      float \"+n+\"(int index) {\\n        return sampleTexture(\"+e+\", halfCR);\\n      }\\n    \";var i=Ko(e);return 1===a?\"\\n      float \"+n+\"(int index) {\\n        vec2 uv = vec2(0.5, (float(index + \"+i+\") + 0.5) / \"+o+\".0);\\n        return sampleTexture(\"+e+\", uv);\\n      }\\n    \":1===o?\"\\n      float \"+n+\"(int index) {\\n        vec2 uv = vec2((float(index + \"+i+\") + 0.5) / \"+a+\".0, 0.5);\\n        return sampleTexture(\"+e+\", uv);\\n      }\\n    \":\"\\n    float \"+n+\"(int index) {\\n      vec2 uv = uvFromFlat(\"+o+\", \"+a+\", index + \"+i+\");\\n      return sampleTexture(\"+e+\", uv);\\n    }\\n  \"}(e);case 2:return function(e){var n=e.shapeInfo.logicalShape,r=e.name,o=\"get\"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&N(n,a)){var i=a[0],s=a[1];return\"\\n    float \"+o+\"(int row, int col) {\\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(\"+s+\".0, \"+i+\".0);\\n      return sampleTexture(\"+r+\", uv);\\n    }\\n  \"}var u=D(n),c=u.newShape,l=u.keptDims,p=c;if(p.length<n.length){var d=Qo(e,p);return\"\\n      \"+t(d)+\"\\n      float \"+o+\"(int row, int col) {\\n        return \"+o+\"(\"+Jo([\"row\",\"col\"],l)+\");\\n      }\\n    \"}if(e.shapeInfo.isUniform)return\"\\n      float \"+o+\"(int row, int col) {\\n        int index = round(dot(vec2(row, col), vec2(\"+n[1]+\", 1)));\\n        \"+Xo(e)+\"\\n      }\\n    \";var h=a[0],f=a[1],m=Ko(r);return 1===f?\"\\n    float \"+o+\"(int row, int col) {\\n      float index = dot(vec3(row, col, \"+m+\"), vec3(\"+n[1]+\", 1, 1));\\n      vec2 uv = vec2(0.5, (index + 0.5) / \"+h+\".0);\\n      return sampleTexture(\"+r+\", uv);\\n    }\\n  \":1===h?\"\\n    float \"+o+\"(int row, int col) {\\n      float index = dot(vec3(row, col, \"+m+\"), vec3(\"+n[1]+\", 1, 1));\\n      vec2 uv = vec2((index + 0.5) / \"+f+\".0, 0.5);\\n      return sampleTexture(\"+r+\", uv);\\n    }\\n  \":\"\\n  float \"+o+\"(int row, int col) {\\n    // Explicitly use integer operations as dot() only works on floats.\\n    int index = row * \"+n[1]+\" + col + \"+m+\";\\n    vec2 uv = uvFromFlat(\"+h+\", \"+f+\", index);\\n    return sampleTexture(\"+r+\", uv);\\n  }\\n\"}(e);case 3:return function(e){var n=e.shapeInfo.logicalShape,r=e.name,o=\"get\"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],s=D(n),u=s.newShape,c=s.keptDims,l=u;if(l.length<n.length){var p=Qo(e,l);return\"\\n        \"+t(p)+\"\\n        float \"+o+\"(int row, int col, int depth) {\\n          return \"+o+\"(\"+Jo([\"row\",\"col\",\"depth\"],c)+\");\\n        }\\n      \"}if(e.shapeInfo.isUniform)return\"\\n      float \"+o+\"(int row, int col, int depth) {\\n        int index = round(dot(vec3(row, col, depth),\\n                          vec3(\"+a+\", \"+i+\", 1)));\\n        \"+Xo(e)+\"\\n      }\\n    \";var d=e.shapeInfo.texShape,h=d[0],f=d[1],m=e.shapeInfo.flatOffset;if(f===a&&null==m)return\"\\n        float \"+o+\"(int row, int col, int depth) {\\n          float texR = float(row);\\n          float texC = dot(vec2(col, depth), vec2(\"+i+\", 1));\\n          vec2 uv = (vec2(texC, texR) + halfCR) /\\n                     vec2(\"+f+\".0, \"+h+\".0);\\n          return sampleTexture(\"+r+\", uv);\\n        }\\n      \";if(f===i&&null==m)return\"\\n    float \"+o+\"(int row, int col, int depth) {\\n      float texR = dot(vec2(row, col), vec2(\"+n[1]+\", 1));\\n      float texC = float(depth);\\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\"+f+\".0, \"+h+\".0);\\n      return sampleTexture(\"+r+\", uv);\\n    }\\n  \";var v=Ko(r);return\"\\n      float \"+o+\"(int row, int col, int depth) {\\n        // Explicitly use integer operations as dot() only works on floats.\\n        int index = row * \"+a+\" + col * \"+i+\" + depth + \"+v+\";\\n        vec2 uv = uvFromFlat(\"+h+\", \"+f+\", index);\\n        return sampleTexture(\"+r+\", uv);\\n      }\\n  \"}(e);case 4:return function(e){var n=e.shapeInfo.logicalShape,r=e.name,o=\"get\"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,s=n[1]*i,u=D(n),c=u.newShape,l=u.keptDims;if(c.length<n.length){var p=Qo(e,c);return\"\\n      \"+t(p)+\"\\n      float \"+o+\"(int row, int col, int depth, int depth2) {\\n        return \"+o+\"(\"+Jo([\"row\",\"col\",\"depth\",\"depth2\"],l)+\");\\n      }\\n    \"}if(e.shapeInfo.isUniform)return\"\\n      float \"+o+\"(int row, int col, int depth, int depth2) {\\n        int index = round(dot(vec4(row, col, depth, depth2),\\n                          vec4(\"+s+\", \"+i+\", \"+a+\", 1)));\\n        \"+Xo(e)+\"\\n      }\\n    \";var d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,f=h[0],m=h[1];if(m===s&&null==d)return\"\\n      float \"+o+\"(int row, int col, int depth, int depth2) {\\n        float texR = float(row);\\n        float texC =\\n            dot(vec3(col, depth, depth2),\\n                vec3(\"+i+\", \"+a+\", 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\"+m+\".0, \"+f+\".0);\\n        return sampleTexture(\"+r+\", uv);\\n      }\\n    \";if(m===a&&null==d)return\"\\n      float \"+o+\"(int row, int col, int depth, int depth2) {\\n        float texR = dot(vec3(row, col, depth),\\n                         vec3(\"+n[1]*n[2]+\", \"+n[2]+\", 1));\\n        float texC = float(depth2);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\"+m+\".0, \"+f+\".0);\\n        return sampleTexture(\"+r+\", uv);\\n      }\\n    \";var v=Ko(r);return\"\\n    float \"+o+\"(int row, int col, int depth, int depth2) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * \"+s+\" + col * \"+i+\" +\\n          depth * \"+a+\" + depth2;\\n      vec2 uv = uvFromFlat(\"+f+\", \"+m+\", index + \"+v+\");\\n      return sampleTexture(\"+r+\", uv);\\n    }\\n  \"}(e);case 5:return function(e){var n=e.shapeInfo.logicalShape,r=e.name,o=\"get\"+r.charAt(0).toUpperCase()+r.slice(1),a=n[4],i=n[3]*a,s=n[2]*i,u=n[1]*s,c=D(n),l=c.newShape,p=c.keptDims;if(l.length<n.length){var d=Qo(e,l);return\"\\n      \"+t(d)+\"\\n      float \"+o+\"(int row, int col, int depth, int depth2, int depth3) {\\n        return \"+o+\"(\"+Jo([\"row\",\"col\",\"depth\",\"depth2\",\"depth3\"],p)+\");\\n      }\\n    \"}if(e.shapeInfo.isUniform)return\"\\n      float \"+o+\"(int row, int col, int depth, int depth2, int depth3) {\\n        float index = dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(\"+u+\", \"+s+\", \"+i+\", \"+a+\")) +\\n          depth3;\\n        \"+Xo(e)+\"\\n      }\\n    \";var h=e.shapeInfo.flatOffset,f=e.shapeInfo.texShape,m=f[0],v=f[1];if(v===u&&null==h)return\"\\n      float \"+o+\"(int row, int col, int depth, int depth2, int depth3) {\\n        int texR = row;\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\n                         vec4(\"+s+\", \"+i+\", \"+a+\", 1));\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\"+v+\".0, \"+m+\".0);\\n        return sampleTexture(\"+r+\", uv);\\n      }\\n    \";if(v===a&&null==h)return\"\\n      float \"+o+\"(int row, int col, int depth, int depth2, int depth3) {\\n        float texR = dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(\"+n[1]*n[2]*n[3]+\",\\n               \"+n[2]*n[3]+\", \"+n[3]+\", 1));\\n        int texC = depth3;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\"+v+\".0, \"+m+\".0);\\n        return sampleTexture(\"+r+\", uv);\\n      }\\n    \";var g=Ko(r);return\"\\n    float \"+o+\"(int row, int col, int depth, int depth2, int depth3) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * \"+u+\" + col * \"+s+\" + depth * \"+i+\" +\\n          depth2 * \"+a+\" + depth3 + \"+g+\";\\n      vec2 uv = uvFromFlat(\"+m+\", \"+v+\", index);\\n      return sampleTexture(\"+r+\", uv);\\n    }\\n  \"}(e);case 6:return function(e){var n=e.shapeInfo.logicalShape,r=e.name,o=\"get\"+r.charAt(0).toUpperCase()+r.slice(1),a=D(n),i=a.newShape,s=a.keptDims;if(i.length<n.length){var u=Qo(e,i);return\"\\n      \"+t(u)+\"\\n      float \"+o+\"(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        return \"+o+\"(\"+Jo([\"row\",\"col\",\"depth\",\"depth2\",\"depth3\",\"depth4\"],s)+\");\\n      }\\n    \"}var c=n[5],l=n[4]*c,p=n[3]*l,d=n[2]*p,h=n[1]*d;if(e.shapeInfo.isUniform)return\"\\n      float \"+o+\"(int row, int col, int depth,\\n                  int depth2, int depth3, int depth4) {\\n        int index = round(dot(\\n          vec4(row, col, depth, depth2),\\n          vec4(\"+h+\", \"+d+\", \"+p+\", \"+l+\")) +\\n          dot(\\n            vec2(depth3, depth4),\\n            vec2(\"+c+\", 1)));\\n        \"+Xo(e)+\"\\n      }\\n    \";var f=e.shapeInfo.flatOffset,m=e.shapeInfo.texShape,v=m[0],g=m[1];if(g===h&&null==f)return\"\\n      float \"+o+\"(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        int texR = row;\\n        float texC = dot(vec4(col, depth, depth2, depth3),\\n          vec4(\"+d+\", \"+p+\", \"+l+\", \"+c+\")) +\\n               float(depth4);\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                   vec2(\"+g+\".0, \"+v+\".0);\\n        return sampleTexture(\"+r+\", uv);\\n      }\\n    \";if(g===c&&null==f)return\"\\n      float \"+o+\"(int row, int col, int depth,\\n                    int depth2, int depth3, int depth4) {\\n        float texR = dot(vec4(row, col, depth, depth2),\\n          vec4(\"+n[1]*n[2]*n[3]*n[4]+\",\\n               \"+n[2]*n[3]*n[4]+\",\\n               \"+n[3]*n[4]+\",\\n               \"+n[4]+\")) + float(depth3);\\n        int texC = depth4;\\n        vec2 uv = (vec2(texC, texR) + halfCR) /\\n                  vec2(\"+g+\".0, \"+v+\".0);\\n        return sampleTexture(\"+r+\", uv);\\n      }\\n    \";var y=Ko(r);return\"\\n    float \"+o+\"(int row, int col, int depth,\\n                  int depth2, int depth3, int depth4) {\\n      // Explicitly use integer operations as dot() only works on floats.\\n      int index = row * \"+h+\" + col * \"+d+\" + depth * \"+p+\" +\\n          depth2 * \"+l+\" + depth3 * \"+c+\" + depth4 + \"+y+\";\\n      vec2 uv = uvFromFlat(\"+v+\", \"+g+\", index);\\n      return sampleTexture(\"+r+\", uv);\\n    }\\n  \"}(e);default:throw new Error(n.length+\"-D input sampling is not yet supported\")}}(t);var o=t.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(r+=n?function(t,e){var n,r=t.name,o=r.charAt(0).toUpperCase()+r.slice(1),a=\"get\"+o+\"AtOutCoords\",i=t.shapeInfo.logicalShape.length,s=e.logicalShape.length,u=oo(t.shapeInfo.logicalShape,e.logicalShape),c=Yo(s),l=s-i,p=[\"x\",\"y\",\"z\",\"w\",\"u\",\"v\"];n=0===i?\"\":s<2&&u.length>=1?\"coords = 0;\":u.map(function(t){return\"coords.\"+p[t+l]+\" = 0;\"}).join(\"\\n\");var d;d=s<2&&i>0?\"coords\":t.shapeInfo.logicalShape.map(function(t,e){return\"coords.\"+p[e+l]}).join(\", \");var h=\"return outputValue;\",f=1===E(t.shapeInfo.logicalShape),m=1===E(e.logicalShape);if(1!==i||f||m){if(f&&!m)h=1===s?\"\\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\\n      \":\"\\n        return vec4(outputValue.x);\\n      \";else if(u.length){var v=i-2,g=i-1;u.indexOf(v)>-1&&u.indexOf(g)>-1?h=\"return vec4(outputValue.x);\":u.indexOf(v)>-1?h=\"return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);\":u.indexOf(g)>-1&&(h=\"return vec4(outputValue.xx, outputValue.zz);\")}}else h=\"\\n      return vec4(outputValue.xy, outputValue.xy);\\n    \";return\"\\n    vec4 \"+a+\"() {\\n      \"+c+\" coords = getOutputCoords();\\n      \"+n+\"\\n      vec4 outputValue = get\"+o+\"(\"+d+\");\\n      \"+h+\"\\n    }\\n  \"}(t,e):function(t,e){var n=t.name,r=n.charAt(0).toUpperCase()+n.slice(1),o=\"get\"+r+\"AtOutCoords\",a=e.texShape,i=t.shapeInfo.texShape,s=t.shapeInfo.logicalShape.length,u=e.logicalShape.length;if(!t.shapeInfo.isUniform&&s===u&&null==t.shapeInfo.flatOffset&&N(i,a))return\"\\n      float \"+o+\"() {\\n        return sampleTexture(\"+n+\", resultUV);\\n      }\\n    \";var c=Yo(u),l=oo(t.shapeInfo.logicalShape,e.logicalShape),p=u-s,d=[\"x\",\"y\",\"z\",\"w\",\"u\",\"v\"];return\"\\n    float \"+o+\"() {\\n      \"+c+\" coords = getOutputCoords();\\n      \"+(0===s?\"\":u<2&&l.length>=1?\"coords = 0;\":l.map(function(t){return\"coords.\"+d[t+p]+\" = 0;\"}).join(\"\\n\"))+\"\\n      return get\"+r+\"(\"+(u<2&&s>0?\"coords\":t.shapeInfo.logicalShape.map(function(t,e){return\"coords.\"+d[e+p]}).join(\", \"))+\");\\n    }\\n  \"}(t,e)),r}(t,e,r)}).join(\"\\n\"),c=e.texShape,l=Vo(),p=\"\\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\\n      return \"+l.texture2D+\"(textureSampler, uv).r;\\n    }\\n  \",d=function(t){return t.version+\"\\n    precision highp float;\\n    precision highp int;\\n    precision highp sampler2D;\\n    \"+t.varyingFs+\" vec2 resultUV;\\n    \"+t.defineOutput+\"\\n    const vec2 halfCR = vec2(0.5, 0.5);\\n\\n    struct ivec5\\n    {\\n      int x;\\n      int y;\\n      int z;\\n      int w;\\n      int u;\\n    };\\n\\n    struct ivec6\\n    {\\n      int x;\\n      int y;\\n      int z;\\n      int w;\\n      int u;\\n      int v;\\n    };\\n\\n    uniform float NAN;\\n    #define isnan(value) isnan_custom(value)\\n    \"+t.defineSpecialNaN+\"\\n    bvec4 isnan_custom(vec4 val) {\\n      return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\\n    }\\n\\n    \"+t.defineSpecialInf+\"\\n    \"+t.defineRound+\"\\n\\n    int imod(int x, int y) {\\n      return x - y * (x / y);\\n    }\\n\\n    int idiv(int a, int b, float sign) {\\n      int res = a / b;\\n      int mod = imod(a, b);\\n      if (sign < 0. && mod != 0) {\\n        res -= 1;\\n      }\\n      return res;\\n    }\\n\\n    //Based on the work of Dave Hoskins\\n    //https://www.shadertoy.com/view/4djSRW\\n    #define HASHSCALE1 443.8975\\n    float random(float seed){\\n      vec2 p = resultUV * seed;\\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\\n      p3 += dot(p3, p3.yzx + 19.19);\\n      return fract((p3.x + p3.y) * p3.z);\\n    }\\n\\n    \"+Go+\"\\n    \"+Ho+\"\\n    \"+qo+\"\\n  \"}(l);return e.isPacked?(a=function(t,e){switch(t.length){case 0:return\"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  \";case 1:return function(t,e){var n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?\"\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.x * \"+n[1]+\".0);\\n      }\\n    \":1===n[1]?\"\\n      int getOutputCoords() {\\n        return 2 * int(resultUV.y * \"+n[0]+\".0);\\n      }\\n    \":\"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\"+n[0]+\", \"+n[1]+\"));\\n      return 2 * (resTexRC.x * \"+n[1]+\" + resTexRC.y);\\n    }\\n  \"}(0,e);case 2:return function(t,e){var n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(N(t,e))return\"\\n      ivec2 getOutputCoords() {\\n        return 2 * ivec2(resultUV.yx * vec2(\"+n[0]+\", \"+n[1]+\"));\\n      }\\n    \";var r=Math.ceil(t[1]/2);return\"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\"+n[0]+\", \"+n[1]+\"));\\n\\n      int index = resTexRC.x * \"+n[1]+\" + resTexRC.y;\\n      int r = 2 * (index / \"+r+\");\\n      int c = imod(index, \"+r+\") * 2;\\n\\n      return ivec2(r, c);\\n    }\\n  \"}(t,e);case 3:return n=t,r=e,o=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],i=(a=Math.ceil(n[2]/2))*Math.ceil(n[1]/2),\"\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\"+o[0]+\", \"+o[1]+\"));\\n      int index = resTexRC.x * \"+o[1]+\" + resTexRC.y;\\n\\n      int b = index / \"+i+\";\\n      index -= b * \"+i+\";\\n\\n      int r = 2 * (index / \"+a+\");\\n      int c = imod(index, \"+a+\") * 2;\\n\\n      return ivec3(b, r, c);\\n    }\\n  \";default:return function(t,e){for(var n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),o=r*Math.ceil(t[t.length-2]/2),a=o,i=\"\",s=\"b, r, c\",u=2;u<t.length-1;u++)i=\"\\n      int b\"+u+\" = index / \"+(a*=t[t.length-u-1])+\";\\n      index -= b\"+u+\" * \"+a+\";\\n    \"+i,s=\"b\"+u+\", \"+s;return\"\\n    ivec\"+t.length+\" getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\"+n[0]+\", \"+n[1]+\"));\\n      int index = resTexRC.x * \"+n[1]+\" + resTexRC.y;\\n\\n      \"+i+\"\\n\\n      int b = index / \"+o+\";\\n      index -= b * \"+o+\";\\n\\n      int r = 2 * (index / \"+r+\");\\n      int c = imod(index, \"+r+\") * 2;\\n\\n      return ivec\"+t.length+\"(\"+s+\");\\n    }\\n  \"}(t,e)}var n,r,o,a,i}(e.logicalShape,c),i=\"\\n    void setOutput(vec4 val) {\\n      \"+l.output+\" = val;\\n    }\\n  \"):(a=function(t,e){switch(t.length){case 0:return\"\\n    int getOutputCoords() {\\n      return 0;\\n    }\\n  \";case 1:return function(t,e){return 1===e[0]?\"\\n      int getOutputCoords() {\\n        return int(resultUV.x * \"+e[1]+\".0);\\n      }\\n    \":1===e[1]?\"\\n      int getOutputCoords() {\\n        return int(resultUV.y * \"+e[0]+\".0);\\n      }\\n    \":\"\\n    int getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\"+e[0]+\", \"+e[1]+\"));\\n      return resTexRC.x * \"+e[1]+\" + resTexRC.y;\\n    }\\n  \"}(0,e);case 2:return function(t,e){return N(t,e)?\"\\n      ivec2 getOutputCoords() {\\n        return ivec2(resultUV.yx * vec2(\"+e[0]+\", \"+e[1]+\"));\\n      }\\n    \":1===t[1]?\"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\"+e[0]+\", \"+e[1]+\"));\\n        int index = resTexRC.x * \"+e[1]+\" + resTexRC.y;\\n        return ivec2(index, 0);\\n      }\\n    \":1===t[0]?\"\\n      ivec2 getOutputCoords() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n                               vec2(\"+e[0]+\", \"+e[1]+\"));\\n        int index = resTexRC.x * \"+e[1]+\" + resTexRC.y;\\n        return ivec2(0, index);\\n      }\\n    \":\"\\n    ivec2 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\"+e[0]+\", \"+e[1]+\"));\\n      int index = resTexRC.x * \"+e[1]+\" + resTexRC.y;\\n      int r = index / \"+t[1]+\";\\n      int c = index - r * \"+t[1]+\";\\n      return ivec2(r, c);\\n    }\\n  \"}(t,e);case 3:return n=e,r=zo([\"r\",\"c\",\"d\"],t),\"\\n    ivec3 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n                             vec2(\"+n[0]+\", \"+n[1]+\"));\\n      int index = resTexRC.x * \"+n[1]+\" + resTexRC.y;\\n      \"+r+\"\\n      return ivec3(r, c, d);\\n    }\\n  \";case 4:return function(t,e){var n=zo([\"r\",\"c\",\"d\",\"d2\"],t);return\"\\n    ivec4 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(\"+e[0]+\", \"+e[1]+\"));\\n      int index = resTexRC.x * \"+e[1]+\" + resTexRC.y;\\n      \"+n+\"\\n      return ivec4(r, c, d, d2);\\n    }\\n  \"}(t,e);case 5:return function(t,e){var n=zo([\"r\",\"c\",\"d\",\"d2\",\"d3\"],t);return\"\\n    ivec5 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(\"+e[0]+\",\\n                             \"+e[1]+\"));\\n\\n      int index = resTexRC.x * \"+e[1]+\" + resTexRC.y;\\n\\n      \"+n+\"\\n\\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\\n      return outShape;\\n    }\\n  \"}(t,e);case 6:return function(t,e){var n=zo([\"r\",\"c\",\"d\",\"d2\",\"d3\",\"d4\"],t);return\"\\n    ivec6 getOutputCoords() {\\n      ivec2 resTexRC = ivec2(resultUV.yx *\\n        vec2(\"+e[0]+\", \"+e[1]+\"));\\n      int index = resTexRC.x * \"+e[1]+\" + resTexRC.y;\\n\\n      \"+n+\"\\n\\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\\n      return result;\\n    }\\n  \"}(t,e);default:throw new Error(t.length+\"-D output sampling is not yet supported\")}var n,r}(e.logicalShape,c),i=\"\\n    void setOutput(float val) {\\n      \"+l.output+\" = vec4(val, 0, 0, 0);\\n    }\\n  \"),r&&(d+=$o),[d,p,i,s,a,u,n].join(\"\\n\")}var Go=\"\\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\\n  int texelIndex = index / 2;\\n  int texR = texelIndex / texNumC;\\n  int texC = texelIndex - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\",Ho=\"\\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\\n  int texNumC, int row, int col) {\\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\\n  int texR = texelIndex / texNumC;\\n  int texC = texelIndex - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\",qo=\"\\nvec2 packedUVfrom3D(int texNumR, int texNumC,\\n    int texelsInBatch, int texelsInLogicalRow, int b,\\n    int row, int col) {\\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\\n  int texR = index / texNumC;\\n  int texC = index - texR * texNumC;\\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\\n}\\n\",$o=\"\\n  float getChannel(vec4 frag, vec2 innerDims) {\\n    vec2 modCoord = mod(innerDims, 2.);\\n    return modCoord.x == 0. ?\\n      (modCoord.y == 0. ? frag.r : frag.g) :\\n      (modCoord.y == 0. ? frag.b : frag.a);\\n  }\\n  float getChannel(vec4 frag, int dim) {\\n    float modCoord = mod(float(dim), 2.);\\n    return modCoord == 0. ? frag.r : frag.g;\\n  }\\n\";function Ko(t){return\"offset\"+t}function Xo(t){var e=t.name,n=E(t.shapeInfo.logicalShape);return n<2?\"return \"+e+\";\":\"\\n    for (int i = 0; i < \"+n+\"; i++) {\\n      if (i == index) {\\n        return \"+e+\"[i];\\n      }\\n    }\\n  \"}function Yo(t){if(t<=1)return\"int\";if(2===t)return\"ivec2\";if(3===t)return\"ivec3\";if(4===t)return\"ivec4\";if(5===t)return\"ivec5\";if(6===t)return\"ivec6\";throw Error(\"GPU for rank \"+t+\" is not yet supported\")}function Qo(t,e){var n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function Jo(t,e){return e.map(function(e){return t[e]}).join(\", \")}var Zo=function(t,e,n,r){this.variableNames=[\"A\"],this.usesPackedTextures=!0,x(t.length>2,function(){return\"Packed arg\"+(n.charAt(0).toUpperCase()+n.slice(1))+\" supports only inputs with rank above 2.\"});var o=t[t.length-1],a=Math.ceil(o/e);this.outputShape=t.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push(\"bestIndicesA\");var i,s,u=this.outputShape,c=u.length,l=Yo(c),p=Lo(\"coords\",c);if(1===a){var d=Yo(s=c+1);i=\"\\n        \"+d+\" sourceLocR = \"+d+\"(\"+p.join()+\", 0);\\n        ++\"+p[c-1]+\";\\n        \"+d+\" sourceLocG = \"+d+\"(\"+p.join()+\", 0);\\n        ++\"+p[c-2]+\";\\n        \"+d+\" sourceLocA = \"+d+\"(\"+p.join()+\", 0);\\n        --\"+p[c-1]+\";\\n        \"+d+\" sourceLocB = \"+d+\"(\"+p.join()+\", 0);\\n        --\"+p[c-2]+\";\"}else s=c,i=\"\\n        \"+l+\" sourceLocR = coords;\\n        ++\"+p[c-1]+\";\\n        \"+l+\" sourceLocG = coords;\\n        ++\"+p[c-2]+\";\\n        \"+l+\" sourceLocA = coords;\\n        --\"+p[c-1]+\";\\n        \"+l+\" sourceLocB = coords;\\n        --\"+p[c-2]+\";\";var h=[\"x\",\"y\",\"z\",\"w\",\"u\",\"v\"].slice(0,s),f=\".\"+h[s-1],m=h.map(function(t){return\"int \"+t}),v=Lo(\"sourceLocR\",s-1).concat(\"inIdx.r\"),g=Lo(\"sourceLocG\",s-1).concat(\"inIdx.g\"),y=Lo(\"sourceLocB\",s-1).concat(\"inIdx.b\"),b=Lo(\"sourceLocA\",s-1).concat(\"inIdx.a\"),w=\"max\"===n?\"greaterThan\":\"lessThan\",C=r?\"\":\"\\n          inIdx = round(vec4(getBestIndicesAChannel(\"+v.join()+\"),\\n                             getBestIndicesAChannel(\"+g.join()+\"),\\n                             getBestIndicesAChannel(\"+y.join()+\"),\\n                             getBestIndicesAChannel(\"+b.join()+\")));\",E=\"vec4(\\n            getAChannel(\"+v.join()+\"),\\n            hasNextCol ? getAChannel(\"+g.join()+\") : 0.,\\n            hasNextRow ? getAChannel(\"+y.join()+\") : 0.,\\n            hasNextRow && hasNextCol ? getAChannel(\"+b.join()+\") : 0.)\",N=r?\"\":\"\\n      float getBestIndicesAChannel(\"+m.join()+\") {\\n        return getChannel(getBestIndicesA(\"+h.join()+\"),\\n                                          vec2(\"+h.slice(-2).join()+\"));\\n      }\";this.userCode=\"\\n      float getAChannel(\"+m.join()+\") {\\n        return getChannel(getA(\"+h.join()+\"),\\n                               vec2(\"+h.slice(-2).join()+\"));\\n      }\\n      \"+N+\"\\n      void main() {\\n        \"+l+\" coords = getOutputCoords();\\n        bool hasNextCol = \"+p[c-1]+\" < \"+(u[c-1]-1)+\";\\n        bool hasNextRow = \"+p[c-2]+\" < \"+(u[c-2]-1)+\";\\n        \"+i+\"\\n        ivec4 srcIdx = ivec4(sourceLocR\"+f+\", sourceLocG\"+f+\",\\n          sourceLocB\"+f+\", sourceLocA\"+f+\") * \"+e+\";\\n        ivec4 inIdx = srcIdx;\\n        vec4 bestIndex = vec4(inIdx);\\n        vec4 bestValue = \"+E+\";\\n\\n        for (int i = 0; i < \"+e+\"; i++) {\\n          inIdx = srcIdx;\\n          \"+C+\"\\n          vec4 candidate = \"+E+\";\\n          bvec4 nan = isnan(candidate);\\n          bvec4 replace = bvec4(\\n            vec4(\"+w+\"(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\\n\\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\\n                           replace.y  ? candidate.y : bestValue.y,\\n                           replace.z  ? candidate.z : bestValue.z,\\n                           replace.w  ? candidate.w : bestValue.w);\\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\\n          srcIdx++;\\n        }\\n        setOutput(bestIndex);\\n      }\\n    \"},ta=function(t){this.variableNames=[\"dy\"],this.outputShape=t.inShape;var e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=t.dilationHeight,i=t.dilationWidth,s=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=s-1-t.padInfo.top,l=u-1-t.padInfo.left,p=1/(e*n);this.userCode=\"\\n      const ivec2 pads = ivec2(\"+c+\", \"+l+\");\\n      const float avgMultiplier = float(\"+p+\");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \"+s+\";\\n            wR += \"+a+\") {\\n          float dyR = float(dyRCorner + wR) / \"+r+\".0;\\n\\n          if (dyR < 0.0 || dyR >= \"+t.outHeight+\".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \"+u+\";\\n            wC+= \"+i+\") {\\n            float dyC = float(dyCCorner + wC) / \"+o+\".0;\\n\\n            if (dyC < 0.0 || dyC >= \"+t.outWidth+\".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n\\n            dotProd += dyValue * avgMultiplier;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \"},ea=function(t){this.variableNames=[\"dy\"],this.outputShape=t.inShape;var e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,p=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=l-1-t.padInfo.front,f=p-1-t.padInfo.top,m=d-1-t.padInfo.left,v=1/(e*n*r);this.userCode=\"\\n      const ivec3 pads = ivec3(\"+h+\", \"+f+\", \"+m+\");\\n      const float avgMultiplier = float(\"+v+\");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyDCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\\n        // dx(xD, xR, xC, ch).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int wD = 0; wD < \"+l+\";\\n            wD += \"+s+\") {\\n          float dyD = float(dyDCorner + wD) / \"+o+\".0;\\n\\n          if (dyD < 0.0 || dyD >= \"+t.outDepth+\".0 || fract(dyD) > 0.0) {\\n            continue;\\n          }\\n          int idyD = int(dyD);\\n\\n          for (int wR = 0; wR < \"+p+\";\\n              wR += \"+u+\") {\\n            float dyR = float(dyRCorner + wR) / \"+a+\".0;\\n\\n            if (dyR < 0.0 || dyR >= \"+t.outHeight+\".0 ||\\n                fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            for (int wC = 0; wC < \"+d+\";\\n                wC += \"+c+\") {\\n              float dyC = float(dyCCorner + wC) / \"+i+\".0;\\n\\n              if (dyC < 0.0 || dyC >= \"+t.outWidth+\".0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\n\\n              dotProd += dyValue * avgMultiplier;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \"},na=function(t,e,n,r,o,a){this.outputShape=[],this.variableNames=[\"x\",\"mean\",\"variance\"],io(t,e),io(t,n);var i=\"0.0\";null!=r&&(io(t,r),this.variableNames.push(\"offset\"),i=\"getOffsetAtOutCoords()\");var s=\"1.0\";null!=o&&(io(t,o),this.variableNames.push(\"scale\"),s=\"getScaleAtOutCoords()\"),this.outputShape=t,this.userCode=\"\\n      void main() {\\n        float x = getXAtOutCoords();\\n        float mean = getMeanAtOutCoords();\\n        float variance = getVarianceAtOutCoords();\\n        float offset = \"+i+\";\\n        float scale = \"+s+\";\\n        float inv = scale * inversesqrt(variance + float(\"+a+\"));\\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\\n      }\\n    \"},ra=function(t,e,n,r,o,a){this.usesPackedTextures=!0,this.variableNames=[\"x\",\"mean\",\"variance\"],io(t,e),io(t,n);var i=\"vec4(0.0)\";null!=r&&(io(t,r),this.variableNames.push(\"offset\"),i=\"getOffsetAtOutCoords()\");var s=\"vec4(1.0)\";null!=o&&(io(t,o),this.variableNames.push(\"scale\"),s=\"getScaleAtOutCoords()\"),this.outputShape=t,this.userCode=\"\\n      void main() {\\n        vec4 offset = \"+i+\";\\n        vec4 scale = \"+s+\";\\n\\n        vec4 x = getXAtOutCoords();\\n        vec4 mean = getMeanAtOutCoords();\\n        vec4 variance = getVarianceAtOutCoords();\\n\\n        vec4 inv = scale * inversesqrt(variance + vec4(\"+a+\"));\\n\\n        setOutput((x - mean) * inv + offset);\\n      }\\n    \"},oa=function(t,e,n){this.variableNames=[\"AReal\",\"AImag\",\"BReal\",\"BImag\"],this.outputShape=io(e,n),this.userCode=\"\\n      float binaryOpComplex(\\n          float areal, float aimag, float breal, float bimag) {\\n        \"+t+\"\\n      }\\n\\n      void main() {\\n        float areal = getARealAtOutCoords();\\n        float aimag = getAImagAtOutCoords();\\n        float breal = getBRealAtOutCoords();\\n        float bimag = getBImagAtOutCoords();\\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\\n      }\\n    \"},aa=\"return a + b;\",ia=\"return a - b;\",sa=\"return a * b;\",ua=\"return (a < 0.) ? b * a : a;\",ca=function(t,e,n){this.variableNames=[\"A\",\"B\"],this.outputShape=io(e,n),this.userCode=\"\\n      float binaryOperation(float a, float b) {\\n        \"+t+\"\\n      }\\n\\n      void main() {\\n        float a = getAAtOutCoords();\\n        float b = getBAtOutCoords();\\n        setOutput(binaryOperation(a, b));\\n      }\\n    \"},la=\"\\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\\n\",pa=function(t,e,n,r){void 0===r&&(r=!1),this.variableNames=[\"A\",\"B\"],this.supportsBroadcasting=!0,this.usesPackedTextures=!0,this.outputShape=io(e,n);var o=this.outputShape.length,a=\"\";if(r)if(0===o||1===E(this.outputShape))a=\"\\n          result.y = 0.;\\n          result.z = 0.;\\n          result.w = 0.;\\n        \";else if(a=\"\\n          \"+Yo(o)+\" coords = getOutputCoords();\\n        \",1===o)a+=\"\\n            result.y = (coords + 1) >= \"+this.outputShape[0]+\" ? 0. : result.y;\\n            result.z = 0.;\\n            result.w = 0.;\\n          \";else{var i=Lo(\"coords\",o);a+=\"\\n            bool nextRowOutOfBounds =\\n              (\"+i[o-2]+\" + 1) >= \"+this.outputShape[o-2]+\";\\n            bool nextColOutOfBounds =\\n              (\"+i[o-1]+\" + 1) >= \"+this.outputShape[o-1]+\";\\n            result.y = nextColOutOfBounds ? 0. : result.y;\\n            result.z = nextRowOutOfBounds ? 0. : result.z;\\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\\n          \"}this.userCode=\"\\n      vec4 binaryOperation(vec4 a, vec4 b) {\\n        \"+t+\"\\n      }\\n\\n      void main() {\\n        vec4 a = getAAtOutCoords();\\n        vec4 b = getBAtOutCoords();\\n\\n        vec4 result = binaryOperation(a, b);\\n        \"+a+\"\\n\\n        setOutput(result);\\n      }\\n    \"},da=function(){function t(t){this.variableNames=[\"A\"],this.outputShape=t,this.userCode=\"\\n      uniform float minVal;\\n      uniform float maxVal;\\n\\n      void main() {\\n        float value = getAAtOutCoords();\\n        if (isnan(value)) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, minVal, maxVal));\\n      }\\n    \"}return t.prototype.getCustomSetupFunc=function(t,e){var n=this;return function(r,o){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(o,\"minVal\"),n.maxLoc=r.getUniformLocationNoThrow(o,\"maxVal\")),r.gl.uniform1f(n.minLoc,t),r.gl.uniform1f(n.maxLoc,e)}},t}(),ha=function(){function t(t){this.variableNames=[\"A\"],this.usesPackedTextures=!0,this.outputShape=t,this.userCode=\"\\n      uniform float minVal;\\n      uniform float maxVal;\\n\\n      void main() {\\n        vec4 value = getAAtOutCoords();\\n\\n        if (any(isnan(value))) {\\n          setOutput(value);\\n          return;\\n        }\\n\\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\\n      }\\n    \"}return t.prototype.getCustomSetupFunc=function(t,e){var n=this;return function(r,o){null==n.minLoc&&(n.minLoc=r.getUniformLocationNoThrow(o,\"minVal\"),n.maxLoc=r.getUniformLocationNoThrow(o,\"maxVal\")),r.gl.uniform1f(n.minLoc,t),r.gl.uniform1f(n.maxLoc,e)}},t}(),fa=function(t){this.variableNames=[\"real\",\"imag\"],this.outputShape=t,this.userCode=\"\\n      void main() {\\n        float re = abs(getRealAtOutCoords());\\n        float im = abs(getImagAtOutCoords());\\n        float mx = max(re, im);\\n\\n        // sadly the length function in glsl is not underflow-safe\\n        // (at least not on Intel GPUs). So the safe solution is\\n        // to ensure underflow-safety in all cases.\\n        setOutput(\\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\\n        );\\n      }\\n    \"},ma=function(t){this.outputShape=[],this.outputShape=xn(t,1),this.variableNames=t.map(function(t,e){return\"T\"+e});var e=new Array(t.length-1);e[0]=t[0][1];for(var n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];var r=[\"if (yC < \"+e[0]+\") setOutput(getT0(yR, yC));\"];for(n=1;n<e.length;n++){var o=e[n-1];r.push(\"else if (yC < \"+e[n]+\") setOutput(getT\"+n+\"(yR, yC-\"+o+\"));\")}var a=e.length,i=e[e.length-1];r.push(\"else setOutput(getT\"+a+\"(yR, yC-\"+i+\"));\"),this.userCode=\"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int yR = coords.x;\\n        int yC = coords.y;\\n\\n        \"+r.join(\"\\n        \")+\"\\n      }\\n    \"},va=function(t,e){this.usesPackedTextures=!0,this.outputShape=[],this.outputShape=xn(t,e);var n=this.outputShape,r=n.length,o=Yo(r),a=Lo(\"coords\",r),i=[\"x\",\"y\",\"z\",\"w\",\"u\",\"v\"].slice(0,r);this.variableNames=t.map(function(t,e){return\"T\"+e});var s=new Array(t.length-1);s[0]=t[0][e];for(var u=1;u<s.length;u++)s[u]=s[u-1]+t[u][e];var c=i[e],l=\"vec2(\"+i.slice(-2).join()+\")\",p=i.join(),d=\"if (\"+c+\" < \"+s[0]+\")\\n          return getChannel(getT0(\"+p+\"), \"+l+\");\";for(u=1;u<s.length;u++){var h=s[u-1];d+=\"\\n        else if (\"+c+\" < \"+s[u]+\") {\\n          \"+c+\" -= \"+h+\";\\n          return getChannel(getT\"+u+\"(\"+p+\"), \"+l+\");\\n        }\"}var f=s.length;d+=\"\\n        else {\\n          \"+c+\" -= \"+s[s.length-1]+\";\\n          return getChannel(getT\"+f+\"(\"+p+\"), \"+l+\");\\n        }\",this.userCode=\"\\n      float getValue(\"+i.map(function(t){return\"int \"+t})+\") {\\n        \"+d+\"\\n      }\\n\\n      void main() {\\n        \"+o+\" coords = getOutputCoords();\\n        vec4 result = vec4(getValue(\"+a+\"), 0., 0., 0.);\\n        if (++\"+a[r-1]+\" < \"+n[r-1]+\") {\\n          result.g = getValue(\"+a+\");\\n        }\\n        if (++\"+a[r-2]+\" < \"+n[r-2]+\") {\\n          result.a = getValue(\"+a+\");\\n        }\\n        if (\"+a[r-2]+\" < \"+n[r-2]+\" &&\\n            --\"+a[r-1]+\" < \"+n[r-1]+\") {\\n          result.b = getValue(\"+a+\");\\n        }\\n        setOutput(result);\\n      }\\n    \"},ga=function(t){this.variableNames=[\"x\",\"dy\"],this.outputShape=t.filterShape;var e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,a=\"channelsLast\"===t.dataFormat;this.userCode=\"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int d2 = coords.w;\\n\\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < \"+t.batchSize+\"; b++) {\\n          for (int yR = 0; yR < \"+t.outHeight+\"; yR++) {\\n            int xR = wR + yR * \"+e+\" - \"+r+\";\\n\\n            if (xR < 0 || xR >= \"+t.inHeight+\") {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < \"+t.outWidth+\"; yC++) {\\n              int xC = wC + yC * \"+n+\" - \"+o+\";\\n\\n              if (xC < 0 || xC >= \"+t.inWidth+\") {\\n                continue;\\n              }\\n\\n              if (\"+a+\") {\\n                float dyValue = getDy(b, yR, yC, d2);\\n                float xValue = getX(b, xR, xC, d1);\\n                dotProd += (xValue * dyValue);\\n              } else {\\n                float dyValue = getDy(b, d2, yR, yC);\\n                float xValue = getX(b, d1, xR, xC);\\n                dotProd += (xValue * dyValue);\\n              }\\n\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \"},ya=function(t){this.variableNames=[\"dy\",\"W\"],this.outputShape=t.inShape;var e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=\"channelsLast\"===t.dataFormat,i=e-1-t.padInfo.top,s=n-1-t.padInfo.left,u=a?1:2,c=a?2:3,l=a?3:1;this.userCode=\"\\n      const ivec2 pads = ivec2(\"+i+\", \"+s+\");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[\"+l+\"];\\n\\n        ivec2 dyCorner = ivec2(coords[\"+u+\"], coords[\"+c+\"]) - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \"+e+\"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \"+r+\".0;\\n\\n          if (dyR < 0.0 || dyR >= \"+t.outHeight+\".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = \"+e+\" - 1 - wR;\\n\\n          for (int wC = 0; wC < \"+n+\"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \"+o+\".0;\\n\\n            if (dyC < 0.0 || dyC >= \"+t.outWidth+\".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = \"+n+\" - 1 - wC;\\n\\n            for (int d2 = 0; d2 < \"+t.outChannels+\"; d2++) {\\n\\n              if (\"+a+\") {\\n                float xValue = getDy(batch, idyR, idyC, d2);\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              } else {\\n                float xValue = getDy(batch, d2, idyR, idyC);\\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \"},xa=function(t){this.variableNames=[\"x\",\"dy\"],this.outputShape=t.filterShape;var e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,o=t.padInfo.front,a=t.padInfo.top,i=t.padInfo.left;this.userCode=\"\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int wF = coords.x;\\n        int wR = coords.y;\\n        int wC = coords.z;\\n        int d1 = coords.w;\\n        int d2 = coords.u;\\n\\n        float dotProd = 0.0;\\n\\n        for (int b = 0; b < \"+t.batchSize+\"; b++) {\\n          for (int yF = 0; yF < \"+t.outDepth+\"; yF++) {\\n            int xF = wF + yF * \"+e+\" - \"+o+\";\\n\\n            if (xF < 0 || xF >= \"+t.inDepth+\") {\\n              continue;\\n            }\\n\\n            for (int yR = 0; yR < \"+t.outHeight+\"; yR++) {\\n              int xR = wR + yR * \"+n+\" - \"+a+\";\\n\\n              if (xR < 0 || xR >= \"+t.inHeight+\") {\\n                continue;\\n              }\\n\\n              for (int yC = 0; yC < \"+t.outWidth+\"; yC++) {\\n                int xC = wC + yC * \"+r+\" - \"+i+\";\\n\\n                if (xC < 0 || xC >= \"+t.inWidth+\") {\\n                  continue;\\n                }\\n\\n                float dyValue = getDy(b, yF, yR, yC, d2);\\n                float xValue = getX(b, xF, xR, xC, d1);\\n                dotProd += (xValue * dyValue);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \"},ba=function(t){this.variableNames=[\"dy\",\"W\"],this.outputShape=t.inShape;var e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=e-1-t.padInfo.front,u=n-1-t.padInfo.top,c=r-1-t.padInfo.left;this.userCode=\"\\n      const ivec3 pads = ivec3(\"+s+\", \"+u+\", \"+c+\");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d1 = coords.u;\\n\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyFCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < \"+e+\"; wF++) {\\n          float dyF = float(dyFCorner + wF) / \"+o+\".0;\\n\\n          if (dyF < 0.0 || dyF >= \"+t.outDepth+\".0 || fract(dyF) > 0.0) {\\n            continue;\\n          }\\n          int idyF = int(dyF);\\n\\n          int wFPerm = \"+e+\" - 1 - wF;\\n\\n          for (int wR = 0; wR < \"+n+\"; wR++) {\\n            float dyR = float(dyRCorner + wR) / \"+a+\".0;\\n\\n            if (dyR < 0.0 || dyR >= \"+t.outHeight+\".0 ||\\n              fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            int wRPerm = \"+n+\" - 1 - wR;\\n\\n            for (int wC = 0; wC < \"+r+\"; wC++) {\\n              float dyC = float(dyCCorner + wC) / \"+i+\".0;\\n\\n              if (dyC < 0.0 || dyC >= \"+t.outWidth+\".0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              int wCPerm = \"+r+\" - 1 - wC;\\n\\n              for (int d2 = 0; d2 < \"+t.outChannels+\"; d2++) {\\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\\n                dotProd += xValue * wValue;\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \"},wa=function(t){this.variableNames=[\"x\",\"dy\"],this.outputShape=t.filterShape;var e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,o=t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=\"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int wR = coords.x;\\n        int wC = coords.y;\\n        int d1 = coords.z;\\n        int dm = coords.w;\\n        int d2 = d1 * \"+a+\" + dm;\\n\\n        float dotProd = 0.0;\\n\\n        // TO DO: Vec4 over the batch size\\n        for (int b = 0; b < \"+t.batchSize+\"; b++) {\\n          for (int yR = 0; yR < \"+t.outHeight+\"; yR++) {\\n            int xR = wR + yR * \"+e+\" - \"+r+\";\\n\\n            if (xR < 0 || xR >= \"+t.inHeight+\") {\\n              continue;\\n            }\\n\\n            for (int yC = 0; yC < \"+t.outWidth+\"; yC++) {\\n              int xC = wC + yC * \"+n+\" - \"+o+\";\\n\\n              if (xC < 0 || xC >= \"+t.inWidth+\") {\\n                continue;\\n              }\\n\\n              float dyValue = getDy(b, yR, yC, d2);\\n              float xValue = getX(b, xR, xC, d1);\\n              dotProd += (xValue * dyValue);\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \"},Ca=function(t){this.variableNames=[\"dy\",\"W\"],this.outputShape=t.inShape;var e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,o=t.strideWidth,a=e-1-t.padInfo.top,i=n-1-t.padInfo.left,s=t.outChannels/t.inChannels;this.userCode=\"\\n      const ivec2 pads = ivec2(\"+a+\", \"+i+\");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d1 = coords[3];\\n        ivec2 dyCorner = coords.yz - pads;\\n        int dyRCorner = dyCorner.x;\\n        int dyCCorner = dyCorner.y;\\n\\n        float dotProd = 0.0;\\n\\n        for (int wR = 0; wR < \"+e+\"; wR++) {\\n          float dyR = float(dyRCorner + wR) / \"+r+\".0;\\n\\n          if (dyR < 0.0 || dyR >= \"+t.outHeight+\".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          int wRPerm = \"+e+\" - 1 - wR;\\n\\n          for (int wC = 0; wC < \"+n+\"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \"+o+\".0;\\n\\n            if (dyC < 0.0 || dyC >= \"+t.outWidth+\".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            int wCPerm = \"+n+\" - 1 - wC;\\n\\n            // TO DO: Vec4 over the channelMul\\n            for (int dm = 0; dm < \"+s+\"; dm++) {\\n              int d2 = d1 * \"+s+\" + dm;\\n              float xValue = getDy(batch, idyR, idyC, d2);\\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\\n              dotProd += xValue * wValue;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \"},Ea=function(t,e,n,r){void 0===e&&(e=!1),void 0===n&&(n=null),void 0===r&&(r=!1),this.variableNames=[\"x\",\"W\"],this.outputShape=t.outShape;var o=t.padInfo.top,a=t.padInfo.left,i=t.strideHeight,s=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),h=t.inChannels%4,f=\"channelsLast\"===t.dataFormat,m=f?1:2,v=f?2:3,g=f?3:1,y=\"\",x=\"\";n&&(y=r?\"float activation(float a) {\\n          float b = getPreluActivationWeightsAtOutCoords();\\n          \"+n+\"\\n        }\":\"\\n          float activation(float x) {\\n            \"+n+\"\\n          }\\n        \",x=\"result = activation(result);\");var b=e?\"result += getBiasAtOutCoords();\":\"\";e&&this.variableNames.push(\"bias\"),r&&this.variableNames.push(\"preluActivationWeights\"),this.userCode=\"\\n      \"+y+\"\\n\\n      const ivec2 strides = ivec2(\"+i+\", \"+s+\");\\n      const ivec2 pads = ivec2(\"+o+\", \"+a+\");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d2 = coords[\"+g+\"];\\n\\n        ivec2 xRCCorner =\\n            ivec2(coords[\"+m+\"], coords[\"+v+\"]) * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \"+l+\"; wR++) {\\n          int xR = xRCorner + wR * \"+u+\";\\n\\n          if (xR < 0 || xR >= \"+t.inHeight+\") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \"+p+\"; wC++) {\\n            int xC = xCCorner + wC * \"+c+\";\\n\\n            if (xC < 0 || xC >= \"+t.inWidth+\") {\\n              continue;\\n            }\\n\\n            for (int d1 = 0; d1 < \"+d+\"; d1 += 4) {\\n              vec4 wValues = vec4(\\n                getW(wR, wC, d1, d2),\\n                getW(wR, wC, d1 + 1, d2),\\n                getW(wR, wC, d1 + 2, d2),\\n                getW(wR, wC, d1 + 3, d2)\\n              );\\n\\n              if (\"+f+\") {\\n                vec4 xValues = vec4(\\n                  getX(batch, xR, xC, d1),\\n                  getX(batch, xR, xC, d1 + 1),\\n                  getX(batch, xR, xC, d1 + 2),\\n                  getX(batch, xR, xC, d1 + 3)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec4 xValues = vec4(\\n                  getX(batch, d1, xR, xC),\\n                  getX(batch, d1 + 1, xR, xC),\\n                  getX(batch, d1 + 2, xR, xC),\\n                  getX(batch, d1 + 3, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n            }\\n\\n            if (\"+(1===h)+\") {\\n\\n              if (\"+f+\") {\\n                dotProd +=\\n                    getX(batch, xR, xC, \"+d+\") *\\n                    getW(wR, wC, \"+d+\", d2);\\n              } else {\\n                dotProd +=\\n                    getX(batch, \"+d+\", xR, xC) *\\n                    getW(wR, wC, \"+d+\", d2);\\n              }\\n\\n            } else if (\"+(2===h)+\") {\\n              vec2 wValues = vec2(\\n                getW(wR, wC, \"+d+\", d2),\\n                getW(wR, wC, \"+d+\" + 1, d2)\\n              );\\n\\n              if (\"+f+\") {\\n                vec2 xValues = vec2(\\n                  getX(batch, xR, xC, \"+d+\"),\\n                  getX(batch, xR, xC, \"+d+\" + 1)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec2 xValues = vec2(\\n                  getX(batch, \"+d+\", xR, xC),\\n                  getX(batch, \"+d+\" + 1, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n            } else if (\"+(3===h)+\") {\\n              vec3 wValues = vec3(\\n                getW(wR, wC, \"+d+\", d2),\\n                getW(wR, wC, \"+d+\" + 1, d2),\\n                getW(wR, wC, \"+d+\" + 2, d2)\\n              );\\n\\n              if (\"+f+\") {\\n                vec3 xValues = vec3(\\n                  getX(batch, xR, xC, \"+d+\"),\\n                  getX(batch, xR, xC, \"+d+\" + 1),\\n                  getX(batch, xR, xC, \"+d+\" + 2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else {\\n                vec3 xValues = vec3(\\n                  getX(batch, \"+d+\", xR, xC),\\n                  getX(batch, \"+d+\" + 1, xR, xC),\\n                  getX(batch, \"+d+\" + 2, xR, xC)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n            }\\n          }\\n        }\\n\\n        float result = dotProd;\\n        \"+b+\"\\n        \"+x+\"\\n        setOutput(result);\\n      }\\n    \"},Na=function(t){this.variableNames=[\"x\",\"W\"],this.outputShape=t.outShape;var e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterDepth,p=t.filterHeight,d=t.filterWidth,h=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=\"\\n      const ivec3 strides = ivec3(\"+o+\", \"+a+\", \"+i+\");\\n      const ivec3 pads = ivec3(\"+e+\", \"+n+\", \"+r+\");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int d2 = coords.u;\\n\\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n        int xFCorner = xFRCCorner.x;\\n        int xRCorner = xFRCCorner.y;\\n        int xCCorner = xFRCCorner.z;\\n\\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\\n        // values in that axis.\\n        float dotProd = 0.0;\\n        for (int wF = 0; wF < \"+l+\"; wF++) {\\n          int xF = xFCorner + wF * \"+s+\";\\n\\n          if (xF < 0 || xF >= \"+t.inDepth+\") {\\n            continue;\\n          }\\n\\n          for (int wR = 0; wR < \"+p+\"; wR++) {\\n            int xR = xRCorner + wR * \"+u+\";\\n\\n            if (xR < 0 || xR >= \"+t.inHeight+\") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \"+d+\"; wC++) {\\n              int xC = xCCorner + wC * \"+c+\";\\n\\n              if (xC < 0 || xC >= \"+t.inWidth+\") {\\n                continue;\\n              }\\n\\n              for (int d1 = 0; d1 < \"+h+\"; d1 += 4) {\\n                vec4 xValues = vec4(\\n                  getX(batch, xF, xR, xC, d1),\\n                  getX(batch, xF, xR, xC, d1 + 1),\\n                  getX(batch, xF, xR, xC, d1 + 2),\\n                  getX(batch, xF, xR, xC, d1 + 3)\\n                );\\n                vec4 wValues = vec4(\\n                  getW(wF, wR, wC, d1, d2),\\n                  getW(wF, wR, wC, d1 + 1, d2),\\n                  getW(wF, wR, wC, d1 + 2, d2),\\n                  getW(wF, wR, wC, d1 + 3, d2)\\n                );\\n\\n                dotProd += dot(xValues, wValues);\\n              }\\n\\n              if (\"+(1===f)+\") {\\n                dotProd +=\\n                  getX(batch, xF, xR, xC, \"+h+\") *\\n                  getW(wF, wR, wC, \"+h+\", d2);\\n              } else if (\"+(2===f)+\") {\\n                vec2 xValues = vec2(\\n                  getX(batch, xF, xR, xC, \"+h+\"),\\n                  getX(batch, xF, xR, xC, \"+h+\" + 1)\\n                );\\n                vec2 wValues = vec2(\\n                  getW(wF, wR, wC, \"+h+\", d2),\\n                  getW(wF, wR, wC, \"+h+\" + 1, d2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              } else if (\"+(3===f)+\") {\\n                vec3 xValues = vec3(\\n                  getX(batch, xF, xR, xC, \"+h+\"),\\n                  getX(batch, xF, xR, xC, \"+h+\" + 1),\\n                  getX(batch, xF, xR, xC, \"+h+\" + 2)\\n                );\\n                vec3 wValues = vec3(\\n                  getW(wF, wR, wC, \"+h+\", d2),\\n                  getW(wF, wR, wC, \"+h+\" + 1, d2),\\n                  getW(wF, wR, wC, \"+h+\" + 2, d2)\\n                );\\n                dotProd += dot(xValues, wValues);\\n              }\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \"},Sa=function(t){this.variableNames=[\"x\",\"W\"],this.outputShape=t.outShape;var e=t.inHeight,n=t.inWidth,r=t.padInfo.top,o=t.padInfo.left,a=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,u=t.dilationWidth,c=t.filterHeight,l=t.filterWidth,p=t.outChannels/t.inChannels;this.userCode=\"\\n      const ivec2 strides = ivec2(\"+a+\", \"+i+\");\\n      const ivec2 pads = ivec2(\"+r+\", \"+o+\");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2 / \"+p+\";\\n        int q = d2 - d1 * \"+p+\";\\n\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\\n        for (int wR = 0; wR < \"+c+\"; wR++) {\\n          int xR = xRCorner + wR * \"+s+\";\\n\\n          if (xR < 0 || xR >= \"+e+\") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \"+l+\"; wC++) {\\n            int xC = xCCorner + wC * \"+u+\";\\n\\n            if (xC < 0 || xC >= \"+n+\") {\\n              continue;\\n            }\\n\\n            float xVal = getX(batch, xR, xC, d1);\\n            float wVal = getW(wR, wC, d1, q);\\n            dotProd += xVal * wVal;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \"},Ra=function(t){this.variableNames=[\"x\",\"W\"],this.usesPackedTextures=!0,this.outputShape=t.outShape;for(var e=t.inHeight,n=t.inWidth,r=t.padInfo.top,o=t.padInfo.left,a=t.strideHeight,i=t.strideWidth,s=t.dilationHeight,u=t.dilationWidth,c=t.filterHeight,l=t.filterWidth,p=l,d=\"int xR; int xC; int xCOffset;\",h=0;h<c;h++)for(var f=0;f<l;f++)d+=\"\\n          vec4 xTexelR\"+h+\"C\"+2*f+\" = vec4(0.);\\n          vec4 wR\"+h+\"C\"+f+\" = vec4(0.);\\n          vec4 xR\"+h+\"C\"+f+\" = vec4(0.);\";for(h=0;h<c;h++)for(var m=0;m<p;m++){if(d+=\"\\n          xR = xRCorner + \"+h*s+\";\\n          xC = xCCorner + \"+(f=2*m)*u+\";\\n        \",1===i){if(f<l&&(d+=o%2==1?\"\\n                xCOffset = xC + 1;\\n                if(xR >= 0 && xR < \"+e+\" && xCOffset >= 0 && xCOffset < \"+n+\") {\\n                  xTexelR\"+h+\"C\"+f+\" = getX(batch, xR, xCOffset, d1);\\n                } else {\\n                  xTexelR\"+h+\"C\"+f+\" = vec4(0.);\\n                }\\n\\n                xCOffset = xC + 1 - 2;\\n                if(xR >= 0 && xR < \"+e+\" && xCOffset >= 0 && xCOffset < \"+n+\") {\\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\\n                  xR\"+h+\"C\"+f+\" = vec4(previous.zw, xTexelR\"+h+\"C\"+f+\".xy);\\n                } else {\\n                  xR\"+h+\"C\"+f+\" = vec4(0, 0, xTexelR\"+h+\"C\"+f+\".xy);\\n                }\\n              \":\"\\n                if(xR >= 0 && xR < \"+e+\" && xC >= 0 && xC < \"+n+\") {\\n                  xTexelR\"+h+\"C\"+f+\" = getX(batch, xR, xC, d1);\\n                } else {\\n                  xTexelR\"+h+\"C\"+f+\" = vec4(0.);\\n                }\\n\\n                xR\"+h+\"C\"+f+\" = xTexelR\"+h+\"C\"+f+\";\\n              \",f+1<l)){var v=o%2==0?g(u):u;u%2==0&&o%2==1||u%2!=0&&o%2!=1?(d+=\"\\n                  xCOffset = xC + \"+o%2+\" + \"+v+\";\\n\\n                  if(xR >= 0 && xR < \"+e+\" &&\\n                    xCOffset >= 0 && xCOffset < \"+n+\") {\\n                    xTexelR\"+h+\"C\"+(f+2)+\" = getX(batch, xR, xCOffset, d1);\\n                  }\\n                \",u>1&&(d+=\"\\n                    xCOffset -= 2;\\n                    if(xR >= 0 && xR < \"+e+\" &&\\n                      xCOffset >= 0 && xCOffset < \"+n+\") {\\n                      xTexelR\"+h+\"C\"+f+\" = getX(batch, xR, xCOffset, d1);\\n                    } else {\\n                      xTexelR\"+h+\"C\"+f+\" = vec4(0.);\\n                    }\\n                  \"),d+=\"\\n                  xR\"+h+\"C\"+(f+1)+\" = vec4(\\n                    xTexelR\"+h+\"C\"+f+\".zw, xTexelR\"+h+\"C\"+(f+2)+\".xy);\\n                \"):d+=\"\\n                  xCOffset = xC + \"+v+\";\\n\\n                  if(xR >= 0 && xR < \"+e+\" &&\\n                    xCOffset >= 0 && xCOffset < \"+n+\") {\\n                    xTexelR\"+h+\"C\"+(f+2)+\" = getX(batch, xR, xCOffset, d1);\\n                  }\\n\\n                  xR\"+h+\"C\"+(f+1)+\" = xTexelR\"+h+\"C\"+(f+2)+\";\\n                \"}}else f<l&&(d+=\"\\n              if(xR >= 0 && xR < \"+e+\") {\\n            \",o%2==1?(d+=\"\\n                xCOffset = xC + 1 - \"+i+\";\\n                if(xCOffset >= 0 && xCOffset < \"+n+\") {\\n                  xTexelR\"+h+\"C\"+f+\" = getX(batch, xR, xCOffset, d1);\\n                } else {\\n                  xTexelR\"+h+\"C\"+f+\" = vec4(0.);\\n                }\\n\\n                if(xC + 1 >= 0 && xC + 1 < \"+n+\") {\\n                  xTexelR\"+h+\"C\"+(f+2)+\" = getX(batch, xR, xC + 1, d1);\\n                } else {\\n                  xTexelR\"+h+\"C\"+(f+2)+\" = vec4(0.);\\n                }\\n\\n                xR\"+h+\"C\"+f+\" = vec4(\\n                  xTexelR\"+h+\"C\"+f+\".zw, xTexelR\"+h+\"C\"+(f+2)+\".zw);\\n              \",f+1<l&&(d+=\"\\n                  vec4 final = vec4(0.);\\n                  xCOffset = xC + 1 + \"+i+\";\\n                  if(xCOffset >= 0 && xCOffset < \"+n+\") {\\n                    final = getX(batch, xR, xCOffset, d1);\\n                  }\\n                  xR\"+h+\"C\"+(f+1)+\" = vec4(xTexelR\"+h+\"C\"+(f+2)+\".xy, final.xy);\\n                \")):(d+=\"\\n                if(xC >= 0 && xC < \"+n+\") {\\n                  xTexelR\"+h+\"C\"+f+\" = getX(batch, xR, xC, d1);\\n                } else {\\n                  xTexelR\"+h+\"C\"+f+\" = vec4(0.);\\n                }\\n\\n                xCOffset = xC + \"+i+\";\\n                if(xCOffset >= 0 && xCOffset < \"+n+\") {\\n                  xTexelR\"+h+\"C\"+(f+2)+\" = getX(batch, xR, xCOffset, d1);\\n                } else {\\n                  xTexelR\"+h+\"C\"+(f+2)+\" = vec4(0.);\\n                }\\n\\n                xR\"+h+\"C\"+f+\" = vec4(\\n                  xTexelR\"+h+\"C\"+f+\".xy, xTexelR\"+h+\"C\"+(f+2)+\".xy);\\n              \",f+1<l&&(d+=\"\\n                  xR\"+h+\"C\"+(f+1)+\" = vec4(\\n                    xTexelR\"+h+\"C\"+f+\".zw, xTexelR\"+h+\"C\"+(f+2)+\".zw);\\n                \")),d+=\"}\");f<l&&(d+=\"\\n            vec4 wTexelR\"+h+\"C\"+f+\" = getW(\"+h+\", \"+f+\", d1, q);\\n            wR\"+h+\"C\"+f+\" = vec4(wTexelR\"+h+\"C\"+f+\".xz, wTexelR\"+h+\"C\"+f+\".xz);\\n          \",f+1<l&&(d+=\"\\n              vec4 wTexelR\"+h+\"C\"+(f+1)+\" = getW(\"+h+\", \"+(f+1)+\", d1, q);\\n              wR\"+h+\"C\"+(f+1)+\" =\\n                vec4(wTexelR\"+h+\"C\"+(f+1)+\".xz, wTexelR\"+h+\"C\"+(f+1)+\".xz);\"))}for(h=0;h<c;h++)for(f=0;f<l;f++)d+=\"result += xR\"+h+\"C\"+f+\" * wR\"+h+\"C\"+f+\";\";this.userCode=\"\\n      const ivec2 strides = ivec2(\"+a+\", \"+i+\");\\n      const ivec2 pads = ivec2(\"+r+\", \"+o+\");\\n\\n      void main() {\\n\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords.x;\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int d2 = coords.w;\\n        int d1 = d2;\\n        int q = 0;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        vec4 result = vec4(0.);\\n\\n        \"+d+\"\\n\\n        setOutput(result);\\n      }\\n    \"},Ta=function(t,e,n,r,o){this.variableNames=[\"Image\",\"Boxes\",\"BoxInd\"],this.outputShape=[];var a=t[0],i=t[1],s=t[2],u=t[3],c=e[0],l=n[0],p=n[1];this.outputShape=[c,l,p,u];var d=\"bilinear\"===r?1:0,h=[i-1+\".0\",s-1+\".0\"],f=h[0],m=h[1],v=l>1?[\"\"+(i-1)/(l-1),\"(y2-y1) * height_ratio\",\"y1*\"+f+\" + float(y)*(height_scale)\"]:[\"0.0\",\"0.0\",\"0.5 * (y1+y2) * \"+f],g=v[0],y=v[1],x=v[2],b=p>1?[\"\"+(s-1)/(p-1),\"(x2-x1) * width_ratio\",\"x1*\"+m+\" + float(x)*(width_scale)\"]:[\"0.0\",\"0.0\",\"0.5 * (x1+x2) * \"+m],w=b[0],C=b[1],E=b[2];this.userCode=\"\\n      const float height_ratio = float(\"+g+\");\\n      const float width_ratio = float(\"+w+\");\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int y = coords[1];\\n        int x = coords[2];\\n        int d = coords[3];\\n\\n        // get box vals\\n        float y1 = getBoxes(b,0);\\n        float x1 = getBoxes(b,1);\\n        float y2 = getBoxes(b,2);\\n        float x2 = getBoxes(b,3);\\n\\n        // get image in batch index\\n        int bInd = round(getBoxInd(b));\\n        if(bInd < 0 || bInd >= \"+a+\") {\\n          return;\\n        }\\n\\n        float height_scale = \"+y+\";\\n        float width_scale = \"+C+\";\\n\\n        float in_y = \"+x+\";\\n        if( in_y < 0.0 || in_y > \"+f+\" ) {\\n          setOutput(float(\"+o+\"));\\n          return;\\n        }\\n        float in_x = \"+E+\";\\n        if( in_x < 0.0 || in_x > \"+m+\" ) {\\n          setOutput(float(\"+o+\"));\\n          return;\\n        }\\n\\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\\n        if(\"+d+\" == 1) {\\n          // Compute the four integer indices.\\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\\n\\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\\n\\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\\n\\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\\n          float newValue = top + (bottom - top) * fracCR.y;\\n          setOutput(newValue);\\n        } else {\\n          // Compute the coordinators of nearest neighbor point.\\n          ivec2 sourceNearestCR = ivec2(floor(\\n            sourceFracIndexCR + vec2(0.5,0.5)));\\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\\n          setOutput(newValue);\\n        }\\n      }\\n    \"},Ia=function(t,e,n){this.variableNames=[\"x\"],this.outputShape=t;var r=t.length,o=t[t.length-1],a=n?\"<\":\">\";this.userCode=\"\\n      int getIndex(int i) {\\n        \"+(n?\"return \"+o+\" -i - 1;\":\"return i;\")+\"\\n      }\\n\\n      void main() {\\n        \"+Yo(r)+\" coords = getOutputCoords();\\n        int end = \"+Aa(r,\"coords\")+\";\\n        float val = 0.0;\\n        for (int i = \"+o+\" - 1; i >= 0; i -= 1) {\\n          int idx = getIndex(i);\\n          if (idx \"+a+\" end) {\\n            continue;\\n          }\\n          if (idx == end && \"+e+\") {\\n            continue;\\n          }\\n          \"+Aa(r,\"coords\")+\" = idx;\\n          val += getX(\"+function(t,e){if(1===r)return\"\"+e;if(2===r)return e+\".x, \"+e+\".y\";if(3===r)return e+\".x, \"+e+\".y, \"+e+\".z\";if(4===r)return e+\".x, \"+e+\".y, \"+e+\".z, \"+e+\".w\";throw Error(\"Cumulative sum for rank \"+r+\" is not yet supported\")}(0,\"coords\")+\");\\n        }\\n        setOutput(val);\\n      }\\n    \"};function Aa(t,e){if(1===t)return\"\"+e;if(2===t)return e+\".y\";if(3===t)return e+\".z\";if(4===t)return e+\".w\";throw Error(\"Cumulative sum for rank \"+t+\" is not yet supported\")}var ka=function(t,e){this.variableNames=[\"A\"];var n=Vo();this.outputShape=t,this.userCode=\"\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        \"+zo([\"r\",\"c\",\"d\"],t)+\"\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n          vec2(\"+e[0]+\", \"+e[1]+\"));\\n        int index = 4 * (resTexRC.x * \"+e[1]+\" + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getA(rc.x, rc.y, rc.z);\\n        }\\n\\n        \"+n.output+\" = result;\\n      }\\n    \"},Oa=function(t,e){this.variableNames=[\"A\"],this.usesPackedTextures=!0;var n=Vo();this.outputShape=t,this.userCode=\"\\n      ivec3 outCoordsFromFlatIndex(int index) {\\n        \"+zo([\"r\",\"c\",\"d\"],t)+\"\\n        return ivec3(r, c, d);\\n      }\\n\\n      void main() {\\n        ivec2 resTexRC = ivec2(resultUV.yx *\\n          vec2(\"+e[0]+\", \"+e[1]+\"));\\n        int index = 4 * (resTexRC.x * \"+e[1]+\" + resTexRC.y);\\n\\n        vec4 result = vec4(0.);\\n\\n        for (int i=0; i<4; i++) {\\n          int flatIndex = index + i;\\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\\n        }\\n\\n        \"+n.output+\" = result;\\n      }\\n    \"},Da=function(){function t(t,e,n){this.variableNames=[\"x\"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=\"\\n    void main() {\\n      ivec4 coords = getOutputCoords();\\n      int b = coords[0];\\n      int h = \"+this.getHeightCoordString()+\";\\n      int w = \"+this.getWidthCoordString()+\";\\n      int d = \"+this.getDepthCoordString()+\";\\n\\n      int in_h = h / \"+e+\";\\n      int offset_h = imod(h, \"+e+\");\\n      int in_w = w / \"+e+\";\\n      int offset_w = imod(w, \"+e+\");\\n      int offset_d = (offset_h * \"+e+\" + offset_w) *\\n        \"+this.getOutputDepthSize()+\";\\n      int in_d = d + offset_d;\\n\\n      float result = \"+this.getInputSamplingString()+\";\\n      setOutput(result);\\n    }\\n  \"}return t.prototype.getHeightCoordString=function(){return\"NHWC\"===this.dataFormat?\"coords[1]\":\"coords[2]\"},t.prototype.getWidthCoordString=function(){return\"NHWC\"===this.dataFormat?\"coords[2]\":\"coords[3]\"},t.prototype.getDepthCoordString=function(){return\"NHWC\"===this.dataFormat?\"coords[3]\":\"coords[1]\"},t.prototype.getOutputDepthSize=function(){return\"NHWC\"===this.dataFormat?this.outputShape[3]:this.outputShape[1]},t.prototype.getInputSamplingString=function(){return\"NHWC\"===this.dataFormat?\"getX(b, in_h, in_w, in_d)\":\"getX(b, in_d, in_h, in_w)\"},t}(),_a=function(t){this.variableNames=[\"X\"],this.outputShape=[t,t],this.userCode=\"\\n      void main() {\\n          ivec2 coords = getOutputCoords();\\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\\n          setOutput(val);\\n      }\\n    \"},Ma=function(t){this.variableNames=[\"A\"];var e=Vo();this.outputShape=t,this.userCode=\"\\n      \"+Uo+\"\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        \"+e.output+\" = encode_float(x);\\n      }\\n    \"},Fa=function(t){this.variableNames=[\"A\"],this.usesPackedTextures=!0;var e=Vo();this.outputShape=t,this.userCode=\"\\n      \"+Uo+\"\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\\n        \"+e.output+\" = encode_float(x);\\n      }\\n    \"},Pa=function(t,e,n){void 0===n&&(n=!1),this.variableNames=[\"A\"];var r=Vo(),o=e[0],a=e[1];this.outputShape=t;var i=\"result\";n&&(i=\"floor(result * 255. + 0.5)\"),this.userCode=\"\\n      \"+Wo(t)+\"\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n\\n        int flatIndex = getFlatIndex(coords);\\n        int offset = imod(flatIndex, 4);\\n\\n        flatIndex = idiv(flatIndex, 4, 1.);\\n        \\n        int r = flatIndex / \"+a+\";\\n        int c = imod(flatIndex, \"+a+\");\\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(\"+a+\".0, \"+o+\".0);\\n        vec4 values = \"+r.texture2D+\"(A, uv);\\n\\n        float result;\\n\\n        if(offset == 0) {\\n          result = values[0];\\n        } else if(offset == 1) {\\n          result = values[1];\\n        } else if(offset == 2) {\\n          result = values[2];\\n        } else {\\n          result = values[3];\\n        }\\n\\n        \"+r.output+\" = vec4(\"+i+\", 0., 0., 0.);\\n      }\\n    \"},Ba=function(t,e,n){void 0===n&&(n=!1),this.variableNames=[\"A\"];var r=Vo(),o=e[0],a=e[1];this.outputShape=t;var i=\"\",s=\"result\";n&&(s=\"floor(result * 255. + 0.5)\");for(var u=0;u<=1;u++)for(var c=0;c<=1;c++){var l=2*u+c;i+=\"\\n          localCoords = coords;\\n          if(localCoords[2] + \"+c+\" < \"+t[2]+\") {\\n            localCoords[2] += \"+c+\";\\n            if(localCoords[1] + \"+u+\" < \"+t[1]+\") {\\n              localCoords[1] += \"+u+\";\\n\\n              flatIndex = getFlatIndex(localCoords);\\n              offset = imod(flatIndex, 4);\\n    \\n              flatIndex = idiv(flatIndex, 4, 1.);\\n\\n              r = flatIndex / \"+a+\";\\n              c = imod(flatIndex, \"+a+\");\\n              uv = (vec2(c, r) + halfCR) / vec2(\"+a+\".0, \"+o+\".0);\\n              values = \"+r.texture2D+\"(A, uv);\\n\\n              if(offset == 0) {\\n                result[\"+l+\"] = values[0];\\n              } else if(offset == 1) {\\n                result[\"+l+\"] = values[1];\\n              } else if(offset == 2) {\\n                result[\"+l+\"] = values[2];\\n              } else {\\n                result[\"+l+\"] = values[3];\\n              }\\n            }\\n          }\\n        \"}this.userCode=\"\\n      \"+Wo(t)+\"\\n\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n\\n        vec4 result = vec4(0.);\\n        int flatIndex, r, c, offset;\\n        ivec3 localCoords;\\n        vec2 uv;\\n        vec4 values;\\n        \\n        \"+i+\"\\n\\n        \"+r.output+\" = \"+s+\";\\n      }\\n    \"},La=function(t,e,n){this.variableNames=[\"real\",\"imag\"];var r=e[1];this.outputShape=e;var o=n?\"2.0 * \"+Math.PI:\"-2.0 * \"+Math.PI,a=n?r+\".0\":\"1.0\";this.userCode=\"\\n      const float exponentMultiplier = \"+o+\";\\n\\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\\n        \"+t+\"\\n      }\\n\\n      float mulMatDFT(int batch, int index) {\\n        float indexRatio = float(index) / float(\"+r+\");\\n        float exponentMultiplierTimesIndexRatio =\\n            exponentMultiplier * indexRatio;\\n\\n        float result = 0.0;\\n\\n        for (int i = 0; i < \"+r+\"; i++) {\\n          // x = (-2|2 * PI / N) * index * i;\\n          float x = exponentMultiplierTimesIndexRatio * float(i);\\n          float expR = cos(x);\\n          float expI = sin(x);\\n          float real = getReal(batch, i);\\n          float imag = getImag(batch, i);\\n\\n          result +=\\n              unaryOpComplex(real, expR, imag, expI) / \"+a+\";\\n        }\\n\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        setOutput(mulMatDFT(coords[0], coords[1]));\\n      }\\n    \"},Va=function(){function t(t,e){this.outputShape=[],this.variableNames=[\"x\"],this.outputShape=t,this.userCode=\"\\n      uniform float value;\\n      void main() {\\n        // Input can be obtained from uniform value.\\n        setOutput(value);\\n      }\\n    \"}return t.prototype.getCustomSetupFunc=function(t){var e=this;return function(n,r){null==e.valueLoc&&(e.valueLoc=n.getUniformLocationNoThrow(r,\"value\")),n.gl.uniform1f(e.valueLoc,t)}},t}(),za=function(t){this.variableNames=[\"A\"];var e=Vo(),n=t[0],r=t[1];this.outputShape=t,this.userCode=\"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\"+r+\".0, \"+n+\".0);\\n\\n        vec4 values = \"+e.texture2D+\"(A, uv);\\n        float value;\\n        if (depth == 0) {\\n          value = values.r;\\n        } else if (depth == 1) {\\n          value = values.g;\\n        } else if (depth == 2) {\\n          value = values.b;\\n        } else if (depth == 3) {\\n          value = values.a;\\n        }\\n\\n        setOutput(floor(value * 255.0 + 0.5));\\n      }\\n    \"},Wa=function(t){this.variableNames=[\"A\"];var e=Vo(),n=t[0],r=t[1];this.outputShape=t,this.userCode=\"\\n      void main() {\\n        ivec3 coords = getOutputCoords();\\n        int texR = coords[0];\\n        int texC = coords[1];\\n        int depth = coords[2];\\n\\n        vec4 result = vec4(0.);\\n\\n        for(int row=0; row<=1; row++) {\\n          for(int col=0; col<=1; col++) {\\n            texC = coords[1] + row;\\n            depth = coords[2] + col;\\n\\n            vec2 uv = (vec2(texC, texR) + halfCR) / vec2(\"+r+\".0, \"+n+\".0);\\n            vec4 values = \"+e.texture2D+\"(A, uv);\\n            float value;\\n            if (depth == 0) {\\n              value = values.r;\\n            } else if (depth == 1) {\\n              value = values.g;\\n            } else if (depth == 2) {\\n              value = values.b;\\n            } else if (depth == 3) {\\n              value = values.a;\\n            }\\n\\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\\n          }\\n        }\\n\\n        \"+e.output+\" = result;\\n      }\\n    \"},Ua=function(t,e,n){this.variableNames=[\"A\",\"indices\"];var r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;var o=Yo(this.rank),a=function(t,e){var n=t.length;if(n>4)throw Error(\"Gather for rank \"+n+\" is not yet supported\");if(1===n)return\"int(getIndices(resRC))\";for(var r=[\"resRC.x\",\"resRC.y\",\"resRC.z\",\"resRC.w\"],o=[],a=0;a<t.length;a++)a===e?o.push(\"int(getIndices(\"+r[a]+\"))\"):o.push(\"\"+r[a]);return o.join()}(t,n);this.userCode=\"\\n      void main() {\\n        \"+o+\" resRC = getOutputCoords();\\n        setOutput(getA(\"+a+\"));\\n      }\\n    \"},ja=function(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=[\"x\",\"indices\"],this.outputShape=n;var r=Yo(e.length),o=Yo(n.length),a=this.sliceDim>1?\"strides[j]\":\"strides\";this.userCode=\"\\n        \"+r+\" strides = \"+r+\"(\"+this.strides+\");\\n         void main() {\\n          \"+o+\" coords = getOutputCoords();\\n          int flattenIndex = 0;\\n          for (int j = 0; j < \"+this.sliceDim+\"; j++) {\\n            int index = round(getIndices(coords[0], j));\\n            flattenIndex += index * \"+a+\";\\n          }\\n          setOutput(getX(flattenIndex, coords[1]));\\n        }\\n      \"};function Ga(t,e){var n=Vo();return Jt(t,e,n.version+\"\\n    precision highp float;\\n    \"+n.attribute+\" vec3 clipSpacePos;\\n    \"+n.attribute+\" vec2 uv;\\n    \"+n.varyingVs+\" vec2 resultUV;\\n\\n    void main() {\\n      gl_Position = vec4(clipSpacePos, 1);\\n      resultUV = uv;\\n    }\")}function Ha(t,e){return ie(t,e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}function qa(t,e){return se(t,e,new Uint16Array([0,1,2,2,1,3]))}function $a(t,e,n,r,o,a,i){ce(n,r);var s=ue(t,e),u=t.TEXTURE_2D;return qt(t,e,function(){return t.bindTexture(u,s)}),qt(t,e,function(){return t.texParameteri(u,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE)}),qt(t,e,function(){return t.texParameteri(u,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE)}),qt(t,e,function(){return t.texParameteri(u,t.TEXTURE_MIN_FILTER,t.NEAREST)}),qt(t,e,function(){return t.texParameteri(u,t.TEXTURE_MAG_FILTER,t.NEAREST)}),qt(t,e,function(){return t.texImage2D(u,0,o,n,r,0,a,i,null)}),qt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,null)}),s}function Ka(t,e,n,r,o){var a=Ut(n,r);return $a(t,e,a[0],a[1],o.internalFormatFloat,o.textureFormatFloat,t.FLOAT)}function Xa(t,e,n,r,o){var a=Ut(n,r);return $a(t,e,a[0],a[1],o.internalFormatHalfFloat,o.textureFormatFloat,o.textureTypeHalfFloat)}function Ya(t,e,n,r,o){var a=Ut(n,r);return $a(t,e,a[0],a[1],t.RGBA,t.RGBA,t.UNSIGNED_BYTE)}function Qa(t,e,n,r,o){var a=Gt(n,r);return $a(t,e,a[0],a[1],o.internalFormatPackedFloat,t.RGBA,t.FLOAT)}function Ja(t,e,n,r,o){var a=Gt(n,r);return $a(t,e,a[0],a[1],o.internalFormatPackedHalfFloat,t.RGBA,o.textureTypeHalfFloat)}function Za(t,e,n,r){return qt(t,e,function(){return t.bindBuffer(t.ARRAY_BUFFER,r)}),pe(t,e,n,\"clipSpacePos\",r,3,20,0)&&pe(t,e,n,\"uv\",r,2,20,12)}function ti(t,e,n,r,o,a,i){var s,u,c;qt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,n)}),a instanceof Uint8Array?(s=new Uint8Array(r*o*4),u=t.UNSIGNED_BYTE,c=t.RGBA):(s=new Float32Array(r*o*4),u=t.FLOAT,c=i.internalFormatPackedFloat),s.set(a),qt(t,e,function(){return t.texImage2D(t.TEXTURE_2D,0,c,r,o,0,t.RGBA,u,s)}),qt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,null)})}function ei(t,e,n,r){qt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,n)}),r.data instanceof Uint8Array?qt(t,e,function(){return t.texImage2D(t.TEXTURE_2D,0,t.RGBA,r.width,r.height,0,t.RGBA,t.UNSIGNED_BYTE,r.data)}):qt(t,e,function(){return t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,r)}),qt(t,e,function(){return t.bindTexture(t.TEXTURE_2D,null)})}function ni(t,e,n,r,o){var a=t.createBuffer();qt(t,e,function(){return t.bindBuffer(t.PIXEL_PACK_BUFFER,a)});var i=16*n*r;return qt(t,e,function(){return t.bufferData(t.PIXEL_PACK_BUFFER,i,t.STREAM_READ)}),qt(t,e,function(){return t.readPixels(0,0,r,n,t.RGBA,t.FLOAT,0)}),qt(t,e,function(){return t.bindBuffer(t.PIXEL_PACK_BUFFER,null)}),a}function ri(t,e,n){var r=t,o=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,o),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),o}function oi(t,e,n,r,o){var a=Ut(n,r),i=a[0],s=a[1],u=new Uint8Array(n*r*4);return qt(t,e,function(){return t.readPixels(0,0,i,s,o.downloadTextureFormat,t.UNSIGNED_BYTE,u)}),new Float32Array(u.buffer)}function ai(t,e,n,r,o,a,i,s){var u=t,c=new Float32Array(function(t,e){var n=Gt(a,i);return n[0]*n[1]*4}());return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}function ii(t,e,n,r){var o=new Float32Array(n*r*4);return qt(t,e,function(){return t.readPixels(0,0,r,n,t.RGBA,t.FLOAT,o)}),o}var si=Object.freeze({createVertexShader:Ga,createVertexBuffer:Ha,createIndexBuffer:qa,createFloat32MatrixTexture:Ka,createFloat16MatrixTexture:Xa,createUnsignedBytesMatrixTexture:Ya,createPackedMatrixTexture:Qa,createFloat16PackedMatrixTexture:Ja,bindVertexProgramAttributeStreams:Za,uploadDenseMatrixToTexture:ti,uploadPixelDataToTexture:ei,createBufferFromOutputTexture:ni,downloadFloat32MatrixFromBuffer:ri,downloadByteEncodedFloatMatrixFromOutputTexture:oi,downloadPackedMatrixFromBuffer:ai,downloadMatrixFromPackedOutputTexture:ii}),ui=function(){function t(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];var e=d.getNumber(\"WEBGL_VERSION\");if(null!=t?(this.gl=t,Vt(e,t)):this.gl=zt(e),1===d.getNumber(\"WEBGL_VERSION\"))this.textureFloatExtension=Qt(this.gl,this.debug,\"OES_texture_float\"),this.colorBufferFloatExtension=this.gl.getExtension(\"WEBGL_color_buffer_float\"),this.textureHalfFloatExtension=Qt(this.gl,this.debug,\"OES_texture_half_float\"),this.colorBufferHalfFloatExtension=this.gl.getExtension(\"EXT_color_buffer_half_float\");else if(Oe(this.gl,\"EXT_color_buffer_float\"))this.colorBufferFloatExtension=this.gl.getExtension(\"EXT_color_buffer_float\");else{if(!Oe(this.gl,\"EXT_color_buffer_half_float\"))throw new Error(\"GL context does not support color renderable floats\");this.colorBufferHalfFloatExtension=this.gl.getExtension(\"EXT_color_buffer_half_float\")}this.vertexBuffer=Ha(this.gl,this.debug),this.indexBuffer=qa(this.gl,this.debug),this.framebuffer=le(this.gl,this.debug),this.textureConfig=Ht(this.gl,this.textureHalfFloatExtension)}return Object.defineProperty(t.prototype,\"debug\",{get:function(){return d.getBool(\"DEBUG\")},enumerable:!0,configurable:!0}),t.prototype.dispose=function(){var t=this;if(!this.disposed){null!=this.program&&console.warn(\"Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing.\"),null!=this.outputTexture&&console.warn(\"Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.\");var e=this.gl;qt(e,this.debug,function(){return e.finish()}),qt(e,this.debug,function(){return e.bindFramebuffer(e.FRAMEBUFFER,null)}),qt(e,this.debug,function(){return e.deleteFramebuffer(t.framebuffer)}),qt(e,this.debug,function(){return e.bindBuffer(e.ARRAY_BUFFER,null)}),qt(e,this.debug,function(){return e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)}),qt(e,this.debug,function(){return e.deleteBuffer(t.indexBuffer)}),this.disposed=!0}},t.prototype.createFloat32MatrixTexture=function(t,e){return this.throwIfDisposed(),Ka(this.gl,this.debug,t,e,this.textureConfig)},t.prototype.createFloat16MatrixTexture=function(t,e){return this.throwIfDisposed(),Xa(this.gl,this.debug,t,e,this.textureConfig)},t.prototype.createUnsignedBytesMatrixTexture=function(t,e){return this.throwIfDisposed(),Ya(this.gl,this.debug,t,e,this.textureConfig)},t.prototype.uploadPixelDataToTexture=function(t,e){this.throwIfDisposed(),ei(this.gl,this.debug,t,e)},t.prototype.uploadDenseMatrixToTexture=function(t,e,n,r){this.throwIfDisposed(),ti(this.gl,this.debug,t,e,n,r,this.textureConfig)},t.prototype.createFloat16PackedMatrixTexture=function(t,e){return this.throwIfDisposed(),Ja(this.gl,this.debug,t,e,this.textureConfig)},t.prototype.createPackedMatrixTexture=function(t,e){return this.throwIfDisposed(),Qa(this.gl,this.debug,t,e,this.textureConfig)},t.prototype.deleteMatrixTexture=function(t){var e=this;this.throwIfDisposed(),this.outputTexture===t&&(ge(this.gl,this.debug,this.framebuffer),this.outputTexture=null),qt(this.gl,this.debug,function(){return e.gl.deleteTexture(t)})},t.prototype.downloadByteEncodedFloatMatrixFromOutputTexture=function(t,e,n){var r=this;return this.downloadMatrixDriver(t,function(){return oi(r.gl,r.debug,e,n,r.textureConfig)})},t.prototype.downloadPackedMatrixFromBuffer=function(t,e,n,r,o,a){return ai(this.gl,t,0,0,0,o,a,this.textureConfig)},t.prototype.downloadFloat32MatrixFromBuffer=function(t,e){return ri(this.gl,t,e)},t.prototype.createBufferFromTexture=function(t,e,n){this.bindTextureToFrameBuffer(t);var r=ni(this.gl,this.debug,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r},t.prototype.createAndWaitForFence=function(){var t=this.createFence(this.gl);return this.pollFence(t)},t.prototype.createFence=function(t){var e,n,r=this;if(d.getBool(\"WEBGL_FENCE_API_ENABLED\")){var o=t,a=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=function(){var t=o.clientWaitSync(a,0,0);return t===o.ALREADY_SIGNALED||t===o.CONDITION_SATISFIED},e=a}else d.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\")>0?(e=this.beginQuery(),this.endQuery(),n=function(){return r.isQueryAvailable(e,d.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\"))}):n=function(){return!0};return{query:e,isFencePassed:n}},t.prototype.downloadMatrixFromPackedTexture=function(t,e,n){var r=this;return this.downloadMatrixDriver(t,function(){return ii(r.gl,r.debug,e,n)})},t.prototype.createProgram=function(t){this.throwIfDisposed();var e=this.gl,n=Zt(e,this.debug,t),r=Ga(e,this.debug),o=re(e,this.debug);return qt(e,this.debug,function(){return e.attachShader(o,r)}),qt(e,this.debug,function(){return e.attachShader(o,n)}),oe(e,this.debug,o),this.debug&&ae(e,this.debug,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=Za(e,this.debug,this.program,this.vertexBuffer)),o},t.prototype.deleteProgram=function(t){var e=this;this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&qt(this.gl,this.debug,function(){return e.gl.deleteProgram(t)})},t.prototype.setProgram=function(t){var e=this;this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&ae(this.gl,this.debug,this.program),qt(this.gl,this.debug,function(){return e.gl.useProgram(t)})},t.prototype.getUniformLocation=function(t,e,n){return void 0===n&&(n=!0),this.throwIfDisposed(),n?he(this.gl,this.debug,t,e):fe(this.gl,t,e)},t.prototype.getAttributeLocation=function(t,e){var n=this;return this.throwIfDisposed(),qt(this.gl,this.debug,function(){return n.gl.getAttribLocation(t,e)})},t.prototype.getUniformLocationNoThrow=function(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)},t.prototype.setInputMatrixTexture=function(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),me(this.gl,this.debug,this.program,t,e,n)},t.prototype.setOutputMatrixTexture=function(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)},t.prototype.setOutputPackedMatrixTexture=function(t,e,n){this.throwIfDisposed();var r=Gt(e,n),o=r[0],a=r[1];this.setOutputMatrixTextureDriver(t,o,a)},t.prototype.setOutputMatrixWriteRegion=function(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)},t.prototype.setOutputPackedMatrixWriteRegion=function(t,e,n,r){throw new Error(\"setOutputPackedMatrixWriteRegion not implemented.\")},t.prototype.debugValidate=function(){null!=this.program&&ae(this.gl,this.debug,this.program),ye(this.gl)},t.prototype.executeProgram=function(){this.throwIfDisposed(),this.throwIfNoProgram();var t=this.gl;this.debug&&this.debugValidate(),qt(t,this.debug,function(){return t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)})},t.prototype.blockUntilAllProgramsCompleted=function(){var t=this;this.throwIfDisposed(),qt(this.gl,this.debug,function(){return t.gl.finish()})},t.prototype.getQueryTimerExtension=function(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=Qt(this.gl,this.debug,2===d.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\")?\"EXT_disjoint_timer_query_webgl2\":\"EXT_disjoint_timer_query\")),this.disjointQueryTimerExtension},t.prototype.getQueryTimerExtensionWebGL2=function(){return this.getQueryTimerExtension()},t.prototype.getQueryTimerExtensionWebGL1=function(){return this.getQueryTimerExtension()},t.prototype.beginQuery=function(){if(2===d.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\")){var t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}var r=this.getQueryTimerExtensionWebGL1(),o=r.createQueryEXT();return r.beginQueryEXT(r.TIME_ELAPSED_EXT,o),o},t.prototype.endQuery=function(){if(2!==d.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\")){var t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}else{var e=this.gl,n=this.getQueryTimerExtensionWebGL2();e.endQuery(n.TIME_ELAPSED_EXT)}},t.prototype.waitForQueryAndGetTime=function(t){return u(this,void 0,void 0,function(){var e=this;return c(this,function(n){switch(n.label){case 0:return[4,A(function(){return e.disposed||e.isQueryAvailable(t,d.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\"))})];case 1:return n.sent(),[2,this.getQueryTime(t,d.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\"))]}})})},t.prototype.getQueryTime=function(t,e){if(0===e)return null;if(2===e){var n=this.gl;return n.getQueryParameter(t,n.QUERY_RESULT)/1e6}var r=this.getQueryTimerExtensionWebGL1();return r.getQueryObjectEXT(t,r.QUERY_RESULT_EXT)/1e6},t.prototype.isQueryAvailable=function(t,e){if(0===e)return!0;if(2===e){var n=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=n.getQueryParameter(t,n.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}return o=(r=this.getQueryTimerExtensionWebGL1()).getQueryObjectEXT(t,r.QUERY_RESULT_AVAILABLE_EXT),null==this.disjoint&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint},t.prototype.pollFence=function(t){var e=this;return new Promise(function(n){e.addItemToPoll(function(){return t.isFencePassed()},function(){return n()})})},t.prototype.pollItems=function(){for(var t=function(t){for(var e=0;e<t.length;++e){if(!t[e]())break}return e-1}(this.itemsToPoll.map(function(t){return t.isDoneFn})),e=0;e<=t;++e)(0,this.itemsToPoll[e].resolveFn)();this.itemsToPoll=this.itemsToPoll.slice(t+1)},t.prototype.addItemToPoll=function(t,e){var n=this;this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||A(function(){return n.pollItems(),0===n.itemsToPoll.length})},t.prototype.bindTextureToFrameBuffer=function(t){this.throwIfDisposed(),ve(this.gl,this.debug,t,this.framebuffer),this.debug&&ye(this.gl)},t.prototype.unbindTextureToFrameBuffer=function(){null!=this.outputTexture?(ve(this.gl,this.debug,this.outputTexture,this.framebuffer),this.debug&&ye(this.gl)):ge(this.gl,this.debug,this.framebuffer)},t.prototype.downloadMatrixDriver=function(t,e){this.bindTextureToFrameBuffer(t);var n=e();return this.unbindTextureToFrameBuffer(),n},t.prototype.setOutputMatrixTextureDriver=function(t,e,n){this.throwIfDisposed();var r=this.gl;ve(r,this.debug,t,this.framebuffer),this.debug&&ye(r),this.outputTexture=t,qt(r,this.debug,function(){return r.viewport(0,0,e,n)}),qt(r,this.debug,function(){return r.scissor(0,0,e,n)})},t.prototype.setOutputMatrixWriteRegionDriver=function(t,e,n,r){var o=this;this.throwIfDisposed(),qt(this.gl,this.debug,function(){return o.gl.scissor(t,e,n,r)})},t.prototype.throwIfDisposed=function(){if(this.disposed)throw new Error(\"Attempted to use disposed GPGPUContext.\")},t.prototype.throwIfNoProgram=function(){if(null==this.program)throw new Error(\"No GPU program is currently set.\")},t}();function ci(t,e){if(t.length!==e.length)throw Error(\"Binary was compiled with \"+t.length+\" inputs, but was executed with \"+e.length+\" inputs\");t.forEach(function(t,n){var r=t.logicalShape,o=e[n],a=o.shape;if(!N(r,a))throw Error(\"Binary was compiled with different shapes than the current args. Shapes \"+r+\" and \"+a+\" must match\");if(!t.isUniform||!o.isUniform){var i=t.texShape,s=o.isUniform?null:o.texData.texShape;if(!N(i,s))throw Error(\"Binary was compiled with different texture shapes than the current args. Shape \"+i+\" and \"+s+\" must match\")}})}var li=function(t,e,n){this.variableNames=[\"A\"],this.usesPackedTextures=!0,this.outputShape=t;for(var r=n.filterWidth,o=n.inChannels,a=n.strideWidth,i=n.strideHeight,s=n.padInfo,u=n.outWidth,c=n.dilationWidth,l=n.dilationHeight,p=n.dataFormat,d=s.left,h=s.top,f=o*r,m=Vo(),v=\"channelsLast\"===p,g=v?0:1,y=v?1:2,x=\"\",b=0;b<=1;b++)for(var w=0;w<=1;w++)x+=\"\\n          blockIndex = rc.y + \"+w+\";\\n          pos = rc.x + \"+b+\";\\n\\n          if(blockIndex < \"+t[1]+\" && pos < \"+t[0]+\") {\\n            offsetY = int(blockIndex / (\"+u+\")) * \"+i+\" - \"+h+\";\\n            d0 = offsetY + \"+l+\" * (pos / \"+f+\");\\n\\n            if(d0 < \"+e[g]+\" && d0 >= 0) {\\n\\n              offsetX = int(mod(float(blockIndex), \"+u+\".) * \"+a+\". - \"+d+\".);\\n              d1 = offsetX + \"+c+\" * (int(mod(float(pos), \"+f+\".) / \"+o+\".));\\n\\n              if(d1 < \"+e[y]+\" && d1 >= 0) {\\n\\n                ch = int(mod(float(pos), \"+o+\".));\\n\\n                if (\"+v+\") {\\n                  innerDims = vec2(d1, ch);\\n                  result[\"+(2*b+w)+\"] = getChannel(\\n                    getA(d0, int(innerDims.x),\\n                    int(innerDims.y)), innerDims);\\n                } else {\\n                  innerDims = vec2(d0, d1);\\n                  result[\"+(2*b+w)+\"] = getChannel(\\n                    getA(ch, int(innerDims.x),\\n                    int(innerDims.y)), innerDims);\\n                }\\n              }\\n            }\\n          }\\n        \";this.userCode=\"\\n      void main() {\\n        ivec2 rc = getOutputCoords();\\n\\n        vec4 result = vec4(0);\\n\\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\\n        vec2 innerDims;\\n\\n        \"+x+\"\\n\\n        \"+m.output+\" = result;\\n      }\\n    \"},pi=function(t,e,n,r,o){this.variableNames=[\"x\"],this.outputShape=[];var a,i=e,s=t[3]-1;this.outputShape=t;var u=\"float(\"+n+\") + float(\"+r+\") * sum\";a=.5===o?\"inversesqrt(\"+u+\")\":1===o?\"1.0/(\"+u+\")\":\"exp(log(\"+u+\") * float(-\"+o+\"));\",this.userCode=\"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n        int d = coords[3];\\n        float x = getX(b, r, c, d);\\n        float sum = 0.0;\\n        for (int j = -\"+i+\"; j <= \"+i+\"; j++) {\\n          int idx = d + j;\\n          if (idx >= 0 && idx <=  \"+s+\") {\\n            float z = getX(b, r, c, idx);\\n            sum += z * z;\\n          }\\n        }\\n        float val = x * \"+a+\";\\n        setOutput(val);\\n      }\\n    \"},di=function(t,e,n,r,o){this.variableNames=[\"inputImage\",\"outputImage\",\"dy\"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=o,this.userCode=\"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float result = 0.0;\\n        for (int d = 0; d < \"+this.depth+\"; ++d) {\\n          int depthBegin = int(max(0.0, float(d - \"+e+\")));\\n          int depthEnd = int(min(float(\"+this.depth+\"),\\n              float(d + \"+e+\" + 1)));\\n\\n          const int MIN_DEPTH_BEGIN = 0;\\n          const int MAX_DEPTH_END = \"+this.depth+\";\\n\\n          float norm = 0.0;\\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\\n            if (k < depthBegin){\\n              continue;\\n            }\\n            else if (k >= depthBegin && k < depthEnd) {\\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\\n            }\\n            else {\\n              break;\\n            }\\n          }\\n\\n          norm = float(\"+r+\") * norm + float(\"+n+\");\\n\\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\\n            if (k < depthBegin){\\n              continue;\\n            }\\n            else if (k >= depthBegin && k < depthEnd){\\n              float dyi = -2.0 * float(\"+r+\")\\n                * float(\"+o+\")\\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\\n                / norm;\\n              if (k == d) {\\n                dyi += pow(norm, -1.0 * \"+o+\");\\n              }\\n              if (k == coords[3]) {\\n                dyi *= getDy(b, r, c, d);\\n                result += dyi;\\n              }\\n            }\\n            else {\\n              break;\\n            }\\n          }\\n      }\\n      setOutput(result);\\n      }\\n    \"},hi=function(t,e,n,r,o){this.variableNames=[\"x\"],this.outputShape=[],this.usesPackedTextures=!0;var a,i=e,s=t[3]-1;this.outputShape=t;var u=\"float(\"+n+\") + float(\"+r+\") * sum\";a=.5===o?\"inversesqrt(\"+u+\")\":1===o?\"1.0/(\"+u+\")\":\"exp(log(\"+u+\") * float(-\"+o+\"));\",this.userCode=\"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords.x;\\n        int r = coords.y;\\n        int c = coords.z;\\n        int d = coords.w;\\n\\n        bool hasNextCol = d < \"+this.outputShape[3]+\";\\n        bool hasNextRow = c < \"+this.outputShape[2]+\";\\n\\n        vec4 sum = vec4(0.);\\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\\n\\n        vec4 xAtOutputCoords = vec4(\\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\\n          hasNextCol ?\\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\\n          hasNextRow ?\\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\\n        );\\n\\n        int firstChannel = d - \"+i+\";\\n        vec2 cache = vec2(0.);\\n        if(firstChannel >= 0){\\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\\n            if(hasNextRow){\\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\\n            }\\n        }\\n\\n        ivec2 depth = ivec2(d, d + 1);\\n        for (int j = - \"+i+\"; j <= \"+i+\"; j++) {\\n          ivec2 idx = depth + j;\\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(\"+s+\"));\\n\\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\\n\\n          if(depthInRange || depthPlusOneInRange){\\n            vec4 z = vec4(0.);\\n            vec4 xFragAtCurrentDepth;\\n            z.xz = cache.xy;\\n            if(depthPlusOneInRange && hasNextCol){\\n              xFragAtCurrentDepth = idx.y != d ?\\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\\n              if(hasNextRow){\\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\\n              }\\n            }\\n            cache.xy = z.yw;\\n            sum += z * z;\\n          }\\n        }\\n        vec4 result = xAtOutputCoords * \"+a+\";\\n        setOutput(result);\\n      }\\n    \"},fi=function(t){this.variableNames=[\"dy\",\"maxPos\"],this.outputShape=t.inShape;var e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,o=t.effectiveFilterHeight,a=t.effectiveFilterWidth,i=o-1-t.padInfo.top,s=a-1-t.padInfo.left,u=o*a-1;this.userCode=\"\\n      const ivec2 pads = ivec2(\"+i+\", \"+s+\");\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 dyRCCorner = coords.yz - pads;\\n        int dyRCorner = dyRCCorner.x;\\n        int dyCCorner = dyRCCorner.y;\\n\\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n        for (int wR = 0; wR < \"+o+\";\\n          wR += \"+r+\") {\\n          float dyR = float(dyRCorner + wR) / \"+e+\".0;\\n\\n          if (dyR < 0.0 || dyR >= \"+t.outHeight+\".0 || fract(dyR) > 0.0) {\\n            continue;\\n          }\\n          int idyR = int(dyR);\\n\\n          for (int wC = 0; wC < \"+a+\"; wC++) {\\n            float dyC = float(dyCCorner + wC) / \"+n+\".0;\\n\\n            if (dyC < 0.0 || dyC >= \"+t.outWidth+\".0 ||\\n                fract(dyC) > 0.0) {\\n              continue;\\n            }\\n            int idyC = int(dyC);\\n\\n            float dyValue = getDy(b, idyR, idyC, d);\\n            int maxPosValue = \"+u+\" - int(getMaxPos(b, idyR, idyC, d));\\n\\n            // Get the current value, check it against the value from the\\n            // position matrix.\\n            int curPosValue = wR * \"+a+\" + wC;\\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n            dotProd += dyValue * mask;\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \"},mi=function(t){this.variableNames=[\"dy\",\"maxPos\"],this.outputShape=t.inShape;var e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,o=t.dilationDepth,a=t.dilationHeight,i=t.dilationWidth,s=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=s-1-t.padInfo.front,p=u-1-t.padInfo.top,d=c-1-t.padInfo.left,h=s*u*c-1;this.userCode=\"\\n      const ivec3 pads = ivec3(\"+l+\", \"+p+\", \"+d+\");\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\\n        int dyDCorner = dyCorner.x;\\n        int dyRCorner = dyCorner.y;\\n        int dyCCorner = dyCorner.z;\\n\\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\\n        // dx(xD, xR, xC, ch).\\n        // ? = to be determined. : = across all values in that axis.\\n        float dotProd = 0.0;\\n\\n        for (int wD = 0; wD < \"+s+\";\\n           wD += \"+o+\") {\\n          float dyD = float(dyDCorner + wD) / \"+e+\".0;\\n\\n          if (dyD < 0.0 || dyD >= \"+t.outDepth+\".0 || fract(dyD) > 0.0) {\\n            continue;\\n          }\\n          int idyD = int(dyD);\\n\\n          for (int wR = 0; wR < \"+u+\";\\n              wR += \"+a+\") {\\n            float dyR = float(dyRCorner + wR) / \"+n+\".0;\\n\\n            if (dyR < 0.0 || dyR >= \"+t.outHeight+\".0 ||\\n                fract(dyR) > 0.0) {\\n              continue;\\n            }\\n            int idyR = int(dyR);\\n\\n            for (int wC = 0; wC < \"+c+\";\\n                wC += \"+i+\") {\\n              float dyC = float(dyCCorner + wC) / \"+r+\".0;\\n\\n              if (dyC < 0.0 || dyC >= \"+t.outWidth+\".0 ||\\n                  fract(dyC) > 0.0) {\\n                continue;\\n              }\\n              int idyC = int(dyC);\\n\\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\\n              int maxPosValue = \"+h+\" -\\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\\n\\n              // Get the current value, check it against the value from the\\n              // position matrix.\\n              int curPosValue =\\n                  wD * \"+u+\" * \"+c+\" +\\n                  wR * \"+c+\" + wC;\\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\\n\\n              dotProd += dyValue * mask;\\n            }\\n          }\\n        }\\n        setOutput(dotProd);\\n      }\\n    \"},vi=function(t,e,n,r,o,a,i){void 0===n&&(n=!1),void 0===r&&(r=!1),void 0===o&&(o=!1),void 0===a&&(a=null),void 0===i&&(i=!1),this.variableNames=[\"matrixA\",\"matrixB\"],this.usesPackedTextures=!0,this.outputShape=e;var s=n?t[1]:t[2],u=Math.ceil(s/2),c=n?\"i * 2, rc.y\":\"rc.y, i * 2\",l=r?\"rc.z, i * 2\":\"i * 2, rc.z\",p=n?[\"a.xxyy\",\"a.zzww\"]:[\"a.xxzz\",\"a.yyww\"],d=r?[\"b.xzxz\",\"b.ywyw\"]:[\"b.xyxy\",\"b.zwzw\"],h=\"\",f=\"\";a&&(h=i?\"vec4 activation(vec4 a) {\\n          vec4 b = getPreluActivationWeightsAtOutCoords();\\n          \"+a+\"\\n        }\":\"vec4 activation(vec4 x) {\\n          \"+a+\"\\n        }\",f=\"result = activation(result);\");var m=o?\"result += getBiasAtOutCoords();\":\"\";o&&this.variableNames.push(\"bias\"),i&&this.variableNames.push(\"preluActivationWeights\"),this.userCode=\"\\n      \"+h+\"\\n\\n      const float sharedDimension = \"+u+\".0;\\n\\n      vec4 dot2x2ARowBCol(ivec3 rc) {\\n        vec4 result = vec4(0);\\n        for (int i = 0; i < \"+u+\"; i++) {\\n          vec4 a = getMatrixA(rc.x, \"+c+\");\\n          vec4 b = getMatrixB(rc.x, \"+l+\");\\n\\n          // These swizzled products need to be separately added.\\n          // See: https://github.com/tensorflow/tfjs/issues/1735\\n          result += (\"+p[0]+\" * \"+d[0]+\");\\n          result += (\"+p[1]+\" * \"+d[1]+\");\\n        }\\n        return result;\\n      }\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n        vec4 result = dot2x2ARowBCol(rc);\\n\\n        \"+m+\"\\n\\n        \"+f+\"\\n\\n        setOutput(result);\\n      }\\n    \"},gi=function(){function t(t,e,n){this.variableNames=[\"probs\"],this.outputShape=[t,n],this.userCode=\"\\n      uniform float seed;\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n\\n        float r = random(seed);\\n        float cdf = 0.0;\\n\\n        for (int i = 0; i < \"+(e-1)+\"; i++) {\\n          cdf += getProbs(batch, i);\\n\\n          if (r < cdf) {\\n            setOutput(float(i));\\n            return;\\n          }\\n        }\\n\\n        // If no other event happened, last event happened.\\n        setOutput(float(\"+(e-1)+\"));\\n      }\\n    \"}return t.prototype.getCustomSetupFunc=function(t){var e=this;return function(n,r){null==e.seedLoc&&(e.seedLoc=n.getUniformLocation(r,\"seed\")),n.gl.uniform1f(e.seedLoc,t)}},t}(),yi=function(t,e,n,r){this.variableNames=[\"indices\"],this.outputShape=[t,e],this.userCode=\"\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int index = round(getIndices(coords.x));\\n        setOutput(mix(float(\"+r+\"), float(\"+n+\"),\\n                      float(index == coords.y)));\\n      }\\n    \"},xi=function(t){this.variableNames=[\"A\"],this.outputShape=t;var e=t.length;if(0===e)this.userCode=\"\\n        void main() {\\n          setOutput(vec4(getA(), 0., 0., 0.));\\n        }\\n      \";else{var n=Lo(\"rc\",e),r=Yo(e),o=function(t,e,n){if(1===t)return\"rc > \"+e[0];for(var r=\"\",o=t-2;o<t;o++)r+=n[o]+\" >= \"+e[o],o<t-1&&(r+=\"||\");return r}(e,t,n),a=function(t,e,n,r){if(1===t)return\"\";var o=r.slice(-2);return\"\\n    int r = \"+o[0]+\";\\n    int c = \"+o[1]+\";\\n    int rp1 = r + 1;\\n    int cp1 = c + 1;\\n\\n    bool cEdge = cp1 >= \"+e+\";\\n    bool rEdge = rp1 >= \"+n+\";\\n  \"}(e,t[t.length-1],t[t.length-2],n),i=function(t,e){var n=t.length,r=function(t,e){for(var n=[],r=0;r<=1;r++)for(var o=0;o<=1;o++){for(var a=(0===r?\"r\":\"rp1\")+\", \"+(0===o?\"c\":\"cp1\"),i=2;i<t;i++)a=e[e.length-1-i]+\",\"+a;n.push(a)}return n}(n,e);return 1===n?\"getA(rc),\\n            rc + 1 >= \"+t[0]+\" ? 0. : getA(rc + 1),\\n            0, 0\":\"getA(\"+r[0]+\"),\\n          cEdge ? 0. : getA(\"+r[1]+\"),\\n          rEdge ? 0. : getA(\"+r[2]+\"),\\n          rEdge || cEdge ? 0. : getA(\"+r[3]+\")\"}(t,n);this.userCode=\"\\n        void main() {\\n          \"+r+\" rc = getOutputCoords();\\n\\n          if(\"+o+\") {\\n            setOutput(vec4(0));\\n          } else {\\n            \"+a+\"\\n\\n            setOutput(vec4(\"+i+\"));\\n          }\\n        }\\n      \"}},bi=function(t,e,n){this.variableNames=[\"x\"],this.outputShape=e.map(function(e,n){return e[0]+t[n]+e[1]});var r=t.length,o=Yo(r),a=e.map(function(t){return t[0]}).join(\",\"),i=e.map(function(e,n){return e[0]+t[n]}).join(\",\"),s=[\"coords[0]\",\"coords[1]\",\"coords[2]\",\"coords[3]\"].slice(0,r);this.userCode=1!==r?\"\\n      \"+o+\" start = \"+o+\"(\"+a+\");\\n      \"+o+\" end = \"+o+\"(\"+i+\");\\n\\n      void main() {\\n        \"+o+\" outC = getOutputCoords();\\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\\n          setOutput(float(\"+n+\"));\\n        } else {\\n          \"+o+\" coords = outC - start;\\n          setOutput(getX(\"+s+\"));\\n        }\\n      }\\n    \":\"\\n        int start = \"+a+\";\\n        int end = \"+i+\";\\n\\n        void main() {\\n          int outC = getOutputCoords();\\n          if (outC < start || outC >= end) {\\n            setOutput(float(\"+n+\"));\\n          } else {\\n            setOutput(getX(outC - start));\\n          }\\n        }\\n      \"},wi=function(t,e,n){this.variableNames=[\"x\"],this.usesPackedTextures=!0,this.outputShape=e.map(function(e,n){return e[0]+t[n]+e[1]});for(var r=t.length,o=Yo(r),a=e.map(function(t){return t[0]}).join(\",\"),i=e.map(function(e,n){return e[0]+t[n]}).join(\",\"),s=Lo(\"rc\",r),u=Lo(\"source\",r),c=s[r-1]+\" < \"+this.outputShape[r-1],l=1===r?\"source\":\"vec2(\"+u.slice(-2).join()+\")\",p=[o+\" rc = outputLoc;\",s[r-1]+\" += 1;\\n       if(\"+c+\") {\\n      \",1===r?\"\":\"}\\n       rc = outputLoc;\\n       \"+s[r-2]+\" += 1;\\n       if(\"+s[r-2]+\" < \"+this.outputShape[r-2]+\") {\",1===r?\"\":\"  \"+s[r-1]+\" += 1;\\n         if(\"+c+\") {\"],d=1===r?\"rc < start || rc >= end\":\"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))\",h=\"\",f=0,m=1===r?2:4;f<m;f++)h+=\"\\n        \"+p[f]+\"\\n        if (\"+d+\") {\\n          result[\"+f+\"] = float(\"+n+\");\\n        } else {\\n          \"+o+\" source = rc - start;\\n          result[\"+f+\"] = getChannel(getX(\"+u.join()+\"), \"+l+\");\\n        }\\n      \";h+=1===r?\"} \":\"}}\",this.userCode=\"\\n      const \"+o+\" start = \"+o+\"(\"+a+\");\\n      const \"+o+\" end = \"+o+\"(\"+i+\");\\n\\n      void main() {\\n        \"+o+\" outputLoc = getOutputCoords();\\n        vec4 result = vec4(0.);\\n        \"+h+\"\\n        setOutput(result);\\n      }\\n    \"},Ci=function(t,e,n){if(this.variableNames=[\"x\"],\"avg\"===e&&n)throw new Error(\"Cannot compute positions for average pool.\");var r=t.filterWidth,o=t.strideHeight,a=t.strideWidth,i=t.dilationHeight,s=t.dilationWidth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=t.padInfo.top,p=t.padInfo.left;this.outputShape=t.outShape;var d=\"avg\"===e,h=\"0.0\";if(d||(h=\"-1.0 / 1e-20\"),n)this.userCode=\"\\n        const ivec2 strides = ivec2(\"+o+\", \"+a+\");\\n        const ivec2 pads = ivec2(\"+l+\", \"+p+\");\\n\\n        void main() {\\n          ivec4 coords = getOutputCoords();\\n          int batch = coords[0];\\n          int d = coords[3];\\n\\n          ivec2 xRCCorner = coords.yz * strides - pads;\\n          int xRCorner = xRCCorner.x;\\n          int xCCorner = xRCCorner.y;\\n\\n          // max/min x(?, ?, d) to get y(yR, yC, d).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n          float avgValue = 0.0;\\n\\n          for (int wR = 0; wR < \"+u+\";\\n              wR += \"+i+\") {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= \"+t.inHeight+\") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \"+c+\";\\n                wC += \"+s+\") {\\n              int xC = xCCorner + wC;\\n\\n              if (xC < 0 || xC >= \"+t.inWidth+\") {\\n                continue;\\n              }\\n\\n              float value = getX(batch, xR, xC, d);\\n\\n              // If a min / max value has already been found, use it. If not,\\n              // use the current value.\\n              float currMinMaxValue = mix(\\n                  value, minMaxValue, minMaxValueFound);\\n              if (value >= currMinMaxValue) {\\n                minMaxValue = value;\\n                minMaxValueFound = 1.0;\\n                minMaxPosition = wR * \"+c+\" + wC;\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      \";else{var f=e+\"(\"+e+\"(\"+e+\"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])\";\"avg\"===e&&(f=\"avgValue / count\");var m=4*Math.floor(r/4),v=r%4,g=\"\\n      if (\"+d+\") {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = max(values, minMaxValue);\\n      }\\n    \";this.userCode=\"\\n      const ivec2 strides = ivec2(\"+o+\", \"+a+\");\\n      const ivec2 pads = ivec2(\"+l+\", \"+p+\");\\n      const float initializationValue = \"+h+\";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xR, int xC, int d) {\\n        if (xC < 0 || xC >= \"+t.inWidth+\") {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xR, xC, d);\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int d = coords[3];\\n\\n        ivec2 xRCCorner = coords.yz * strides - pads;\\n        int xRCorner = xRCCorner.x;\\n        int xCCorner = xRCCorner.y;\\n\\n        // max/min x(?, ?, d) to get y(yR, yC, d).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(\"+h+\");\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wR = 0; wR < \"+u+\";\\n            wR += \"+i+\") {\\n          int xR = xRCorner + wR;\\n\\n          if (xR < 0 || xR >= \"+t.inHeight+\") {\\n            continue;\\n          }\\n\\n          for (int wC = 0; wC < \"+m+\"; wC += 4) {\\n            int xC = xCCorner + wC * \"+s+\";\\n\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + \"+s+\", d),\\n              getValue(batch, xR, xC + 2 * \"+s+\", d),\\n              getValue(batch, xR, xC + 3 * \"+s+\", d)\\n            );\\n\\n            \"+g+\"\\n          }\\n\\n          int xC = xCCorner + \"+m+\";\\n          if (\"+(1===v)+\") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              initializationValue,\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \"+g+\"\\n          } else if (\"+(2===v)+\") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + \"+s+\", d),\\n              initializationValue,\\n              initializationValue\\n            );\\n\\n            \"+g+\"\\n          } else if (\"+(3===v)+\") {\\n            vec4 values = vec4(\\n              getValue(batch, xR, xC, d),\\n              getValue(batch, xR, xC + \"+s+\", d),\\n              getValue(batch, xR, xC + 2 * \"+s+\", d),\\n              initializationValue\\n            );\\n\\n            \"+g+\"\\n          }\\n        }\\n        setOutput(\"+f+\");\\n      }\\n    \"}},Ei=function(t,e,n){if(this.variableNames=[\"x\"],\"avg\"===e&&n)throw new Error(\"Cannot compute positions for average pool.\");var r=t.filterWidth,o=t.strideDepth,a=t.strideHeight,i=t.strideWidth,s=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,p=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,f=t.padInfo.top,m=t.padInfo.left;this.outputShape=t.outShape;var v=\"avg\"===e,g=\"0.0\";if(v||(g=\"-1.0 / 1e-20\"),n)this.userCode=\"\\n        const ivec3 strides =\\n            ivec3(\"+o+\", \"+a+\", \"+i+\");\\n        const ivec3 pads = ivec3(\"+h+\", \"+f+\", \"+m+\");\\n\\n        void main() {\\n          ivec5 coords = getOutputCoords();\\n          int batch = coords.x;\\n          int ch = coords.u;\\n\\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n          int xDCorner = xCorner.x;\\n          int xRCorner = xCorner.y;\\n          int xCCorner = xCorner.z;\\n\\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\\n          // ? = to be determined\\n          float minMaxValue = 0.0;\\n          float minMaxValueFound = 0.0;\\n          int minMaxPosition = 0;\\n\\n          for (int wD = 0; wD < \"+l+\";\\n              wD += \"+s+\") {\\n            int xD = xDCorner + wD;\\n\\n            if (xD < 0 || xD >= \"+t.inDepth+\") {\\n              continue;\\n            }\\n\\n            for (int wR = 0; wR < \"+p+\";\\n                wR += \"+u+\") {\\n              int xR = xRCorner + wR;\\n\\n              if (xR < 0 || xR >= \"+t.inHeight+\") {\\n                continue;\\n              }\\n\\n              for (int wC = 0; wC < \"+d+\";\\n                  wC += \"+c+\") {\\n                int xC = xCCorner + wC;\\n\\n                if (xC < 0 || xC >= \"+t.inWidth+\") {\\n                  continue;\\n                }\\n\\n                float value = getX(batch, xD, xR, xC, ch);\\n\\n                // If a min / max value has already been found, use it. If not,\\n                // use the current value.\\n                float currMinMaxValue = mix(\\n                    value, minMaxValue, minMaxValueFound);\\n                if (value >= currMinMaxValue) {\\n                  minMaxValue = value;\\n                  minMaxValueFound = 1.0;\\n                  minMaxPosition =\\n                      wD * \"+p+\" * \"+d+\" +\\n                      wR * \"+d+\" + wC;;\\n                }\\n              }\\n            }\\n          }\\n          setOutput(float(minMaxPosition));\\n        }\\n      \";else{var y=e+\"(\"+e+\"(\"+e+\"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])\";\"avg\"===e&&(y=\"avgValue / count\");var x=4*Math.floor(r/4),b=r%4,w=\"\\n      if (\"+v+\") {\\n        avgValue += dot(values, ones);\\n      } else {\\n        minMaxValue = max(values, minMaxValue);\\n      }\\n    \";this.userCode=\"\\n      const ivec3 strides =\\n        ivec3(\"+o+\", \"+a+\", \"+i+\");\\n      const ivec3 pads = ivec3(\"+h+\", \"+f+\", \"+m+\");\\n      const float initializationValue = \"+g+\";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float count = 0.0;\\n\\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\\n        if (xC < 0 || xC >= \"+t.inWidth+\") {\\n          return initializationValue;\\n        }\\n        count += 1.0;\\n        return getX(batch, xD, xR, xC, ch);\\n      }\\n\\n      void main() {\\n        ivec5 coords = getOutputCoords();\\n        int batch = coords.x;\\n        int ch = coords.u;\\n\\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\\n        int xDCorner = xCorner.x;\\n        int xRCorner = xCorner.y;\\n        int xCCorner = xCorner.z;\\n\\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\\n        // ? = to be determined\\n        vec4 minMaxValue = vec4(\"+g+\");\\n        float avgValue = 0.0;\\n        count = 0.0;\\n\\n        for (int wD = 0; wD < \"+l+\";\\n            wD += \"+s+\") {\\n          int xD = xDCorner + wD;\\n\\n          if (xD < 0 || xD >= \"+t.inDepth+\") {\\n            continue;\\n          }\\n\\n          for (int wR = 0; wR < \"+p+\";\\n            wR += \"+u+\") {\\n            int xR = xRCorner + wR;\\n\\n            if (xR < 0 || xR >= \"+t.inHeight+\") {\\n              continue;\\n            }\\n\\n            for (int wC = 0; wC < \"+x+\"; wC += 4) {\\n              int xC = xCCorner + wC * \"+c+\";\\n\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + \"+c+\", ch),\\n                getValue(batch, xD, xR, xC + 2 * \"+c+\", ch),\\n                getValue(batch, xD, xR, xC + 3 * \"+c+\", ch)\\n              );\\n\\n              \"+w+\"\\n            }\\n\\n            int xC = xCCorner + \"+x+\";\\n            if (\"+(1===b)+\") {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                initializationValue,\\n                initializationValue,\\n                initializationValue\\n              );\\n\\n              \"+w+\"\\n            } else if (\"+(2===b)+\") {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + \"+c+\", ch),\\n                initializationValue,\\n                initializationValue\\n              );\\n\\n              \"+w+\"\\n            } else if (\"+(3===b)+\") {\\n              vec4 values = vec4(\\n                getValue(batch, xD, xR, xC, ch),\\n                getValue(batch, xD, xR, xC + \"+c+\", ch),\\n                getValue(batch, xD, xR, xC + 2 * \"+c+\", ch),\\n                initializationValue\\n              );\\n\\n              \"+w+\"\\n            }\\n          }\\n          setOutput(\"+y+\");\\n        }\\n      }\\n    \"}},Ni=function(t,e){this.variableNames=[\"x\"];var n=t.windowSize,r=t.batchSize,o=t.inSize,a=Math.ceil(o/n);this.outputShape=[r,a];var i=\"0.0\",s=\"\";\"prod\"===e?i=\"1.0\":\"min\"===e?(i=\"1.0 / 1e-20\",s=\"min\"):\"max\"===e&&(i=\"-1.0 / 1e-20\",s=\"max\");var u=e+\"(\"+e+\"(\"+e+\"(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])\";\"sum\"===e?u=\"sumValue\":\"prod\"===e?u=\"prodValue\":\"all\"===e?u=\"allValue\":\"any\"===e&&(u=\"anyValue\");var c=4*Math.floor(n/4),l=n%4,p=\"\\n      if (\"+(\"sum\"===e)+\") {\\n        sumValue += dot(values, ones);\\n      } else if (\"+(\"prod\"===e)+\") {\\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\\n        prodValue *= tmp[0] * tmp[1];\\n      } else {\\n        minMaxValue = \"+s+\"(values, minMaxValue);\\n      }\\n    \",d=\"vec4\";\"all\"===e?(i=\"1.0\",p=\"\\n        bool reducedAllValue = all(values);\\n        float floatedReducedAllValue = float(reducedAllValue);\\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\\n      \",d=\"bvec4\"):\"any\"===e&&(i=\"0.0\",p=\"\\n        bool reducedAnyValue = any(values);\\n        float floatedReducedAnyValue = float(reducedAnyValue);\\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\\n      \",d=\"bvec4\");var h=\"\";o%n>0&&(h=\"\\n        if (inIdx < 0 || inIdx >= \"+o+\") {\\n          return initializationValue;\\n        }\\n      \"),this.userCode=\"\\n      const float initializationValue = \"+i+\";\\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\\n\\n      float getValue(int batch, int inIdx) {\\n        \"+h+\"\\n        return getX(batch, inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = outIdx * \"+n+\";\\n\\n        vec4 minMaxValue = vec4(\"+i+\");\\n        float prodValue = 1.0;\\n        float sumValue = 0.0;\\n        float allValue = 1.0;\\n        float anyValue = 0.0;\\n\\n        for (int i = 0; i < \"+c+\"; i += 4) {\\n          int inIdx = inOffset + i;\\n          \"+d+\" values = \"+d+\"(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          \"+p+\"\\n        }\\n\\n        int inIdx = inOffset + \"+c+\";\\n        if (\"+(1===l)+\") {\\n          \"+d+\" values = \"+d+\"(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          \"+p+\"\\n        } else if (\"+(2===l)+\") {\\n          \"+d+\" values = \"+d+\"(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          \"+p+\"\\n        } else if (\"+(3===l)+\") {\\n          \"+d+\" values = \"+d+\"(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          \"+p+\"\\n        }\\n        setOutput(\"+u+\");\\n      }\\n    \"},Si=function(t,e){this.variableNames=[\"A\"],this.usesPackedTextures=!0,this.outputShape=t;for(var n=\"\",r=0;r<4;r++){var o=\"thisRC = rc;\";r%2==1&&(o+=\"thisRC.z += 1;\"),r>1&&(o+=\"thisRC.y += 1;\"),n+=\"\\n        \"+o+\"\\n        \"+(r>0?\"if(thisRC.y < rows && thisRC.z < cols){\":\"\")+\"\\n          int flatIndex = getFlatIndex(thisRC);\\n\\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\\n\\n          result[\"+r+\"] =\\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\\n        \"+(r>0?\"}\":\"\")+\"\\n      \"}this.userCode=\"\\n      \\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\\n      \"+zo([\"r\",\"c\",\"d\"],e)+\"\\n      return ivec3(r, c, d);\\n    }\\n  \\n      \"+Wo(t)+\"\\n\\n      void main() {\\n        ivec3 rc = getOutputCoords();\\n\\n        vec4 result = vec4(0.);\\n\\n        ivec3 thisRC;\\n        int rows = \"+t[1]+\";\\n        int cols = \"+t[2]+\";\\n\\n        \"+n+\"\\n\\n        setOutput(result);\\n      }\\n    \"},Ri=function(t,e,n){this.variableNames=[\"dy\"],this.outputShape=[],this.outputShape=e.shape;var r=e.shape,o=r[1],a=r[2],i=t.shape,s=i[1],u=i[2],c=[n&&s>1?o-1:o,n&&u>1?a-1:a],l=[n&&s>1?s-1:s,n&&u>1?u-1:u],p=c[0]/l[0],d=c[1]/l[1],h=1/p,f=1/d,m=2*Math.ceil(h)+2,v=2*Math.ceil(f)+2;this.userCode=\"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float accumulator = 0.0;\\n\\n        const float heightScale = float(\"+p+\");\\n        const float widthScale = float(\"+d+\");\\n\\n        const float invHeightScale = float(\"+h+\");\\n        const float invWidthScale = float(\"+f+\");\\n\\n        const int winHeight = int(\"+m+\");\\n        const int winWidth = int(\"+v+\");\\n\\n        // Compute bounds for where in dy we will look\\n        float startRLerp = floor(float(r) * invHeightScale);\\n        int startDyR = int(startRLerp - float(winHeight / 2));\\n\\n        float startCLerp = floor(float(c) * invWidthScale);\\n        int startDyC = int(startCLerp - float(winWidth / 2));\\n\\n        // Loop over dy\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\n          int dyR = dyROffset + startDyR;\\n\\n          // Guard against the window exceeding the bounds of dy\\n          if (dyR < 0 || dyR >= \"+s+\") {\\n            continue;\\n          }\\n\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\n            int dyC = dyCOffset + startDyC;\\n\\n            // Guard against the window exceeding the bounds of dy\\n            if (dyC < 0 || dyC >= \"+u+\") {\\n              continue;\\n            }\\n\\n            float dxR = float(dyR) * heightScale;\\n            int topDxRIndex = int(floor(dxR));\\n            int bottomDxRIndex = int(min(ceil(dxR), \"+(o-1)+\".0));\\n            float dxRLerp = dxR - float(topDxRIndex);\\n            float inverseDxRLerp = 1.0 - dxRLerp;\\n\\n            float dxC = float(dyC) * widthScale;\\n            int leftDxCIndex = int(floor(dxC));\\n            int rightDxCIndex = int(min(ceil(dxC), \"+(a-1)+\".0));\\n            float dxCLerp = dxC - float(leftDxCIndex);\\n            float inverseDxCLerp = 1.0 - dxCLerp;\\n\\n            if (r == topDxRIndex && c == leftDxCIndex) {\\n              // topLeft\\n              accumulator +=\\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\\n            }\\n\\n            if (r == topDxRIndex && c == rightDxCIndex) {\\n              // topRight\\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\\n            }\\n\\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\\n              // bottomLeft\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\\n            }\\n\\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\\n              // bottomRight\\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\\n            }\\n          }\\n        }\\n        // End loop over dy\\n\\n        setOutput(accumulator);\\n      }\\n    \"},Ti=function(t,e,n,r){this.variableNames=[\"A\"],this.outputShape=[];var o=t[0],a=t[1],i=t[2],s=t[3];this.outputShape=[o,e,n,s];var u=[r&&e>1?a-1:a,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=\"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \"+u[0]/c[0]+\",\\n          \"+u[1]/c[1]+\");\\n      const vec2 inputShapeRC = vec2(\"+a+\".0, \"+i+\".0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the four integer indices.\\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\\n        ivec2 sourceCeilRC = ivec2(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n\\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\\n\\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\\n\\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\\n        float newValue = top + (bottom - top) * fracRC.x;\\n\\n        setOutput(newValue);\\n      }\\n    \"},Ii=function(t,e,n,r){this.variableNames=[\"A\"],this.usesPackedTextures=!0,this.outputShape=[];var o=t[0],a=t[1],i=t[2],s=t[3];this.outputShape=[o,e,n,s];var u=[r&&e>1?a-1:a,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=\"\\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\\n          \"+u[0]/c[0]+\",\\n          \"+u[1]/c[1]+\",\\n          \"+u[1]/c[1]+\");\\n      const vec3 inputShapeRC = vec3(\"+a+\".0, \"+i+\".0,\\n                                     \"+i+\".0);\\n\\n      float getAValue(int b, int r, int c, int d) {\\n        return getChannel(getA(b, r, c, d), vec2(c, d));\\n      }\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        // Calculate values for next column in yRC.z.\\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\\n\\n        // Fractional source index.\\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the four integer indices.\\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\\n        ivec3 sourceCeilRC = ivec3(\\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\\n        \\n        // Should we calculate next column and row elements in 2x2 packed cell.\\n        bool hasNextCol = d < \"+(s-1)+\"; \\n        bool hasNextRow = coords.z < \"+(n-1)+\";\\n\\n        // In parallel, construct four corners for all four components in\\n        // packed 2x2 cell.\\n        vec4 topLeft = vec4(\\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\\n\\n        vec4 bottomLeft = vec4(\\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\\n\\n        vec4 topRight = vec4(\\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\\n\\n        vec4 bottomRight = vec4(\\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\\n                     : 0.0,\\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\\n                     : 0.0,\\n          (hasNextRow && hasNextCol) ?\\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\\n\\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\\n\\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\\n        vec4 newValue = mix(top, bottom, fracRC.x);\\n\\n        setOutput(newValue);\\n      }\\n    \"},Ai=function(t,e,n){this.variableNames=[\"dy\"],this.outputShape=[],this.outputShape=e.shape;var r=e.shape,o=r[1],a=r[2],i=t.shape,s=i[1],u=i[2],c=[n&&s>1?o-1:o,n&&u>1?a-1:a],l=[n&&s>1?s-1:s,n&&u>1?u-1:u],p=c[0]/l[0],d=c[1]/l[1],h=1/p,f=1/d,m=2*Math.ceil(h)+2,v=2*Math.ceil(f)+2;this.userCode=\"\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        int r = coords[1];\\n        int c = coords[2];\\n\\n        float accumulator = 0.0;\\n\\n        const float heightScale = float(\"+p+\");\\n        const float widthScale = float(\"+d+\");\\n\\n        const float invHeightScale = float(\"+h+\");\\n        const float invWidthScale = float(\"+f+\");\\n\\n        const int winHeight = int(\"+m+\");\\n        const int winWidth = int(\"+v+\");\\n\\n        // Compute bounds for where in dy we will look\\n        float startRLerp = floor(float(r) * invHeightScale);\\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\\n\\n        float startCLerp = floor(float(c) * invWidthScale);\\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\\n\\n        // Loop over dy\\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\\n          int dyR = dyROffset + startDyR;\\n\\n          // Guard against the window exceeding the bounds of dy\\n          if (dyR < 0 || dyR >= \"+s+\") {\\n            continue;\\n          }\\n\\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\\n            int dyC = dyCOffset + startDyC;\\n\\n            // Guard against the window exceeding the bounds of dy\\n            if (dyC < 0 || dyC >= \"+u+\") {\\n              continue;\\n            }\\n\\n            float sourceFracRow =\\n              float(\"+c[0]+\") *\\n                (float(dyR) / float(\"+l[0]+\"));\\n\\n            float sourceFracCol =\\n                float(\"+c[1]+\") *\\n                  (float(dyC) / float(\"+l[1]+\"));\\n\\n            int sourceNearestRow = int(min(\\n                float(int(\"+o+\") - 1),\\n                \"+n+\" ? float(round(sourceFracRow)) :\\n                                  float(floor(sourceFracRow))));\\n\\n            int sourceNearestCol = int(min(\\n                float(int(\"+a+\") - 1),\\n                \"+n+\" ? float(round(sourceFracCol)) :\\n                                  float(floor(sourceFracCol))));\\n\\n            if (r == sourceNearestRow && c == sourceNearestCol) {\\n              accumulator += getDy(b, dyR, dyC, d);\\n            }\\n          }\\n        }\\n        // End loop over dy\\n\\n        setOutput(accumulator);\\n      }\\n    \"},ki=function(t,e,n,r){this.variableNames=[\"A\"],this.outputShape=[];var o=t[0],a=t[1],i=t[2],s=t[3];this.outputShape=[o,e,n,s];var u=[r&&e>1?a-1:a,r&&n>1?i-1:i],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],l=r?\"0.5\":\"0.0\";this.userCode=\"\\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\\n          \"+u[0]/c[0]+\",\\n          \"+u[1]/c[1]+\");\\n      const vec2 inputShapeRC = vec2(\"+a+\".0, \"+i+\".0);\\n\\n      void main() {\\n        ivec4 coords = getOutputCoords();\\n        int b = coords[0];\\n        int d = coords[3];\\n        ivec2 yRC = coords.yz;\\n\\n        // Fractional source index.\\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\\n\\n        // Compute the coordinators of nearest neighbor point.\\n        ivec2 sourceNearestRC = ivec2(\\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + \"+l+\")));\\n\\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\\n\\n        setOutput(newValue);\\n      }\\n    \"},Oi=function(t,e){this.variableNames=[\"x\"];var n=t.length;if(n>4)throw new Error(\"WebGL backend: Reverse of rank-\"+n+\" tensor is not yet supported\");if(this.outputShape=t,1!==n){var r=t.map(function(n,r){return function(n){return-1!==e.indexOf(n)&&1!==t[n]?t[n]+\" - coords[\"+n+\"] - 1\":\"coords[\"+n+\"]\"}(r)}).join(\",\"),o=Yo(n);this.userCode=\"\\n      void main() {\\n        \"+o+\" coords = getOutputCoords();\\n        setOutput(getX(\"+r+\"));\\n      }\\n    \"}else this.userCode=\"\\n        void main() {\\n          int coord = getOutputCoords();\\n          setOutput(getX(\"+t[0]+\" - coord - 1));\\n        }\\n      \"},Di=function(t,e){this.variableNames=[\"x\"],this.usesPackedTextures=!0;var n=t.length;if(n>4)throw new Error(\"WebGL backend: Reverse of rank-\"+n+\" tensor is not yet supported\");this.outputShape=t;var r=Lo(\"rc\",n),o=r[n-1]+\" + 1 < \"+this.outputShape[n-1],a=r[n-2]+\" + 1 < \"+this.outputShape[n-2],i=Yo(n);function s(n){var r=t.map(function(r,o){return function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?t[n]+\" - \"+r[n]+\" - 1\":\"\"+r[n]}(o,n)});return\"getChannel(getX(\"+r.join(\",\")+\"), vec2(\"+r.slice(-2).join(\",\")+\"))\"}this.userCode=1===n?\"\\n        void main(){\\n          int rc = getOutputCoords();\\n          vec4 result = vec4(0.);\\n          result.r = getChannel(getX(\"+t[0]+\" - rc - 1),\\n            \"+t[0]+\" - rc - 1);\\n          if(\"+o+\"){\\n              result.g = getChannel(getX(\"+t[0]+\" - (rc  + 1) - 1),\\n                \"+t[0]+\" - (rc  + 1) - 1);\\n          }\\n          setOutput(result);\\n        }\\n      \":\"\\n        void main() {\\n          \"+i+\" rc = getOutputCoords();\\n          vec4 result = vec4(0.);\\n          result.r = \"+s(r.slice())+\";\\n          if(\"+o+\"){\\n            result.g = \"+function(t){return t[n-1]=\"(\"+t[n-1]+\" + 1)\",s(t)}(r.slice())+\";\\n          }\\n          if(\"+a+\") {\\n            result.b = \"+function(t){return t[n-2]=\"(\"+t[n-2]+\" + 1)\",s(t)}(r.slice())+\";\\n            if(\"+o+\") {\\n              result.a = \"+function(t){return t[n-1]=\"(\"+t[n-1]+\" + 1)\",t[n-2]=\"(\"+t[n-2]+\" + 1)\",s(t)}(r.slice())+\";\\n            }\\n          }\\n          setOutput(result);\\n        }\\n    \"},_i=function(t,e,n,r,o,a,i){void 0===i&&(i=!0),this.variableNames=[\"updates\",\"indices\",\"defaultValue\"],this.outputShape=a;var s=Yo(o.length),u=Yo(a.length),c=\"\";1===n?c=\"i\":2===n&&(c=\"i, j\");var l=\"getIndices(\"+c+\")\",p=\"\";1===r?p=\"i\":2===r&&(p=\"i, coords[1]\");var d=\"getUpdates(\"+p+\")\",h=e>1?\"strides[j]\":\"strides\";this.userCode=\"\\n        \"+s+\" strides = \"+s+\"(\"+o+\");\\n\\n        void main() {\\n          \"+u+\" coords = getOutputCoords();\\n          float sum = 0.0;\\n          bool found = false;\\n          for (int i = 0; i < \"+t+\"; i++) {\\n            int flattenedIndex = 0;\\n            for (int j = 0; j < \"+e+\"; j++) {\\n              int index = round(\"+l+\");\\n              flattenedIndex += index * \"+h+\";\\n            }\\n            if (flattenedIndex == coords[0]) {\\n              sum += \"+d+\";\\n              found = true;\\n            }\\n          }\\n          setOutput(mix(getDefaultValue(), sum, float(found)));\\n        }\\n      \"},Mi=function(t,e){this.variableNames=[\"x\",\"segmentIds\"];var n=t.windowSize,r=t.batchSize,o=t.inSize,a=t.numSegments,i=a*Math.ceil(o/n);this.outputShape=[r,i];var s=4*Math.floor(n/4),u=n%4,c=\"\\n        sumValue += dot(values, segFilter);\\n    \",l=\"\";o%n>0&&(l=\"\\n        if (inIdx < 0 || inIdx >= \"+o+\") {\\n          return initializationValue;\\n        }\\n      \");var p=\"\";o%n>0&&(p=\"\\n        if (inIdx < 0 || inIdx >= \"+o+\") {\\n          return -1.0;\\n        }\\n      \"),this.userCode=\"\\n      const float initializationValue = 0.0;\\n\\n      float getValue(int batch, int inIdx) {\\n        \"+l+\"\\n        return getX(batch, inIdx);\\n      }\\n\\n      float getSegmentIdAtIndex(int inIdx) {\\n        \"+p+\"\\n        return getSegmentIds(inIdx);\\n      }\\n\\n      void main() {\\n        ivec2 coords = getOutputCoords();\\n        int batch = coords[0];\\n        int outIdx = coords[1];\\n        int inOffset = int(floor(float(outIdx) / float(\\n          \"+a+\")) * float(\"+n+\"));\\n        int currentSeg = int(mod(float(outIdx), float(\"+a+\")));\\n\\n        float sumValue = 0.0;\\n\\n        for (int i = 0; i < \"+s+\"; i += 4) {\\n          int inIdx = inOffset + i;\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            getValue(batch, inIdx + 3)\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\\n          );\\n\\n          \"+c+\"\\n        }\\n\\n        int inIdx = inOffset + \"+s+\";\\n        if (\"+(1===u)+\") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            initializationValue,\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            0,\\n            0,\\n            0\\n          );\\n\\n          \"+c+\"\\n        } else if (\"+(2===u)+\") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            initializationValue,\\n            initializationValue\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n              0,\\n              0\\n          );\\n\\n          \"+c+\"\\n        } else if (\"+(3===u)+\") {\\n          vec4 values = vec4(\\n            getValue(batch, inIdx),\\n            getValue(batch, inIdx + 1),\\n            getValue(batch, inIdx + 2),\\n            initializationValue\\n          );\\n\\n          vec4 segFilter = vec4(\\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\\n            0\\n          );\\n\\n          \"+c+\"\\n        }\\n        setOutput(sumValue);\\n      }\\n    \"},Fi=function(t,e,n){var r,o;if(this.variableNames=[\"c\",\"a\",\"b\"],this.outputShape=e,n>4)throw Error(\"Where for rank \"+n+\" is not yet supported\");if(1===n)o=\"resRC\",r=\"resRC\";else{for(var a=[\"resRC.x\",\"resRC.y\",\"resRC.z\",\"resRC.w\"],i=[],s=[],u=0;u<e.length;u++)s.push(\"\"+a[u]),u<t&&i.push(\"\"+a[u]);r=i.join(),o=s.join()}var c=Yo(n);this.userCode=\"\\n      void main() {\\n        \"+c+\" resRC = getOutputCoords();\\n        float cVal = getC(\"+r+\");\\n        if (cVal >= 1.0) {\\n          setOutput(getA(\"+o+\"));\\n        } else {\\n          setOutput(getB(\"+o+\"));\\n        }\\n      }\\n    \"},Pi=function(){function t(t){this.variableNames=[\"source\"],this.outputShape=t,this.rank=t.length;var e,n=Yo(this.rank),r=\"uniform int start[\"+this.rank+\"];\",o=function(t){if(1===t)return\"sourceLoc\";if(t<=6)return Bi.slice(0,t).map(function(t){return\"sourceLoc.\"+t}).join(\",\");throw Error(\"Slicing for rank \"+t+\" is not yet supported\")}(this.rank);e=\"\\n        \"+n+\" sourceLoc;\\n        \"+n+\" coords = getOutputCoords();\\n        \"+t.map(function(t,e){return\"sourceLoc.\"+Bi[e]+\" = start[\"+e+\"] + coords.\"+Bi[e]+\";\"}).join(\"\\n\")+\"\\n      \",this.userCode=\"\\n      \"+r+\"\\n      void main() {\\n        \"+e+\"\\n        setOutput(getSource(\"+o+\"));\\n      }\\n    \"}return t.prototype.getCustomSetupFunc=function(t){var e=this;if(t.length!==this.rank)throw Error(\"The rank (\"+this.rank+\") of the program must match the length of start (\"+t.length+\")\");return function(n,r){null==e.startLoc&&(e.startLoc=n.getUniformLocationNoThrow(r,\"start\"),null==e.startLoc)||n.gl.uniform1iv(e.startLoc,t)}},t}(),Bi=[\"x\",\"y\",\"z\",\"w\",\"u\",\"v\"],Li=function(){function t(t){this.variableNames=[\"source\"],this.usesPackedTextures=!0,this.outputShape=t,this.rank=t.length;var e=Yo(this.rank),n=Lo(\"coords\",this.rank),r=Lo(\"sourceLoc\",this.rank),o=1===this.rank?\"sourceLoc\":\"vec2(\"+r.slice(-2).join()+\")\",a=\"getChannel(getSource(\"+r.join()+\"), \"+o+\")\",i=\"\\n      result.x = \"+a+\";\\n      if (++\"+n[this.rank-1]+\" < \"+t[this.rank-1]+\") {\\n        ++\"+r[this.rank-1]+\";\\n        result.y = \"+a+\";\\n        --\"+r[this.rank-1]+\";\\n      }\\n    \",s=1===this.rank?\"\":\"\\n      --\"+n[this.rank-1]+\";\\n      if (++\"+n[this.rank-2]+\" < \"+t[this.rank-2]+\") {\\n        ++\"+r[this.rank-2]+\";\\n        result.z = \"+a+\";\\n        if (++\"+n[this.rank-1]+\" < \"+t[this.rank-1]+\") {\\n          ++\"+r[this.rank-1]+\";\\n          result.w = \"+a+\";\\n        }\\n      }\\n    \",u=this.rank<=4?\"sourceLoc = coords +\\n            \"+e+\"(\"+t.map(function(t,e){return\"start[\"+e+\"]\"}).join()+\");\":t.map(function(t,e){return r[e]+\" = \"+n[e]+\" + start[\"+e+\"];\"}).join(\"\\n\");this.userCode=\"\\n      uniform int start[\"+this.rank+\"];\\n      void main() {\\n        \"+e+\" coords = getOutputCoords();\\n        \"+e+\" sourceLoc;\\n        \"+u+\" \\n        vec4 result = vec4(0.);\\n        \"+i+\"\\n        \"+s+\"\\n        setOutput(result);\\n      }\\n    \"}return t.prototype.getCustomSetupFunc=function(t){var e=this;if(t.length!==this.rank)throw Error(\"The rank (\"+this.rank+\") of the program must match the length of start (\"+t.length+\")\");return function(n,r){null==e.startLoc&&(e.startLoc=n.getUniformLocationNoThrow(r,\"start\"),null==e.startLoc)||n.gl.uniform1iv(e.startLoc,t)}},t}(),Vi=function(t,e,n){this.variableNames=[\"x\"],this.outputShape=n;var r=n.length,o=Yo(n.length),a=Yo(n.length),i=\"\";if(1===r)i=\"coords * strides + begin\";else{var s=0;i=n.map(function(t,e){return s++,1===n.length?\"coords * strides[\"+e+\"] + begin[\"+e+\"]\":\"coords[\"+(s-1)+\"] * strides[\"+e+\"] + begin[\"+e+\"]\"}).join(\",\")}this.userCode=\"\\n      \"+o+\" begin = \"+o+\"(\"+t+\");\\n      \"+o+\" strides = \"+o+\"(\"+e+\");\\n\\n      void main() {\\n        \"+a+\" coords = getOutputCoords();\\n        setOutput(getX(\"+i+\"));\\n      }\\n    \"},zi=function(){function t(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}return t.prototype.acquireTexture=function(t,e,n){var r,o=Wi(e,n),a=Ui(t,o,n);if(a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]),this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this.log();var i=this.freeTextures[a].shift();return this.usedTextures[a].push(i),i}return this.numUsedTextures++,this.log(),o===Pt.PACKED_2X2_FLOAT32?r=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):o===Pt.PACKED_2X2_FLOAT16?r=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):o===Pt.UNPACKED_FLOAT32?r=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):o===Pt.UNPACKED_FLOAT16?r=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):o===Pt.PACKED_4X1_UNSIGNED_BYTE&&(r=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[a].push(r),r},t.prototype.releaseTexture=function(t,e,n,r){if(null!=this.freeTextures){var o=Ui(e,Wi(n,r),r);o in this.freeTextures||(this.freeTextures[o]=[]),this.freeTextures[o].push(t),this.numFreeTextures++,this.numUsedTextures--;var a=this.usedTextures[o],i=a.indexOf(t);if(i<0)throw new Error(\"Cannot release a texture that was never provided by this texture manager\");a.splice(i,1),this.log()}},t.prototype.log=function(){if(this.logEnabled){var t=this.numFreeTextures+this.numUsedTextures;console.log(\"Free/Used\",this.numFreeTextures+\" / \"+this.numUsedTextures,\"(\"+t+\")\")}},t.prototype.getNumUsedTextures=function(){return this.numUsedTextures},t.prototype.getNumFreeTextures=function(){return this.numFreeTextures},t.prototype.dispose=function(){var t=this;if(null!=this.freeTextures){for(var e in this.freeTextures)this.freeTextures[e].forEach(function(e){t.gpgpu.deleteMatrixTexture(e)});for(var e in this.usedTextures)this.usedTextures[e].forEach(function(e){t.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0}},t}();function Wi(t,e){if(t===Ft.UPLOAD)return Pt.PACKED_2X2_FLOAT32;if(t===Ft.RENDER||null==t)return function(t){return d.getBool(\"WEBGL_RENDER_FLOAT32_ENABLED\")?t?Pt.PACKED_2X2_FLOAT32:Pt.UNPACKED_FLOAT32:t?Pt.PACKED_2X2_FLOAT16:Pt.UNPACKED_FLOAT16}(e);if(t===Ft.DOWNLOAD||t===Ft.PIXELS)return Pt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(\"Unknown logical texture type \"+t)}function Ui(t,e,n){return t[0]+\"_\"+t[1]+\"_\"+e+\"_\"+n}var ji=function(t,e){this.variableNames=[\"A\"];for(var n=new Array(t.length),r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;var o=Yo(this.rank),a=function(t){var e=t.length;if(e>5)throw Error(\"Tile for rank \"+e+\" is not yet supported\");if(1===e)return\"imod(resRC, \"+t[0]+\")\";for(var n=[\"resRC.x\",\"resRC.y\",\"resRC.z\",\"resRC.w\",\"resRC.u\"],r=[],o=0;o<t.length;o++)r.push(\"imod(\"+n[o]+\", \"+t[o]+\")\");return r.join()}(t);this.userCode=\"\\n      void main() {\\n        \"+o+\" resRC = getOutputCoords();\\n        setOutput(getA(\"+a+\"));\\n      }\\n    \"},Gi=function(t,e){this.variableNames=[\"A\"];for(var n=new Array(t.length),r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;var o=Yo(this.rank),a=function(t){var e=t.length;if(e>6)throw Error(\"Transpose for rank \"+e+\" is not yet supported\");for(var n=[\"resRC.x\",\"resRC.y\",\"resRC.z\",\"resRC.w\",\"resRC.u\",\"resRC.v\"],r=new Array(e),o=0;o<t.length;o++)r[t[o]]=n[o];return r.join()}(e);this.userCode=\"\\n    void main() {\\n      \"+o+\" resRC = getOutputCoords();\\n      setOutput(getA(\"+a+\"));\\n    }\\n    \"},Hi=function(t,e){this.variableNames=[\"A\"],this.usesPackedTextures=!0;for(var n=new Array(t.length),r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(\"Packed transpose for rank \"+this.rank+\" is not yet supported.\");var o=Yo(this.rank),a=Bo(\"rc\",this.rank),i=new Array(this.rank);for(r=0;r<e.length;r++)i[e[r]]=a[r];var s=\"vec2(\"+i.slice(-2).join()+\")\",u=\"++\"+a[this.rank-1]+\" < \"+n[this.rank-1],c=\"getChannel(getA(\"+i.join()+\"), \"+s+\")\";this.userCode=\"\\n    void main() {\\n      \"+o+\" rc = getOutputCoords();\\n      vec4 result = vec4(0.);\\n      result[0] = \"+c+\";\\n      if(\"+u+\") {\\n        result[1] = \"+c+\";\\n      }\\n      --\"+a[this.rank-1]+\";\\n      if(++\"+a[this.rank-2]+\" < \"+n[this.rank-2]+\") {\\n        result[2] = \"+c+\";\\n        if(\"+u+\") {\\n          result[3] = \"+c+\";\\n        }\\n      }  \\n      setOutput(result);\\n    }\\n    \"},qi=1.7580993408473768,$i=1.0507009873554805,Ki=function(t,e){this.variableNames=[\"A\"],this.outputShape=t,this.userCode=\"\\n      float unaryOperation(float x) {\\n        \"+e+\"\\n      }\\n\\n      void main() {\\n        float x = getAAtOutCoords();\\n        float y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \"},Xi=\"if (isnan(x)) return x;\",Yi=\"return x;\",Qi=\"return abs(x);\",Ji=Xi+\"\\n  return (x < 0.0) ? 0.0 : x;\\n\",Zi=\"return (x >= 0.0) ? x : (exp(x) - 1.0);\",ts=\"return -x;\",es=\"return ceil(x);\",ns=\"return floor(x);\",rs=\"return exp(x);\",os=\"return exp(x) - 1.0;\",as=\"return x;\",is=\"return x;\",ss=\"\\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\\n  bvec4 isNaN = isnan(x);\\n\\n  result.r = isNaN.r ? x.r : result.r;\\n  result.g = isNaN.g ? x.g : result.g;\\n  result.b = isNaN.b ? x.b : result.b;\\n  result.a = isNaN.a ? x.a : result.a;\\n\\n  return result;\\n\",us=\"\\n  vec4 result;\\n\\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\\n\\n  return result;\\n\",cs=function(t,e){this.variableNames=[\"A\"],this.usesPackedTextures=!0,this.outputShape=t,this.userCode=\"\\n      vec4 unaryOperation(vec4 x) {\\n        \"+e+\"\\n      }\\n\\n      void main() {\\n        vec4 x = getAAtOutCoords();\\n        vec4 y = unaryOperation(x);\\n\\n        setOutput(y);\\n      }\\n    \"},ls=function(t){this.variableNames=[\"A\"],this.usesPackedTextures=!0,this.outputShape=t;var e=t.length,n=Lo(\"rc\",e),r=Yo(e),o=function(t,e){if(1===t)return\"rc\";for(var n=\"\",r=0;r<t;r++)n+=e[r],r<t-1&&(n+=\",\");return n}(e,n),a=n.slice(-2),i=e<=1?\"rc\":\"vec2(\"+a.join(\",\")+\")\";this.userCode=\"\\n      void main() {\\n        \"+r+\" rc = getOutputCoords();\\n        vec4 packedInput = getA(\"+o+\");\\n\\n        setOutput(getChannel(packedInput, \"+i+\"));\\n      }\\n    \"},ps={};function ds(t,e){if(void 0===e&&(e=!1),\"linear\"===t)return e?is:Yi;if(\"relu\"===t)return e?ss:Ji;if(\"elu\"===t)return e?us:Zi;if(\"prelu\"===t)return e?la:ua;throw new Error(\"Activation \"+t+\" has not been implemented for the WebGL backend.\")}var hs=600,fs=function(){function t(t){if(this.gpgpu=t,this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.disposed=!1,!d.getBool(\"HAS_WEBGL\"))throw new Error(\"WebGL is not supported on this device\");if(null==t){var e=zt(d.getNumber(\"WEBGL_VERSION\"));this.binaryCache=(n=d.getNumber(\"WEBGL_VERSION\"))in ps?ps[n]:(ps[n]={},ps[n]),this.gpgpu=new ui(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var n;this.textureManager=new zi(this.gpgpu),this.numMBBeforeWarning=null==d.global.screen?1024:d.global.screen.height*d.global.screen.width*window.devicePixelRatio*hs/1024/1024,this.texData=new no(this,_t)}return t.prototype.register=function(t,e,n){if(this.texData.has(t))throw new Error(\"Data buffer is already registered\");this.texData.set(t,{shape:e,dtype:n})},t.prototype.fromPixels=function(t,e){if(null==t)throw new Error(\"pixels passed to tf.browser.fromPixels() can not be null\");var n=\"undefined\"!=typeof OffscreenCanvas&&t instanceof OffscreenCanvas||\"undefined\"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement,r=t.data instanceof Uint8Array,o=\"undefined\"!=typeof ImageData&&t instanceof ImageData,a=\"undefined\"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement,i=\"undefined\"!=typeof HTMLImageElement&&t instanceof HTMLImageElement,s=a?[t.videoWidth,t.videoHeight]:[t.width,t.height],u=s[0],c=s[1],l=[c,u],p=[c,u,e];if(!(n||r||o||a||i))throw new Error(\"pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was \"+t.constructor.name);(i||a)&&(null==this.fromPixels2DContext&&(this.fromPixels2DContext=Wt(d.getNumber(\"WEBGL_VERSION\")).getContext(\"2d\")),this.fromPixels2DContext.canvas.width=u,this.fromPixels2DContext.canvas.height=c,this.fromPixels2DContext.drawImage(t,0,0,u,c),t=this.fromPixels2DContext.canvas);var h,f,m=this.makeTensorHandle(l,\"int32\");if(this.texData.get(m.dataId).usage=Ft.PIXELS,this.gpgpu.uploadPixelDataToTexture(this.getTexture(m.dataId),t),d.getBool(\"WEBGL_PACK\")){h=new Wa(p);var v=this.makePackedTensor(h.outputShape,m.dtype);f=this.compileAndRun(h,[m],v)}else h=new za(p),f=this.compileAndRun(h,[m]);return this.disposeData(m.dataId),f},t.prototype.makeTensorHandle=function(t,e){var n={};return this.register(n,t,e),{dataId:n,shape:t,dtype:e}},t.prototype.write=function(t,e){if(null==e)throw new Error(\"MathBackendWebGL.write(): values can not be null\");if(d.getBool(\"DEBUG\"))for(var n=0;n<e.length;n++){var r=e[n];if(!Xt(r)){if(d.getBool(\"WEBGL_RENDER_FLOAT32_CAPABLE\"))throw Error(\"The value \"+r+\" cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.ENV.set('WEBGL_RENDER_FLOAT32_ENABLED', true);'\");throw Error(\"The value \"+r+\" cannot be represented on this device.\")}}var o=this.texData.get(t);if(\"complex64\"===o.dtype)throw new Error(\"Cannot write to a complex64 dtype. Please use tf.complex(real, imag).\");this.releaseGPUData(t),o.usage=Ft.UPLOAD,o.values=e},t.prototype.readSync=function(t){var e=this.texData.get(t),n=e.values,r=e.dtype,o=e.complexTensors,a=e.slice,i=e.shape,s=e.isPacked;if(null!=a){var u;u=s?new cs(i,as):new Ki(i,as);var c=this.compileAndRun(u,[{dataId:t,shape:i,dtype:r}]),l=this.readSync(c.dataId);return c.dispose(),l}if(null!=n)return this.convertAndCacheOnCPU(t);if(\"string\"===r)return n;var p,d,h=null!=this.activeTimers;return h&&(p=J()),d=\"complex64\"===r?No(o.real.dataSync(),o.imag.dataSync()):this.getValuesFromTexture(t),h&&(this.downloadWaitMs+=J()-p),this.convertAndCacheOnCPU(t,d)},t.prototype.read=function(t){return u(this,void 0,void 0,function(){var e,n,r,o,a,i,s,u,l,p,h,f,m,v,g,y,x,b,w,C,N,S;return c(this,function(c){switch(c.label){case 0:if(this.pendingRead.has(t))return e=this.pendingRead.get(t),[2,new Promise(function(t){return e.push(t)})];if(n=this.texData.get(t),r=n.values,o=n.shape,a=n.slice,i=n.dtype,s=n.complexTensors,u=n.isPacked,null!=a)return void 0,l=u?new cs(o,as):new Ki(o,as),p=this.compileAndRun(l,[{dataId:t,shape:o,dtype:i}]),h=this.read(p.dataId),p.dispose(),[2,h];if(null!=r)return[2,this.convertAndCacheOnCPU(t)];if(!d.getBool(\"WEBGL_DOWNLOAD_FLOAT_ENABLED\")&&2===d.getNumber(\"WEBGL_VERSION\"))throw new Error(\"tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.\");return f=null,\"complex64\"!==i&&d.get(\"WEBGL_BUFFER_SUPPORTED\")&&(m=this.decode(t),v=this.texData.get(m.dataId),f=(S=this.gpgpu).createBufferFromTexture.apply(S,[v.texture].concat(jt(o)))),this.pendingRead.set(t,[]),\"complex64\"===i?[3,2]:[4,this.gpgpu.createAndWaitForFence()];case 1:c.sent(),c.label=2;case 2:return\"complex64\"!==i?[3,4]:[4,Promise.all([s.real.data(),s.imag.data()])];case 3:return y=c.sent(),x=y[0],b=y[1],g=No(x,b),[3,5];case 4:null==f?g=this.getValuesFromTexture(t):(w=E(o),g=this.gpgpu.downloadFloat32MatrixFromBuffer(f,w)),c.label=5;case 5:return null!=m&&this.disposeData(m.dataId),C=this.convertAndCacheOnCPU(t,g),N=this.pendingRead.get(t),this.pendingRead.delete(t),N.forEach(function(t){return t(C)}),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t)),[2,C]}})})},t.prototype.getValuesFromTexture=function(t){var e,n=this,r=this.texData.get(t),o=r.shape,a=r.dtype,i=r.isPacked,s=E(o);if(d.getBool(\"WEBGL_DOWNLOAD_FLOAT_ENABLED\")){var u=this.decode(t),c=this.texData.get(u.dataId),l=(e=this.gpgpu).downloadMatrixFromPackedTexture.apply(e,[c.texture].concat(jt(o))).subarray(0,s);return this.disposeData(u.dataId),l}var p=d.getBool(\"WEBGL_PACK\")&&!0===i,h=p?Ne(o):o,f=this.makeTensorHandle(h,\"float32\");f.size=E(o),this.texData.get(f.dataId).usage=Ft.DOWNLOAD;var m=He(function(){var e=p?new Fa(h):new Ma(h);return n.compileAndRun(e,[{shape:h,dtype:a,dataId:t}],f,null)}),v=this.texData.get(m.dataId),g=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(v.texture,v.texShape[0],v.texShape[1]).subarray(0,s);return this.disposeData(f.dataId),g},t.prototype.time=function(t){return u(this,void 0,void 0,function(){var e,n,r,o,a,i,s;return c(this,function(u){switch(u.label){case 0:return e=this.activeTimers,n=[],r=!1,null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,t(),o=C(this.activeTimers.map(function(t){return t.query})).filter(function(t){return null!=t}),a=C(this.activeTimers.map(function(t){return t.name})).filter(function(t){return null!=t}),this.activeTimers=e,r&&(this.programTimersStack=null),[4,Promise.all(o)];case 1:return i=u.sent(),s={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:y(i),getExtraProfileInfo:function(){return i.map(function(t,e){return{name:a[e],ms:t}}).map(function(t){return t.name+\": \"+t.ms}).join(\", \")},wallMs:null},this.uploadWaitMs=0,this.downloadWaitMs=0,[2,s]}})})},t.prototype.memory=function(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU}},t.prototype.startTimer=function(){return d.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\")>0?this.gpgpu.beginQuery():{startMs:J(),endMs:null}},t.prototype.endTimer=function(t){return d.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\")>0?(this.gpgpu.endQuery(),t):(t.endMs=J(),t)},t.prototype.getQueryTime=function(t){return u(this,void 0,void 0,function(){var e;return c(this,function(n){return d.getNumber(\"WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION\")>0?[2,this.gpgpu.waitForQueryAndGetTime(t)]:[2,(e=t).endMs-e.startMs]})})},t.prototype.disposeData=function(t){if(!this.pendingDisposal.has(t))if(this.pendingRead.has(t))this.pendingDisposal.add(t);else if(this.texData.has(t)){this.releaseGPUData(t);var e=this.texData.get(t).complexTensors;null!=e&&(e.real.dispose(),e.imag.dispose()),this.texData.delete(t)}},t.prototype.releaseGPUData=function(t){var e=this.texData.get(t),n=e.texture,r=e.dtype,o=e.texShape,a=e.usage,i=e.isPacked,s=e.slice,u=s&&s.origDataId||t,c=this.dataRefCount.get(u);c>1?this.dataRefCount.set(u,c-1):(this.dataRefCount.delete(u),null!=n&&(this.numBytesInGPU-=this.computeBytes(o,r),this.textureManager.releaseTexture(n,o,a,i)));var l=this.texData.get(t);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null},t.prototype.getTexture=function(t){return this.uploadToGPU(t),this.texData.get(t).texture},t.prototype.getDataInfo=function(t){return this.texData.get(t)},t.prototype.getCPUBackend=function(){return d.getBool(\"WEBGL_CPU_FORWARD\")?(null==this.cpuBackend&&(this.cpuBackend=_t.findBackend(\"cpu\")),this.cpuBackend):null},t.prototype.shouldExecuteOnCPU=function(t,e){var n=this;return void 0===e&&(e=128),null!=this.getCPUBackend()&&t.every(function(t){return null==n.texData.get(t.dataId).texture&&t.size<e})},t.prototype.getGPGPUContext=function(){return this.gpgpu},t.prototype.complex=function(t,e){var n=this.makeOutputArray(t.shape,\"complex64\");return this.texData.get(n.dataId).complexTensors={real:_t.keep(t.clone()),imag:_t.keep(e.clone())},n},t.prototype.real=function(t){return this.texData.get(t.dataId).complexTensors.real.clone()},t.prototype.imag=function(t){return this.texData.get(t.dataId).complexTensors.imag.clone()},t.prototype.slice=function(t,e,n){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.slice(t,e,n);if(0===E(n))return Nn([],n,t.dtype);var r=this.texData.get(t.dataId).isPacked,o=Hr(t.shape,e,n);if(r||!o){var a=d.getBool(\"WEBGL_PACK_ARRAY_OPERATIONS\")?new Li(n):new Pi(n),i=a.getCustomSetupFunc(e);return this.compileAndRun(a,[t],null,i)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)},t.prototype.shallowSlice=function(t,e,n){var r=this.texData.get(t.dataId),o=mt.make(n,{},t.dtype,this),a=this.texData.get(o.dataId);Object.assign(a,r),a.shape=n,a.dtype=t.dtype;var i=qr(e,t.strides);r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||t.dataId};var s=this.dataRefCount.get(a.slice.origDataId)||1;return this.dataRefCount.set(a.slice.origDataId,s+1),o},t.prototype.stridedSlice=function(t,e,n,r){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.stridedSlice(t,e,n,r);var o=Ur(e,n,r);if(o.some(function(t){return 0===t}))return Nn([],o);var a=new Vi(e,r,o);return this.compileAndRun(a,[t])},t.prototype.reverse=function(t,e){var n=d.getBool(\"WEBGL_PACK_ARRAY_OPERATIONS\")?new Di(t.shape,e):new Oi(t.shape,e);return this.compileAndRun(n,[t])},t.prototype.concat=function(t,e){if(\"complex64\"===t[0].dtype){var n=t.map(function(t){return Cn(t)}),r=t.map(function(t){return En(t)});return wn(this.concat(n,e),this.concat(r,e))}if(this.shouldExecuteOnCPU(t))return this.cpuBackend.concat(t,e);if(1===t.length)return t[0];if(t.length>d.getNumber(\"WEBGL_MAX_TEXTURES_IN_SHADER\")){var o=Math.floor(t.length/2),a=this.concat(t.slice(0,o),e),i=this.concat(t.slice(o),e);return this.concat([a,i],e)}if(d.getBool(\"WEBGL_PACK_ARRAY_OPERATIONS\")&&t[0].rank>1){var s=new va(t.map(function(t){return t.shape}),e);return this.compileAndRun(s,t)}var u=xn(t.map(function(t){return t.shape}),e),c=t.map(function(t){return t.as2D(-1,E(t.shape.slice(e)))}),l=new ma(c.map(function(t){return t.shape}));return this.compileAndRun(l,c).reshape(u)},t.prototype.neg=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.neg(t);if(d.getBool(\"WEBGL_PACK_UNARY_OPERATIONS\"))return this.packedUnaryOp(t,ts,t.dtype);var e=new Ki(t.shape,ts);return this.compileAndRun(e,[t])},t.prototype.batchMatMul=function(t,e,n,r){var o=n?t.shape[2]:t.shape[1],a=r?e.shape[1]:e.shape[2],i=n?t.shape[1]:t.shape[2],s=t.shape[0];if((1===o||1===a)&&i>1e3){n&&(t=t.transpose([0,2,1])),r&&(e=e.transpose([0,2,1]));var u=1===a?t:t.as3D(s,i,1),c=1===a?2:1,l=1===a?e.as3D(s,1,i):e;return this.multiply(u,l).sum(c,!0)}var p=Nt(t.dtype,e.dtype),d=new vi(t.shape,[s,o,a],n,r),h=this.makePackedTensor(d.outputShape,p);return this.compileAndRun(d,[t,e],h)},t.prototype.fusedBatchMatMul=function(t){var e=t.a,n=t.b,r=t.transposeA,o=t.transposeB,a=t.bias,i=t.activation,s=t.preluActivationWeights,u=r?e.shape[2]:e.shape[1],c=o?n.shape[1]:n.shape[2],l=e.shape[0],p=Nt(e.dtype,n.dtype),d=null!=a,h=null!=s,f=i?ds(i,!0):null,m=new vi(e.shape,[l,u,c],r,o,d,f,h),v=this.makePackedTensor(m.outputShape,p),g=[e,n];return a&&g.push(a),s&&g.push(s),this.compileAndRun(m,g,v)},t.prototype.multiply=function(t,e){if(\"complex64\"===t.dtype){var n=this.texData.get(t.dataId),r=this.texData.get(e.dataId),o=new oa(\"return areal * breal - aimag * bimag;\",t.shape,e.shape),a=new oa(\"return areal * bimag + aimag * breal;\",t.shape,e.shape),i=[this.makeComplexComponentTensorHandle(t,n.complexTensors.real),this.makeComplexComponentTensorHandle(t,n.complexTensors.imag),this.makeComplexComponentTensorHandle(e,r.complexTensors.real),this.makeComplexComponentTensorHandle(e,r.complexTensors.imag)],s=this.compileAndRun(o,i),u=this.compileAndRun(a,i),c=this.complex(s,u);return s.dispose(),u.dispose(),c}if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.multiply(t,e);if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,sa,t.dtype);var l=new ca(sa,t.shape,e.shape),p=this.makeOutputArray(l.outputShape,t.dtype);return this.compileAndRun(l,[t,e],p)},t.prototype.batchNormalization=function(t,e,n,r,o,a){var i=[t,e,n],s=null;null!=a&&(s=a.shape,i.push(a));var u=null;if(null!=o&&(u=o.shape,i.push(o)),d.getBool(\"WEBGL_PACK_NORMALIZATION\")){var c=new ra(t.shape,e.shape,n.shape,s,u,r);return this.compileAndRun(c,i)}var l=new na(t.shape,e.shape,n.shape,s,u,r);return this.compileAndRun(l,i)},t.prototype.localResponseNormalization4D=function(t,e,n,r,o){var a=d.getBool(\"WEBGL_PACK_NORMALIZATION\")?new hi(t.shape,e,n,r,o):new pi(t.shape,e,n,r,o);return this.compileAndRun(a,[t])},t.prototype.LRNGrad=function(t,e,n,r,o,a,i){var s=new di(e.shape,r,o,a,i);return this.compileAndRun(s,[e,n,t])},t.prototype.tile=function(t,e){if(\"string\"===t.dtype){var n=this.readSync(t.dataId).map(function(t){return et(t)});return Oo(or(t.shape,t.dtype,n),e)}var r=new ji(t.shape,e);return this.compileAndRun(r,[t])},t.prototype.pad=function(t,e,n){var r=d.getBool(\"WEBGL_PACK_ARRAY_OPERATIONS\")?new wi(t.shape,e,n):new bi(t.shape,e,n);return this.compileAndRun(r,[t])},t.prototype.transpose=function(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.transpose(t,e);var n=d.getBool(\"WEBGL_PACK_ARRAY_OPERATIONS\")?new Hi(t.shape,e):new Gi(t.shape,e);return this.compileAndRun(n,[t])},t.prototype.gather=function(t,e,n){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.gather(t,e,n);var r=new Ua(t.shape,e.size,n);return this.compileAndRun(r,[t,e])},t.prototype.batchToSpaceND=function(t,e,n){x(t.rank<=4,function(){return\"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet\"});var r=e.reduce(function(t,e){return t*e}),o=Dr(t.shape,e,r),a=_r(o.length,e.length),i=Mr(t.shape,e,r),s=Fr(n,e.length),u=Pr(i,n,e.length);return t.reshape(o).transpose(a).reshape(i).slice(s,u)},t.prototype.spaceToBatchND=function(t,e,n){x(t.rank<=4,function(){return\"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet\"});var r=e.reduce(function(t,e){return t*e}),o=[[0,0]];o.push.apply(o,n);for(var a=1+e.length;a<t.shape.length;++a)o.push([0,0]);var i=t.pad(o),s=Dr(i.shape,e,r,!1),u=_r(s.length,e.length,!1),c=Mr(i.shape,e,r,!1);return i.reshape(s).transpose(u).reshape(c)},t.prototype.reduce=function(t,e,n){var r=t.shape[0],o=t.shape[1],a=Vr(o),i=new Ni({windowSize:a,inSize:o,batchSize:r},e),s=i.outputShape,u=s[0],c=s[1],l=this.makeOutputArray([u,c],n);return this.compileAndRun(i,[t],l),1===l.shape[1]?l:this.reduce(l,e,n)},t.prototype.argReduce=function(t,e,n){void 0===n&&(n=null);var r=t.shape[0],o=t.shape[1];null!=n&&(r=n.shape[0],o=n.shape[1]);var a=Vr(o),i=new Po({windowSize:a,inSize:o,batchSize:r},e,null==n),s=i.outputShape,u=s[0],c=s[1],l=this.makeOutputArray([u,c],\"int32\"),p=[t];return null!=n&&p.push(n),this.compileAndRun(i,p,l),1===l.shape[1]?l:this.argReduce(t,e,l)},t.prototype.argReducePacked=function(t,e,n){void 0===n&&(n=null);var r=null!=n?n.shape:t.shape,o=Vr(r[r.length-1]),a=new Zo(r,o,e,null==n),i=this.makePackedTensor(a.outputShape,\"int32\"),s=null==n?[t]:[t,n];return this.compileAndRun(a,s,i),i.rank===t.rank?this.argReducePacked(t,e,i):i},t.prototype.sum=function(t,e){fn(\"sum\",e,t.rank);var n=dn(t.shape,e),r=n[0],o=E(n[1]),a=t.as2D(-1,o),i=St(t.dtype);return this.reduce(a,\"sum\",i).reshape(r)},t.prototype.prod=function(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.prod(t,e);var n=dn(t.shape,e),r=n[0],o=E(n[1]),a=t.as2D(-1,o),i=St(t.dtype);return this.reduce(a,\"prod\",i).reshape(r)},t.prototype.unsortedSegmentSum=function(t,e,n){var r=0,o=mn([r],t.rank),a=t;null!=o&&(a=t.transpose(o),r=gn(1,t.rank)[0]);var i=function(t,e,n){for(var r=[],o=t.length,a=0;a<o;a++)a!==e?r.push(t[a]):r.push(n);return r}(a.shape,r,n),s=E([a.shape[r]]),u=a.as2D(-1,s),c=St(t.dtype),l=this.segOpCompute(u,\"unsortedSegmentSum\",e,c,n).reshape(i);return null!=o&&(l=l.transpose(vn(o))),l},t.prototype.segOpCompute=function(t,e,n,r,o){var a=t.shape[0],i=t.shape[1],s=function(t,e){var n,r=!1;for(t<=Lr?(n=t,r=!0):n=q(t,Math.floor(Math.sqrt(t)));!r;)n>e||n===t?r=!0:n=q(t,n+1);return n}(i,o),u=new Mi({windowSize:s,inSize:i,batchSize:a,numSegments:o},e),c=u.outputShape,l=c[0],p=c[1],d=this.makeOutputArray([l,p],r);return this.compileAndRun(u,[t,n],d),d.shape[1]===o?d:(n=Bn(0,o).tile([i/s]),this.segOpCompute(d,e,n,r,o))},t.prototype.argMinMaxReduce=function(t,e,n){var r=[e];if(fn(\"arg\"+n.charAt(0).toUpperCase()+n.slice(1),r,t.rank),!d.getBool(\"WEBGL_PACK_REDUCE\")||t.rank<=2){var o=dn(t.shape,r),a=o[0],i=E(o[1]),s=t.as2D(-1,i);return this.argReduce(s,n).reshape(a)}return this.argReducePacked(t,n)},t.prototype.argMin=function(t,e){return this.argMinMaxReduce(t,e,\"min\")},t.prototype.argMax=function(t,e){return this.argMinMaxReduce(t,e,\"max\")},t.prototype.cumsum=function(t,e,n,r){if(e!==t.rank-1)throw new Error(\"WebGL cumsum shader expects an inner-most axis=\"+(t.rank-1)+\" but got axis=\"+e);var o=new Ia(t.shape,n,r);return this.compileAndRun(o,[t])},t.prototype.equal=function(t,e){if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,\"\\n  return vec4(equal(a, b));\\n\",\"bool\");var n=new ca(\"return float(a == b);\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\"bool\");return this.compileAndRun(n,[t,e],r)},t.prototype.notEqual=function(t,e){if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,\"\\n  return vec4(notEqual(a, b));\\n\",\"bool\");var n=new ca(\"return float(a != b);\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\"bool\");return this.compileAndRun(n,[t,e],r)},t.prototype.less=function(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.less(t,e);if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,\"\\n  return vec4(lessThan(a, b));\\n\",\"bool\");var n=new ca(\"return float(a < b);\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\"bool\");return this.compileAndRun(n,[t,e],r)},t.prototype.lessEqual=function(t,e){if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,\"\\n  return vec4(lessThanEqual(a, b));\\n\",\"bool\");var n=new ca(\"return float(a <= b);\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\"bool\");return this.compileAndRun(n,[t,e],r)},t.prototype.greater=function(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.greater(t,e);if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,\"\\n  return vec4(greaterThan(a, b));\\n\",\"bool\");var n=new ca(\"return float(a > b);\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\"bool\");return this.compileAndRun(n,[t,e],r)},t.prototype.greaterEqual=function(t,e){if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,\"\\n  return vec4(greaterThanEqual(a, b));\\n\",\"bool\");var n=new ca(\"return float(a >= b);\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\"bool\");return this.compileAndRun(n,[t,e],r)},t.prototype.logicalNot=function(t){var e=new Ki(t.shape,\"return float(!(x >= 1.0));\");return this.compileAndRun(e,[t])},t.prototype.logicalAnd=function(t,e){if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,\"\\n  return vec4(\\n    vec4(greaterThanEqual(a, vec4(1.0))) *\\n    vec4(greaterThanEqual(b, vec4(1.0))));\\n\",\"bool\");var n=new ca(\"return float(a >= 1.0 && b >= 1.0);\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\"bool\");return this.compileAndRun(n,[t,e],r)},t.prototype.logicalOr=function(t,e){if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,\"\\n  return min(\\n    vec4(greaterThanEqual(a, vec4(1.0))) +\\n    vec4(greaterThanEqual(b, vec4(1.0))),\\n    vec4(1.0));\\n\",\"bool\");var n=new ca(\"return float(a >= 1.0 || b >= 1.0);\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\"bool\");return this.compileAndRun(n,[t,e],r)},t.prototype.select=function(t,e,n){var r=new Fi(t.rank,e.shape,e.rank),o=this.makeOutputArray(r.outputShape,Nt(e.dtype,n.dtype));return this.compileAndRun(r,[t,e,n],o)},t.prototype.where=function(t){on(\"tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead\");var e=t.dataSync();return _o(t.shape,e)},t.prototype.topk=function(t,e,n){return Do(t.dataSync(),t.shape,t.dtype,e)},t.prototype.min=function(t,e){fn(\"min\",e,t.rank);var n=dn(t.shape,e),r=n[0],o=E(n[1]),a=t.as2D(-1,o);return this.reduce(a,\"min\",a.dtype).reshape(r)},t.prototype.minimum=function(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.minimum(t,e);var n=d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")?new pa(\"\\n  vec4 result = vec4(min(a, b));\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\\n  return result;\\n\",t.shape,e.shape):new ca(\"\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n\\n  return min(a, b);\\n\",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.mod=function(t,e){var n=d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")?new pa(\"\\n  vec4 result = mod(a, b);\\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\\n  \\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\\n  return result;\\n\",t.shape,e.shape):new ca(\"if (b == 0.0) return NAN;\\n  return mod(a, b);\",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.max=function(t,e){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.max(t,e);fn(\"max\",e,t.rank);var n=dn(t.shape,e),r=n[0],o=E(n[1]),a=t.as2D(-1,o);return this.reduce(a,\"max\",a.dtype).reshape(r)},t.prototype.maximum=function(t,e){if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.maximum(t,e);var n=d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")?new pa(\"\\n  vec4 result = vec4(max(a, b));\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\\n  return result;\\n\",t.shape,e.shape):new ca(\"\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n\\n  return max(a, b);\\n\",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.all=function(t,e){fn(\"all\",e,t.rank);var n=dn(t.shape,e),r=n[0],o=E(n[1]),a=t.as2D(-1,o);return this.reduce(a,\"all\",a.dtype).reshape(r)},t.prototype.any=function(t,e){fn(\"any\",e,t.rank);var n=dn(t.shape,e),r=n[0],o=E(n[1]),a=t.as2D(-1,o);return this.reduce(a,\"any\",a.dtype).reshape(r)},t.prototype.squaredDifference=function(t,e){var n=d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")?new pa(\"return (a - b) * (a - b);\",t.shape,e.shape):new ca(\"return (a - b) * (a - b);\",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.realDivide=function(t,e){if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,\"\\n  // vec4 one = vec4(equal(a, b));\\n  // return one + (vec4(1.0) - one) * a / b;\\n  vec4 result = a / b;\\n  if(b.x == 0.0) {\\n    result.x = NAN;\\n  } else if(a.x == b.x) {\\n    result.x = 1.;\\n  }\\n  if(b.y == 0.0) {\\n    result.y = NAN;\\n  } else if(a.y == b.y) {\\n    result.y = 1.;\\n  }\\n  if(b.z == 0.0) {\\n    result.z = NAN;\\n  } else if(a.z == b.z) {\\n    result.z = 1.;\\n  }\\n  if(b.w == 0.0) {\\n    result.w = NAN;\\n  } else if(a.w == b.w) {\\n    result.w = 1.;\\n  }\\n\\n  return result;\\n\",\"float32\",!0);var n=new ca(\"\\nif (b == 0.0) {\\n  return NAN;\\n}\\nif (a == b) {\\n  return 1.0;\\n};\\nreturn a / b;\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\"float32\");return this.compileAndRun(n,[t,e],r)},t.prototype.floorDiv=function(t,e){if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,\"\\n  ivec4 ia = round(a);\\n  ivec4 ib = round(b);\\n  bvec4 cond = notEqual(ib, ivec4(0));\\n  ivec4 result = ivec4(0);\\n  vec4 s = sign(a) * sign(b);\\n\\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n  if (cond[0]) {\\n    result[0] = idiv(ia[0], ib[0], s[0]);\\n  }\\n  if (cond[1]) {\\n    result[1] = idiv(ia[1], ib[1], s[1]);\\n  }\\n  if (cond[2]) {\\n    result[2] = idiv(ia[2], ib[2], s[2]);\\n  }\\n  if (cond[3]) {\\n    result[3] = idiv(ia[3], ib[3], s[3]);\\n  }\\n  return vec4(result);\\n\",\"int32\");var n=new ca(\"\\n  float s = sign(a) * sign(b);\\n  int ia = round(a);\\n  int ib = round(b);\\n  if (ib != 0) {\\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\\n    return float(idiv(ia, ib, s));\\n  } else {\\n    return NAN;\\n  }\\n\",t.shape,e.shape),r=this.makeOutputArray(n.outputShape,\"int32\");return this.compileAndRun(n,[t,e],r)},t.prototype.add=function(t,e){if(\"complex64\"===t.dtype&&\"complex64\"===e.dtype)return this.complexSeparableBinaryOp(t,e,aa);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.add(t,e);var n=Nt(t.dtype,e.dtype);if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,aa,n);var r=new ca(aa,t.shape,e.shape),o=this.makeOutputArray(r.outputShape,n);return this.compileAndRun(r,[t,e],o)},t.prototype.packedUnaryOp=function(t,e,n){var r=new cs(t.shape,e),o=this.makePackedTensor(r.outputShape,n);return this.compileAndRun(r,[t],o)},t.prototype.packedBinaryOp=function(t,e,n,r,o){void 0===o&&(o=!1);var a=new pa(n,t.shape,e.shape,o),i=this.makePackedTensor(a.outputShape,r);return this.compileAndRun(a,[t,e],i)},t.prototype.complexSeparableBinaryOp=function(t,e,n){var r=this,o=this.texData.get(t.dataId),a=this.texData.get(e.dataId),i=[[o.complexTensors.real,a.complexTensors.real],[o.complexTensors.imag,a.complexTensors.imag]].map(function(o){var a=o[0],i=o[1],s=r.makeComplexComponentTensorHandle(t,a),u=r.makeComplexComponentTensorHandle(e,i),c=new ca(n,t.shape,e.shape),l=r.makeOutputArray(c.outputShape,Nt(a.dtype,i.dtype));return r.compileAndRun(c,[s,u],l)}),s=i[0],u=i[1],c=this.complex(s,u);return s.dispose(),u.dispose(),c},t.prototype.makeComplexComponentTensorHandle=function(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}},t.prototype.addN=function(t){if(1===t.length)return t[0];if(t.length>d.get(\"WEBGL_MAX_TEXTURES_IN_SHADER\")){var e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}var o=t.map(function(t){return t.dtype}).reduce(function(t,e){return Nt(t,e)}),a=t.map(function(t){return t.shape}),i=d.getBool(\"WEBGL_PACK\"),s=i?new Fo(t[0].shape,a):new Mo(t[0].shape,a),u=i?this.makePackedTensor(s.outputShape,o):this.makeOutputArray(s.outputShape,o);return this.compileAndRun(s,t,u)},t.prototype.subtract=function(t,e){if(\"complex64\"===t.dtype&&\"complex64\"===e.dtype)return this.complexSeparableBinaryOp(t,e,ia);if(this.shouldExecuteOnCPU([t,e]))return this.cpuBackend.subtract(t,e);var n=Nt(t.dtype,e.dtype);if(d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"))return this.packedBinaryOp(t,e,ia,t.dtype);var r=new ca(ia,t.shape,e.shape),o=this.makeOutputArray(r.outputShape,n);return this.compileAndRun(r,[t,e],o)},t.prototype.pow=function(t,e){var n=d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\"),r=n?new pa(\"\\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\\n  vec4 result = multiplier * pow(abs(a), b);\\n\\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\\n  bvec4 isExpZero = equal(b, vec4(0.0));\\n  result.r = isExpZero.r ? 1.0 : result.r;\\n  result.g = isExpZero.g ? 1.0 : result.g;\\n  result.b = isExpZero.b ? 1.0 : result.b;\\n  result.a = isExpZero.a ? 1.0 : result.a;\\n\\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\\n  \\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\\n  return result;\\n\",t.shape,e.shape):new ca(\"\\nif(a < 0.0 && floor(b) < b){\\n  return NAN;\\n}\\nif (b == 0.0) {\\n  return 1.0;\\n}\\nreturn (round(mod(b, 2.0)) != 1) ?\\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\\n\",t.shape,e.shape),o=Nt(t.dtype,e.dtype),a=n?this.makePackedTensor(r.outputShape,o):this.makeOutputArray(r.outputShape,o);return this.compileAndRun(r,[t,e],a)},t.prototype.ceil=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.ceil(t);if(d.getBool(\"WEBGL_PACK_UNARY_OPERATIONS\"))return this.packedUnaryOp(t,es,t.dtype);var e=new Ki(t.shape,es);return this.compileAndRun(e,[t])},t.prototype.floor=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.floor(t);if(d.getBool(\"WEBGL_PACK_UNARY_OPERATIONS\"))return this.packedUnaryOp(t,ns,t.dtype);var e=new Ki(t.shape,ns);return this.compileAndRun(e,[t])},t.prototype.sign=function(t){var e=new Ki(t.shape,\"\\n  if (isnan(x)) { return 0.0; }\\n  return sign(x);\\n\");return this.compileAndRun(e,[t])},t.prototype.isNaN=function(t){var e=new Ki(t.shape,\"return float(isnan(x));\"),n=this.makeOutputArray(e.outputShape,\"bool\");return this.compileAndRun(e,[t],n)},t.prototype.isInf=function(t){var e=new Ki(t.shape,\"return float(isinf(x));\"),n=this.makeOutputArray(e.outputShape,\"bool\");return this.compileAndRun(e,[t],n)},t.prototype.isFinite=function(t){var e=new Ki(t.shape,\"return float(!isnan(x) && !isinf(x));\"),n=this.makeOutputArray(e.outputShape,\"bool\");return this.compileAndRun(e,[t],n)},t.prototype.round=function(t){var e=new Ki(t.shape,\"\\n  // OpenGL ES does not support round function.\\n  // The algorithm is based on banker's rounding.\\n  float base = floor(x);\\n  if ((x - base) < 0.5) {\\n    return floor(x);\\n  } else if ((x - base) > 0.5) {\\n    return ceil(x);\\n  } else {\\n    if (mod(base, 2.0) == 0.0) {\\n      return base;\\n    } else {\\n      return base + 1.0;\\n    }\\n  }\\n\");return this.compileAndRun(e,[t])},t.prototype.exp=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.exp(t);if(d.getBool(\"WEBGL_PACK_UNARY_OPERATIONS\"))return this.packedUnaryOp(t,rs,t.dtype);var e=new Ki(t.shape,rs);return this.compileAndRun(e,[t])},t.prototype.expm1=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.expm1(t);if(d.getBool(\"WEBGL_PACK_UNARY_OPERATIONS\"))return this.packedUnaryOp(t,os,t.dtype);var e=new Ki(t.shape,os);return this.compileAndRun(e,[t])},t.prototype.log=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.log(t);if(d.getBool(\"WEBGL_PACK_UNARY_OPERATIONS\"))return this.packedUnaryOp(t,\"\\n  vec4 result = log(x);\\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\\n\\n  return result;\\n\",t.dtype);var e=new Ki(t.shape,\"if (x < 0.0) return NAN;\\n  return log(x);\");return this.compileAndRun(e,[t])},t.prototype.log1p=function(t){var e=new Ki(t.shape,\"return log(1.0 + x);\");return this.compileAndRun(e,[t])},t.prototype.sqrt=function(t){var e=new Ki(t.shape,\"return sqrt(x);\");return this.compileAndRun(e,[t])},t.prototype.rsqrt=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.rsqrt(t);var e=new Ki(t.shape,\"return inversesqrt(x);\");return this.compileAndRun(e,[t])},t.prototype.square=function(t){var e=new Ki(t.shape,\"return x * x;\");return this.compileAndRun(e,[t])},t.prototype.reciprocal=function(t){var e=new Ki(t.shape,\"return 1.0 / x;\");return this.compileAndRun(e,[t])},t.prototype.relu=function(t){var e;return e=d.getBool(\"WEBGL_PACK\")?new cs(t.shape,ss):new Ki(t.shape,Ji),this.compileAndRun(e,[t])},t.prototype.prelu=function(t,e){var n=d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")?new pa(la,t.shape,e.shape):new ca(ua,t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.elu=function(t){if(d.getBool(\"WEBGL_PACK_UNARY_OPERATIONS\"))return this.packedUnaryOp(t,us,t.dtype);var e=new Ki(t.shape,Zi);return this.compileAndRun(e,[t])},t.prototype.eluDer=function(t,e){var n=d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")?new pa(\"\\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\\n\",t.shape,e.shape):new ca(\"return (b >= 1.0) ? a : a * (b + 1.0);\",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.selu=function(t){var e=new Ki(t.shape,\"\\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\\n  // see: https://arxiv.org/abs/1706.02515\\n  float scaleAlpha = 1.7580993408473768;\\n  float scale = 1.0507009873554805;\\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\\n\");return this.compileAndRun(e,[t])},t.prototype.int=function(t){var e=new Ki(t.shape,\"return float(int(x));\"),n=this.makeOutputArray(e.outputShape,\"int32\");return this.compileAndRun(e,[t],n)},t.prototype.clip=function(t,e,n){var r,o=(r=d.getBool(\"WEBGL_PACK_CLIP\")?new ha(t.shape):new da(t.shape)).getCustomSetupFunc(e,n);return this.compileAndRun(r,[t],null,o)},t.prototype.abs=function(t){if(this.shouldExecuteOnCPU([t]))return this.cpuBackend.abs(t);if(d.getBool(\"WEBGL_PACK_UNARY_OPERATIONS\"))return this.packedUnaryOp(t,Qi,t.dtype);var e=new Ki(t.shape,Qi);return this.compileAndRun(e,[t])},t.prototype.complexAbs=function(t){var e=this.texData.get(t.dataId),n=new fa(t.shape),r=[this.makeComplexComponentTensorHandle(t,e.complexTensors.real),this.makeComplexComponentTensorHandle(t,e.complexTensors.imag)];return this.compileAndRun(n,r)},t.prototype.sigmoid=function(t){var e=new Ki(t.shape,\"return 1.0 / (1.0 + exp(-1.0 * x));\");return this.compileAndRun(e,[t])},t.prototype.softplus=function(t){var e=new Ki(t.shape,\"\\n  float epsilon = 1.1920928955078125e-7;\\n  float threshold = log(epsilon) + 2.0;\\n\\n  bool too_large = x > -threshold;\\n  bool too_small = x < threshold;\\n\\n  float result;\\n  float exp_x = exp(x);\\n\\n  if (too_large){\\n    result = x;\\n  }\\n  else if (too_small){\\n    result = exp_x;\\n  }\\n  else{\\n    result = log(exp_x + 1.0);\\n  }\\n  return result;\\n\");return this.compileAndRun(e,[t])},t.prototype.sin=function(t){var e=new Ki(t.shape,\"if (isnan(x)) return x;\\n  return sin(x);\\n\");return this.compileAndRun(e,[t])},t.prototype.cos=function(t){var e=new Ki(t.shape,\"if (isnan(x)) return x;\\n  return cos(x);\\n\");return this.compileAndRun(e,[t])},t.prototype.tan=function(t){var e=new Ki(t.shape,\"return tan(x);\");return this.compileAndRun(e,[t])},t.prototype.asin=function(t){var e=new Ki(t.shape,\"return asin(x);\");return this.compileAndRun(e,[t])},t.prototype.acos=function(t){var e=new Ki(t.shape,\"return acos(x);\");return this.compileAndRun(e,[t])},t.prototype.atan=function(t){var e=new Ki(t.shape,\"if (isnan(x)) return x;\\n  return atan(x);\\n\");return this.compileAndRun(e,[t])},t.prototype.atan2=function(t,e){var n=d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")?new pa(\"\\n  vec4 result = atan(a, b);\\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\\n  \\n  result.r = isNaN.r > 0. ? NAN : result.r;\\n  result.g = isNaN.g > 0. ? NAN : result.g;\\n  result.b = isNaN.b > 0. ? NAN : result.b;\\n  result.a = isNaN.a > 0. ? NAN : result.a;\\n\\n  return result;\\n\",t.shape,e.shape):new ca(\"\\n  if (isnan(a)) return a;\\n  if (isnan(b)) return b;\\n\\n  return atan(a, b);\\n\",t.shape,e.shape);return this.compileAndRun(n,[t,e])},t.prototype.sinh=function(t){var e=new Ki(t.shape,\"\\n  float e2x = exp(x);\\n  return (e2x - 1.0 / e2x) / 2.0;\\n\");return this.compileAndRun(e,[t])},t.prototype.cosh=function(t){var e=new Ki(t.shape,\"\\n  float e2x = exp(-x);\\n  return (e2x + 1.0 / e2x) / 2.0;\\n\");return this.compileAndRun(e,[t])},t.prototype.tanh=function(t){var e=new Ki(t.shape,\"\\n  float e2x = exp(-2.0 * abs(x));\\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\\n\");return this.compileAndRun(e,[t])},t.prototype.asinh=function(t){var e=new Ki(t.shape,\"return log(x + sqrt(x * x + 1.0));\");return this.compileAndRun(e,[t])},t.prototype.acosh=function(t){var e=new Ki(t.shape,\"if (isnan(x)) return x;\\n  if (x < 1.0) return NAN;\\n  return log(x + sqrt(x * x - 1.0));\");return this.compileAndRun(e,[t])},t.prototype.atanh=function(t){var e=new Ki(t.shape,\"if (isnan(x)) return x;\\n  if ((x < -1.0) || (x > 1.0)) return NAN;\\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;\");return this.compileAndRun(e,[t])},t.prototype.erf=function(t){var e=new Ki(t.shape,'\\n  // Error function is calculated approximately with elementary function.\\n  // See \"Handbook of Mathematical Functions with Formulas,\\n  // Graphs, and Mathematical Tables\", Abramowitz and Stegun.\\n  float p = 0.3275911;\\n  float a1 = 0.254829592;\\n  float a2 = -0.284496736;\\n  float a3 = 1.421413741;\\n  float a4 = -1.453152027;\\n  float a5 = 1.061405429;\\n\\n  float t = 1.0 / (1.0 + p * x);\\n  return 1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x);\\n');return this.compileAndRun(e,[t])},t.prototype.step=function(t,e){var n=new Ki(t.shape,function(t){return void 0===t&&(t=0),Xi+\"\\n    return x > 0.0 ? 1.0 : float(\"+t+\");\\n  \"}(e));return this.compileAndRun(n,[t])},t.prototype.conv2dByMatMul=function(t,e,n,r,o,a){var i=t.shape,s=this.texData.get(t.dataId),u=n.inChannels,c=i[0]*i[1]*i[2],l=n.outChannels,p=\"channelsLast\"===n.dataFormat,h=(1===c||1===l)&&u>1e3,f=i[2]%2!=0&&!!s.isPacked;if(h||!d.getBool(\"WEBGL_LAZILY_UNPACK\")||!d.getBool(\"WEBGL_PACK_BINARY_OPERATIONS\")||!f){var m=p?i[0]*i[1]*i[2]:i[0]*i[2]*i[3],v=this.reshape(t,[1,m,n.inChannels]),g=this.reshape(e,[1,n.inChannels,n.outChannels]);return this.reshape(this.fusedBatchMatMul({a:v,b:g,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a}),n.outShape)}var y=p?i[0]*i[1]*(i[2]+1):i[0]*i[2]*(i[3]+1),b=mt.make([1,y,n.inChannels],{dataId:t.dataId},t.dtype,this),w=s.shape;s.shape=s.shape.slice(),s.shape[s.shape.length-2]++,x(Te(s.shape,b.shape),function(){return\"packed reshape \"+s.shape+\" to \"+b.shape+\" isn't free\"});var C=this.reshape(e,[1,n.inChannels,n.outChannels]),E=this.fusedBatchMatMul({a:b,b:C,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a}),N=this.texData.get(E.dataId);return x(N.isPacked,function(){return\"batchMatMul result is expected to be packed\"}),s.shape=w,N.shape=n.outShape,mt.make(n.outShape,{dataId:E.dataId},E.dtype,this)},t.prototype.conv2dWithIm2Row=function(t,e,n,r,o,a){var i=n.filterWidth,s=n.filterHeight,u=n.inChannels,c=n.outWidth,l=n.outHeight,p=\"channelsLast\"===n.dataFormat,d=i*s*u,h=l*c,f=[d,h],m=t.squeeze([0]),v=e.reshape([1,d,-1]),g=new li(f,m.shape,n),y=this.compileAndRun(g,[m]).reshape([1,f[0],f[1]]),x=null!=r,b=null!=a,w=o?ds(o,!0):null,C=new vi(y.shape,[1,h,n.outChannels],!0,!1,x,w,b),E=[y,v];r&&E.push(r),b&&E.push(a);var N=this.compileAndRun(C,E);return p?N.reshape([1,l,c,n.outChannels]):N.reshape([1,n.outChannels,l,c])},t.prototype.fusedConv2d=function(t,e,n,r,o,a){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&(\"SAME\"===n.padInfo.type||\"VALID\"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,r,o,a);if(d.getBool(\"WEBGL_CONV_IM2COL\")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,r,o,a);var i=null!=r,s=null!=a,u=o?ds(o,!1):null,c=new Ea(n,i,u,s),l=[t,e];return r&&l.push(r),a&&l.push(a),this.compileAndRun(c,l)},t.prototype.conv2d=function(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&(\"SAME\"===n.padInfo.type||\"VALID\"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if(d.getBool(\"WEBGL_CONV_IM2COL\")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);var r=new Ea(n);return this.compileAndRun(r,[t,e])},t.prototype.conv2dDerInput=function(t,e,n){var r=new ya(n);return this.compileAndRun(r,[t,e])},t.prototype.conv2dDerFilter=function(t,e,n){var r=new ga(n);return this.compileAndRun(r,[t,e])},t.prototype.depthwiseConv2D=function(t,e,n){var r;return d.getBool(\"WEBGL_PACK_DEPTHWISECONV\")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(r=new Ra(n),this.compileAndRun(r,[t,e],this.makePackedTensor(n.outShape,t.dtype))):(r=new Sa(n),this.compileAndRun(r,[t,e]))},t.prototype.depthwiseConv2DDerInput=function(t,e,n){var r=new Ca(n);return this.compileAndRun(r,[t,e])},t.prototype.depthwiseConv2DDerFilter=function(t,e,n){var r=new wa(n);return this.compileAndRun(r,[t,e])},t.prototype.conv3d=function(t,e,n){var r=new Na(n);return this.compileAndRun(r,[t,e])},t.prototype.conv3dDerInput=function(t,e,n){var r=new ba(n);return this.compileAndRun(r,[t,e])},t.prototype.conv3dDerFilter=function(t,e,n){var r=new xa(n);return this.compileAndRun(r,[t,e])},t.prototype.maxPool=function(t,e){var n=new Ci(e,\"max\",!1),r=this.makeOutputArray(n.outputShape,t.dtype);return this.compileAndRun(n,[t],r)},t.prototype.avgPool=function(t,e){var n=new Ci(e,\"avg\",!1),r=this.makeOutputArray(n.outputShape,\"float32\");return this.compileAndRun(n,[t],r)},t.prototype.maxPoolBackprop=function(t,e,n,r){var o=new Ci(r,\"max\",!0),a=this.compileAndRun(o,[e]),i=new fi(r),s=this.makeOutputArray(i.outputShape,e.dtype),u=this.compileAndRun(i,[t,a],s);return a.dispose(),u},t.prototype.avgPoolBackprop=function(t,e,n){var r=new ta(n),o=this.makeOutputArray(r.outputShape,e.dtype);return this.compileAndRun(r,[t],o)},t.prototype.cast=function(t,e){return bo(t,e,this)},t.prototype.unstack=function(t,e){for(var n=t.shape[e],r=new Array(t.rank-1),o=0,a=0;a<t.rank;a++)a!==e&&(r[o++]=t.shape[a]);var i=new Array(t.rank).fill(0),s=t.shape.slice();s[e]=1;var u=new Array(n);for(a=0;a<u.length;a++)i[e]=a,u[a]=this.slice(t,i,s).reshape(r);return u},t.prototype.avgPool3d=function(t,e){var n=new Ei(e,\"avg\",!1),r=this.makeOutputArray(n.outputShape,\"float32\");return this.compileAndRun(n,[t],r)},t.prototype.avgPool3dBackprop=function(t,e,n){var r=new ea(n),o=this.makeOutputArray(r.outputShape,e.dtype);return this.compileAndRun(r,[t],o)},t.prototype.maxPool3d=function(t,e){var n=new Ei(e,\"max\",!1),r=this.makeOutputArray(n.outputShape,\"float32\");return this.compileAndRun(n,[t],r)},t.prototype.maxPool3dBackprop=function(t,e,n,r){var o=new Ei(r,\"max\",!0),a=this.compileAndRun(o,[e]),i=new mi(r),s=this.makeOutputArray(i.outputShape,e.dtype),u=this.compileAndRun(i,[t,a],s);return a.dispose(),u},t.prototype.reshape=function(t,e){var n=this.texData.get(t.dataId);return!n.isPacked||Te(t.shape,e)||null!==n.texture&&Te(n.shape,e)?wo(t,e):this.packedReshape(t,e)},t.prototype.resizeBilinear=function(t,e,n,r){var o=d.getBool(\"WEBGL_PACK_IMAGE_OPERATIONS\")?new Ii(t.shape,e,n,r):new Ti(t.shape,e,n,r);return this.compileAndRun(o,[t])},t.prototype.resizeBilinearBackprop=function(t,e,n){var r=new Ri(t,e,n);return this.compileAndRun(r,[t])},t.prototype.resizeNearestNeighbor=function(t,e,n,r){var o=new ki(t.shape,e,n,r);return this.compileAndRun(o,[t])},t.prototype.resizeNearestNeighborBackprop=function(t,e,n){var r=new Ai(t,e,n);return this.compileAndRun(r,[t])},t.prototype.multinomial=function(t,e,n,r){var o=e?t:to(t),a=o.shape[0],i=o.shape[1],s=new gi(a,i,n),u=this.makeOutputArray(s.outputShape,\"int32\"),c=s.getCustomSetupFunc(r);return this.compileAndRun(s,[o],u,c)},t.prototype.oneHot=function(t,e,n,r){var o=new yi(t.size,e,n,r);return this.compileAndRun(o,[t])},t.prototype.diag=function(t){var e=new _a(t.size);return this.compileAndRun(e,[t])},t.prototype.nonMaxSuppression=function(t,e,n,r,o){return on(\"tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead\"),Io(t.dataSync(),e.dataSync(),n,r,o)},t.prototype.cropAndResize=function(t,e,n,r,o,a){var i=new Ta(t.shape,e.shape,r,o,a);return this.compileAndRun(i,[t,e,n])},t.prototype.depthToSpace=function(t,e,n){x(e>1,function(){return\"blockSize should be > 1 for depthToSpace, but was: \"+e});var r=t.shape[0],o=\"NHWC\"===n?t.shape[1]:t.shape[2],a=\"NHWC\"===n?t.shape[2]:t.shape[3],i=\"NHWC\"===n?t.shape[3]:t.shape[1],s=o*e,u=a*e,c=i/(e*e),l=new Da(\"NHWC\"===n?[r,s,u,c]:[r,c,s,u],e,n);return this.compileAndRun(l,[t])},t.prototype.split=function(t,e,n){return ko(t,e,n)},t.prototype.scatterND=function(t,e,n){var r=zr(0,t,n),o=r.sliceRank,a=r.numUpdates,i=r.sliceSize,s=r.strides,u=r.outputSize,c=[u/i,i],l=t.reshape([a,o]),p=e.reshape([a,i]);if(0===u)return wo(Nn([]),n);var d=Rn(0),h=new _i(a,o,l.rank,p.rank,s,c);return this.compileAndRun(h,[p,l,d]).reshape(n)},t.prototype.sparseToDense=function(t,e,n,r){var o=zr(0,t,n),a=o.sliceRank,i=o.numUpdates,s=o.strides,u=o.outputSize,c=new _i(i,a,t.rank,e.rank,s,[u,1],!1);return this.compileAndRun(c,[e,t,r]).reshape(n)},t.prototype.fft=function(t){return this.fftImpl(t,!1)},t.prototype.ifft=function(t){return this.fftImpl(t,!0)},t.prototype.fftImpl=function(t,e){var n=this.texData.get(t.dataId),r=new La(\"return real * expR - imag * expI;\",t.shape,e),o=new La(\"return real * expI + imag * expR;\",t.shape,e),a=[this.makeComplexComponentTensorHandle(t,n.complexTensors.real),this.makeComplexComponentTensorHandle(t,n.complexTensors.imag)],i=this.compileAndRun(r,a),s=this.compileAndRun(o,a),u=this.complex(i,s).as2D(t.shape[0],t.shape[1]);return i.dispose(),s.dispose(),u},t.prototype.gatherND=function(t,e){var n=e.shape,r=n[n.length-1],o=Br(t,e),a=o[0],i=o[1],s=o[2],u=o[3],c=e.reshape([i,r]),l=t.reshape([t.size/s,s]),p=new ja(r,u,[i,s]);return this.compileAndRun(p,[l,c]).reshape(a)},t.prototype.fill=function(t,e,n){if(\"string\"===(n=n||G(e))){var r=M(n,E(t));return r.fill(e),mt.make(t,{values:r},n)}var o=new Va(t,e),a=o.getCustomSetupFunc(e),i=this.makeOutputArray(t,n);return this.compileAndRun(o,[],i,a)},t.prototype.onesLike=function(t){if(\"string\"===t.dtype)throw new Error(\"onesLike is not supported under string dtype\");return this.fill(t.shape,1,t.dtype)},t.prototype.zerosLike=function(t){return this.fill(t.shape,\"string\"===t.dtype?\"\":0,t.dtype)},t.prototype.linspace=function(t,e,n){return Co(t,e,n)},t.prototype.makeOutputArray=function(t,e){return mt.make(t,{},e,this)},t.prototype.makePackedTensor=function(t,e){var n=mt.make(t,{},e,this);return this.texData.get(n.dataId).isPacked=!0,n},t.prototype.unpackTensor=function(t){var e=new ls(t.shape);return this.compileAndRun(e,[t],mt.make(e.outputShape,{},t.dtype,this))},t.prototype.packTensor=function(t){var e=new xi(t.shape);return this.compileAndRun(e,[t],this.makePackedTensor(t.shape,t.dtype),null,!0)},t.prototype.packedReshape=function(t,e){var n=t.reshape([Ce(t.shape)].concat(Ee(t.shape))),r=[Ce(e)].concat(Ee(e)),o=new Si(r,n.shape);return this.compileAndRun(o,[n]).reshape(e)},t.prototype.decode=function(t){var e,n=this.texData.get(t),r=n.isPacked,o=n.shape,a=n.dtype,i=Ne(o),s=jt(o),u=this.makeTensorHandle(o,\"float32\");return this.texData.get(u.dataId).isPacked=!0,this.texData.get(u.dataId).dtype=a,this.texData.get(u.dataId).texShape=s.map(function(t){return 2*t}),e=r?new Oa(i,s):new ka(i,s),this.compileAndRun(e,[{shape:i,dtype:a,dataId:t}],u,null,!0),u},t.prototype.compileAndRun=function(t,e,n,r,o){var a=this;if(void 0===o&&(o=!1),null==n&&(n=t.usesPackedTextures?this.makePackedTensor(t.outputShape,e[0].dtype):this.makeOutputArray(t.outputShape,e[0].dtype)),0===n.size)return this.texData.get(n.dataId).values=_(n.dtype,0),n;var i=e.map(function(e){if(\"complex64\"===e.dtype)throw new Error(\"GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.\");var n=a.texData.get(e.dataId);if(null==n.texture){if(!t.usesPackedTextures&&E(e.shape)<=d.getNumber(\"WEBGL_SIZE_UPLOAD_UNIFORM\"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.usesPackedTextures&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.usesPackedTextures)e=n.isPacked?a.unpackTensor(e):a.packTensor(e),n=a.texData.get(e.dataId);else if(n.isPacked&&!Te(n.shape,e.shape)){var r=e,o=e.shape;e.shape=n.shape,e=a.packedReshape(e,o),n=a.texData.get(e.dataId),r.shape=o}return a.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}});this.uploadToGPU(n.dataId);var s,u={shape:n.shape,texData:this.texData.get(n.dataId),isUniform:!1},c=function(t,e,n){var r=\"\";i.concat(n).forEach(function(t){var e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?\"uniform\":t.texData.texShape;r+=t.shape+\"_\"+n+\"_\"+e});var o=t.userCode;return t.constructor.name+\"_\"+r+\"_\"+o}(t,0,u),l=this.getAndSaveBinary(c,function(){return function(t,e,n,r){var o=e.userCode,a=n.map(function(t,n){var r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}}),i=a.map(function(t){return t.shapeInfo}),s={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},u=jo(a,s,o,e.usesPackedTextures),c=t.createProgram(u),l=null,p=t.getUniformLocation(c,\"NAN\",!1);1===d.getNumber(\"WEBGL_VERSION\")&&(l=t.getUniformLocation(c,\"INFINITY\",!1));for(var h={},f=0;f<e.variableNames.length;f++){var m=e.variableNames[f];h[m]=t.getUniformLocation(c,m,!1),h[\"offset\"+m]=t.getUniformLocation(c,\"offset\"+m,!1)}return{program:e,source:u,webGLProgram:c,uniformLocations:h,inShapeInfos:i,outShapeInfo:s,infLoc:l,nanLoc:p}}(a.gpgpu,t,i,u)}),p=null!=this.activeTimers;return p&&(s=this.startTimer()),function(t,e,n,r,o){ci(e.inShapeInfos,n),ci([e.outShapeInfo],[r]);var a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?t.setOutputPackedMatrixTexture(a,i[0],i[1]):t.setOutputMatrixTexture(a,i[0],i[1]),t.setProgram(e.webGLProgram),1===d.getNumber(\"WEBGL_VERSION\")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(function(n,r){var o=e.program.variableNames[r],a=e.uniformLocations[o],i=e.uniformLocations[\"offset\"+o];if(null!=a)if(n.isUniform)if(E(n.shape)<2)t.gl.uniform1f(a,n.uniformValues[0]);else{var s=n.uniformValues;s instanceof Float32Array||(s=new Float32Array(s)),t.gl.uniform1fv(a,s)}else null!=n.texData.slice&&null!=i&&t.gl.uniform1i(i,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,a,r)}),null!=o&&o(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,l,i,u,r),p&&(s=this.endTimer(s),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(s)})),!d.getBool(\"WEBGL_LAZILY_UNPACK\")&&this.texData.get(n.dataId).isPacked&&!1===o?this.unpackTensor(n):n},t.prototype.getAndSaveBinary=function(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]},t.prototype.getTextureManager=function(){return this.textureManager},t.prototype.dispose=function(){this.disposed||(this.textureManager.dispose(),null!=this.canvas&&null!=this.canvas.remove?this.canvas.remove():this.canvas=null,null!=this.fromPixels2DContext&&this.fromPixels2DContext.canvas.remove&&this.fromPixels2DContext.canvas.remove(),this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)},t.prototype.floatPrecision=function(){var t=this;return null==this.floatPrecisionValue&&(this.floatPrecisionValue=He(function(){if(!d.get(\"WEBGL_RENDER_FLOAT32_ENABLED\")){var e=d.getBool(\"DEBUG\");d.set(\"DEBUG\",!1);var n=t.abs(Rn(1e-8)).dataSync()[0];if(d.set(\"DEBUG\",e),n>0)return 32}return 16})),this.floatPrecisionValue},t.prototype.epsilon=function(){return 32===this.floatPrecision()?1e-7:1e-4},t.prototype.uploadToGPU=function(t){var e,n=this.texData.get(t),r=n.shape,o=n.dtype,a=n.values,i=n.texture,s=n.usage,u=n.isPacked;if(null==i){var c,l=null!=this.activeTimers;l&&(c=J());var p=n.texShape;if(null==p&&(p=Se(r,u),n.texShape=p),null!=a){var d=Ne(r),h=void 0,f=p[1],m=p[0],v=a instanceof Uint8Array;u?(f=(e=Gt(p[0],p[1]))[0],m=e[1],h=new Ba(d,[m,f],v)):h=new Pa(d,[m,f],v);var g=this.makeTensorHandle([m,f],o);this.texData.get(g.dataId).usage=v?Ft.PIXELS:Ft.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),f,m,a);var y=this.makeTensorHandle(h.outputShape,g.dtype);y.size=E(h.outputShape),this.texData.get(y.dataId).isPacked=u,this.compileAndRun(h,[g],y);var x=this.texData.get(y.dataId);n.texture=x.texture,n.texShape=x.texShape,n.isPacked=x.isPacked,n.usage=x.usage,this.disposeData(g.dataId),this.texData.delete(y.dataId),n.values=null,l&&(this.uploadWaitMs+=J()-c)}else{var b=this.acquireTexture(p,s,o,u);n.texture=b}}},t.prototype.convertAndCacheOnCPU=function(t,e){var n=this.texData.get(t),r=n.dtype;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if(\"float32\"===e||\"complex64\"===e)return t;if(\"int32\"===e||\"bool\"===e){for(var n=\"int32\"===e?new Int32Array(t.length):new Uint8Array(t.length),r=0;r<n.length;++r)n[r]=Math.round(t[r]);return n}throw new Error(\"Unknown dtype \"+e)}(e,r)),n.values},t.prototype.acquireTexture=function(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){var o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(\"High memory usage in GPU: \"+o+\" MB, most likely due to a memory leak\")}return this.textureManager.acquireTexture(t,e,r)},t.prototype.computeBytes=function(t,e){return t[0]*t[1]*V(e)},t}();Mt()&&_t.registerBackend(\"webgl\",function(){return new fs},2);var ms=bn({abs_:function(t){var e=un(t,\"x\",\"abs\");return\"complex64\"===e.dtype?_t.runKernel(function(t){return t.complexAbs(e)},{$x:e}):_t.runKernel(function(t,n){var r=t.abs(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.toFloat().step(-1))}}})}}),vs=bn({acos_:function(t){var e=un(t,\"x\",\"acos\");return _t.runKernel(function(t,n){var r=t.acos(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.divStrict(Rn(1).sub(n.toFloat().square()).sqrt()).neg()}}})}}),gs=bn({acosh_:function(t){var e=un(t,\"x\",\"acosh\");return _t.runKernel(function(t,n){var r=t.acosh(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.divStrict(n.toFloat().square().sub(1).sqrt())}}})}}),ys=bn({asin_:function(t){var e=un(t,\"x\",\"asin\");return _t.runKernel(function(t,n){var r=t.asin(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.divStrict(Rn(1).sub(n.toFloat().square()).sqrt())}}})}}),xs=bn({asinh_:function(t){var e=un(t,\"x\",\"asinh\");return _t.runKernel(function(t,n){var r=t.asinh(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.divStrict(Rn(1).add(n.toFloat().square()).sqrt())}}})}}),bs=bn({atan_:function(t){var e=un(t,\"x\",\"atan\");return _t.runKernel(function(t,n){var r=t.atan(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.toFloat().square().add(1))}}})}}),ws=bn({atanh_:function(t){var e=un(t,\"x\",\"atanh\");return _t.runKernel(function(t,n){var r=t.atanh(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(Rn(1).sub(n.toFloat().square()))}}})}}),Cs=bn({ceil_:function(t){var e=un(t,\"x\",\"ceil\");return _t.runKernel(function(t){return t.ceil(e)},{$x:e},function(t){return{$x:function(){return Vn(t)}}})}}),Es=bn({clipByValue_:function(t,e,n){var r=un(t,\"x\",\"clipByValue\");return x(e<=n,function(){return\"Error in clip: min (\"+e+\") must be less than or equal to max (\"+n+\").\"}),_t.runKernel(function(t,o){var a=t.clip(r,e,n);return o([r]),a},{$x:r},function(t,r){var o=r[0];return{$x:function(){return t.where(o.greaterEqual(e).logicalAnd(o.lessEqual(n)),Vn(t))}}})}}),Ns=bn({cos_:function(t){var e=un(t,\"x\",\"cos\");return _t.runKernel(function(t,n){var r=t.cos(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return n.toFloat().sin().neg().mul(t)}}})}}),Ss=bn({cosh_:function(t){var e=un(t,\"x\",\"cosh\");return _t.runKernel(function(t,n){var r=t.cosh(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return n.toFloat().sinh().mulStrict(t)}}})}}),Rs=bn({erf_:function(t){var e=un(t,\"x\",\"erf\");return x(\"int32\"===e.dtype||\"float32\"===e.dtype,function(){return\"Input dtype must be `int32` or `float32`.\"}),\"int32\"===e.dtype&&(e=e.toFloat()),_t.runKernel(function(t,n){var r=t.erf(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.square().neg().exp().mul(2/Math.sqrt(Math.PI)))}}})}}),Ts=bn({exp_:function(t){var e=un(t,\"x\",\"exp\");return _t.runKernel(function(t,n){var r=t.exp(e);return n([r]),r},{$x:e},function(t,e){return{$x:function(){return t.mulStrict(e[0])}}})}}),Is=bn({expm1_:function(t){var e=un(t,\"x\",\"expm1\");return _t.runKernel(function(t,n){var r=t.expm1(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.exp())}}})}}),As=bn({floor_:function(t){var e=un(t,\"x\",\"floor\");return _t.runKernel(function(t){return t.floor(e)},{$x:e},function(t){return{$x:function(){return Vn(t)}}})}}),ks=bn({log_:function(t){var e=un(t,\"x\",\"log\");return _t.runKernel(function(t,n){var r=t.log(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.toFloat())}}})}}),Os=bn({log1p_:function(t){var e=un(t,\"x\",\"log1p\");return _t.runKernel(function(t,n){var r=t.log1p(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.add(1))}}})}}),Ds=bn({logSigmoid_:function(t){var e=un(t,\"x\",\"logSigmoid\");return _t.runKernel(function(t,n){var r=t.softplus(e.neg()).neg();return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.neg().sigmoid())}}})}}),_s=bn({neg_:function(t){var e=un(t,\"x\",\"neg\");return _t.runKernel(function(t){return t.neg(e)},{$x:e},function(t){return{$x:function(){return t.neg()}}})}}),Ms=bn({reciprocal_:function(t){var e=un(t,\"x\",\"reciprocal\");return _t.runKernel(function(t,n){var r=t.reciprocal(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.square().neg())}}})}}),Fs=bn({round_:function(t){var e=un(t,\"x\",\"round\");return _t.runKernel(function(t){return t.round(e)},{$x:e},function(t){return{$x:function(){return Vn(t)}}})}}),Ps=bn({rsqrt_:function(t){var e=un(t,\"x\",\"rsqrt\");return _t.runKernel(function(t,n){var r=t.rsqrt(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.pow(1.5).mul(2)).neg()}}})}}),Bs=bn({sigmoid_:function(t){var e=un(t,\"x\",\"sigmoid\");return _t.runKernel(function(t,n){var r=t.sigmoid(e);return n([r]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.mul(Rn(1).sub(n)))}}})}}),Ls=bn({sign_:function(t){var e=un(t,\"x\",\"sign\");return _t.runKernel(function(t){return t.sign(e)},{$x:e},function(t){return{$x:function(){return Vn(t)}}})}}),Vs=bn({isNaN_:function(t){var e=un(t,\"x\",\"isNaN\");return _t.runKernel(function(t){return t.isNaN(e)},{$x:e},function(t){return{$x:function(){return Vn(t)}}})}}),zs=bn({isInf_:function(t){var e=un(t,\"x\",\"isInf\");return _t.runKernel(function(t){return t.isInf(e)},{$x:e},function(t){return{$x:function(){return Vn(t)}}})}}),Ws=bn({isFinite_:function(t){var e=un(t,\"x\",\"isFinite\");return _t.runKernel(function(t){return t.isFinite(e)},{$x:e},function(t){return{$x:function(){return Vn(t)}}})}}),Us=bn({sin_:function(t){var e=un(t,\"x\",\"sin\");return _t.runKernel(function(t,n){var r=t.sin(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return n.toFloat().cos().mul(t)}}})}}),js=bn({sinh_:function(t){var e=un(t,\"x\",\"sinh\");return _t.runKernel(function(t,n){var r=t.sinh(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return n.toFloat().cosh().mulStrict(t)}}})}}),Gs=bn({softplus_:function(t){var e=un(t,\"x\",\"softplus\");return _t.runKernel(function(t,n){var r=t.softplus(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.sigmoid())}}})}}),Hs=bn({sqrt_:function(t){var e=un(t,\"x\",\"sqrt\");return _t.runKernel(function(t,n){var r=t.sqrt(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.toFloat().sqrt().mul(2))}}})}}),qs=bn({square_:function(t){var e=un(t,\"x\",\"square\");return _t.runKernel(function(t,n){return n([e]),t.square(e)},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mul(n.toFloat().mul(2))}}})}}),$s=bn({step_:function(t,e){void 0===e&&(e=0);var n=un(t,\"x\",\"step\");return _t.runKernel(function(t){return t.step(n,e)},{$x:n},function(t){return{$x:function(){return Vn(t)}}})}}),Ks=bn({tan_:function(t){var e=un(t,\"x\",\"tan\");return _t.runKernel(function(t,n){var r=t.tan(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.div(n.cos().square())}}})}}),Xs=bn({tanh_:function(t){var e=un(t,\"x\",\"tanh\");return _t.runKernel(function(t,n){var r=t.tanh(e);return n([r]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return Rn(1).sub(n.square()).mulStrict(t)}}})}});function Ys(t,e,n,r,o,a){var i,s,u=un(t,\"x\",\"batchNorm\"),c=un(e,\"mean\",\"batchNorm\"),l=un(n,\"variance\",\"batchNorm\");return null!=o&&(i=un(o,\"scale\",\"batchNorm\")),null!=r&&(s=un(r,\"offset\",\"batchNorm\")),x(2===u.rank,function(){return\"Error in batchNorm3D: x must be rank 3 but got rank \"+u.rank+\".\"}),x(2===c.rank||1===c.rank,function(){return\"Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank \"+c.rank+\".\"}),x(2===l.rank||1===l.rank,function(){return\"Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank \"+l.rank+\".\"}),null!=i&&x(2===i.rank||1===i.rank,function(){return\"Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank \"+i.rank+\".\"}),null!=s&&x(2===s.rank||1===s.rank,function(){return\"Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank \"+s.rank+\".\"}),Zs(u,c,l,s,i,a)}function Qs(t,e,n,r,o,a){var i,s,u=un(t,\"x\",\"batchNorm\"),c=un(e,\"mean\",\"batchNorm\"),l=un(n,\"variance\",\"batchNorm\");return null!=o&&(i=un(o,\"scale\",\"batchNorm\")),null!=r&&(s=un(r,\"offset\",\"batchNorm\")),x(3===u.rank,function(){return\"Error in batchNorm3D: x must be rank 3 but got rank \"+u.rank+\".\"}),x(3===c.rank||1===c.rank,function(){return\"Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank \"+c.rank+\".\"}),x(3===l.rank||1===l.rank,function(){return\"Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank \"+l.rank+\".\"}),null!=i&&x(3===i.rank||1===i.rank,function(){return\"Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank \"+i.rank+\".\"}),null!=s&&x(3===s.rank||1===s.rank,function(){return\"Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank \"+s.rank+\".\"}),Zs(u,c,l,s,i,a)}function Js(t,e,n,r,o,a){var i,s,u=un(t,\"x\",\"batchNorm\"),c=un(e,\"mean\",\"batchNorm\"),l=un(n,\"variance\",\"batchNorm\");return null!=o&&(i=un(o,\"scale\",\"batchNorm\")),null!=r&&(s=un(r,\"offset\",\"batchNorm\")),x(4===u.rank,function(){return\"Error in batchNorm4D: x must be rank 4 but got rank \"+u.rank+\".\"}),x(4===c.rank||1===c.rank,function(){return\"Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank \"+c.rank+\".\"}),x(4===l.rank||1===l.rank,function(){return\"Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank \"+l.rank+\".\"}),null!=i&&x(4===i.rank||1===i.rank,function(){return\"Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank \"+i.rank+\".\"}),null!=s&&x(4===s.rank||1===s.rank,function(){return\"Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank \"+s.rank+\".\"}),Zs(u,c,l,s,i,a)}function Zs(t,e,n,r,o,a){null==a&&(a=.001);var i,s,u,c=un(t,\"x\",\"batchNorm\"),l=un(e,\"mean\",\"batchNorm\"),p=un(n,\"variance\",\"batchNorm\");return null!=o&&(i=un(o,\"scale\",\"batchNorm\")),null!=r&&(s=un(r,\"offset\",\"batchNorm\")),x(l.rank===p.rank,function(){return\"Batch normalization gradient requires mean and variance to have equal ranks.\"}),x(null==s||l.rank===s.rank,function(){return\"Batch normalization gradient requires mean and offset to have equal ranks.\"}),x(null==i||l.rank===i.rank,function(){return\"Batch normalization gradient requires mean and scale to have equal ranks.\"}),u=0===c.rank||1===c.rank?c.as4D(1,1,1,c.size):2===c.rank?c.as4D(1,1,c.shape[0],c.shape[1]):3===c.rank?c.as4D(1,c.shape[0],c.shape[1],c.shape[2]):c,_t.runKernel(function(t,e){var n=t.batchNormalization(u,tu(l),tu(p),a,tu(i),tu(s));return e([c,l,p,i]),n},{$x:c,$mean:l,$variance:p,$scale:i,$offset:s},function(t,e){var n=e,r=n[0],o=n[1],i=n[2],s=n[3],c=null==s?Rn(1):s,l=ao(o.shape,u.shape),p=[];if(1===o.rank){for(var d=0;d<u.shape.length-1;++d)p.push(u.shape[d]);p.push(1)}var h=r.sub(o),f=t.mul(c),m=Ps(i.add(Rn(a))),v=m.mul(m).mul(m).mul(Rn(-.5));return{$x:function(){return 1===o.rank?t.mul(Ir(m.as4D(1,1,1,o.shape[0]),p)).mul(c).reshape(r.shape):t.mul(m).mul(c).reshape(r.shape)},$mean:function(){var t=m.mul(Rn(-1)).mul(f);return 1===o.rank&&(t=t.sum(l)),t.reshape(o.shape)},$variance:function(){var t=v.mul(h).mul(f);return 1===o.rank&&(t=t.sum(l)),t.reshape(o.shape)},$scale:function(){var e=h.mul(m),n=t.mul(e);return 1===o.rank&&(n=n.sum(l)),n.reshape(o.shape)},$offset:function(){var e=t;return 1===o.rank&&(e=e.sum(l)),e.reshape(o.shape)}}}).reshape(c.shape)}function tu(t){return null==t?null:0===t.rank?t.as1D():1===t.rank?t:2===t.rank?t.as4D(1,1,t.shape[0],t.shape[1]):3===t.rank?t.as4D(1,t.shape[0],t.shape[1],t.shape[2]):t}function eu(){We(\"tf.batchNormalization() is going away. Use tf.batchNorm() instead, and note the positional argument change of scale, offset, and varianceEpsilon\")}var nu=bn({batchNormalization2d_:function(t,e,n,r,o,a){return void 0===r&&(r=.001),eu(),Ys(t,e,n,a,o,r)}}),ru=bn({batchNormalization3d_:function(t,e,n,r,o,a){return void 0===r&&(r=.001),eu(),Qs(t,e,n,a,o,r)}}),ou=bn({batchNormalization4d_:function(t,e,n,r,o,a){return void 0===r&&(r=.001),eu(),Js(t,e,n,a,o,r)}}),au=bn({batchNormalization_:function(t,e,n,r,o,a){return void 0===r&&(r=.001),eu(),Zs(t,e,n,a,o,r)}}),iu=bn({batchNorm_:Zs}),su=bn({batchNorm2d_:Ys}),uu=bn({batchNorm3d_:Qs}),cu=bn({batchNorm4d_:Js}),lu=bn({logicalAnd_:function(t,e){var n=un(t,\"a\",\"logicalAnd\",\"bool\"),r=un(e,\"b\",\"logicalAnd\",\"bool\");return io(n.shape,r.shape),_t.runKernel(function(t){return t.logicalAnd(n,r)},{$a:n,$b:r})}}),pu=bn({logicalNot_:function(t){var e=un(t,\"x\",\"logicalNot\",\"bool\");return _t.runKernel(function(t){return t.logicalNot(e)},{$x:e})}}),du=bn({logicalOr_:function(t,e){var n=un(t,\"a\",\"logicalOr\",\"bool\"),r=un(e,\"b\",\"logicalOr\",\"bool\");return io(n.shape,r.shape),_t.runKernel(function(t){return t.logicalOr(n,r)},{$a:n,$b:r})}}),hu=bn({logicalXor_:function(t,e){var n=un(t,\"a\",\"logicalXor\",\"bool\"),r=un(e,\"b\",\"logicalXor\",\"bool\");return io(n.shape,r.shape),du(t,e).logicalAnd(lu(t,e).logicalNot())}}),fu=bn({where_:function(t,e,n){var r=un(e,\"a\",\"where\"),o=un(n,\"b\",\"where\"),a=un(t,\"condition\",\"where\",\"bool\");return b(r.shape,o.shape,\"Error in where: \"),1===a.rank?x(a.shape[0]===r.shape[0],function(){return\"The first dimension of `a` must match the size of `condition`.\"}):b(a.shape,o.shape,\"Error in where: \"),_t.runKernel(function(t,e){var n=t.select(a,r,o);return e([a]),n},{$condition:a,$a:r,$b:o},function(t,e){var n=e[0];return{$condition:function(){return Vn(n).toFloat()},$a:function(){return t.mul(n.cast(t.dtype))},$b:function(){return t.mul(n.logicalNot().cast(t.dtype))}}})}}),mu=function(t){return u(this,void 0,void 0,function(){var e,n,r;return c(this,function(o){switch(o.label){case 0:return[4,(e=un(t,\"condition\",\"whereAsync\",\"bool\")).data()];case 1:return n=o.sent(),r=_o(e.shape,n),t!==e&&e.dispose(),[2,r]}})})},vu=bn({add_:function(t,e){var n,r=un(t,\"a\",\"add\"),o=un(e,\"b\",\"add\");n=Rt(r,o),r=n[0],o=n[1];var a=io(r.shape,o.shape);return _t.runKernel(function(t){return t.add(r,o)},{$a:r,$b:o},function(t){return{$a:function(){var e=t,n=ao(r.shape,a);return n.length>0&&(e=e.sum(n)),e.reshape(r.shape)},$b:function(){var e=t,n=ao(o.shape,a);return n.length>0&&(e=e.sum(n)),e.reshape(o.shape)}}})}}),gu=bn({addN_:function(t){x(Array.isArray(t),function(){return\"The argument passed to tf.addN() must be a list of tensors\"}),x(t.length>=1,function(){return\"Must pass at least one tensor to tf.addN(), but got \"+t.length});var e=t.map(function(t,e){return un(t,\"tensors\"+e,\"addN\")}),n=e[0];e.forEach(function(t){if(t.dtype!==n.dtype)throw new Error(\"All tensors passed to tf.addN() must have the same dtype\")}),e.forEach(function(t){if(!N(t.shape,n.shape))throw new Error(\"All tensors passed to tf.addN() must have the same shape\")});var r=e;return _t.runKernel(function(t){return t.addN(e)},r,function(t){var n={};return e.forEach(function(e,r){n[r]=function(){return t.clone()}}),n})}}),yu=bn({addStrict_:function(t,e){var n=un(t,\"a\",\"addStrict\"),r=un(e,\"b\",\"addStrict\");return b(n.shape,r.shape,\"Error in addStrict: \"),n.add(r)}}),xu=bn({atan2_:function(t,e){var n,r=un(t,\"a\",\"atan2\"),o=un(e,\"b\",\"atan2\");n=Rt(r,o),r=n[0],o=n[1];var a=io(r.shape,o.shape);return _t.runKernel(function(t,e){var n=t.atan2(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){var e=vu(n.square(),r.square()),o=t.mul(r.div(e)),i=ao(n.shape,a);return i.length>0&&(o=o.sum(i)),o.reshape(n.shape)},$b:function(){var e=vu(n.square(),r.square()),o=_s(t.mul(n.div(e))),i=ao(r.shape,a);return i.length>0&&(o=o.sum(i)),o.reshape(r.shape)}}})}}),bu=bn({div_:function(t,e){var n,r=un(t,\"a\",\"div\"),o=un(e,\"b\",\"div\");if(n=Rt(r,o),r=n[0],o=n[1],\"int32\"===r.dtype&&\"int32\"===o.dtype)return Cu(r,o);var a=io(r.shape,o.shape);return _t.runKernel(function(t,e){var n=t.realDivide(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){var e=t.div(r.toFloat()),o=ao(n.shape,a);return o.length>0?e.sum(o).reshape(n.shape):e},$b:function(){var e=t.mul(n.toFloat()),o=ao(r.shape,a);o.length>0&&(e=e.sum(o).reshape(r.shape));var i=r.square();return e.div(i.toFloat()).neg()}}})}}),wu=bn({divStrict_:function(t,e){var n=un(t,\"a\",\"div\"),r=un(e,\"b\",\"div\");return b(n.shape,r.shape,\"Error in divideStrict: \"),n.div(r)}}),Cu=bn({floorDiv_:function(t,e){var n,r=un(t,\"a\",\"floorDiv\"),o=un(e,\"b\",\"floorDiv\");n=Rt(r,o),r=n[0],o=n[1];var a=io(r.shape,o.shape);return _t.runKernel(function(t,e){var n=t.floorDiv(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){var e=t.div(r.toFloat()),o=ao(n.shape,a);return o.length>0?e.sum(o).reshape(n.shape):e},$b:function(){var e=t.mul(n.toFloat()),o=ao(r.shape,a);o.length>0&&(e=e.sum(o).reshape(r.shape));var i=r.square();return e.div(i.toFloat()).neg()}}})}}),Eu=bn({maximum_:function(t,e){var n,r=un(t,\"a\",\"maximum\"),o=un(e,\"b\",\"maximum\");return n=Rt(r,o),r=n[0],o=n[1],\"bool\"===r.dtype&&(r=r.toInt(),o=o.toInt()),io(r.shape,o.shape),_t.runKernel(function(t,e){var n=t.maximum(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){return t.mul(n.greaterEqual(r).toFloat())},$b:function(){return t.mul(n.less(r).toFloat())}}})}}),Nu=bn({maximumStrict_:function(t,e){var n=un(t,\"a\",\"maximumStrict\"),r=un(e,\"b\",\"maximumStrict\");return b(n.shape,r.shape,\"Error in maximumStrict: \"),n.maximum(r)}}),Su=bn({minimum_:function(t,e){var n,r=un(t,\"a\",\"minimum\"),o=un(e,\"b\",\"minimum\");return n=Rt(r,o),r=n[0],o=n[1],\"bool\"===r.dtype&&(r=r.toInt(),o=o.toInt()),io(r.shape,o.shape),_t.runKernel(function(t,e){var n=t.minimum(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){return t.mul(n.lessEqual(r).toFloat())},$b:function(){return t.mul(n.greater(r).toFloat())}}})}}),Ru=bn({minimumStrict_:function(t,e){var n=un(t,\"a\",\"minimumStrict\"),r=un(e,\"b\",\"minimumStrict\");return b(n.shape,r.shape,\"Error in minimumStrict: \"),n.minimum(r)}}),Tu=bn({mod_:function(t,e){var n,r=un(t,\"a\",\"mod\"),o=un(e,\"b\",\"mod\");n=Rt(r,o),r=n[0],o=n[1];var a=io(r.shape,o.shape);return _t.runKernel(function(t,e){var n=t.mod(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){var e=ao(n.shape,a);return e.length>0?t.sum(e).reshape(n.shape):t},$b:function(){var e=t.mul(n.div(r).floor().neg()),o=ao(r.shape,a);return o.length>0?e.sum(o).reshape(r.shape):e}}})}}),Iu=bn({modStrict_:function(t,e){var n=un(t,\"a\",\"modStrict\"),r=un(e,\"b\",\"modStrict\");return b(n.shape,r.shape,\"Error in modStrict: \"),n.mod(r)}}),Au=bn({mul_:function(t,e){var n,r=un(t,\"a\",\"mul\"),o=un(e,\"b\",\"mul\");n=Rt(r,o),r=n[0],o=n[1];var a=io(r.shape,o.shape);return _t.runKernel(function(t,e){var n=t.multiply(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){var e=t.mul(r.toFloat()),o=ao(n.shape,a);return o.length>0?e.sum(o).reshape(n.shape):e},$b:function(){var e=t.mul(n.toFloat()),o=ao(r.shape,a);return o.length>0?e.sum(o).reshape(r.shape):e}}})}}),ku=bn({mulStrict_:function(t,e){var n=un(t,\"a\",\"mul\"),r=un(e,\"b\",\"mul\");return b(n.shape,r.shape,\"Error in multiplyStrict: \"),n.mul(r)}}),Ou=bn({pow_:function(t,e){var n=un(t,\"base\",\"pow\"),r=un(e,\"exp\",\"pow\"),o=io(n.shape,r.shape);return t=n.cast(Nt(n.dtype,r.dtype)),e=r.cast(Nt(n.dtype,r.dtype)),_t.runKernel(function(t,e){var o=t.pow(n,r);return e([n,r,o]),o},{$base:n,$exp:r},function(t,e){var n=e[0],r=e[1],a=e[2];return{$base:function(){var e=r.toFloat(),a=t.mul(e.mul(n.pow(e.sub(Rn(1))))),i=ao(n.shape,o);return i.length>0&&(a=a.sum(i)),a.reshape(n.shape)},$exp:function(){var e=n.greater(0),i=n.log().where(e,Vn(n)),s=t.mul(a.mul(i)),u=ao(r.shape,o);return u.length>0&&(s=s.sum(u)),s.reshape(r.shape)}}})}}),Du=bn({powStrict_:function(t,e){return b(t.shape,e.shape,\"Error in powStrict: \"),t.pow(e)}}),_u=bn({squaredDifference_:function(t,e){var n,r=un(t,\"a\",\"squaredDifference\"),o=un(e,\"b\",\"squaredDifference\");return n=Rt(r,o),r=n[0],o=n[1],io(r.shape,o.shape),_t.runKernel(function(t,e){var n=t.squaredDifference(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1],o=Rn(2);return{$a:function(){return t.mul(n.sub(r).mul(o))},$b:function(){return t.mul(r.sub(n).mul(o))}}})}}),Mu=bn({squaredDifferenceStrict_:function(t,e){var n=un(t,\"a\",\"squaredDifferenceStrict\"),r=un(e,\"b\",\"squaredDifferenceStrict\");return b(n.shape,r.shape,\"Error in squaredDifferenceStrict: \"),n.squaredDifference(r)}}),Fu=bn({sub_:function(t,e){var n,r=un(t,\"a\",\"sub\"),o=un(e,\"b\",\"sub\");n=Rt(r,o),r=n[0],o=n[1];var a=io(r.shape,o.shape);return _t.runKernel(function(t){return t.subtract(r,o)},{$a:r,$b:o},function(t){return{$a:function(){var e=t,n=ao(r.shape,a);return n.length>0&&(e=e.sum(n)),e.reshape(r.shape)},$b:function(){var e=t,n=ao(o.shape,a);return n.length>0&&(e=e.sum(n)),e.neg().reshape(o.shape)}}})}}),Pu=bn({subStrict_:function(t,e){var n=un(t,\"a\",\"subStrict\"),r=un(e,\"b\",\"subStrict\");return b(n.shape,r.shape,\"Error in subStrict: \"),n.sub(r)}}),Bu=bn({equal_:function(t,e){var n,r=un(t,\"a\",\"equal\"),o=un(e,\"b\",\"equal\");return n=Rt(r,o),r=n[0],o=n[1],io(r.shape,o.shape),_t.runKernel(function(t){return t.equal(r,o)},{$a:r,$b:o})}}),Lu=bn({equalStrict_:function(t,e){var n=un(t,\"a\",\"equalStrict\"),r=un(e,\"b\",\"equalStrict\");return b(n.shape,r.shape,\"Error in equalStrict: \"),n.equal(r)}}),Vu=bn({greater_:function(t,e){var n,r=un(t,\"a\",\"greater\"),o=un(e,\"b\",\"greater\");return n=Rt(r,o),r=n[0],o=n[1],io(r.shape,o.shape),_t.runKernel(function(t){return t.greater(r,o)},{$a:r,$b:o})}}),zu=bn({greaterEqual_:function(t,e){var n,r=un(t,\"a\",\"greaterEqual\"),o=un(e,\"b\",\"greaterEqual\");return n=Rt(r,o),r=n[0],o=n[1],io(r.shape,o.shape),_t.runKernel(function(t,e){var n=t.greaterEqual(r,o);return e([r,o]),n},{$a:r,$b:o},function(t,e){var n=e[0],r=e[1];return{$a:function(){return Vn(n)},$b:function(){return Vn(r)}}})}}),Wu=bn({greaterEqualStrict_:function(t,e){var n=un(t,\"a\",\"greaterEqualStrict\"),r=un(e,\"b\",\"greaterEqualStrict\");return b(n.shape,r.shape,\"Error in greaterEqualStrict: \"),n.greaterEqual(r)}}),Uu=bn({greaterStrict_:function(t,e){var n=un(t,\"a\",\"greaterStrict\"),r=un(e,\"b\",\"greaterStrict\");return b(n.shape,r.shape,\"Error in greaterStrict: \"),n.greater(r)}}),ju=bn({less_:function(t,e){var n,r=un(t,\"a\",\"less\"),o=un(e,\"b\",\"less\");return n=Rt(r,o),r=n[0],o=n[1],io(r.shape,o.shape),_t.runKernel(function(t){return t.less(r,o)},{$a:r,$b:o})}}),Gu=bn({lessEqual_:function(t,e){var n,r=un(t,\"a\",\"lessEqual\"),o=un(e,\"b\",\"lessEqual\");return n=Rt(r,o),r=n[0],o=n[1],io(r.shape,o.shape),_t.runKernel(function(t){return t.lessEqual(r,o)},{$a:r,$b:o})}}),Hu=bn({lessEqualStrict_:function(t,e){var n=un(t,\"a\",\"lessEqualStrict\"),r=un(e,\"b\",\"lessEqualStrict\");return b(n.shape,r.shape,\"Error in lessEqualStrict: \"),n.lessEqual(r)}}),qu=bn({lessStrict_:function(t,e){var n=un(t,\"a\",\"lessStrict\"),r=un(e,\"b\",\"lessStrict\");return b(n.shape,r.shape,\"Error in lessStrict: \"),n.less(r)}}),$u=bn({notEqual_:function(t,e){var n,r=un(t,\"a\",\"notEqual\"),o=un(e,\"b\",\"notEqual\");return n=Rt(r,o),r=n[0],o=n[1],io(r.shape,o.shape),_t.runKernel(function(t){return t.notEqual(r,o)},{$a:r,$b:o})}}),Ku=bn({notEqualStrict_:function(t,e){var n=un(t,\"a\",\"notEqualStrict\"),r=un(e,\"b\",\"notEqualStrict\");return b(n.shape,r.shape,\"Error in notEqualStrict: \"),n.notEqual(r)}});function Xu(t,e){for(var n=[],r=t;r<e;++r)n.push(r);return n}function Yu(t){for(var e=[],n=0;n<t.length;++n)for(var r=0;r<t[n].length;++r)e.push(t[n][r]);return e}var Qu=bn({gather_:function(t,e,n){void 0===n&&(n=0);var r=un(t,\"x\",\"gather\"),o=un(e,\"indices\",\"gather\",\"int32\");n=O(n,r.shape)[0];var a=function(t,e,n){for(var r=t.shape[n],o=[],a=1,i=1,s=0;s<n;s++)o.push(t.shape[s]),a*=t.shape[s];for(s=0;s<e.rank;s++)o.push(e.shape[s]);for(s=n+1;s<t.rank;s++)o.push(t.shape[s]),i*=t.shape[s];return{batchSize:a,sliceSize:i,dimSize:r,outputShape:o}}(r,o,n);return _t.runKernel(function(t,e){var a=t.gather(r,o.flatten(),n);return e([o]),a},{$x:r},function(t,e){var o=e[0];return{$x:function(){var e=r.shape,a=o.size,i=e.slice(0,n),s=i.length,u=e.slice(n,e.length).slice(1),c=u.length,l=Xu(0,s),p=Xu(s+1,s+1+c),d=Yu([i,[a],u]),h=t.reshape(d),f=o.reshape([a]),m=Yu([[s],l,p]),v=h.transpose(m),g=Ju(v,f,r.shape[n]),y=vn(m);return g.transpose(y)}}}).reshape(a.outputShape)}}),Ju=bn({unsortedSegmentSum_:function(t,e,n){var r=un(t,\"x\",\"unsortedSegmentSum\"),o=un(e,\"segmentIds\",\"unsortedSegmentSum\",\"int32\");return x(S(n),function(){return\"numSegments must be of dtype int\"}),_t.runKernel(function(t,e){var a=t.unsortedSegmentSum(r,o,n);return e([o]),a},{$x:r},function(t,e){var n=e[0];return{$x:function(){return function(t,e){for(var n=Eu(e,Vn(e)),r=Qu(t,n),o=zu(e,Rn(0,\"int32\")),a=r.rank-o.rank,i=0;i<a;++i)o=pr(o,i+1);o=lu(o,_n(r.shape,\"bool\"));var s=Vn(r);return fu(o,r,s)}(t,n)}}})}}),Zu=function(t,e,n){return u(this,void 0,void 0,function(){var r,o,a,i,s,u,l,p,d,h,f,m,v;return c(this,function(c){switch(c.label){case 0:for(r=un(t,\"tensor\",\"boolMask\"),o=un(e,\"mask\",\"boolMask\",\"bool\"),a=null==n?0:n,i=o.rank,s=r.shape,x(i>0,function(){return\"mask cannot be scalar\"}),b(s.slice(a,a+i),o.shape,\"mask's shape must match the first K dimensions of tensor's shape,\"),u=1,l=a;l<a+i;l++)u*=s[l];return p=s.slice(0,a).concat([u],s.slice(a+i)),d=r.reshape(p),h=o.reshape([-1]),[4,mu(h)];case 1:return f=c.sent(),m=f.squeeze([1]),v=Qu(d,m,a),t!==r&&r.dispose(),e!==o&&o.dispose(),m.dispose(),d.dispose(),h.dispose(),f.dispose(),[2,v]}})})};function tc(t,e,n,r,o,a,i){void 0===a&&(a=\"NHWC\"),x(t.length===e.rank,function(){return\"Length of inShape (\"+t.length+\") and rank of dy (\"+e.rank+\") must match\"});var s=t,u=e,c=!1;3===e.rank&&(c=!0,u=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]),s=[1,t[0],t[1],t[2]]),x(4===s.length,function(){return\"Error in conv2dDerInput: inShape must be length 4, but got length \"+s.length+\".\"}),x(4===u.rank,function(){return\"Error in conv2dDerInput: dy must be rank 4, but got rank \"+u.rank}),x(4===n.rank,function(){return\"Error in conv2dDerInput: filter must be rank 4, but got rank \"+n.rank});var l=\"NHWC\"===a?s[3]:s[1],p=\"NHWC\"===a?u.shape[3]:u.shape[1];x(l===n.shape[2],function(){return\"Error in conv2dDerInput: depth of input (\"+l+\") must match input depth for filter \"+n.shape[2]+\".\"}),x(p===n.shape[3],function(){return\"Error in conv2dDerInput: depth of output (\"+p+\") must match output depth for filter \"+n.shape[3]+\".\"}),null!=i&&x(S(o),function(){return\"Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode \"+i+\" but got pad \"+o+\".\"});var d=xo(a),h=co(s,n.shape,r,1,o,i,!1,d),f=_t.runKernel(function(t,e){var r=t.conv2dDerInput(u,n,h);return e([n,u]),r},{dy4D:u,filter:n},function(t,e){var n=e[0],s=e[1];return{dy4D:function(){return ac(t,n,r,o,a,1,i)},filter:function(){return sc(t,s,n.shape,r,o,a,i)}}});return c?f.as3D(f.shape[1],f.shape[2],f.shape[3]):f}function ec(t,e,n,r,o,a,i){void 0===a&&(a=\"NHWC\");var s=t;3===t.rank&&(s=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var u=e;3===u.rank&&(u=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),x(4===s.rank,function(){return\"Error in conv2dDerFilter: input must be rank 4, but got shape \"+s.shape+\".\"}),x(4===u.rank,function(){return\"Error in conv2dDerFilter: dy must be rank 4, but got shape \"+u.shape+\".\"}),x(4===n.length,function(){return\"Error in conv2dDerFilter: filterShape must be length 4, but got \"+n+\".\"});var c=\"NHWC\"===a?s.shape[3]:s.shape[1],l=\"NHWC\"===a?u.shape[3]:u.shape[1];x(c===n[2],function(){return\"Error in conv2dDerFilter: depth of input \"+c+\") must match input depth in filter (\"+n[2]+\".\"}),x(l===n[3],function(){return\"Error in conv2dDerFilter: depth of dy (\"+l+\") must match output depth for filter (\"+n[3]+\").\"}),null!=i&&x(S(o),function(){return\"Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode \"+i+\" but got pad \"+o+\".\"});var p=xo(a),d=co(s.shape,n,r,1,o,i,!1,p);return _t.runKernel(function(t){return t.conv2dDerFilter(s,u,d)},{x4D:s,dy4D:u})}function nc(t){var e=function(t){return\"number\"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}(t),n=e[0],r=e[1],o=e[2];return 1===n&&1===r&&1===o}function rc(t,e,n,r,o){x(t.length===e.rank,function(){return\"Length of inShape (\"+t.length+\") and rank of dy (\"+e.rank+\") must match\"});var a=t,i=e,s=!1;4===e.rank&&(s=!0,i=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]),a=[1,t[0],t[1],t[2],t[3]]);var u=a[4],c=i.shape[4];x(5===a.length,function(){return\"Error in conv3dDerInput: inShape must be length 5, but got length \"+a.length+\".\"}),x(5===i.rank,function(){return\"Error in conv3dDerInput: dy must be rank 5, but got rank \"+i.rank}),x(5===n.rank,function(){return\"Error in conv3dDerInput: filter must be rank 5, but got rank \"+n.rank}),x(u===n.shape[3],function(){return\"Error in conv3dDerInput: depth of input (\"+u+\") must match input depth for filter \"+n.shape[3]+\".\"}),x(c===n.shape[4],function(){return\"Error in conv3dDerInput: depth of output (\"+c+\") must match output depth for filter \"+n.shape[4]+\".\"});var l=lo(a,n.shape,r,1,o),p=_t.runKernel(function(t){return t.conv3dDerInput(i,n,l)},{dy5D:i});return s?p.as4D(p.shape[1],p.shape[2],p.shape[3],p.shape[4]):p}var oc=bn({conv1d_:function(t,e,n,r,o,a,i){void 0===o&&(o=\"NWC\"),void 0===a&&(a=1);var s=un(t,\"x\",\"conv1d\"),u=un(e,\"filter\",\"conv1d\"),c=s,l=!1;2===s.rank&&(l=!0,c=s.as3D(1,s.shape[0],s.shape[1])),x(3===c.rank,function(){return\"Error in conv1d: input must be rank 3, but got rank \"+c.rank+\".\"}),x(3===u.rank,function(){return\"Error in conv1d: filter must be rank 3, but got rank \"+u.rank+\".\"}),null!=i&&x(S(r),function(){return\"Error in conv1d: pad must be an integer when using, dimRoundingMode \"+i+\" but got pad \"+r+\".\"}),x(c.shape[2]===u.shape[1],function(){return\"Error in conv1d: depth of input (\"+c.shape[2]+\") must match input depth for filter \"+u.shape[1]+\".\"}),x(yo(n,a),function(){return\"Error in conv1D: Either stride or dilation must be 1. Got stride \"+n+\" and dilation '\"+a+\"'\"}),x(\"NWC\"===o,function(){return\"Error in conv1d: got dataFormat of \"+o+\" but only NWC is currently supported.\"});var p=u.as4D(1,u.shape[0],u.shape[1],u.shape[2]),d=c.as4D(c.shape[0],1,c.shape[1],c.shape[2]),h=ac(d,p,[1,n],r,\"NHWC\",[1,a],i);return l?h.as2D(h.shape[2],h.shape[3]):h.as3D(h.shape[0],h.shape[2],h.shape[3])}}),ac=bn({conv2d_:function(t,e,n,r,o,a,i){void 0===o&&(o=\"NHWC\"),void 0===a&&(a=[1,1]);var s=un(t,\"x\",\"conv2d\"),u=un(e,\"filter\",\"conv2d\"),c=s,l=!1;3===s.rank&&(l=!0,c=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),x(4===c.rank,function(){return\"Error in conv2d: input must be rank 4, but got rank \"+c.rank+\".\"}),x(4===u.rank,function(){return\"Error in conv2d: filter must be rank 4, but got rank \"+u.rank+\".\"}),null!=i&&x(S(r),function(){return\"Error in conv2d: pad must be an integer when using, dimRoundingMode \"+i+\" but got pad \"+r+\".\"});var p=\"NHWC\"===o?c.shape[3]:c.shape[1];x(p===u.shape[2],function(){return\"Error in conv2d: depth of input (\"+p+\") must match input depth for filter \"+u.shape[2]+\".\"}),x(yo(n,a),function(){return\"Error in conv2D: Either strides or dilations must be 1. Got strides \"+n+\" and dilations '\"+a+\"'\"});var d=xo(o),h=co(c.shape,u.shape,n,a,r,i,!1,d),f=_t.runKernel(function(t,e){var n=t.conv2d(c,u,h);return e([u,c]),n},{x:c,$filter:u},function(t,e){var i=e,s=i[0],u=i[1];return x(go(a),function(){return\"Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '\"+a+\"'\"}),{x:function(){return tc(u.shape,t,s,n,r,o)},$filter:function(){return ec(u,t,s.shape,n,r,o)}}});return l?f.as3D(f.shape[1],f.shape[2],f.shape[3]):f}}),ic=bn({conv3d_:function(t,e,n,r,o,a){void 0===o&&(o=\"NDHWC\"),void 0===a&&(a=[1,1,1]);var i=un(t,\"x\",\"conv3d\"),s=un(e,\"filter\",\"conv3d\"),u=i,c=!1;4===i.rank&&(c=!0,u=i.as5D(1,i.shape[0],i.shape[1],i.shape[2],i.shape[3])),x(5===u.rank,function(){return\"Error in conv3d: input must be rank 5, but got rank \"+u.rank+\".\"}),x(5===s.rank,function(){return\"Error in conv3d: filter must be rank 5, but got rank \"+s.rank+\".\"}),x(u.shape[4]===s.shape[3],function(){return\"Error in conv3d: depth of input (\"+u.shape[4]+\") must match input depth for filter \"+s.shape[3]+\".\"}),x(function(t,e){return nc(n)||nc(e)}(0,a),function(){return\"Error in conv3D: Either strides or dilations must be 1. Got strides \"+n+\" and dilations '\"+a+\"'\"}),x(\"NDHWC\"===o,function(){return\"Error in conv3d: got dataFormat of \"+o+\" but only NDHWC is currently supported.\"});var l=lo(u.shape,s.shape,n,a,r),p=_t.runKernel(function(t,e){var n=t.conv3d(u,s,l);return e([u,s]),n},{x:u,$filter:s},function(t,e){x(nc(a),function(){return\"Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '\"+a+\"'\"});var o=e[0],i=e[1];return{x:function(){return rc(o.shape,t,i,n,r)},$filter:function(){return function(t,e,n,r,o){var a=t;4===t.rank&&(a=t.as5D(1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]));var i=e;4===i.rank&&(i=e.as5D(1,e.shape[0],e.shape[1],e.shape[2],e.shape[3])),x(5===a.rank,function(){return\"Error in conv3dDerFilter: input must be rank 5, but got shape \"+a.shape+\".\"}),x(5===i.rank,function(){return\"Error in conv3dDerFilter: dy must be rank 5, but got shape \"+i.shape+\".\"}),x(5===n.length,function(){return\"Error in conv3dDerFilter: filterShape must be length 5, but got \"+n+\".\"}),x(a.shape[4]===n[3],function(){return\"Error in conv3dDerFilter: depth of input \"+a.shape[4]+\") must match input depth in filter (\"+n[3]+\".\"}),x(i.shape[4]===n[4],function(){return\"Error in conv3dDerFilter: depth of dy (\"+i.shape[4]+\") must match output depth for filter (\"+n[4]+\").\"});var s=lo(a.shape,n,r,1,o);return _t.runKernel(function(t){return t.conv3dDerFilter(a,i,s)},{x5D:a,dy5D:i})}(o,t,i.shape,n,r)}}});return c?p.as4D(p.shape[1],p.shape[2],p.shape[3],p.shape[4]):p}}),sc=bn({conv2dDerFilter_:ec}),uc=bn({conv2dDerInput_:tc}),cc=bn({depthwiseConv2d_:function(t,e,n,r,o,a,i){void 0===o&&(o=\"NHWC\"),void 0===a&&(a=[1,1]);var s=un(t,\"x\",\"depthwiseConv2d\"),u=un(e,\"filter\",\"depthwiseConv2d\"),c=s,l=!1;3===s.rank&&(l=!0,c=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),x(4===c.rank,function(){return\"Error in depthwiseConv2d: input must be rank 4, but got rank \"+c.rank+\".\"}),x(4===u.rank,function(){return\"Error in depthwiseConv2d: filter must be rank 4, but got rank \"+u.rank+\".\"}),x(c.shape[3]===u.shape[2],function(){return\"Error in depthwiseConv2d: number of input channels (\"+c.shape[3]+\") must match the inChannels dimension in filter \"+u.shape[2]+\".\"}),null==a&&(a=[1,1]),x(yo(n,a),function(){return\"Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides \"+n+\" and dilations '\"+a+\"'\"}),null!=i&&x(S(r),function(){return\"Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode \"+i+\" but got pad \"+r+\".\"});var p=co(c.shape,u.shape,n,a,r,i,!0),d=_t.runKernel(function(t,e){var n=t.depthwiseConv2D(c,u,p);return e([c,u]),n},{x:c,$filter:u},function(t,e){x(go(a),function(){return\"Error in gradient of depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '\"+a+\"'\"});var n=e[0],r=e[1];return{x:function(){return function(t,e,n,r){var o=e,a=!1;3===e.rank&&(a=!0,o=e.as4D(1,e.shape[0],e.shape[1],e.shape[2]));var i=_t.runKernel(function(t){return t.depthwiseConv2DDerInput(o,n,r)},{dy4D:o});return a?i.as3D(i.shape[1],i.shape[2],i.shape[3]):i}(n.shape,t,r,p)},$filter:function(){return function(t,e,n,r){var o=t;3===t.rank&&(o=t.as4D(1,t.shape[0],t.shape[1],t.shape[2]));var a=e;return 3===a.rank&&(a=e.as4D(1,e.shape[0],e.shape[1],e.shape[2])),_t.runKernel(function(t){return t.depthwiseConv2DDerFilter(o,a,r)},{x4D:o,dy4D:a})}(n,t,r.shape,p)}}});return l?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}}),lc=bn({separableConv2d_:function(t,e,n,r,o,a,i){void 0===a&&(a=[1,1]),void 0===i&&(i=\"NHWC\");var s=un(t,\"x\",\"separableConv2d\"),u=un(e,\"depthwiseFilter\",\"separableConv2d\"),c=un(n,\"pointwiseFilter\",\"separableConv2d\"),l=s,p=!1;if(3===s.rank&&(p=!0,l=s.as4D(1,s.shape[0],s.shape[1],s.shape[2])),\"NCHW\"===i)throw new Error(\"separableConv2d currently does not support dataFormat NCHW; only NHWC is supported\");x(4===l.rank,function(){return\"Error in separableConv2d: input must be rank 4, but got rank \"+l.rank+\".\"}),x(4===u.rank,function(){return\"Error in separableConv2d: depthwise filter must be rank 4, but got rank \"+u.rank+\".\"}),x(4===c.rank,function(){return\"Error in separableConv2d: pointwise filter must be rank 4, but got rank \"+u.rank+\".\"}),x(1===c.shape[0],function(){return\"Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got \"+c.shape[0]+\".\"}),x(1===c.shape[1],function(){return\"Error in separableConv2d: the second dimension of pointwise filter must be 1, but got \"+c.shape[1]+\".\"});var d=u.shape[2],h=u.shape[3];x(c.shape[2]===d*h,function(){return\"Error in separableConv2d: the third dimension of pointwise filter must be \"+d*h+\", but got \"+c.shape[2]+\".\"});var f=cc(l,u,r,o,i,a),m=ac(f,c,1,\"valid\",i);return p?m.as3D(m.shape[1],m.shape[2],m.shape[3]):m}}),pc=bn({conv2dTranspose_:function(t,e,n,r,o,a){return tc(n,un(t,\"x\",\"conv2dTranspose\"),un(e,\"filter\",\"conv2dTranspose\"),r,o,\"NHWC\",a)}}),dc=bn({conv3dTranspose_:function(t,e,n,r,o){return rc(n,un(t,\"x\",\"conv3dTranspose\"),un(e,\"filter\",\"conv3dTranspose\"),r,o)}}),hc=bn({matMul_:function(t,e,n,r){var o;void 0===n&&(n=!1),void 0===r&&(r=!1);var a=un(t,\"a\",\"matMul\"),i=un(e,\"b\",\"matMul\");o=Rt(a,i),a=o[0],i=o[1];var s=n?a.shape[a.rank-2]:a.shape[a.rank-1],u=r?i.shape[i.rank-1]:i.shape[i.rank-2],c=n?a.shape[a.rank-1]:a.shape[a.rank-2],l=r?i.shape[i.rank-2]:i.shape[i.rank-1],p=a.shape.slice(0,-2),d=i.shape.slice(0,-2),h=E(p),f=E(d);x(a.rank>=2&&i.rank>=2&&a.rank===i.rank,function(){return\"Error in matMul: inputs must have the same rank of at least 2, got ranks \"+a.rank+\" and \"+i.rank+\".\"}),x(N(p,d),function(){return\"Error in matMul: outer dimensions (\"+p+\") and (\"+d+\") of Tensors with shapes \"+a.shape+\" and \"+i.shape+\" must match.\"}),x(s===u,function(){return\"Error in matMul: inner shapes (\"+s+\") and (\"+u+\") of Tensors with shapes \"+a.shape+\" and \"+i.shape+\" and transposeA=\"+n+\" and transposeB=\"+r+\" must match.\"});var m=a.shape.slice(0,-2).concat([c,l]),v=n?a.as3D(h,s,c):a.as3D(h,c,s),g=r?i.as3D(f,l,u):i.as3D(f,u,l);return _t.runKernel(function(t,e){var o=t.batchMatMul(v,g,n,r);return e([v,g]),o},{$a:v,$b:g},function(t,e){var o=e,a=o[0],i=o[1];return n||r?!n&&r?{$a:function(){return t.matMul(i,!1,!1)},$b:function(){return t.matMul(a,!0,!1)}}:n&&!r?{$a:function(){return i.matMul(t,!1,!0)},$b:function(){return a.matMul(t,!1,!1)}}:{$a:function(){return i.matMul(t,!0,!0)},$b:function(){return t.matMul(a,!0,!0)}}:{$a:function(){return t.matMul(i,!1,!0)},$b:function(){return a.matMul(t,!0,!1)}}}).reshape(m)}}),fc=bn({dot_:function(t,e){var n=un(t,\"t1\",\"dot\"),r=un(e,\"t2\",\"dot\");x(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),function(){return\"Error in dot: inputs must all be rank 1 or 2, but got ranks \"+n.rank+\" and \"+r.rank+\".\"});var o=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];return x(o===a,function(){return\"Error in dot: inner dimensions of inputs must match, but got \"+o+\" and \"+a+\".\"}),1===n.rank&&1===r.rank?n.as2D(1,-1).matMul(r.as2D(-1,1)).asScalar():1===n.rank&&2===r.rank?n.as2D(1,-1).matMul(r.as2D(r.shape[0],r.shape[1])).as1D():2===n.rank&&1===r.rank?n.matMul(r.as2D(-1,1)).as1D():n.matMul(r.as2D(r.shape[0],r.shape[1]))}}),mc=bn({outerProduct_:function(t,e){var n=un(t,\"v1\",\"outerProduct\"),r=un(e,\"v2\",\"outerProduct\");return x(1===n.rank&&1===r.rank,function(){return\"Error in outerProduct: inputs must be rank 1, but got ranks \"+n.rank+\" and \"+r.rank+\".\"}),n.as2D(-1,1).matMul(r.as2D(1,-1))}}),vc=bn({reverse_:function(t,e){var n=un(t,\"x\",\"reverse\");if(0===n.rank)return n.clone();var r=O(e,n.shape);return _t.runKernel(function(t){return t.reverse(n,r)},{$x:n},function(t){return{$x:function(){return t.reverse(r)}}}).reshapeAs(n)}}),gc=bn({reverse1d_:function(t){var e=un(t,\"x\",\"reverse\");return x(1===e.rank,function(){return\"Error in reverse1D: x must be rank 1 but got rank \"+e.rank+\".\"}),vc(e,0)}}),yc=bn({reverse2d_:function(t,e){var n=un(t,\"x\",\"reverse\");return x(2===n.rank,function(){return\"Error in reverse2D: x must be rank 2 but got rank \"+n.rank+\".\"}),vc(n,e)}}),xc=bn({reverse3d_:function(t,e){var n=un(t,\"x\",\"reverse\");return x(3===n.rank,function(){return\"Error in reverse3D: x must be rank 3 but got rank \"+n.rank+\".\"}),vc(n,e)}}),bc=bn({reverse4d_:function(t,e){var n=un(t,\"x\",\"reverse\");return x(4===n.rank,function(){return\"Error in reverse4D: x must be rank 4 but got rank \"+n.rank+\".\"}),vc(n,e)}});function wc(t,e,n,r,o,a){var i=un(t,\"x\",\"maxPool\"),s=i,u=!1;3===i.rank&&(u=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),null==r&&(r=[1,1]),x(4===s.rank,function(){return\"Error in maxPool: input must be rank 4 but got rank \"+s.rank+\".\"}),x(yo(n,r),function(){return\"Error in maxPool: Either strides or dilations must be 1. Got strides \"+n+\" and dilations '\"+r+\"'\"}),null!=a&&x(S(o),function(){return\"Error in maxPool: pad must be an integer when using, dimRoundingMode \"+a+\" but got pad \"+o+\".\"});var c=so(s.shape,e,n,r,o,a),l=_t.runKernel(function(t,e){var n=t.maxPool(s,c);return e([s,n]),n},{x:s},function(t,a){var i=a[0],s=a[1];return{x:function(){return function(t,e,n,r,o,a,i,s){var u=un(t,\"dy\",\"maxPoolBackprop\"),c=un(e,\"input\",\"maxPoolBackprop\"),l=un(n,\"output\",\"maxPoolBackprop\");x(c.rank===u.rank,function(){return\"Rank of input (\"+c.rank+\") does not match rank of dy (\"+u.rank+\")\"}),null==a&&(a=[1,1]),x(yo(o,a),function(){return\"Error in maxPoolBackProp: Either strides or dilations must be 1. Got strides \"+o+\" and dilations '\"+a+\"'\"}),x(4===u.rank,function(){return\"Error in maxPoolBackprop: dy must be rank 4 but got rank \"+u.rank+\".\"}),x(4===c.rank,function(){return\"Error in maxPoolBackprop: input must be rank 4 but got rank \"+c.rank+\".\"});var p=so(c.shape,r,o,a,i,s);return _t.runKernel(function(t){return t.maxPoolBackprop(u,c,l,p)},{$dy:u,$input:c})}(t,i,s,e,n,r,o)}}});return u?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}function Cc(t,e,n,r,o,a){var i=un(t,\"x\",\"avgPool\",\"float32\");null==r&&(r=[1,1]),x(yo(n,r),function(){return\"Error in avgPool: Either strides or dilations must be 1. Got strides \"+n+\" and dilations '\"+r+\"'\"});var s=i,u=!1;3===i.rank&&(u=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),x(4===s.rank,function(){return\"Error in avgPool: x must be rank 4 but got rank \"+s.rank+\".\"}),null!=a&&x(S(o),function(){return\"Error in avgPool: pad must be an integer when using, dimRoundingMode \"+a+\" but got pad \"+o+\".\"});var c=so(s.shape,e,n,r,o,a),l=_t.runKernel(function(t){return t.avgPool(s,c)},{x:s},function(t){return{x:function(){return function(t,e,n,r,o,a){var i=un(t,\"dy\",\"avgPoolBackprop\"),s=un(e,\"input\",\"avgPoolBackprop\");x(s.rank===i.rank,function(){return\"Rank of input (\"+s.rank+\") does not match rank of dy (\"+i.rank+\")\"}),null==o&&(o=[1,1]),x(yo(r,o),function(){return\"Error in avgPoolBackprop: Either strides or dilations must be 1. Got strides \"+r+\" and dilations '\"+o+\"'\"});var u=s,c=i,l=!1;3===s.rank&&(l=!0,u=s.as4D(1,s.shape[0],s.shape[1],s.shape[2]),c=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),x(4===c.rank,function(){return\"Error in avgPoolBackprop: dy must be rank 4 but got rank \"+c.rank+\".\"}),x(4===u.rank,function(){return\"Error in avgPoolBackprop: input must be rank 4 but got rank \"+u.rank+\".\"});var p=so(u.shape,n,r,o,a),d=_t.runKernel(function(t){return t.avgPoolBackprop(c,u,p)},{dy4D:c,input4D:u});return l?d.as3D(d.shape[1],d.shape[2],d.shape[3]):d}(t,s,e,n,r,o)}}});return l=l.cast(i.dtype),u?l.as3D(l.shape[1],l.shape[2],l.shape[3]):l}var Ec=bn({maxPool_:function(t,e,n,r,o){return wc(t,e,n,1,r,o)}}),Nc=bn({avgPool_:function(t,e,n,r,o){return Cc(t,e,n,1,r,o)}}),Sc=bn({pool_:function(t,e,n,r,o,a){null==o&&(o=[1,1]),null==a&&(a=1),0===r&&(r=\"valid\");var i=un(t,\"x\",\"maxPool\"),s=i,u=!1;3===i.rank&&(u=!0,s=i.as4D(1,i.shape[0],i.shape[1],i.shape[2])),x(yo(a,o),function(){return\"Error in pool: Either strides or dilations must be 1. Got strides \"+a+\" and dilations '\"+o+\"'\"});var c,l=so(s.shape,e,a,o,r),p=[l.dilationHeight,l.dilationWidth];c=\"same\"===r?function(t,e){var n=t.map(function(t,n){return t+(t-1)*(e[n]-1)}).map(function(t){return t-1}),r=n.map(function(t){return Math.floor(t/2)}),o=n.map(function(t,e){return t-r[e]});return n.map(function(t,e){return[r[e],o[e]]})}([l.filterHeight,l.filterWidth],p):[[0,0],[0,0]];var d=1===p[0]&&1===p[1],h=function(t,e,n){var r=n.map(function(t){return t[0]}),o=n.map(function(t){return t[1]}),a=t.concat(r,o),i=e.map(function(t,e){return(t-a[e]%t)%t}),s=o.map(function(t,e){return t+i[e]});return[e.map(function(t,e){return[r[e],s[e]]}),e.map(function(t,e){return[0,i[e]]})]}([l.inHeight,l.inWidth],p,c),f=h[0],m=h[1],v=d?r:\"valid\",g=d?s:Sr(s,p,f),y=(\"avg\"===n?function(){return Cc(g,e,a,1,v)}:function(){return wc(g,e,a,1,v)})(),b=d?y:ir(y,p,m);return u?b.as3D(b.shape[1],b.shape[2],b.shape[3]):b}}),Rc=bn({maxPool3d_:function(t,e,n,r,o,a,i){void 0===a&&(a=\"NDHWC\");var s=un(t,\"x\",\"maxPool3d\"),u=s,c=!1;4===s.rank&&(c=!0,u=s.as5D(1,s.shape[0],s.shape[1],s.shape[2],s.shape[3])),null==i&&(i=[1,1,1]),x(5===u.rank,function(){return\"Error in maxPool3d: x must be rank 5 but got rank \"+u.rank+\".\"}),x(\"NDHWC\"===a,function(){return\"Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of \"+a}),x(yo(n,i),function(){return\"Error in maxPool3d: Either strides or dilations must be 1. Got strides \"+n+\" and dilations '\"+i+\"'\"}),null!=o&&x(S(r),function(){return\"Error in maxPool3d: pad must be an integer when using, dimRoundingMode \"+o+\" but got pad \"+r+\".\"});var l=uo(u.shape,e,n,i,r,o,a),p=_t.runKernel(function(t,e){var n=t.maxPool3d(u,l);return e([u,n]),n},{x:u},function(t,a){var s=a[0],u=a[1];return{x:function(){return function(t,e,n,r,o,a,i,s){var u=un(t,\"dy\",\"maxPool3dBackprop\"),c=un(e,\"input\",\"maxPool3dBackprop\"),l=un(n,\"output\",\"maxPool3dBackprop\"),p=u,d=c,h=l,f=!1;4===c.rank&&(f=!0,p=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]),d=c.as5D(1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]),h=l.as5D(1,l.shape[0],l.shape[1],l.shape[2],l.shape[3])),x(5===p.rank,function(){return\"Error in maxPool3dBackprop: dy must be rank 5 but got rank \"+p.rank+\".\"}),x(5===d.rank,function(){return\"Error in maxPool3dBackprop: input must be rank 5 but got rank \"+d.rank+\".\"}),x(5===h.rank,function(){return\"Error in maxPool3dBackprop: output must be rank 5 but got rank \"+h.rank+\".\"}),null==a&&(a=[1,1,1]),x(yo(o,a),function(){return\"Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides \"+o+\" and dilations '\"+a+\"'\"}),null!=s&&x(S(i),function(){return\"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode \"+s+\" but got pad \"+i+\".\"});var m=uo(d.shape,r,o,a,i,s),v=_t.runKernel(function(t){return t.maxPool3dBackprop(p,d,h,m)},{dy5D:p,input5D:d});return f?v.as4D(v.shape[1],v.shape[2],v.shape[3],v.shape[4]):v}(t,s,u,e,n,i,r,o)}}});return c?p.as4D(p.shape[1],p.shape[2],p.shape[3],p.shape[4]):p}}),Tc=bn({avgPool3d_:function(t,e,n,r,o,a,i){void 0===a&&(a=\"NDHWC\");var s=un(t,\"x\",\"avgPool3d\",\"float32\"),u=s,c=!1;4===s.rank&&(c=!0,u=s.as5D(1,s.shape[0],s.shape[1],s.shape[2],s.shape[3])),null==i&&(i=[1,1,1]),x(5===u.rank,function(){return\"Error in avgPool3d: x must be rank 5 but got rank \"+u.rank+\".\"}),x(\"NDHWC\"===a,function(){return\"Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of \"+a}),x(yo(n,i),function(){return\"Error in avgPool3d: Either strides or dilations must be 1. Got strides \"+n+\" and dilations '\"+i+\"'\"}),null!=o&&x(S(r),function(){return\"Error in avgPool3d: pad must be an integer when using, dimRoundingMode \"+o+\" but got pad \"+r+\".\"});var l=uo(u.shape,e,n,i,r,o,a),p=_t.runKernel(function(t){return t.avgPool3d(u,l)},{x:u},function(t){return{x:function(){return function(t,e,n,r,o,a,i){var s=un(t,\"dy\",\"avgPool3dBackprop\"),u=un(e,\"input\",\"avgPool3dBackprop\"),c=s,l=u,p=!1;4===u.rank&&(p=!0,c=s.as5D(1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]),l=u.as5D(1,u.shape[0],u.shape[1],u.shape[2],u.shape[3])),x(5===c.rank,function(){return\"Error in avgPool3dBackprop: dy must be rank 5 but got rank \"+c.rank+\".\"}),x(5===l.rank,function(){return\"Error in avgPool3dBackprop: input must be rank 5 but got rank \"+l.rank+\".\"}),null==o&&(o=[1,1,1]),x(yo(r,o),function(){return\"Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides \"+r+\" and dilations '\"+o+\"'\"}),null!=i&&x(S(a),function(){return\"Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode \"+i+\" but got pad \"+a+\".\"});var d=uo(l.shape,n,r,o,a,i),h=_t.runKernel(function(t){return t.avgPool3dBackprop(c,l,d)},{dy5D:c,input5D:l});return p?h.as4D(h.shape[1],h.shape[2],h.shape[3],h.shape[4]):h}(t,u,e,n,i,r,o)}}});return p=p.cast(u.dtype),c?p.as4D(p.shape[1],p.shape[2],p.shape[3],p.shape[4]):p}}),Ic=bn({slice_:function(t,e,n){var r,o,a=un(t,\"x\",\"slice\");if(0===a.rank)throw new Error(\"Slicing scalar is not possible\");(r=\"number\"==typeof e?[e].concat(new Array(a.rank-1).fill(0)):e.length<a.rank?e.concat(new Array(a.rank-e.length).fill(0)):e.slice()).forEach(function(t){x(-1!==t,function(){return\"slice() does not support negative begin indexing.\"})}),o=(o=null==n?new Array(a.rank).fill(-1):\"number\"==typeof n?[n].concat(new Array(a.rank-1).fill(-1)):n.length<a.rank?n.concat(new Array(a.rank-n.length).fill(-1)):n).map(function(t,e){return t>=0?t:(x(-1===t,function(){return\"Negative size values should be exactly -1 but got \"+t+\" for the slice() size at index \"+e+\".\"}),a.shape[e]-r[e])}),function(t,e,n){x(t.rank===e.length,function(){return\"Error in slice\"+t.rank+\"D: Length of begin \"+e+\" must match the rank of the array (\"+t.rank+\").\"}),x(t.rank===n.length,function(){return\"Error in slice\"+t.rank+\"D: Length of size \"+n+\" must match the rank of the array (\"+t.rank+\").\"});for(var r=function(r){x(e[r]+n[r]<=t.shape[r],function(){return\"Error in slice\"+t.rank+\"D: begin[\"+r+\"] + size[\"+r+\"] (\"+(e[r]+n[r])+\") would overflow input.shape[\"+r+\"] (\"+t.shape[r]+\")\"})},o=0;o<t.rank;++o)r(o)}(a,r,o);var i=a.shape;return _t.runKernel(function(t){return t.slice(a,r,o)},{$x:a},function(t){for(var e=[],n=0;n<t.rank;n++)e.push([r[n],i[n]-r[n]-o[n]]);return{$x:function(){return t.pad(e)}}})}}),Ac=bn({slice1d_:function(t,e,n){var r=un(t,\"x\",\"slice1d\");return x(1===r.rank,function(){return\"slice1d expects a rank-1 tensor, but got a rank-\"+r.rank+\" tensor\"}),Ic(r,[e],[n])}}),kc=bn({slice2d_:function(t,e,n){var r=un(t,\"x\",\"slice2d\");return x(2===r.rank,function(){return\"slice2d expects a rank-2 tensor, but got a rank-\"+r.rank+\" tensor\"}),Ic(r,e,n)}}),Oc=bn({slice3d_:function(t,e,n){var r=un(t,\"x\",\"slice3d\");return x(3===r.rank,function(){return\"slice3d expects a rank-3 tensor, but got a rank-\"+r.rank+\" tensor\"}),Ic(r,e,n)}}),Dc=bn({slice4d_:function(t,e,n){var r=un(t,\"x\",\"slice4d\");return x(4===r.rank,function(){return\"slice4d expects a rank-4 tensor, but got a rank-\"+r.rank+\" tensor\"}),Ic(r,e,n)}});function _c(t,e,n,r,o){return e.rank<n.rank&&(e=e.reshape(hn(e.shape,r))),t.rank<n.rank&&(t=t.reshape(hn(t.shape,r))),{$x:function(){var r=t.mul(n.equal(e).cast(t.dtype));return null==o?r:r.transpose(o)}}}var Mc=bn({all_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=un(t,\"x\",\"all\",\"bool\"),o=O(e,r.shape),a=o,i=mn(a,r.rank);null!=i&&(r=r.transpose(i),a=gn(a.length,r.rank));var s=_t.runKernel(function(t){return t.all(r,a)},{$x:r});if(n){var u=hn(s.shape,o);return s.reshape(u)}return s}}),Fc=bn({any_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=un(t,\"x\",\"any\",\"bool\"),o=O(e,r.shape),a=o,i=mn(a,r.rank);null!=i&&(r=r.transpose(i),a=gn(a.length,r.rank));var s=_t.runKernel(function(t){return t.any(r,a)},{$x:r});if(n){var u=hn(s.shape,o);return s.reshape(u)}return s}}),Pc=bn({argMax_:function(t,e){void 0===e&&(e=0);var n=un(t,\"x\",\"argMax\");null==e&&(e=0);var r=O(e,n.shape),o=mn(r,n.rank);return null!=o&&(n=n.transpose(o),r=gn(r.length,n.rank)),_t.runKernel(function(t,e){var o=t.argMax(n,r[0]);return e([n]),o},{$x:n},function(t,e){var n=e[0];return{$x:function(){return Vn(n)}}})}}),Bc=bn({argMin_:function(t,e){void 0===e&&(e=0);var n=un(t,\"x\",\"argMin\");null==e&&(e=0);var r=O(e,n.shape),o=mn(r,n.rank);return null!=o&&(n=n.transpose(o),r=gn(r.length,n.rank)),_t.runKernel(function(t,e){var o=t.argMin(n,r[0]);return e([n]),o},{$x:n},function(t,e){var n=e[0];return{$x:function(){return Vn(n)}}})}}),Lc=bn({logSumExp_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=un(t,\"x\",\"logSumExp\"),o=O(e,r.shape),a=r.max(o,!0),i=r.sub(a).exp().sum(o).log(),s=a.reshape(i.shape).add(i);if(n){var u=hn(s.shape,o);return s.reshape(u)}return s}}),Vc=bn({max_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=un(t,\"x\",\"max\"),o=r,a=O(e,r.shape),i=a,s=mn(i,r.rank);null!=s&&(r=r.transpose(s),i=gn(i.length,r.rank));var u=_t.runKernel(function(t,e){var n=t.max(r,i);return e([o,n]),n},{$x:r},function(t,e){return _c(t,e[1],e[0],a,s)});if(n){var c=hn(u.shape,a);u=u.reshape(c)}return u}}),zc=bn({mean_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=un(t,\"x\",\"mean\"),o=O(e,r.shape),a=E(dn(r.shape,o)[1]);return Jr(function(t){var r=Rn(a);return{value:(r.dtype===t.dtype?t:t.cast(r.dtype)).div(r).sum(e,n),gradFunc:function(e){var n=t.shape.slice();return o.forEach(function(t){n[t]=1}),e.reshape(n).mul(_n(t.shape,\"float32\")).div(a)}}})(r)}}),Wc=bn({min_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=un(t,\"x\",\"min\"),o=r,a=O(e,r.shape),i=a,s=mn(i,r.rank);null!=s&&(r=r.transpose(s),i=gn(i.length,r.rank));var u=_t.runKernel(function(t,e){var n=t.min(r,i);return e([o,n]),n},{$x:r},function(t,e){return _c(t,e[1],e[0],a,s)});if(n){var c=hn(u.shape,a);u=u.reshape(c)}return u}}),Uc=bn({moments_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=O(e,(t=un(t,\"x\",\"moments\")).shape),o=t.mean(r,n),a=o.shape;n||(a=hn(o.shape,r));var i=t.toFloat().sub(o.reshape(a)).square();return{mean:o,variance:i.mean(r,n)}}}),jc=bn({sum_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=un(t,\"x\",\"sum\");\"bool\"===r.dtype&&(r=r.toInt());var o=O(e,r.shape);return Jr(function(t){var e=mn(o,t.rank),r=o,a=t;null!=e&&(a=t.transpose(e),r=gn(r.length,t.rank));var i=_t.runKernel(function(t){return t.sum(a,r)},{permutedX:a});if(n){var s=hn(i.shape,o);i=i.reshape(s)}return{value:i,gradFunc:function(e){var n=t.shape.slice();return o.forEach(function(t){n[t]=1}),e.reshape(n).mul(_n(t.shape,\"float32\"))}}})(r)}}),Gc=bn({prod_:function(t,e,n){void 0===e&&(e=null),void 0===n&&(n=!1);var r=un(t,\"x\",\"prod\");\"bool\"===r.dtype&&(r=r.toInt());var o=O(e,r.shape),a=mn(o,r.rank),i=o,s=r;null!=a&&(s=r.transpose(a),i=gn(i.length,r.rank));var u=_t.runKernel(function(t){return t.prod(s,i)},{permutedX:s});if(n){var c=hn(u.shape,o);u=u.reshape(c)}return u}}),Hc=bn({elu_:function(t){var e=un(t,\"x\",\"elu\");return _t.runKernel(function(t,n){var r=t.elu(e);return n([r]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return _t.runKernel(function(e){return e.eluDer(t,n)},{dy:t,y:n})}}})}}),qc=bn({leakyRelu_:function(t,e){void 0===e&&(e=.2);var n=un(t,\"x\",\"leakyRelu\");return Eu(Rn(e).mul(n),n)}}),$c=bn({prelu_:function(t,e){var n=un(t,\"x\",\"prelu\"),r=un(e,\"alpha\",\"prelu\");return _t.runKernel(function(t,e){var o=t.prelu(n,r);return e([n,r]),o},{$x:n,$alpha:r},function(t,e){var n=e[0],r=e[1],o=n.greater(0);return{$x:function(){return fu(o,t,t.mul(r))},$alpha:function(){var e=fu(o,Vn(t),t.mul(n)),a=ao(r.shape,t.shape);return a.length>0&&(e=e.sum(a)),e.reshape(r.shape)}}})}}),Kc=bn({relu_:function(t){var e=un(t,\"x\",\"relu\");return\"bool\"===e.dtype?e.toInt():_t.runKernel(function(t,n){var r=t.relu(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){return t.mulStrict(n.step().toFloat())}}})}}),Xc=bn({selu_:function(t){var e=un(t,\"x\",\"selu\");return _t.runKernel(function(t,n){var r=t.selu(e);return n([e]),r},{$x:e},function(t,e){var n=e[0];return{$x:function(){var e=n.greater(Rn(0)),r=Rn(qi),o=Rn($i),a=t.mul(o),i=t.mul(r).mul(n.toFloat().exp());return fu(e,a,i)}}})}}),Yc=bn({transpose_:function(t,e){var n=un(t,\"x\",\"transpose\");return null==e&&(e=n.shape.map(function(t,e){return e}).reverse()),x(n.rank===e.length,function(){return\"Error in transpose: rank of input \"+n.rank+\" must match length of perm \"+e+\".\"}),e.forEach(function(t){x(t>=0&&t<n.rank,function(){return\"All entries in 'perm' must be between 0 and \"+(n.rank-1)+\" but got \"+e})}),n.rank<=1?n.clone():_t.runKernel(function(t){return t.transpose(n,e)},{$x:n},function(t){var n=vn(e);return{$x:function(){return t.transpose(n)}}})}}),Qc=bn({localResponseNormalization_:function(t,e,n,r,o){void 0===e&&(e=5),void 0===n&&(n=1),void 0===r&&(r=1),void 0===o&&(o=.5);var a=un(t,\"x\",\"localResponseNormalization\");x(4===a.rank||3===a.rank,function(){return\"Error in localResponseNormalization: x must be rank 3 or 4 but got\\n               rank \"+a.rank+\".\"}),x(S(e),function(){return\"Error in localResponseNormalization: depthRadius must be an integer but got depthRadius \"+e+\".\"});var i=a,s=!1;3===a.rank&&(s=!0,i=a.as4D(1,a.shape[0],a.shape[1],a.shape[2]));var u=_t.runKernel(function(t,a){var s=t.localResponseNormalization4D(i,e,n,r,o);return a([i,s]),s},{x4D:i},function(t,a){var i=a[0],s=a[1];return{x4D:function(){return _t.runKernel(function(a){return a.LRNGrad(t,i,s,e,n,r,o)},{})}}});return s?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Jc=bn({norm_:function(t,e,n,r){void 0===e&&(e=\"euclidean\"),void 0===n&&(n=null),void 0===r&&(r=!1);var o=function t(e,n,r){if(void 0===r&&(r=null),0===e.rank)return e.abs();if(1!==e.rank&&null===r)return t(e.reshape([-1]),n,r);if(1===e.rank||\"number\"==typeof r||Array.isArray(r)&&1===r.length){if(1===n)return e.abs().sum(r);if(n===1/0)return e.abs().max(r);if(n===-1/0)return e.abs().min(r);if(\"euclidean\"===n||2===n)return e.abs().pow(Rn(2,\"int32\")).sum(r).sqrt();throw new Error(\"Error in norm: invalid ord value: \"+n)}if(Array.isArray(r)&&2===r.length){if(1===n)return e.abs().sum(r[0]).max(r[1]-1);if(n===1/0)return e.abs().sum(r[1]).max(r[0]);if(n===-1/0)return e.abs().sum(r[1]).min(r[0]);if(\"fro\"===n||\"euclidean\"===n)return e.square().sum(r).sqrt();throw new Error(\"Error in norm: invalid ord value: \"+n)}throw new Error(\"Error in norm: invalid axis: \"+r)}(t=un(t,\"x\",\"norm\"),e,n),a=o.shape;if(r){var i=O(n,t.shape);a=hn(o.shape,i)}return o.reshape(a)}}),Zc=bn({basicLSTMCell_:function(t,e,n,r,o,a){var i=un(t,\"forgetBias\",\"basicLSTMCell\"),s=un(e,\"lstmKernel\",\"basicLSTMCell\"),u=un(n,\"lstmBias\",\"basicLSTMCell\"),c=un(r,\"data\",\"basicLSTMCell\"),l=un(o,\"c\",\"basicLSTMCell\"),p=un(a,\"h\",\"basicLSTMCell\"),d=c.concat(p,1).matMul(s).add(u),h=d.shape[0],f=d.shape[1]/4,m=[h,f],v=d.slice([0,0],m),g=d.slice([0,f],m),y=d.slice([0,2*f],m),x=d.slice([0,3*f],m),b=v.sigmoid().mulStrict(g.tanh()).addStrict(l.mulStrict(i.add(y).sigmoid())),w=b.tanh().mulStrict(x.sigmoid());return[b,w]}}),tl=bn({multiRNNCell_:function(t,e,n,r){for(var o=un(e,\"data\",\"multiRNNCell\"),a=cn(n,\"c\",\"multiRNNCell\"),i=cn(r,\"h\",\"multiRNNCell\"),s=o,u=[],c=0;c<t.length;c++){var l=t[c](s,a[c],i[c]);u.push(l[0]),u.push(l[1]),s=l[1]}var p=[],d=[];for(c=0;c<u.length;c+=2)p.push(u[c]),d.push(u[c+1]);return[p,d]}}),el=bn({movingAverage_:function(t,e,n,r,o){void 0===o&&(o=!0);var a=un(t,\"v\",\"movingAverage\"),i=un(e,\"x\",\"movingAverage\"),s=un(n,\"decay\",\"movingAverage\");Tt(a,i),x(N(a.shape,i.shape),function(){return\"Shape mismatch in v and x\"});var u=Rn(1),c=u.sub(s),l=i.sub(a).mul(c);if(o){x(null!=r,function(){return\"When using zeroDebias: true, step is required.\"});var p=un(r,\"step\",\"movingAverage\");l=l.div(u.sub(Ou(s,p)))}return a.add(l)}}),nl=bn({stridedSlice_:function(t,e,n,r,o,a,i,s,u){if(void 0===o&&(o=0),void 0===a&&(a=0),void 0===i&&(i=0),void 0===s&&(s=0),void 0===u&&(u=0),null==r&&(r=new Array(e.length)),0!==i)throw new Error(\"ellipsis mask is not yet supported\");var c=un(t,\"x\",\"stridedSlice\"),l=Wr(s),p=c.shape.slice();l.forEach(function(t){e[t]=0,n[t]=1,p.splice(t,0,1)}),c=c.reshape(p);for(var d=0;d<c.rank;d++)e[d]=jr(o,e,r,c.shape,d),n[d]=Gr(a,n,r,c.shape,d),r[d]=r[d]||1;var h=Wr(u);h.forEach(function(t){n[t]=e[t]+1,r[t]=1});var f=Ur(e,n,r),m=f.filter(function(t,e){return-1===h.indexOf(e)});return r.every(function(t){return 1===t})?Ic(c,e,f).reshape(m):_t.runKernel(function(t){return t.stridedSlice(c,e,n,r)},{$x:c}).reshape(m)}}),rl=bn({topk_:function(t,e,n){void 0===e&&(e=1),void 0===n&&(n=!0);var r=un(t,\"x\",\"topk\");if(0===r.rank)throw new Error(\"topk() expects the input to be of rank 1 or higher\");var o=r.shape[r.shape.length-1];if(e>o)throw new Error(\"'k' passed to topk() must be <= the last dimension (\"+o+\") but got \"+e);var a=_t.runKernel(function(t){return t.topk(r,e,n)},{$x:r});return{values:a[0],indices:a[1]}}}),ol=bn({scatterND_:function(t,e,n){var r=un(t,\"indices\",\"scatterND\",\"int32\"),o=un(e,\"updates\",\"scatterND\");return function(t,e,n){if(e.rank<1)throw new Error(\"tf.scatterND() expects the indices to be rank 1 or higher, but the rank was \"+e.rank+\".\");if(t.rank<1)throw new Error(\"tf.scatterND() expects the updates to be rank 1 or higher, but the rank was \"+t.rank+\".\");if(\"int32\"!==e.dtype)throw new Error(\"The dtype of 'indices' should be int32, but got dtype: \"+e.dtype);if(n.length<1)throw new Error(\"Output rank must be greater or equal to 1, but got shape: \"+n);if(0===n.length){if(0===e.size)throw new Error(\"Indices specified for empty output. indices shape: \"+e.shape);if(0===t.size)throw new Error(\"Updates specified for empty output. updates shape: \"+t.shape)}!function(t,e,n){var r=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,a=\"Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: \"+n.shape+\", indices.shape: \"+e.shape+\", shape: \"+t+\", sliceDim: \"+r+\", and batchDim: \"+o+\".\";if(n.rank<o)throw new Error(a+\" update.rank < \"+o+\". \");if(t.length<r+(n.rank-o))throw new Error(a+\" Output shape length < \"+(r+(n.rank-o)));if(n.rank!==o+t.length-r)throw new Error(a+\" update.rank != \"+(o+t.length-r));for(var i=0;i<o;++i)if(n.shape[i]!==e.shape[i])throw new Error(a+\" updates.shape[\"+i+\"] (\"+n.shape[i]+\") != indices.shape[\"+i+\"] (\"+e.shape[i]+\").\");for(i=0;i<n.rank-o;++i)if(n.shape[i+o]!==t[i+r])throw new Error(a+\" updates.shape[\"+(i+o)+\"] (\"+n.shape[i+o]+\") != shape[\"+(i+o)+\"] (\"+t[i+o]+\")\")}(n,e,t)}(o,r,n),_t.runKernel(function(t){return t.scatterND(r,o,n)},{$indices:r,$updates:o})}}),al=bn({fft_:function(t){x(\"complex64\"===t.dtype,function(){return\"The dtype for tf.spectral.fft() must be complex64 but got \"+t.dtype+\".\"});var e=t.shape[t.shape.length-1],n=t.size/e,r=t.as2D(n,e);return _t.runKernel(function(t){return t.fft(r)},{input:t}).reshape(t.shape)}}),il=bn({ifft_:function(t){x(\"complex64\"===t.dtype,function(){return\"The dtype for tf.spectral.ifft() must be complex64 but got \"+t.dtype+\".\"});var e=t.shape[t.shape.length-1],n=t.size/e,r=t.as2D(n,e);return _t.runKernel(function(t){return t.ifft(r)},{input:t}).reshape(t.shape)}}),sl=bn({rfft_:function(t,e){x(\"float32\"===t.dtype,function(){return\"The dtype for rfft() must be real value but got \"+t.dtype});var n,r=t.shape[t.shape.length-1],o=t.size/r;if(null!=e&&e<r){var a=t.shape.map(function(t){return 0}),i=t.shape.map(function(t){return t});i[t.shape.length-1]=e,n=t.slice(a,i),r=e}else if(null!=e&&e>r){var s=t.shape.map(function(t){return t});s[t.shape.length-1]=e-r,n=t.concat(Mn(s),t.shape.length-1),r=e}else n=t;var u=n.zerosLike(),c=wn(n,u).as2D(o,r),l=al(c),p=Math.floor(r/2)+1,d=Cn(l),h=En(l),f=d.split([p,r-p],d.shape.length-1),m=h.split([p,r-p],h.shape.length-1),v=n.shape.slice();return v[n.shape.length-1]=p,wn(f[0],m[0]).reshape(v)}}),ul=bn({irfft_:function(t){var e=t.shape[t.shape.length-1],n=t.size/e;if(e<=2){var r=t.as2D(n,e),o=il(r);return Cn(o)}var a=[n,2*(e-1)],i=Cn(t).as2D(n,e),s=En(t).as2D(n,e),u=i.slice([0,1],[n,e-2]).reverse(1),c=s.slice([0,1],[n,e-2]).reverse(1).mul(Rn(-1)),l=i.concat(u,1),p=s.concat(c,1);return r=wn(l,p).as2D(a[0],a[1]),o=il(r),Cn(o)}}),cl=Object.freeze({fft:al,ifft:il,rfft:sl,irfft:ul}),ll=bn({sparseToDense_:function(t,e,n,r){void 0===r&&(r=0);var o=un(t,\"sparseIndices\",\"sparseToDense\",\"int32\"),a=un(e,\"sparseValues\",\"sparseToDense\"),i=un(r,\"defaultValue\",\"sparseToDense\",a.dtype);return function(t,e,n,r){if(\"int32\"!==t.dtype)throw new Error(\"tf.sparseToDense() expects the indices to be int32 type, but the dtype was \"+t.dtype+\".\");if(t.rank>2)throw new Error(\"sparseIndices should be a scalar, vector, or matrix, but got shape \"+t.shape+\".\");var o=t.rank>0?t.shape[0]:1,a=t.rank>1?t.shape[1]:1;if(n.length!==a)throw new Error(\"outputShape has incorrect number of elements:, \"+n.length+\", should be: \"+a+\".\");var i=e.size;if(0!==e.rank&&(1!==e.rank||i!==o))throw new Error(\"sparseValues has incorrect shape \"+e.shape+\", should be [] or [\"+o+\"]\");if(e.dtype!==r.dtype)throw new Error(\"sparseValues.dtype must match defaultValues.dtype\")}(o,a,n,i),_t.runKernel(function(t){return t.sparseToDense(o,a,n,i)},{$sparseIndices:o,$sparseValues:a,$defaultValue:i})}}),pl=bn({gatherND_:function(t,e){var n=un(e,\"indices\",\"gatherND\",\"int32\"),r=un(t,\"x\",\"gatherND\");return _t.runKernel(function(t){return t.gatherND(r,n)},{$x:r,$indices:n})}}),dl=bn({diag_:function(t){var e=un(t,\"x\",\"diag\").flatten(),n=t.shape.concat(t.shape);return _t.runKernel(function(t){return t.diag(e)},{$x:e}).reshape(n)}}),hl=bn({dropout_:function(t,e,n,r){var o=un(t,\"x\",\"dropout\");if(x(\"float32\"===o.dtype,function(){return\"x has to be a floating point tensor since it's going to be scaled, but got a \"+o.dtype+\" tensor instead.\"}),x(e>=0&&e<1,function(){return\"rate must be a float in the range [0, 1), but got \"+e+\".\"}),0===e)return t instanceof mt?o.clone():o;var a=function(t,e){if(null==e)return t.shape.slice();if(N(t.shape,e))return e;if(t.shape.length===e.length){for(var n=[],r=0;r<t.shape.length;r++)null==e[r]&&null!=t.shape[r]?n.push(t.shape[r]):n.push(e[r]);return n}return e}(o,n),i=1-e,s=Er(a,0,1,\"float32\",r).add(i).floor().div(i);return o.mul(s)}});function fl(t,e,n){for(var r=1-t%2,o=new Float32Array(t),a=0;a<t;++a){var i=2*Math.PI*a/(t+r-1);o[a]=e-n*Math.cos(i)}return Tn(o,\"float32\")}var ml,vl=bn({hannWindow_:function(t){return fl(t,.5,.5)}}),gl=bn({hammingWindow_:function(t){return fl(t,.54,.46)}}),yl=bn({frame_:function(t,e,n,r,o){void 0===r&&(r=!1),void 0===o&&(o=0);for(var a=0,i=[];a+e<=t.size;)i.push(Ic(t,a,e)),a+=n;if(r)for(;a<t.size;){var s=a+e-t.size,u=zn([Ic(t,a,e-s),Fn([s],o)]);i.push(u),a+=n}return 0===i.length?In([],[0,e]):zn(i).as2D(i.length,e)}}),xl=bn({stft_:function(t,e,n,r,o){var a;void 0===o&&(o=vl),null==r&&(a=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(a)/Math.log(2)))));for(var i=yl(t,e,n),s=Au(i,o(e)),u=[],c=0;c<i.shape[0];c++)u.push(sl(s.slice([c,0],[1,e]),r));return zn(u)}}),bl=Object.freeze({hannWindow:vl,hammingWindow:gl,frame:yl,stft:xl}),wl=function(t,e,n){return void 0===n&&(n=1),u(this,void 0,void 0,function(){var r,o,a,i,s,u,l,p,d,h,f,m,v,g;return c(this,function(c){switch(c.label){case 0:return r=un(t,\"predictions\",\"inTopK\"),o=un(e,\"targets\",\"inTopK\"),x(r.rank>1,function(){return\"inTopK() expects the predictions to be of rank 2 or higher, but got \"+r.rank}),x(r.rank-1===o.rank,function(){return\"predictions rank should be 1 larger than targets rank, but got predictions rank \"+r.rank+\" and targets rank \"+o.rank}),b(r.shape.slice(0,r.shape.length-1),o.shape,\"predictions's shape should be align with the targets' shape, except the last dimension.\"),a=r.shape[r.shape.length-1],x(n>0&&n<=a,function(){return\"'k' passed to inTopK() must be > 0 && <= the predictions last dimension (\"+a+\"), but got \"+n}),[4,r.data()];case 1:return i=c.sent(),[4,o.data()];case 2:for(s=c.sent(),u=[i.length/a,a],p=u[1],d=_(\"bool\",l=u[0]),h=0;h<l;h++){for(f=h*p,m=i.subarray(f,f+p),v=[],g=0;g<m.length;g++)v.push({value:m[g],index:g});for(v.sort(function(t,e){return e.value-t.value}),d[h]=0,g=0;g<n;g++)if(v[g].index===s[h]){d[h]=1;break}}return t!==r&&r.dispose(),e!==o&&o.dispose(),[2,Nn(d,o.shape,\"bool\")]}})})};!function(t){t[t.NONE=0]=\"NONE\",t[t.MEAN=1]=\"MEAN\",t[t.SUM=2]=\"SUM\",t[t.SUM_BY_NONZERO_WEIGHTS=3]=\"SUM_BY_NONZERO_WEIGHTS\"}(ml||(ml={}));var Cl=bn({absoluteDifference_:function(t,e,n,r){void 0===r&&(r=ml.SUM_BY_NONZERO_WEIGHTS);var o=un(t,\"labels\",\"absoluteDifference\"),a=un(e,\"predictions\",\"absoluteDifference\"),i=null;null!=n&&(i=un(n,\"weights\",\"absoluteDifference\")),b(o.shape,a.shape,\"Error in absoluteDifference: \");var s=o.sub(a).abs();return El(s,i,r)}}),El=bn({computeWeightedLoss_:function(t,e,n){void 0===n&&(n=ml.SUM_BY_NONZERO_WEIGHTS);var r=un(t,\"losses\",\"computeWeightedLoss\"),o=null;null!=e&&(o=un(e,\"weights\",\"computeWeightedLoss\"));var a=null==o?r:r.mul(o);if(n===ml.NONE)return a;if(n===ml.SUM)return a.sum();if(n===ml.MEAN){if(null==o)return a.mean();var i=r.size/o.size,s=a.sum().div(o.sum());return i>1?s.div(Rn(i)):s}if(n===ml.SUM_BY_NONZERO_WEIGHTS){if(null==o)return a.sum().div(Rn(r.size));var u=o.mul(_n(r.shape)).notEqual(Rn(0)).sum().toFloat();return a.sum().div(u)}throw Error(\"Unknown reduction: \"+n)}}),Nl=bn({cosineDistance_:function(t,e,n,r,o){void 0===o&&(o=ml.SUM_BY_NONZERO_WEIGHTS);var a=un(t,\"labels\",\"cosineDistance\"),i=un(e,\"predictions\",\"cosineDistance\"),s=null;null!=r&&(s=un(r,\"weights\",\"cosineDistance\")),b(a.shape,i.shape,\"Error in cosineDistance: \");var u=Rn(1).sub(a.mul(i).sum(n,!0));return El(u,s,o)}}),Sl=bn({hingeLoss_:function(t,e,n,r){void 0===r&&(r=ml.SUM_BY_NONZERO_WEIGHTS);var o=un(t,\"labels\",\"hingeLoss\"),a=un(e,\"predictions\",\"hingeLoss\"),i=null;null!=n&&(i=un(n,\"weights\",\"hingeLoss\")),b(o.shape,a.shape,\"Error in hingeLoss: \");var s=Rn(1);o=Rn(2).mul(o).sub(s);var u=s.sub(o.mul(a)).relu();return El(u,i,r)}}),Rl=bn({huberLoss_:function(t,e,n,r,o){void 0===r&&(r=1),void 0===o&&(o=ml.SUM_BY_NONZERO_WEIGHTS);var a=un(t,\"labels\",\"huberLoss\"),i=un(e,\"predictions\",\"huberLoss\"),s=null;null!=n&&(s=un(n,\"weights\",\"huberLoss\")),b(a.shape,i.shape,\"Error in huberLoss: \");var u=Rn(r),c=i.sub(a).abs(),l=Su(c,u),p=c.sub(l),d=Rn(.5).mul(l.square()).add(u.mul(p));return El(d,s,o)}}),Tl=bn({logLoss_:function(t,e,n,r,o){void 0===r&&(r=1e-7),void 0===o&&(o=ml.SUM_BY_NONZERO_WEIGHTS);var a=un(t,\"labels\",\"logLoss\"),i=un(e,\"predictions\",\"logLoss\"),s=null;null!=n&&(s=un(n,\"weights\",\"logLoss\")),b(a.shape,i.shape,\"Error in logLoss: \");var u=Rn(1),c=Rn(r),l=a.mul(i.add(c).log()).neg().sub(u.sub(a).mul(u.sub(i).add(c).log()));return El(l,s,o)}}),Il=bn({meanSquaredError_:function(t,e,n,r){void 0===r&&(r=ml.SUM_BY_NONZERO_WEIGHTS);var o=un(t,\"labels\",\"meanSquaredError\"),a=un(e,\"predictions\",\"meanSquaredError\"),i=null;null!=n&&(i=un(n,\"weights\",\"meanSquaredError\")),b(o.shape,a.shape,\"Error in meanSquaredError: \");var s=o.squaredDifference(a);return El(s,i,r)}}),Al=bn({sigmoidCrossEntropy_:function(t,e,n,r,o){void 0===r&&(r=0),void 0===o&&(o=ml.SUM_BY_NONZERO_WEIGHTS);var a=un(t,\"multiClassLabels\",\"sigmoidCrossEntropy\"),i=un(e,\"logits\",\"sigmoidCrossEntropy\"),s=null;if(null!=n&&(s=un(n,\"weights\",\"sigmoidCrossEntropy\")),b(a.shape,i.shape,\"Error in sigmoidCrossEntropy: \"),r>0){var u=Rn(r),c=Rn(1),l=Rn(.5);a=a.mul(c.sub(u)).add(l.mul(u))}var p=function(t,e){var n=un(t,\"labels\",\"sigmoidCrossEntropyWithLogits\"),r=un(e,\"logits\",\"sigmoidCrossEntropyWithLogits\");b(n.shape,r.shape,\"Error in sigmoidCrossEntropyWithLogits: \");var o=r.relu(),a=r.mul(n),i=r.abs().neg().exp().log1p();return o.sub(a).add(i)}(a,i);return El(p,s,o)}}),kl=bn({softmaxCrossEntropy_:function(t,e,n,r,o){void 0===r&&(r=0),void 0===o&&(o=ml.SUM_BY_NONZERO_WEIGHTS);var a=un(t,\"onehotLabels\",\"softmaxCrossEntropy\"),i=un(e,\"logits\",\"softmaxCrossEntropy\"),s=null;if(null!=n&&(s=un(n,\"weights\",\"softmaxCrossEntropy\")),b(a.shape,i.shape,\"Error in softmaxCrossEntropy: \"),r>0){var u=Rn(r),c=Rn(1),l=Rn(a.shape[1]);a=a.mul(c.sub(u)).add(u.div(l))}var p=function(t,e,n){if(void 0===n&&(n=-1),-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(\"Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank \"+e.rank+\" and dim was \"+n);return Jr(function(t,e,r){var o=e.logSumExp([n],!0),a=e.toFloat().sub(o);return r([t,a]),{value:a.mul(t).neg().sum([n]),gradFunc:function(t,e){var r=e[0],o=e[1],a=hn(t.shape,[n]);return[t.reshape(a).mul(r.toFloat().sub(o.exp())),t.reshape(a).mul(o.exp().sub(r.toFloat()))]}}})(t,e)}(a,i);return El(p,s,o)}}),Ol=Object.freeze({get Reduction(){return ml},absoluteDifference:Cl,computeWeightedLoss:El,cosineDistance:Nl,hingeLoss:Sl,huberLoss:Rl,logLoss:Tl,meanSquaredError:Il,sigmoidCrossEntropy:Al,softmaxCrossEntropy:kl});function Dl(t,e){return void 0===e&&(e=!1),_t.tidy(function(){if(2!==t.shape.length)throw new Error(\"qr2d() requires a 2D Tensor, but got a \"+t.shape.length+\"D Tensor.\");for(var n=t.shape[0],r=t.shape[1],o=dr(n),a=t.clone(),i=In([[1]],[1,1]),s=i.clone(),u=n>=r?r:n,c=function(t){var e,u=a,c=s,l=o;e=_t.tidy(function(){var e=a.slice([t,t],[n-t,1]),u=e.norm(),c=a.slice([t,t],[1,1]),l=In([[-1]]).where(c.greater(0),In([[1]])),p=c.sub(l.mul(u)),d=e.div(p);s=1===d.shape[0]?i.clone():i.concat(d.slice([1,0],[d.shape[0]-1,d.shape[1]]),0);var h=l.matMul(p).div(u).neg(),f=a.slice([t,0],[n-t,r]),m=h.mul(s);if(0===t)a=f.sub(m.matMul(s.transpose().matMul(f)));else{var v=f.sub(m.matMul(s.transpose().matMul(f)));a=a.slice([0,0],[t,r]).concat(v,0)}var g=o.slice([0,t],[n,o.shape[1]-t]);if(0===t)o=g.sub(g.matMul(s).matMul(m.transpose()));else{var y=g.sub(g.matMul(s).matMul(m.transpose()));o=o.slice([0,0],[n,t]).concat(y,1)}return[s,a,o]}),s=e[0],a=e[1],o=e[2],qe([u,c,l])},l=0;l<u;++l)c(l);return!e&&n>r&&(o=o.slice([0,0],[n,r]),a=a.slice([0,0],[r,r])),[o,a]})}var _l=bn({gramSchmidt_:function(t){var e;if(Array.isArray(t)){e=!1,x(null!=t&&t.length>0,function(){return\"Gram-Schmidt process: input must not be null, undefined, or empty\"});for(var n=t[0].shape[0],r=function(e){x(t[e].shape[0]===n,function(){return\"Gram-Schmidt: Non-unique lengths found in the input vectors: (\"+t[e].shape[0]+\" vs. \"+n+\")\"})},o=1;o<t.length;++o)r(o)}else e=!0,t=Hn(t,t.shape[0],0).map(function(t){return Rr(t,[0])});x(t.length<=t[0].shape[0],function(){return\"Gram-Schmidt: Number of vectors (\"+t.length+\") exceeds number of dimensions (\"+t[0].shape[0]+\").\"});var a=[],i=t,s=function(t){a.push(_t.tidy(function(){var e=i[t];if(t>0)for(var n=0;n<t;++n){var r=jc(a[n].mulStrict(e)).mul(a[n]);e=e.sub(r)}return e.div(Jc(e,\"euclidean\"))}))};for(o=0;o<t.length;++o)s(o);return e?Tr(a,0):a}}),Ml=bn({qr_:function(t,e){if(void 0===e&&(e=!1),t.rank<2)throw new Error(\"qr() requires input tensor to have a rank >= 2, but got rank \"+t.rank);if(2===t.rank)return Dl(t,e);var n=t.shape.slice(0,t.shape.length-2).reduce(function(t,e){return t*e}),r=kr(t.reshape([n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),o=[],a=[];return r.forEach(function(t){var n=Dl(t,e),r=n[0],i=n[1];o.push(r),a.push(i)}),[Tr(o,0).reshape(t.shape),Tr(a,0).reshape(t.shape)]}}),Fl=Object.freeze({gramSchmidt:_l,qr:Ml});function Pl(t,e,n,r,o){null==r&&(r=.5),null==o&&(o=Number.NEGATIVE_INFINITY);var a=t.shape[0];return n=Math.min(n,a),x(0<=r&&r<=1,function(){return\"iouThreshold must be in [0, 1], but was '\"+r+\"'\"}),x(2===t.rank,function(){return\"boxes must be a 2D tensor, but was of rank '\"+t.rank+\"'\"}),x(4===t.shape[1],function(){return\"boxes must have 4 columns, but 2nd dimension was \"+t.shape[1]}),x(1===e.rank,function(){return\"scores must be a 1D tensor\"}),x(e.shape[0]===a,function(){return\"scores has incompatible shape with boxes. Expected \"+a+\", but was \"+e.shape[0]}),{maxOutputSize:n,iouThreshold:r,scoreThreshold:o}}var Bl=bn({resizeBilinear_:function(t,e,n){void 0===n&&(n=!1);var r=un(t,\"images\",\"resizeBilinear\");x(3===r.rank||4===r.rank,function(){return\"Error in resizeBilinear: x must be rank 3 or 4, but got rank \"+r.rank+\".\"}),x(2===e.length,function(){return\"Error in resizeBilinear: new shape must 2D, but got shape \"+e+\".\"});var o=r,a=!1;3===r.rank&&(a=!0,o=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var i=e[0],s=e[1],u=_t.runKernel(function(t,e){return e([o]),t.resizeBilinear(o,i,s,n)},{batchImages:o},function(t,e){return{batchImages:function(){return _t.runKernel(function(r){return r.resizeBilinearBackprop(t,e[0],n)},{})}}});return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Ll=bn({resizeNearestNeighbor_:function(t,e,n){void 0===n&&(n=!1);var r=un(t,\"images\",\"resizeNearestNeighbor\");x(3===r.rank||4===r.rank,function(){return\"Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank \"+r.rank+\".\"}),x(2===e.length,function(){return\"Error in resizeNearestNeighbor: new shape must 2D, but got shape \"+e+\".\"}),x(\"float32\"===r.dtype||\"int32\"===r.dtype,function(){return\"`images` must have `int32` or `float32` as dtype\"});var o=r,a=!1;3===r.rank&&(a=!0,o=r.as4D(1,r.shape[0],r.shape[1],r.shape[2]));var i=e[0],s=e[1],u=_t.runKernel(function(t,e){return e([o]),t.resizeNearestNeighbor(o,i,s,n)},{batchImages:o},function(t,e){return{batchImages:function(){return _t.runKernel(function(r){return r.resizeNearestNeighborBackprop(t,e[0],n)},{})}}});return a?u.as3D(u.shape[1],u.shape[2],u.shape[3]):u}}),Vl=bn({nonMaxSuppression_:function(t,e,n,r,o){void 0===r&&(r=.5),void 0===o&&(o=Number.NEGATIVE_INFINITY);var a=un(t,\"boxes\",\"nonMaxSuppression\"),i=un(e,\"scores\",\"nonMaxSuppression\"),s=Pl(a,i,n,r,o);return n=s.maxOutputSize,r=s.iouThreshold,o=s.scoreThreshold,_t.runKernel(function(t){return t.nonMaxSuppression(a,i,n,r,o)},{$boxes:a})}}),zl=bn({cropAndResize_:function(t,e,n,r,o,a){var i=un(t,\"image\",\"cropAndResize\",\"float32\"),s=un(e,\"boxes\",\"cropAndResize\",\"float32\"),u=un(n,\"boxInd\",\"cropAndResize\",\"int32\");o=o||\"bilinear\",a=a||0;var c=s.shape[0];return x(4===i.rank,function(){return\"Error in cropAndResize: image must be rank 4,but got rank \"+i.rank+\".\"}),x(2===s.rank&&4===s.shape[1],function(){return\"Error in cropAndResize: boxes must be have size [\"+c+\",4] but had shape \"+s.shape+\".\"}),x(1===u.rank&&u.shape[0]===c,function(){return\"Error in cropAndResize: boxInd must be have size [\"+c+\"] but had shape \"+s.shape+\".\"}),x(2===r.length,function(){return\"Error in cropAndResize: cropSize must be of length 2, but got length \"+r.length+\".\"}),x(r[0]>=1&&r[1]>=1,function(){return\"cropSize must be atleast [1,1], but was \"+r}),x(\"bilinear\"===o||\"nearest\"===o,function(){return\"method must be bilinear or nearest, but was \"+o}),_t.runKernel(function(t,e){return t.cropAndResize(i,s,u,r,o,a)},{$image:i,$boxes:s})}}),Wl=Object.freeze({resizeBilinear:Bl,resizeNearestNeighbor:Ll,nonMaxSuppression:Vl,nonMaxSuppressionAsync:function(t,e,n,r,o){return void 0===r&&(r=.5),void 0===o&&(o=Number.NEGATIVE_INFINITY),u(this,void 0,void 0,function(){var a,i,s,u,l,p,d;return c(this,function(c){switch(c.label){case 0:return a=un(t,\"boxes\",\"nonMaxSuppressionAsync\"),i=un(e,\"scores\",\"nonMaxSuppressionAsync\"),s=Pl(a,i,n,r,o),n=s.maxOutputSize,r=s.iouThreshold,o=s.scoreThreshold,[4,Promise.all([a.data(),i.data()])];case 1:return u=c.sent(),l=u[0],p=u[1],d=Io(l,p,n,r,o),a!==t&&a.dispose(),i!==e&&i.dispose(),[2,d]}})})},cropAndResize:zl}),Ul=bn({matMul_:function(t){var e,n=t.a,r=t.b,o=t.transposeA,a=void 0!==o&&o,i=t.transposeB,s=void 0!==i&&i,u=t.bias,c=t.activation,l=void 0===c?\"linear\":c,p=t.preluActivationWeights,d=un(n,\"a\",\"fused matMul\"),h=un(r,\"b\",\"fused matMul\");e=Rt(d,h),d=e[0],h=e[1];var f=a?d.shape[d.rank-2]:d.shape[d.rank-1],m=s?h.shape[h.rank-1]:h.shape[h.rank-2],v=a?d.shape[d.rank-1]:d.shape[d.rank-2],g=s?h.shape[h.rank-2]:h.shape[h.rank-1],y=d.shape.slice(0,-2),b=h.shape.slice(0,-2),w=E(y),C=E(b);x(d.rank>=2&&h.rank>=2&&d.rank===h.rank,function(){return\"Error in fused matMul: inputs must have the same rank of at least 2, got ranks \"+d.rank+\" and \"+h.rank+\".\"}),x(N(y,b),function(){return\"Error in fused matMul: outer dimensions (\"+y+\") and (\"+b+\") of Tensors with shapes \"+d.shape+\" and \"+h.shape+\" must match.\"}),x(f===m,function(){return\"Error in fused matMul: inner shapes (\"+f+\") and (\"+m+\") of Tensors with shapes \"+d.shape+\" and \"+h.shape+\" and transposeA=\"+a+\" and transposeB=\"+s+\" must match.\"});var S,R,T=d.shape.slice(0,-2).concat([v,g]),I=a?d.as3D(w,f,v):d.as3D(w,v,f),A=s?h.as3D(C,g,m):h.as3D(C,m,g);null!=u&&io(T,(S=Rt(S=un(u,\"bias\",\"fused matMul\"),d)[0]).shape),null!=p&&(R=un(p,\"prelu weights\",\"fused matMul\"));var k={$a:I,$b:A};return null!=u&&(k.$bias=S),null!=p&&(k.$preluActivationWeights=R),_t.runKernel(function(t,e){var n=t.fusedBatchMatMul({a:I,b:A,transposeA:a,transposeB:s,bias:S,activation:l,preluActivationWeights:R});return e([I,A,n]),n},k,function(t,e){var n,r=e[0],o=e[1],i=e[2];if(null==l||\"linear\"===l)n=t;else{if(\"relu\"!==l)throw new Error(\"Gradient for activation \"+l+\" has not been implemented yet.\");n=t.mul(i.step())}var c={};return null!=u&&(c={$bias:function(){var t=n,e=ao(S.shape,n.shape);return e.length>0&&(t=t.sum(e)),t.reshape(S.shape)}}),a||s?!a&&s?Object.assign({$a:function(){return n.matMul(o,!1,!1)},$b:function(){return n.matMul(r,!0,!1)}},c):a&&!s?Object.assign({$a:function(){return o.matMul(n,!1,!0)},$b:function(){return r.matMul(n,!1,!1)}},c):Object.assign({$a:function(){return o.matMul(n,!0,!0)},$b:function(){return n.matMul(r,!0,!0)}},c):Object.assign({$a:function(){return n.matMul(o,!1,!0)},$b:function(){return r.matMul(n,!0,!1)}},c)}).reshape(T)}}),jl=bn({conv2d_:function(t){var e=t.x,n=t.filter,r=t.strides,o=t.pad,a=t.dataFormat,i=void 0===a?\"NHWC\":a,s=t.dilations,u=void 0===s?[1,1]:s,c=t.dimRoundingMode,l=t.bias,p=t.activation,d=void 0===p?\"linear\":p,h=t.preluActivationWeights,f=un(e,\"x\",\"conv2d\"),m=un(n,\"filter\",\"conv2d\"),v=f,g=!1;3===f.rank&&(g=!0,v=f.as4D(1,f.shape[0],f.shape[1],f.shape[2])),x(4===v.rank,function(){return\"Error in fused conv2d: input must be rank 4, but got rank \"+v.rank+\".\"}),x(4===m.rank,function(){return\"Error in fused conv2d: filter must be rank 4, but got rank \"+m.rank+\".\"}),null!=c&&x(S(o),function(){return\"Error in fused conv2d: pad must be an integer when using, dimRoundingMode \"+c+\" but got pad \"+o+\".\"}),x(v.shape[3]===m.shape[2],function(){return\"Error in conv2d: depth of input (\"+v.shape[3]+\") must match input depth for filter \"+m.shape[2]+\".\"}),x(yo(r,u),function(){return\"Error in conv2D: Either strides or dilations must be 1. Got strides \"+r+\" and dilations '\"+u+\"'\"}),x(\"NHWC\"===i,function(){return\"Error in conv2d: got dataFormat of \"+i+\" but only NHWC is currently supported.\"});var y,b,w=co(v.shape,m.shape,r,u,o,c);null!=l&&(y=Rt(y=un(l,\"bias\",\"fused conv2d\"),f)[0],io(w.outShape,y.shape)),null!=h&&(b=un(h,\"prelu weights\",\"fused conv2d\"));var C={x:v,$filter:m};null!=l&&(C.$bias=y),null!=h&&(C.$preluActivationWeights=b);var E=_t.runKernel(function(t,e){var n=t.fusedConv2d(v,m,w,y,d,b);return e([m,v,n]),n},C,function(t,e){var n,a=e,i=a[0],s=a[1],c=a[2];if(null==d||\"linear\"===d)n=t;else{if(\"relu\"!==d)throw new Error(\"Gradient for activation \"+d+\" has not been implemented yet.\");n=t.mul(c.step())}x(go(u),function(){return\"Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '\"+u+\"'\"});var p={};return null!=l&&(p={$bias:function(){var t=n,e=ao(y.shape,n.shape);return e.length>0&&(t=t.sum(e)),t.reshape(y.shape)}}),Object.assign({x:function(){return uc(s.shape,n,i,r,o)},$filter:function(){return sc(s,n,i.shape,r,o)}},p)});return g?E.as3D(E.shape[1],E.shape[2],E.shape[3]):E}}),Gl=Object.freeze({matMul:Ul,conv2d:jl}),Hl=Object.freeze({image:Wl,linalg:Fl,losses:Ol,spectral:cl,fused:Gl,signal:bl,op:bn,batchNormalization2d:nu,batchNormalization3d:ru,batchNormalization4d:ou,batchNormalization:au,batchNorm:iu,batchNorm2d:su,batchNorm3d:uu,batchNorm4d:cu,booleanMaskAsync:Zu,complex:wn,real:Cn,imag:En,concat:zn,concat1d:Wn,concat2d:Un,concat3d:jn,concat4d:Gn,split:Hn,conv1d:oc,conv2d:ac,conv3d:ic,conv2dDerFilter:sc,conv2dDerInput:uc,depthwiseConv2d:cc,separableConv2d:lc,conv2dTranspose:pc,conv3dTranspose:dc,matMul:hc,dot:fc,outerProduct:mc,reverse:vc,reverse1d:gc,reverse2d:yc,reverse3d:xc,reverse4d:bc,maxPool:Ec,avgPool:Nc,pool:Sc,maxPool3d:Rc,avgPool3d:Tc,slice:Ic,slice1d:Ac,slice2d:kc,slice3d:Oc,slice4d:Dc,abs:ms,acos:vs,acosh:gs,asin:ys,asinh:xs,atan:bs,atanh:ws,ceil:Cs,clipByValue:Es,cos:Ns,cosh:Ss,erf:Rs,exp:Ts,expm1:Is,floor:As,log:ks,log1p:Os,logSigmoid:Ds,neg:_s,reciprocal:Ms,round:Fs,rsqrt:Ps,sigmoid:Bs,sign:Ls,isNaN:Vs,isInf:zs,isFinite:Ws,sin:Us,sinh:js,softplus:Gs,sqrt:Hs,square:qs,step:$s,tan:Ks,tanh:Xs,all:Mc,any:Fc,argMax:Pc,argMin:Bc,logSumExp:Lc,max:Vc,mean:zc,min:Wc,moments:Uc,sum:jc,prod:Gc,equal:Bu,equalStrict:Lu,greater:Vu,greaterEqual:zu,greaterEqualStrict:Wu,greaterStrict:Uu,less:ju,lessEqual:Gu,lessEqualStrict:Hu,lessStrict:qu,notEqual:$u,notEqualStrict:Ku,add:vu,addN:gu,addStrict:yu,atan2:xu,div:bu,divStrict:wu,floorDiv:Cu,maximum:Eu,maximumStrict:Nu,minimum:Su,minimumStrict:Ru,mod:Tu,modStrict:Iu,mul:Au,mulStrict:ku,pow:Ou,powStrict:Du,squaredDifference:_u,squaredDifferenceStrict:Mu,sub:Fu,subStrict:Pu,elu:Hc,leakyRelu:qc,prelu:$c,relu:Kc,selu:Xc,logicalAnd:lu,logicalNot:pu,logicalOr:du,logicalXor:hu,where:fu,whereAsync:mu,buffer:or,print:ar,batchToSpaceND:ir,cast:sr,clone:ur,cumsum:cr,depthToSpace:lr,expandDims:pr,eye:dr,multinomial:hr,oneHot:fr,pad:mr,pad1d:vr,pad2d:gr,pad3d:yr,pad4d:xr,rand:br,randomNormal:wr,randomGamma:Cr,randomUniform:Er,reshape:Nr,spaceToBatchND:Sr,squeeze:Rr,stack:Tr,tile:Ir,truncatedNormal:Ar,unstack:kr,setdiff1dAsync:Or,fill:Fn,linspace:Pn,ones:_n,range:Bn,scalar:Rn,tensor:Nn,tensor1d:Tn,tensor2d:In,tensor3d:An,tensor4d:kn,tensor5d:On,tensor6d:Dn,zeros:Mn,onesLike:Ln,zerosLike:Vn,transpose:Yc,softmax:to,logSoftmax:eo,localResponseNormalization:Qc,norm:Jc,gather:Qu,unsortedSegmentSum:Ju,basicLSTMCell:Zc,multiRNNCell:tl,movingAverage:el,stridedSlice:nl,topk:rl,scatterND:ol,fft:al,ifft:il,rfft:sl,irfft:ul,sparseToDense:ll,gatherND:pl,diag:dl,dropout:hl,hannWindow:vl,hammingWindow:gl,frame:yl,stft:xl,inTopKAsync:wl});function ql(t,e,n,r){if(\"linear\"===n)return t.linear(e);if(\"relu\"===n)return t.relu(e);if(\"elu\"===n)return t.elu(e);if(\"prelu\"===n)return t.prelu(e,r);throw new Error(\"Activation \"+n+\" has not been implemented for the CPU backend.\")}var $l=function(){function t(){if(this.blockSize=48,this.firstUse=!0,d.get(\"IS_BROWSER\")){var t=\"undefined\"!=typeof OffscreenCanvas?new OffscreenCanvas(300,150):\"undefined\"!=typeof document?document.createElement(\"canvas\"):null;null!==t&&(this.fromPixels2DContext=t.getContext(\"2d\"))}this.data=new no(this,_t)}return t.prototype.register=function(t,e,n){if(this.firstUse&&(this.firstUse=!1,d.get(\"IS_NODE\")&&on(\"\\n============================\\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\\n============================\\n\")),this.data.has(t))throw new Error(\"Data buffer is already registered\");this.data.set(t,{dtype:n})},t.prototype.write=function(t,e){if(null==e)throw new Error(\"MathBackendCPU.write(): values can not be null\");this.data.get(t).values=e},t.prototype.fromPixels=function(t,e){if(null==t)throw new Error(\"pixels passed to tf.browser.fromPixels() can not be null\");var n,r,o=t.data instanceof Uint8Array,a=\"undefined\"!=typeof ImageData&&t instanceof ImageData,i=\"undefined\"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement,s=\"undefined\"!=typeof HTMLImageElement&&t instanceof HTMLImageElement,u=i?[t.videoWidth,t.videoHeight]:[t.width,t.height],c=u[0],l=u[1];if(d.get(\"IS_NODE\")&&null==t.getContext)throw new Error(\"When running in node, pixels must be an HTMLCanvasElement like the one returned by the `canvas` npm package\");if(null!=t.getContext)n=t.getContext(\"2d\").getImageData(0,0,c,l).data;else if(a||o)n=t.data;else{if(!s&&!i)throw new Error(\"pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData or {data: Uint32Array, width: number, height: number}, but was \"+t.constructor.name);if(null==this.fromPixels2DContext)throw new Error(\"Can't read pixels from HTMLImageElement outside the browser.\");this.fromPixels2DContext.canvas.width=c,this.fromPixels2DContext.canvas.height=l,this.fromPixels2DContext.drawImage(t,0,0,c,l),n=this.fromPixels2DContext.getImageData(0,0,c,l).data}if(4===e)r=new Int32Array(n);else{var p=c*l;r=new Int32Array(p*e);for(var h=0;h<p;h++)for(var f=0;f<e;++f)r[h*e+f]=n[4*h+f]}return An(r,[l,c,e],\"int32\")},t.prototype.read=function(t){return u(this,void 0,void 0,function(){return c(this,function(e){return[2,this.readSync(t)]})})},t.prototype.readSync=function(t){var e=this.data.get(t),n=e.dtype,r=e.complexTensors;return\"complex64\"===n?No(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.data.get(t).values},t.prototype.bufferSync=function(t){var e=this.readSync(t.dataId),n=e;if(\"string\"===t.dtype)try{n=e.map(function(t){return et(t)})}catch(t){throw new Error(\"Failed to decode encoded string bytes into utf-8\")}return or(t.shape,t.dtype,n)},t.prototype.disposeData=function(t){if(this.data.has(t)){var e=this.data.get(t).complexTensors;null!=e&&(e.real.dispose(),e.imag.dispose()),this.data.delete(t)}},t.prototype.time=function(t){return u(this,void 0,void 0,function(){var e;return c(this,function(n){return e=J(),t(),[2,{kernelMs:J()-e}]})})},t.prototype.memory=function(){return{unreliable:!0,reasons:[\"The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less.\"]}},t.prototype.complex=function(t,e){var n=mt.make(t.shape,{},\"complex64\");return this.data.get(n.dataId).complexTensors={real:_t.keep(t.clone()),imag:_t.keep(e.clone())},n},t.prototype.real=function(t){return this.data.get(t.dataId).complexTensors.real.clone()},t.prototype.imag=function(t){return this.data.get(t.dataId).complexTensors.imag.clone()},t.prototype.assertNotComplex=function(t,e){Array.isArray(t)||(t=[t]),t.forEach(function(t){null!=t&&x(\"complex64\"!==t.dtype,function(){return e+\" does not support complex64 tensors.\"})})},t.prototype.slice=function(t,e,n){if(this.assertNotComplex(t,\"slice\"),Hr(t.shape,e,n)){var r=qr(e,t.strides),o=E(n);return Nn(this.readSync(t.dataId).subarray(r,r+o),n,t.dtype)}for(var a=or(n,t.dtype),i=this.bufferSync(t),s=0;s<a.size;++s){var u=a.indexToLoc(s).map(function(t,n){return t+e[n]});a.values[s]=i.get.apply(i,u)}return a.toTensor()},t.prototype.stridedSlice=function(t,e,n,r){this.assertNotComplex(t,\"stridedSlice\");var o=Ur(e,n,r);if(o.some(function(t){return 0===t}))return Nn([],o);for(var a=or(o,t.dtype),i=this.bufferSync(t),s=0;s<a.size;s++){for(var u=a.indexToLoc(s),c=new Array(u.length),l=0;l<c.length;l++)c[l]=u[l]*r[l]+e[l];a.set.apply(a,[i.get.apply(i,c)].concat(u))}return a.toTensor()},t.prototype.diag=function(t){for(var e=this.readSync(t.dataId),n=or([t.size,t.size],t.dtype),r=n.values,o=0;o<e.length;o++)r[o*t.size+o]=e[o];return n.toTensor()},t.prototype.unstack=function(t,e){for(var n=t.shape[e],r=new Array(t.rank-1),o=0,a=0;a<t.rank;a++)a!==e&&(r[o++]=t.shape[a]);var i=new Array(t.rank).fill(0),s=t.shape.slice();s[e]=1;var u=new Array(n);for(a=0;a<u.length;a++)i[e]=a,u[a]=this.slice(t,i,s).reshape(r);return u},t.prototype.reverse=function(t,e){this.assertNotComplex(t,\"reverse\");for(var n=or(t.shape,t.dtype),r=this.bufferSync(t),o=function(o){var a=n.indexToLoc(o),i=a.slice();e.forEach(function(e){return i[e]=t.shape[e]-1-i[e]}),n.set.apply(n,[r.get.apply(r,i)].concat(a))},a=0;a<n.size;a++)o(a);return n.toTensor()},t.prototype.concat=function(t,e){var n=this;if(\"complex64\"===t[0].dtype){var r=t.map(function(t){return Cn(t)}),o=t.map(function(t){return En(t)});return wn(this.concat(r,e),this.concat(o,e))}var a=t.map(function(t){var n=E(t.shape.slice(e));return t.as2D(-1,n)}),i=xn(a.map(function(t){return t.shape}),1),s=or(i,t[0].dtype).values;if(1===a[0].shape[0]){var u=0;a.forEach(function(t){s.set(n.readSync(t.dataId),u),u+=t.size})}else{var c=0;a.forEach(function(t){for(var e=n.readSync(t.dataId),r=0,o=0;o<t.shape[0];++o)for(var a=o*i[1]+c,u=0;u<t.shape[1];++u)s[a+u]=e[r++];c+=t.shape[1]})}var l=xn(t.map(function(t){return t.shape}),e);return Nn(s,l,t[0].dtype)},t.prototype.neg=function(t){return this.assertNotComplex(t,\"neg\"),this.multiply(Rn(-1),t)},t.prototype.add=function(t,e){return\"complex64\"===t.dtype||\"complex64\"===e.dtype?this.broadcastedBinaryComplexOp(t.cast(\"complex64\"),e.cast(\"complex64\"),function(t,e,n,r){return{real:t+n,imag:e+r}}):this.broadcastedBinaryOp(t,e,Nt(t.dtype,e.dtype),function(t,e){return t+e})},t.prototype.addN=function(t){var e=this;this.assertNotComplex(t,\"addN\");for(var n=t.map(function(t){return e.readSync(t.dataId)}),r=or(t[0].shape,t[0].dtype),o=r.values,a=0;a<t.length;a++)for(var i=n[a],s=0;s<o.length;s++)o[s]+=i[s];return r.toTensor()},t.prototype.subtract=function(t,e){return\"complex64\"===t.dtype||\"complex64\"===e.dtype?this.broadcastedBinaryComplexOp(t.cast(\"complex64\"),e.cast(\"complex64\"),function(t,e,n,r){return{real:t-n,imag:e-r}}):this.broadcastedBinaryOp(t,e,Nt(t.dtype,e.dtype),function(t,e){return t-e})},t.prototype.pow=function(t,e){return this.assertNotComplex([t,e],\"pow\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return Math.pow(t,e)})},t.prototype.batchMatMul=function(t,e,n,r){this.assertNotComplex([t,e],\"matMul\");for(var o=n?t.shape[1]:t.shape[2],a=n?t.shape[2]:t.shape[1],i=r?e.shape[1]:e.shape[2],s=t.shape[0],u=this.readSync(t.dataId),c=this.readSync(e.dataId),l=n?[t.strides[0],1,t.strides[1]]:[t.strides[0],t.strides[1],1],p=l[0],d=l[1],h=l[2],f=r?[1,e.strides[1],e.strides[0]]:[e.strides[1],1,e.strides[0]],m=f[0],v=f[1],g=f[2],y=a*i,x=or([s,a,i],t.dtype),b=x.values,w=this.blockSize,C=0;C<s;C++)for(var E=0;E<a;E+=w)for(var N=0;N<i;N+=w)for(var S=0;S<o;S+=w)for(var R=Math.min(E+w,a),T=Math.min(N+w,i),I=Math.min(S+w,o),A=E;A<R;A++)for(var k=N;k<T;k++){for(var O=0,D=S;D<I;D++)O+=u[C*p+A*d+D*h]*c[D*m+k*v+C*g];b[C*y+(A*i+k)]+=O}return x.toTensor()},t.prototype.fusedBatchMatMul=function(t){var e=t.a,n=t.b,r=t.transposeA,o=t.transposeB,a=t.bias,i=t.activation,s=t.preluActivationWeights,u=this.batchMatMul(e,n,r,o);return a&&(u=this.add(u,a)),i&&(u=ql(this,u,i,s)),u},t.prototype.multiply=function(t,e){return\"complex64\"===t.dtype||\"complex64\"===e.dtype?this.broadcastedBinaryComplexOp(t.cast(\"complex64\"),e.cast(\"complex64\"),function(t,e,n,r){return{real:t*n-e*r,imag:t*r+e*n}}):this.broadcastedBinaryOp(t,e,Nt(t.dtype,e.dtype),function(t,e){return t*e})},t.prototype.realDivide=function(t,e){return this.assertNotComplex([t,e],\"realDivide\"),this.broadcastedBinaryOp(t,e,\"float32\",function(t,e){return t/e})},t.prototype.floorDiv=function(t,e){return this.assertNotComplex([t,e],\"floorDiv\"),this.broadcastedBinaryOp(t,e,\"int32\",function(t,e){return Math.floor(t/e)})},t.prototype.sum=function(t,e){this.assertNotComplex(t,\"sum\"),fn(\"sum\",e,t.rank);for(var n=dn(t.shape,e),r=n[0],o=n[1],a=Mn(r,Nt(t.dtype,\"int32\")),i=E(o),s=this.readSync(a.dataId),u=this.readSync(t.dataId),c=0;c<s.length;++c){for(var l=c*i,p=0,d=0;d<i;++d)p+=u[l+d];s[c]=p}return a},t.prototype.prod=function(t,e){this.assertNotComplex(t,\"sum\");for(var n=dn(t.shape,e),r=n[0],o=n[1],a=Mn(r,Nt(t.dtype,\"int32\")),i=E(o),s=this.readSync(a.dataId),u=this.readSync(t.dataId),c=0;c<s.length;++c){for(var l=c*i,p=1,d=0;d<i;++d)p*=u[l+d];s[c]=p}return a},t.prototype.unsortedSegmentSum=function(t,e,n){this.assertNotComplex(t,\"unsortedSegmentSum\");for(var r=[],o=t.rank-e.rank,a=0;a<o;++a)e=e.expandDims(a+1);for(a=0;a<n;++a){var i=Rn(a,\"int32\"),s=Bu(i,e).asType(\"float32\").mul(t).sum(0);r.push(s)}return Tr(r)},t.prototype.argMin=function(t,e){this.assertNotComplex(t,\"argMin\");var n=[e];fn(\"argMin\",n,t.rank);for(var r=dn(t.shape,n),o=r[0],a=r[1],i=Mn(o,\"int32\"),s=E(a),u=this.readSync(i.dataId),c=this.readSync(t.dataId),l=0;l<u.length;++l){for(var p=l*s,d=c[p],h=0,f=0;f<s;++f){var m=c[p+f];m<d&&(d=m,h=f)}u[l]=h}return i},t.prototype.argMax=function(t,e){this.assertNotComplex(t,\"argMax\");var n=[e];fn(\"argMax\",n,t.rank);for(var r=dn(t.shape,n),o=r[0],a=r[1],i=Mn(o,\"int32\"),s=E(a),u=this.readSync(i.dataId),c=this.readSync(t.dataId),l=0;l<u.length;++l){for(var p=l*s,d=c[p],h=0,f=0;f<s;++f){var m=c[p+f];m>d&&(d=m,h=f)}u[l]=h}return i},t.prototype.cumsum=function(t,e,n,r){if(this.assertNotComplex(t,\"cumsum\"),e!==t.rank-1)throw new Error(\"backend.cumsum in CPU expects an inner-most axis=\"+(t.rank-1)+\" but got axis=\"+e);for(var o=Nt(t.dtype,\"int32\"),a=Mn(t.shape,o),i=this.readSync(a.dataId),s=this.readSync(t.dataId),u=t.shape[t.rank-1],c=r?function(t,e){return t+u-e-1}:function(t,e){return t+e},l=0;l<s.length;l+=u)for(var p=0;p<u;p++){var d=c(l,p);if(0===p)i[d]=n?0:s[d];else{var h=c(l,p-1);i[d]=n?s[h]+i[h]:s[d]+i[h]}}return a},t.prototype.equal=function(t,e){return this.assertNotComplex([t,e],\"equal\"),this.broadcastedBinaryOp(t,e,\"bool\",function(t,e){return t===e?1:0})},t.prototype.notEqual=function(t,e){return this.assertNotComplex([t,e],\"notEqual\"),this.broadcastedBinaryOp(t,e,\"bool\",function(t,e){return t!==e?1:0})},t.prototype.less=function(t,e){return this.assertNotComplex([t,e],\"less\"),this.broadcastedBinaryOp(t,e,\"bool\",function(t,e){return t<e?1:0})},t.prototype.lessEqual=function(t,e){return this.assertNotComplex([t,e],\"lessEqual\"),this.broadcastedBinaryOp(t,e,\"bool\",function(t,e){return t<=e?1:0})},t.prototype.greater=function(t,e){return this.assertNotComplex([t,e],\"greater\"),this.broadcastedBinaryOp(t,e,\"bool\",function(t,e){return t>e?1:0})},t.prototype.greaterEqual=function(t,e){return this.assertNotComplex([t,e],\"greaterEqual\"),this.broadcastedBinaryOp(t,e,\"bool\",function(t,e){return t>=e?1:0})},t.prototype.logicalNot=function(t){this.assertNotComplex(t,\"logicalNot\");for(var e=this.readSync(t.dataId),n=new Uint8Array(e.length),r=0;r<e.length;++r)n[r]=e[r]?0:1;return mt.make(t.shape,{values:n},\"bool\")},t.prototype.logicalAnd=function(t,e){return this.assertNotComplex([t,e],\"logicalAnd\"),this.broadcastedBinaryOp(t,e,\"bool\",function(t,e){return t&&e})},t.prototype.logicalOr=function(t,e){return this.assertNotComplex([t,e],\"logicalOr\"),this.broadcastedBinaryOp(t,e,\"bool\",function(t,e){return t||e})},t.prototype.select=function(t,e,n){this.assertNotComplex([t,e,n],\"select\");for(var r=this.readSync(t.dataId),o=this.readSync(e.dataId),a=this.readSync(n.dataId),i=Mn(e.shape,Nt(e.dtype,n.dtype)),s=this.readSync(i.dataId),u=0,c=0===t.rank||t.rank>1||1===e.rank?1:e.shape[1],l=0;l<r.length;l++)for(var p=0;p<c;p++)1===r[l]?s[u++]=o[l]:s[u++]=a[l];return i},t.prototype.where=function(t){this.assertNotComplex([t],\"where\");var e=this.readSync(t.dataId);return _o(t.shape,e)},t.prototype.topk=function(t,e,n){return this.assertNotComplex(t,\"topk\"),Do(this.readSync(t.dataId),t.shape,t.dtype,e)},t.prototype.min=function(t,e){this.assertNotComplex(t,\"min\"),fn(\"min\",e,t.rank);for(var n=dn(t.shape,e),r=n[0],o=n[1],a=Mn(r,t.dtype),i=E(o),s=this.readSync(a.dataId),u=this.readSync(t.dataId),c=0;c<s.length;++c){for(var l=c*i,p=u[l],d=0;d<i;++d){var h=u[l+d];h<p&&(p=h)}s[c]=p}return a},t.prototype.minimum=function(t,e){return this.assertNotComplex([t,e],\"minimum\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return Math.min(t,e)})},t.prototype.mod=function(t,e){return this.assertNotComplex([t,e],\"mod\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){var n=t%e;return t<0&&e<0||t>=0&&e>=0?n:(n+e)%e})},t.prototype.max=function(t,e){this.assertNotComplex(t,\"max\"),fn(\"max\",e,t.rank);for(var n=dn(t.shape,e),r=n[0],o=n[1],a=Mn(r,t.dtype),i=E(o),s=this.readSync(a.dataId),u=this.readSync(t.dataId),c=0;c<s.length;++c){for(var l=c*i,p=u[l],d=0;d<i;++d){var h=u[l+d];h>p&&(p=h)}s[c]=p}return a},t.prototype.maximum=function(t,e){return this.assertNotComplex([t,e],\"maximum\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return Math.max(t,e)})},t.prototype.all=function(t,e){this.assertNotComplex(t,\"all\"),fn(\"all\",e,t.rank);for(var n=dn(t.shape,e),r=n[0],o=n[1],a=Mn(r,t.dtype),i=E(o),s=this.readSync(a.dataId),u=this.readSync(t.dataId),c=0;c<s.length;++c){for(var l=c*i,p=u[l],d=0;d<i;++d){var h=u[l+d];p=p&&h}s[c]=p}return a},t.prototype.any=function(t,e){this.assertNotComplex(t,\"any\"),fn(\"any\",e,t.rank);for(var n=dn(t.shape,e),r=n[0],o=n[1],a=Mn(r,t.dtype),i=E(o),s=this.readSync(a.dataId),u=this.readSync(t.dataId),c=0;c<s.length;++c){for(var l=c*i,p=u[l],d=0;d<i;++d){var h=u[l+d];p=p||h}s[c]=p}return a},t.prototype.squaredDifference=function(t,e){return this.assertNotComplex([t,e],\"squaredDifference\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){var n=t-e;return n*n})},t.prototype.ceil=function(t){this.assertNotComplex(t,\"ceil\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=Math.ceil(e[r]);return mt.make(t.shape,{values:n})},t.prototype.floor=function(t){this.assertNotComplex(t,\"floor\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=Math.floor(e[r]);return mt.make(t.shape,{values:n})},t.prototype.sign=function(t){this.assertNotComplex(t,\"x\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r)e[r]<0?n[r]=-1:e[r]>0?n[r]=1:n[r]=0;return mt.make(t.shape,{values:n})},t.prototype.isNaN=function(t){this.assertNotComplex(t,\"x\");for(var e=this.readSync(t.dataId),n=new Uint8Array(e.length),r=0;r<e.length;++r)Number.isNaN(e[r])&&(n[r]=1);return mt.make(t.shape,{values:n},\"bool\")},t.prototype.isInf=function(t){this.assertNotComplex(t,\"x\");for(var e=this.readSync(t.dataId),n=new Uint8Array(e.length),r=0;r<e.length;++r)Math.abs(e[r])===1/0&&(n[r]=1);return mt.make(t.shape,{values:n},\"bool\")},t.prototype.isFinite=function(t){this.assertNotComplex(t,\"x\");for(var e=this.readSync(t.dataId),n=new Uint8Array(e.length),r=0;r<e.length;++r)Number.isFinite(e[r])&&(n[r]=1);return mt.make(t.shape,{values:n},\"bool\")},t.prototype.round=function(t){this.assertNotComplex(t,\"round\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r){var o=Math.floor(e[r]);e[r]-o<.5?n[r]=Math.floor(e[r]):e[r]-o>.5?n[r]=Math.ceil(e[r]):n[r]=o%2==0?o:o+1}return mt.make(t.shape,{values:n})},t.prototype.exp=function(t){this.assertNotComplex(t,\"exp\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=Math.exp(e[r]);return mt.make(t.shape,{values:n})},t.prototype.expm1=function(t){this.assertNotComplex(t,\"expm1\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=Math.expm1(e[r]);return mt.make(t.shape,{values:n})},t.prototype.log=function(t){this.assertNotComplex(t,\"log\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r){var o=e[r];n[r]=Math.log(o)}return mt.make(t.shape,{values:n})},t.prototype.log1p=function(t){this.assertNotComplex(t,\"log1p\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r){var o=e[r];n[r]=Math.log1p(o)}return mt.make(t.shape,{values:n})},t.prototype.sqrt=function(t){this.assertNotComplex(t,\"sqrt\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r){var o=e[r];n[r]=Math.sqrt(o)}return mt.make(t.shape,{values:n})},t.prototype.rsqrt=function(t){this.assertNotComplex(t,\"rsqrt\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r){var o=e[r];n[r]=1/Math.sqrt(o)}return mt.make(t.shape,{values:n})},t.prototype.square=function(t){this.assertNotComplex(t,\"square\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r){var o=e[r];n[r]=o*o}return mt.make(t.shape,{values:n})},t.prototype.reciprocal=function(t){this.assertNotComplex(t,\"reciprocal\");for(var e=this.readSync(t.dataId),n=new Float32Array(e.length),r=0;r<e.length;++r)n[r]=1/e[r];return mt.make(t.shape,{values:n})},t.prototype.linear=function(t){return t},t.prototype.relu=function(t){this.assertNotComplex(t,\"relu\");for(var e=Mn(t.shape,t.dtype),n=this.readSync(e.dataId),r=this.readSync(t.dataId),o=0;o<r.length;++o)n[o]=Math.max(0,r[o]);return e},t.prototype.prelu=function(t,e){return this.assertNotComplex([t,e],\"prelu\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return t<0?e*t:t})},t.prototype.elu=function(t){this.assertNotComplex(t,\"elu\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r){var o=n[r];e[r]=o>=0?o:Math.exp(o)-1}return mt.make(t.shape,{values:e})},t.prototype.eluDer=function(t,e){this.assertNotComplex([t,e],\"eluDer\");for(var n=new Float32Array(e.size),r=this.readSync(e.dataId),o=this.readSync(t.dataId),a=0;a<r.length;++a){var i=r[a];n[a]=i>=1?o[a]:o[a]*(i+1)}return mt.make(e.shape,{values:n})},t.prototype.selu=function(t){this.assertNotComplex(t,\"selu\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r){var o=n[r];e[r]=o>=0?1.0507009873554805*o:1.7580993408473768*(Math.exp(o)-1)}return mt.make(t.shape,{values:e})},t.prototype.clip=function(t,e,n){this.assertNotComplex(t,\"clip\");for(var r=new Float32Array(t.size),o=this.readSync(t.dataId),a=0;a<o.length;++a){var i=o[a];r[a]=i>n?n:i<e?e:i}return mt.make(t.shape,{values:r})},t.prototype.abs=function(t){for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.abs(n[r]);return mt.make(t.shape,{values:e})},t.prototype.complexAbs=function(t){for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<t.size;++r){var o=n[2*r],a=n[2*r+1];e[r]=Math.hypot(o,a)}return mt.make(t.shape,{values:e})},t.prototype.int=function(t){this.assertNotComplex(t,\"int\");for(var e=new Int32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=n[r];return mt.make(t.shape,{values:e},\"int32\")},t.prototype.sigmoid=function(t){this.assertNotComplex(t,\"sigmoid\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=1/(1+Math.exp(-n[r]));return mt.make(t.shape,{values:e})},t.prototype.softplus=function(t){this.assertNotComplex(t,\"softplus\");for(var e=Math.log(1.1920928955078125e-7)+2,n=new Float32Array(t.size),r=this.readSync(t.dataId),o=0;o<r.length;++o){var a,i=r[o]>-e,s=r[o]<e,u=Math.exp(r[o]);a=s?u:i?r[o]:Math.log(1+u),n[o]=a}return mt.make(t.shape,{values:n})},t.prototype.sin=function(t){this.assertNotComplex(t,\"sin\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.sin(n[r]);return mt.make(t.shape,{values:e})},t.prototype.cos=function(t){this.assertNotComplex(t,\"cos\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.cos(n[r]);return mt.make(t.shape,{values:e})},t.prototype.tan=function(t){this.assertNotComplex(t,\"tan\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.tan(n[r]);return mt.make(t.shape,{values:e})},t.prototype.asin=function(t){this.assertNotComplex(t,\"asin\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.asin(n[r]);return mt.make(t.shape,{values:e})},t.prototype.acos=function(t){this.assertNotComplex(t,\"acos\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.acos(n[r]);return mt.make(t.shape,{values:e})},t.prototype.atan=function(t){this.assertNotComplex(t,\"atan\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.atan(n[r]);return mt.make(t.shape,{values:e})},t.prototype.atan2=function(t,e){return this.assertNotComplex([t,e],\"atan2\"),this.broadcastedBinaryOp(t,e,t.dtype,function(t,e){return Math.atan2(t,e)})},t.prototype.sinh=function(t){this.assertNotComplex(t,\"sinh\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.sinh(n[r]);return mt.make(t.shape,{values:e})},t.prototype.cosh=function(t){this.assertNotComplex(t,\"cosh\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.cosh(n[r]);return mt.make(t.shape,{values:e})},t.prototype.tanh=function(t){this.assertNotComplex(t,\"tanh\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=R(n[r]);return mt.make(t.shape,{values:e})},t.prototype.asinh=function(t){this.assertNotComplex(t,\"asinh\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.asinh(n[r]);return mt.make(t.shape,{values:e})},t.prototype.acosh=function(t){this.assertNotComplex(t,\"acosh\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.acosh(n[r]);return mt.make(t.shape,{values:e})},t.prototype.atanh=function(t){this.assertNotComplex(t,\"atanh\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r)e[r]=Math.atanh(n[r]);return mt.make(t.shape,{values:e})},t.prototype.erf=function(t){this.assertNotComplex(t,\"erf\");for(var e=new Float32Array(t.size),n=this.readSync(t.dataId),r=0;r<n.length;++r){var o=n[r],a=1/(1+.3275911*o);e[r]=1-((((1.061405429*a-1.453152027)*a+1.421413741)*a-.284496736)*a+.254829592)*a*Math.exp(-o*o)}return mt.make(t.shape,{values:e})},t.prototype.step=function(t,e){void 0===e&&(e=0),this.assertNotComplex(t,\"step\");for(var n=new Float32Array(t.size),r=this.readSync(t.dataId),o=0;o<r.length;++o){var a=r[o];isNaN(a)?n[o]=NaN:n[o]=a>0?1:e}return mt.make(t.shape,{values:n})},t.prototype.fusedConv2d=function(t,e,n,r,o,a){var i=this.conv2d(t,e,n);return r&&(i=this.add(i,r)),o&&(i=ql(this,i,o,a)),i},t.prototype.conv2d=function(t,e,n){this.assertNotComplex([t,e],\"conv2d\");for(var r=n.filterHeight,o=n.filterWidth,a=n.dilationHeight,i=n.dilationWidth,s=n.padInfo.left,u=n.padInfo.top,c=\"channelsLast\"===n.dataFormat,l=or(n.outShape,t.dtype),p=t.strides[0],d=c?t.strides[1]:t.strides[2],h=c?t.strides[2]:1,f=c?1:t.strides[1],m=l.strides[0],v=c?l.strides[1]:l.strides[2],g=c?l.strides[2]:1,y=c?1:l.strides[1],x=this.readSync(t.dataId),b=this.readSync(e.dataId),w=l.values,C=0;C<n.batchSize;++C)for(var E=C*p,N=C*m,S=0;S<n.outHeight;++S)for(var R=N+S*v,T=S*n.strideHeight-u,I=0;I<r;I++){var A=T+I*a;if(!(A<0||A>=n.inHeight))for(var k=I*e.strides[0],O=E+A*d,D=0;D<n.outWidth;++D)for(var _=R+D*g,M=D*n.strideWidth-s,F=0;F<o;F++){var P=M+F*i;if(!(P<0||P>=n.inWidth))for(var B=O+P*h,L=k+F*e.strides[1],V=0;V<n.inChannels;++V){for(var z=x[B+V*f],W=0;W<n.outChannels;++W)w[_+W*y]+=z*b[L+W];L+=n.outChannels}}}return l.toTensor()},t.prototype.conv3d=function(t,e,n){for(var r=n.filterDepth,o=n.filterHeight,a=n.filterWidth,i=n.dilationDepth,s=n.dilationHeight,u=n.dilationWidth,c=n.padInfo.front,l=n.padInfo.left,p=n.padInfo.top,d=or(n.outShape,t.dtype),h=this.readSync(t.dataId),f=this.readSync(e.dataId),m=d.values,v=0;v<n.batchSize;++v)for(var g=v*t.strides[0],y=v*d.strides[0],x=0;x<n.outDepth;++x)for(var b=y+x*d.strides[1],w=x*n.strideDepth-c,C=0;C<r;C++){var E=w+C*i;if(!(E<0||E>=n.inDepth))for(var N=C*e.strides[0],S=g+E*t.strides[1],R=0;R<n.outHeight;++R)for(var T=b+R*d.strides[2],I=R*n.strideHeight-p,A=0;A<o;A++){var k=I+A*s;if(!(k<0||k>=n.inHeight))for(var O=N+A*e.strides[1],D=S+k*t.strides[2],_=0;_<n.outWidth;++_)for(var M=T+_*n.outChannels,F=_*n.strideWidth-l,P=0;P<a;P++){var B=F+P*u;if(!(B<0||B>=n.inWidth))for(var L=O+P*e.strides[2],V=D+B*n.inChannels,z=L,W=0;W<n.inChannels;++W){for(var U=h[V+W],j=0;j<n.outChannels;++j)m[M+j]+=U*f[z+j];z+=n.outChannels}}}}return d.toTensor()},t.prototype.conv2dDerInput=function(t,e,n){this.assertNotComplex([t,e],\"conv2dDerInput\");for(var r=or(n.inShape,\"float32\"),o=r.values,a=this.readSync(t.dataId),i=this.readSync(e.dataId),s=e.strides,u=s[0],c=s[1],l=s[2],p=n.batchSize,d=n.filterHeight,h=n.filterWidth,f=n.inChannels,m=n.inHeight,v=n.inWidth,g=n.outChannels,y=n.outHeight,x=n.outWidth,b=n.strideHeight,w=n.strideWidth,C=n.dataFormat,E=d-1-n.padInfo.top,N=h-1-n.padInfo.left,S=\"channelsLast\"===C,R=r.strides[0],T=S?r.strides[1]:r.strides[2],I=S?r.strides[2]:1,A=S?1:r.strides[1],k=t.strides[0],O=S?t.strides[1]:t.strides[2],D=S?t.strides[2]:1,_=S?1:t.strides[1],M=0;M<p;++M)for(var F=0;F<f;++F)for(var P=0;P<m;++P)for(var B=P-E,L=Math.max(0,Math.ceil(B/b)),V=Math.min(y,(d+B)/b),z=0;z<v;++z){for(var W=z-N,U=Math.max(0,Math.ceil(W/w)),j=Math.min(x,(h+W)/w),G=0,H=L;H<V;++H)for(var q=H*b-B,$=U;$<j;++$)for(var K=k*M+O*H+D*$,X=u*(d-1-q)+c*(h-1-($*w-W))+l*F,Y=0;Y<g;++Y)G+=a[K+_*Y]*i[X+Y];o[R*M+T*P+I*z+A*F]=G}return r.toTensor()},t.prototype.conv3dDerInput=function(t,e,n){for(var r=or(n.inShape,\"float32\"),o=r.values,a=r.strides,i=a[0],s=a[1],u=a[2],c=a[3],l=this.readSync(t.dataId),p=t.strides,d=p[0],h=p[1],f=p[2],m=p[3],v=this.readSync(e.dataId),g=e.strides,y=g[0],x=g[1],b=g[2],w=g[3],C=n.batchSize,E=n.filterDepth,N=n.filterHeight,S=n.filterWidth,R=n.inChannels,T=n.inDepth,I=n.inHeight,A=n.inWidth,k=n.outChannels,O=n.outDepth,D=n.outHeight,_=n.outWidth,M=n.strideDepth,F=n.strideHeight,P=n.strideWidth,B=E-1-n.padInfo.front,L=N-1-n.padInfo.top,V=S-1-n.padInfo.left,z=0;z<C;++z)for(var W=0;W<R;++W)for(var U=0;U<T;++U)for(var j=U-B,G=Math.max(0,Math.ceil(j/M)),H=Math.min(O,(E+j)/M),q=0;q<I;++q)for(var $=q-L,K=Math.max(0,Math.ceil($/F)),X=Math.min(D,(N+$)/F),Y=0;Y<A;++Y){for(var Q=Y-V,J=Math.max(0,Math.ceil(Q/P)),Z=Math.min(_,(S+Q)/P),tt=0,et=G;et<H;++et)for(var nt=et*M-j,rt=K;rt<X;++rt)for(var ot=rt*F-$,at=J;at<Z;++at)for(var it=d*z+h*et+f*rt+m*at,st=y*(E-1-nt)+x*(N-1-ot)+b*(S-1-(at*P-Q))+w*W,ut=0;ut<k;++ut)tt+=l[it+ut]*v[st+ut];o[i*z+s*U+u*q+c*Y+W]=tt}return r.toTensor()},t.prototype.conv2dDerFilter=function(t,e,n){this.assertNotComplex([t,e],\"conv2dDerFilter\");for(var r=n.strideHeight,o=n.strideWidth,a=n.filterHeight,i=n.filterWidth,s=\"channelsLast\"===n.dataFormat,u=or(n.filterShape,\"float32\"),c=n.padInfo.left,l=n.padInfo.top,p=this.bufferSync(t),d=this.bufferSync(e),h=0;h<a;++h)for(var f=Math.max(0,Math.ceil((l-h)/r)),m=Math.min(n.outHeight,(n.inHeight+l-h)/r),v=0;v<i;++v)for(var g=Math.max(0,Math.ceil((c-v)/o)),y=Math.min(n.outWidth,(n.inWidth+c-v)/o),x=0;x<n.inChannels;++x)for(var b=0;b<n.outChannels;++b){for(var w=0,C=0;C<n.batchSize;++C)for(var E=f;E<m;++E)for(var N=h+E*r-l,S=g;S<y;++S){var R=v+S*o-c;w+=s?p.get(C,N,R,x)*d.get(C,E,S,b):p.get(C,x,N,R)*d.get(C,b,E,S)}u.set(w,h,v,x,b)}return u.toTensor()},t.prototype.conv3dDerFilter=function(t,e,n){for(var r=n.strideDepth,o=n.strideHeight,a=n.strideWidth,i=n.filterDepth,s=n.filterHeight,u=n.filterWidth,c=or(n.filterShape,\"float32\"),l=c.values,p=c.strides,d=p[0],h=p[1],f=p[2],m=p[3],v=this.readSync(e.dataId),g=e.strides,y=g[0],x=g[1],b=g[2],w=g[3],C=this.readSync(t.dataId),E=t.strides,N=E[0],S=E[1],R=E[2],T=E[3],I=n.padInfo.front,A=n.padInfo.left,k=n.padInfo.top,O=0;O<i;++O)for(var D=Math.max(0,Math.ceil((I-O)/r)),_=Math.min(n.outDepth,(n.inDepth+I-O)/r),M=O*d,F=0;F<s;++F)for(var P=Math.max(0,Math.ceil((k-F)/o)),B=Math.min(n.outHeight,(n.inHeight+k-F)/o),L=F*h+M,V=0;V<u;++V)for(var z=Math.max(0,Math.ceil((A-V)/a)),W=Math.min(n.outWidth,(n.inWidth+A-V)/a),U=V*f+L,j=0;j<n.inChannels;++j)for(var G=j*m+U,H=0;H<n.outChannels;++H){for(var q=0,$=0;$<n.batchSize;++$)for(var K=$*N,X=$*y,Y=D;Y<_;++Y)for(var Q=(O+Y*r-I)*S+K,J=Y*x+X,Z=P;Z<B;++Z)for(var tt=(F+Z*o-k)*R+Q,et=Z*b+J,nt=z;nt<W;++nt){var rt=nt*w+et;q+=C[(V+nt*a-A)*T+tt+j]*v[rt+H]}l[G+H]=q}return c.toTensor()},t.prototype.depthwiseConv2D=function(t,e,n){this.assertNotComplex([t,e],\"depthwiseConv2D\");for(var r=n.filterHeight,o=n.filterWidth,a=n.dilationHeight,i=n.dilationWidth,s=n.padInfo.left,u=n.padInfo.top,c=n.outChannels/n.inChannels,l=or(n.outShape,t.dtype),p=this.readSync(t.dataId),d=this.readSync(e.dataId),h=l.values,f=0;f<n.batchSize;++f)for(var m=f*t.strides[0],v=f*l.strides[0],g=0;g<n.outHeight;++g)for(var y=v+g*l.strides[1],x=g*n.strideHeight-s,b=0;b<r;++b){var w=x+b*a;if(!(w<0||w>=n.inHeight))for(var C=b*e.strides[0],E=m+w*t.strides[1],N=0;N<n.outWidth;++N)for(var S=y+N*l.strides[2],R=N*n.strideWidth-u,T=0;T<o;++T){var I=R+T*i;if(!(I<0||I>=n.inWidth))for(var A=C+T*e.strides[1],k=E+I*n.inChannels,O=S,D=A,_=0;_<n.inChannels;++_){for(var M=p[k+_],F=0;F<c;++F)h[O+F]+=M*d[D+F];O+=c,D+=c}}}return l.toTensor()},t.prototype.depthwiseConv2DDerInput=function(t,e,n){this.assertNotComplex([t,e],\"depthwiseConv2DDerInput\");for(var r=or(n.inShape,\"float32\"),o=r.values,a=r.strides,i=a[0],s=a[1],u=a[2],c=this.readSync(t.dataId),l=t.strides,p=l[0],d=l[1],h=l[2],f=this.readSync(e.dataId),m=e.strides,v=m[0],g=m[1],y=m[2],x=n.batchSize,b=n.filterHeight,w=n.filterWidth,C=n.inChannels,E=n.inHeight,N=n.inWidth,S=n.outChannels,R=n.outHeight,T=n.outWidth,I=n.strideHeight,A=n.strideWidth,k=b-1-n.padInfo.top,O=w-1-n.padInfo.left,D=S/C,_=0;_<x;++_)for(var M=0;M<C;++M)for(var F=0;F<E;++F)for(var P=F-k,B=Math.max(0,Math.ceil(P/I)),L=Math.min(R,(b+P)/I),V=0;V<N;++V){for(var z=V-O,W=Math.max(0,Math.ceil(z/A)),U=Math.min(T,(w+z)/A),j=0,G=B;G<L;++G)for(var H=G*I-P,q=W;q<U;++q)for(var $=p*_+d*G+h*q,K=v*(b-1-H)+g*(w-1-(q*A-z))+y*M,X=0;X<D;++X)j+=c[$+(M*D+X)]*f[K+X];o[i*_+s*F+u*V+M]=j}return r.toTensor()},t.prototype.depthwiseConv2DDerFilter=function(t,e,n){this.assertNotComplex([t,e],\"depthwiseConv2DDerFilter\");for(var r=n.strideHeight,o=n.strideWidth,a=n.filterHeight,i=n.filterWidth,s=or(n.filterShape,\"float32\"),u=n.padInfo.left,c=n.padInfo.top,l=n.outChannels/n.inChannels,p=this.bufferSync(t),d=this.bufferSync(e),h=0;h<a;++h)for(var f=Math.max(0,Math.ceil((c-h)/r)),m=Math.min(n.outHeight,(n.inHeight+c-h)/r),v=0;v<i;++v)for(var g=Math.max(0,Math.ceil((u-v)/o)),y=Math.min(n.outWidth,(n.inWidth+u-v)/o),x=0;x<n.outChannels;++x){for(var b=Math.trunc(x/l),w=x%l,C=0,E=0;E<n.batchSize;++E)for(var N=f;N<m;++N)for(var S=h+N*r-c,R=g;R<y;++R){var T=v+R*o-u;C+=p.get(E,S,T,b)*d.get(E,N,R,x)}s.set(C,h,v,b,w)}return s.toTensor()},t.prototype.tile=function(t,e){return this.assertNotComplex(t,\"tile\"),Oo(this.bufferSync(t),e)},t.prototype.pad=function(t,e,n){this.assertNotComplex(t,\"pad\");var r=e.map(function(e,n){return e[0]+t.shape[n]+e[1]}),o=e.map(function(t){return t[0]}),a=this.bufferSync(t),i=or(r,t.dtype);0!==n&&i.values.fill(n);for(var s=0;s<t.size;s++){var u=a.indexToLoc(s),c=u.map(function(t,e){return t+o[e]});i.set.apply(i,[a.get.apply(a,u)].concat(c))}return i.toTensor()},t.prototype.transpose=function(t,e){this.assertNotComplex(t,\"transpose\");for(var n=new Array(t.rank),r=0;r<n.length;r++)n[r]=t.shape[e[r]];var o=this.readSync(t.dataId),a=or(n,t.dtype),i=this.bufferSync(t);for(r=0;r<t.size;++r){for(var s=i.indexToLoc(r),u=new Array(s.length),c=0;c<u.length;c++)u[c]=s[e[c]];var l=a.locToIndex(u);a.values[l]=o[r]}return a.toTensor()},t.prototype.gather=function(t,e,n){this.assertNotComplex([t,e],\"gather\");var r=t.shape.slice(),o=this.readSync(e.dataId);r[n]=o.length;for(var a=or(r,t.dtype),i=this.bufferSync(t),s=0;s<a.size;++s){var u=a.indexToLoc(s),c=u.slice();c[n]=o[u[n]];var l=i.locToIndex(c);a.values[s]=i.values[l]}return a.toTensor()},t.prototype.batchToSpaceND=function(t,e,n){this.assertNotComplex([t],\"batchToSpaceND\");var r=e.reduce(function(t,e){return t*e}),o=Dr(t.shape,e,r),a=_r(o.length,e.length),i=Mr(t.shape,e,r),s=Fr(n,e.length),u=Pr(i,n,e.length);return t.reshape(o).transpose(a).reshape(i).slice(s,u)},t.prototype.spaceToBatchND=function(t,e,n){this.assertNotComplex([t],\"spaceToBatchND\");var r=e.reduce(function(t,e){return t*e}),o=[[0,0]];o.push.apply(o,n);for(var a=1+e.length;a<t.shape.length;++a)o.push([0,0]);var i=t.pad(o),s=Dr(i.shape,e,r,!1),u=_r(s.length,e.length,!1),c=Mr(i.shape,e,r,!1);return i.reshape(s).transpose(u).reshape(c)},t.prototype.pool=function(t,e,n){this.assertNotComplex(t,\"pool\");for(var r=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,s=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=e.padInfo.top,l=e.padInfo.left,p=\"max\"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,d=this.readSync(t.dataId),h=or(e.outShape,t.dtype),f=h.values,m=e.outShape[1]*e.outShape[2]*e.outShape[3],v=e.outShape[2]*e.outShape[3],g=e.outShape[3],y=0;y<e.batchSize;++y)for(var x=y*m,b=y*t.strides[0],w=0;w<e.inChannels;++w)for(var C=0;C<e.outHeight;++C)for(var E=C*r-c,N=Math.max(0,E),S=Math.min(e.inHeight,s+E),R=x+C*v,T=0;T<e.outWidth;++T){for(var I=T*o-l,A=Math.max(0,I),k=Math.min(e.inWidth,u+I),O=p,D=0,_=0,M=N;M<S;M+=a){for(var F=b+M*t.strides[1],P=A;P<k;P+=i){var B=d[F+P*t.strides[2]+w];\"max\"===n&&B>O?O=B:\"avg\"===n&&(D+=B,_++)}if(isNaN(O))break}f[R+T*g+w]=\"avg\"===n?D/_:O}return h.toTensor()},t.prototype.maxPool=function(t,e){return this.pool(t,e,\"max\")},t.prototype.maxPoolPositions=function(t,e){for(var n=or(e.outShape,\"int32\"),r=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,s=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=e.padInfo.top,l=e.padInfo.left,p=this.bufferSync(t),d=0;d<e.batchSize;++d)for(var h=0;h<e.inChannels;++h)for(var f=0;f<e.outHeight;++f){for(var m=f*r-c,v=m;v<0;)v+=a;for(var g=Math.min(e.inHeight,s+m),y=0;y<e.outWidth;++y){for(var x=y*o-l,b=x;b<0;)b+=i;for(var w=Math.min(e.inWidth,u+x),C=Number.NEGATIVE_INFINITY,E=-1,N=v;N<g;N+=a)for(var S=N-m,R=b;R<w;R+=i){var T=R-x,I=p.get(d,N,R,h);I>C&&(C=I,E=S*u+T)}n.set(E,d,f,y,h)}}return n.toTensor()},t.prototype.maxPoolBackprop=function(t,e,n,r){this.assertNotComplex([e,n],\"maxPoolBackprop\");for(var o=this.maxPoolPositions(e,r),a=r.strideHeight,i=r.strideWidth,s=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,l=r.effectiveFilterWidth,p=l-1-r.padInfo.left,d=c-1-r.padInfo.top,h=or(e.shape,\"float32\"),f=this.bufferSync(o),m=this.bufferSync(t),v=0;v<r.batchSize;++v)for(var g=0;g<r.inChannels;++g)for(var y=0;y<r.inHeight;++y)for(var x=0;x<r.inWidth;++x){for(var b=y-d,w=x-p,C=0,E=0;E<c;E+=s){var N=(b+E)/a;if(!(N<0||N>=r.outHeight||Math.floor(N)!==N))for(var S=0;S<l;S+=u){var R=(w+S)/i;if(!(R<0||R>=r.outWidth||Math.floor(R)!==R)){var T=c*l-1-f.get(v,N,R,g)===E*l+S?1:0;0!==T&&(C+=m.get(v,N,R,g)*T)}}}h.set(C,v,y,x,g)}return h.toTensor()},t.prototype.avgPoolBackprop=function(t,e,n){this.assertNotComplex([t,e],\"avgPoolBackprop\");for(var r=n.strideHeight,o=n.strideWidth,a=n.filterHeight,i=n.filterWidth,s=n.dilationHeight,u=n.dilationWidth,c=n.effectiveFilterHeight,l=n.effectiveFilterWidth,p=l-1-n.padInfo.left,d=c-1-n.padInfo.top,h=or(e.shape,\"float32\"),f=1/(a*i),m=this.bufferSync(t),v=0;v<n.batchSize;++v)for(var g=0;g<n.inChannels;++g)for(var y=0;y<n.inHeight;++y)for(var x=0;x<n.inWidth;++x){for(var b=y-d,w=x-p,C=0,E=0;E<c;E+=s){var N=(b+E)/r;if(!(N<0||N>=n.outHeight||Math.floor(N)!==N))for(var S=0;S<l;S+=u){var R=(w+S)/o;R<0||R>=n.outWidth||Math.floor(R)!==R||(C+=m.get(v,N,R,g))}}h.set(C*f,v,y,x,g)}return h.toTensor()},t.prototype.pool3d=function(t,e,n){this.assertNotComplex(t,\"pool3d\");for(var r=e.strideDepth,o=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,s=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.front,h=e.padInfo.top,f=e.padInfo.left,m=\"max\"===n?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,v=this.readSync(t.dataId),g=or(e.outShape,t.dtype),y=g.values,x=e.outShape[1]*e.outShape[2]*e.outShape[3]*e.outShape[4],b=e.outShape[2]*e.outShape[3]*e.outShape[4],w=e.outShape[3]*e.outShape[4],C=e.outShape[4],E=0;E<e.batchSize;++E)for(var N=E*x,S=E*t.strides[0],R=0;R<e.inChannels;++R)for(var T=0;T<e.outDepth;++T){for(var I=T*r-d,A=I;A<0;)A+=i;for(var k=Math.min(e.inDepth,c+I),O=N+T*b,D=0;D<e.outHeight;++D){for(var _=D*o-h,M=_;M<0;)M+=s;for(var F=Math.min(e.inHeight,l+_),P=O+D*w,B=0;B<e.outWidth;++B){for(var L=B*a-f,V=L;V<0;)V+=u;for(var z=Math.min(e.inWidth,p+L),W=P+B*C,U=m,j=0,G=0,H=A;H<k;H+=i){for(var q=S+H*t.strides[1],$=M;$<F;$+=s){for(var K=q+$*t.strides[2],X=V;X<z;X+=u){var Y=v[K+X*t.strides[3]+R];if(\"max\"===n&&Y>U?U=Y:\"avg\"===n&&(j+=Y,G++),isNaN(U))break}if(isNaN(U))break}if(isNaN(U))break}y[W+R]=\"avg\"===n?j/G:U}}}return g.toTensor()},t.prototype.avgPool3d=function(t,e){return this.assertNotComplex(t,\"avgPool3d\"),this.pool3d(t,e,\"avg\").toFloat()},t.prototype.avgPool3dBackprop=function(t,e,n){this.assertNotComplex([t,e],\"avgPool3dBackprop\");for(var r=n.strideDepth,o=n.strideHeight,a=n.strideWidth,i=n.filterDepth,s=n.filterHeight,u=n.filterWidth,c=n.dilationDepth,l=n.dilationHeight,p=n.dilationWidth,d=n.effectiveFilterDepth,h=n.effectiveFilterHeight,f=n.effectiveFilterWidth,m=d-1-n.padInfo.front,v=f-1-n.padInfo.left,g=h-1-n.padInfo.top,y=or(e.shape,\"float32\"),x=1/(i*s*u),b=this.bufferSync(t),w=0;w<n.batchSize;++w)for(var C=0;C<n.inChannels;++C)for(var E=0;E<n.inDepth;++E)for(var N=0;N<n.inHeight;++N)for(var S=0;S<n.inWidth;++S){for(var R=E-m,T=N-g,I=S-v,A=0,k=0;k<d;k+=c){var O=(R+k)/r;if(!(O<0||O>=n.outDepth||Math.floor(O)!==O))for(var D=0;D<h;D+=l){var _=(T+D)/o;if(!(_<0||_>=n.outHeight||Math.floor(_)!==_))for(var M=0;M<f;M+=p){var F=(I+M)/a;F<0||F>=n.outWidth||Math.floor(F)!==F||(A+=b.get(w,O,_,F,C))}}}y.set(A*x,w,E,N,S,C)}return y.toTensor()},t.prototype.maxPool3d=function(t,e){return this.assertNotComplex(t,\"maxPool3d\"),this.pool3d(t,e,\"max\").toFloat()},t.prototype.maxPool3dPositions=function(t,e){for(var n=or(e.outShape,\"int32\"),r=e.strideDepth,o=e.strideHeight,a=e.strideWidth,i=e.dilationDepth,s=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,l=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=e.padInfo.front,h=e.padInfo.top,f=e.padInfo.left,m=this.bufferSync(t),v=0;v<e.batchSize;++v)for(var g=0;g<e.inChannels;++g)for(var y=0;y<e.outDepth;++y){for(var x=y*r-d,b=x;b<0;)b+=i;for(var w=Math.min(e.inDepth,c+x),C=0;C<e.outHeight;++C){for(var E=C*o-h,N=E;N<0;)N+=s;for(var S=Math.min(e.inHeight,l+E),R=0;R<e.outWidth;++R){for(var T=R*a-f,I=T;I<0;)I+=u;for(var A=Math.min(e.inWidth,p+T),k=Number.NEGATIVE_INFINITY,O=-1,D=b;D<w;D+=i)for(var _=D-x,M=N;M<S;M+=s)for(var F=M-E,P=I;P<A;P+=u){var B=P-T,L=m.get(v,D,M,P,g);L>=k&&(k=L,O=_*l*p+F*l+B)}n.set(O,v,y,C,R,g)}}}return n.toTensor()},t.prototype.maxPool3dBackprop=function(t,e,n,r){this.assertNotComplex([e,n],\"maxPool3dBackprop\");for(var o=this.maxPool3dPositions(e,r),a=r.strideDepth,i=r.strideHeight,s=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,l=r.dilationWidth,p=r.effectiveFilterDepth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,f=p-1-r.padInfo.front,m=h-1-r.padInfo.left,v=d-1-r.padInfo.top,g=or(e.shape,\"float32\"),y=this.bufferSync(o),x=this.bufferSync(t),b=0;b<r.batchSize;++b)for(var w=0;w<r.inChannels;++w)for(var C=0;C<r.inDepth;++C)for(var E=0;E<r.inHeight;++E)for(var N=0;N<r.inWidth;++N){for(var S=C-f,R=E-v,T=N-m,I=0,A=0;A<p;A+=u){var k=(S+A)/a;if(!(k<0||k>=r.outDepth||Math.floor(k)!==k))for(var O=0;O<d;O+=c){var D=(R+O)/i;if(!(D<0||D>=r.outHeight||Math.floor(D)!==D))for(var _=0;_<h;_+=l){var M=(T+_)/s;if(!(M<0||M>=r.outWidth||Math.floor(M)!==M)){var F=p*d*h-1-y.get(b,k,D,M,w)===A*d*h+O*h+_?1:0;0!==F&&(I+=x.get(b,k,D,M,w)*F)}}}}g.set(I,b,C,E,N,w)}return g.toTensor()},t.prototype.cast=function(t,e){return bo(t,e,this)},t.prototype.reshape=function(t,e){return wo(t,e)},t.prototype.avgPool=function(t,e){return this.assertNotComplex(t,\"avgPool\"),this.pool(t,e,\"avg\").toFloat()},t.prototype.resizeBilinear=function(t,e,n,r){this.assertNotComplex(t,\"resizeBilinear\");for(var o=t.shape,a=o[0],i=o[1],s=o[2],u=o[3],c=this.readSync(t.dataId),l=new Float32Array(E([a,e,n,u])),p=[r&&e>1?i-1:i,r&&n>1?s-1:s],d=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=0,f=p[0]/d[0],m=p[1]/d[1],v=0;v<a;v++)for(var g=0;g<e;g++)for(var y=f*g,x=Math.floor(y),b=y-x,w=Math.min(i-1,Math.ceil(y)),C=v*t.strides[0]+x*t.strides[1],N=v*t.strides[0]+w*t.strides[1],S=0;S<n;S++)for(var R=m*S,T=Math.floor(R),I=R-T,A=Math.min(s-1,Math.ceil(R)),k=C+T*t.strides[2],O=N+T*t.strides[2],D=C+ +A*t.strides[2],_=N+A*t.strides[2],M=0;M<u;M++){var F=c[k+M],P=c[O+M],B=F+(c[D+M]-F)*I,L=B+(P+(c[_+M]-P)*I-B)*b;l[h++]=L}return Nn(l,[a,e,n,u])},t.prototype.resizeBilinearBackprop=function(t,e,n){this.assertNotComplex([t,e],\"resizeBilinearBackprop\");for(var r=e.shape,o=r[0],a=r[1],i=r[2],s=r[3],u=t.shape,c=u[1],l=u[2],p=new Float32Array(o*a*i*s),d=[n&&c>1?a-1:a,n&&l>1?i-1:i],h=[n&&c>1?c-1:c,n&&l>1?l-1:l],f=d[0]/h[0],m=d[1]/h[1],v=this.readSync(t.dataId),g=0,y=0;y<o;y++)for(var x=y*e.strides[0],b=0;b<c;b++)for(var w=b*f,C=Math.floor(w),E=Math.min(Math.ceil(w),a-1),N=x+C*e.strides[1],S=x+E*e.strides[1],R=w-C,T=1-R,I=0;I<l;I++)for(var A=I*m,k=Math.floor(A),O=Math.min(Math.ceil(A),i-1),D=A-k,_=1-D,M=N+k*e.strides[2],F=N+O*e.strides[2],P=S+k*e.strides[2],B=S+O*e.strides[2],L=T*_,V=T*D,z=R*_,W=R*D,U=0;U<s;U++){var j=v[g++];p[M+U]+=j*L,p[F+U]+=j*V,p[P+U]+=j*z,p[B+U]+=j*W}return kn(p,[o,i,a,s],e.dtype)},t.prototype.resizeNearestNeighbor=function(t,e,n,r){this.assertNotComplex(t,\"resizeNearestNeighbor\");for(var o=t.shape,a=o[0],i=o[1],s=o[2],u=o[3],c=this.readSync(t.dataId),l=new Float32Array(a*e*n*u),p=[r&&e>1?i-1:i,r&&n>1?s-1:s],d=[r&&e>1?e-1:e,r&&n>1?n-1:n],h=p[0]/d[0],f=p[1]/d[1],m=0,v=0;v<a;v++)for(var g=v*t.strides[0],y=0;y<e;y++)for(var x=h*y,b=g+Math.min(i-1,r?Math.round(x):Math.floor(x))*t.strides[1],w=0;w<n;w++)for(var C=f*w,E=b+Math.min(s-1,r?Math.round(C):Math.floor(C))*t.strides[2],N=0;N<u;N++){var S=c[E+N];l[m++]=S}return Nn(l,[a,e,n,u],t.dtype)},t.prototype.resizeNearestNeighborBackprop=function(t,e,n){this.assertNotComplex([t,e],\"resizeNearestNeighborBackprop\");for(var r=e.shape,o=r[0],a=r[1],i=r[2],s=r[3],u=t.shape,c=u[1],l=u[2],p=new Float32Array(o*a*i*s),d=this.readSync(t.dataId),h=[n&&c>1?a-1:a,n&&l>1?i-1:i],f=[n&&c>1?c-1:c,n&&l>1?l-1:l],m=h[0]/f[0],v=h[1]/f[1],g=1/m,y=1/v,x=2*Math.ceil(g)+2,b=2*Math.ceil(y)+2,w=0;w<o;w++)for(var C=w*e.strides[0],E=0;E<a;E++)for(var N=C+E*e.strides[1],S=Math.floor(E*g),R=Math.floor(S-x/2),T=0;T<i;T++)for(var I=N+T*e.strides[2],A=Math.floor(T*y),k=Math.floor(A-b/2),O=0;O<s;O++){for(var D=0,_=0;_<x;_++){var M=_+R;if(!(M<0||M>=c)){var F=C+M*t.strides[1],P=M*m;if(E===Math.min(a-1,n?Math.round(P):Math.floor(P)))for(var B=0;B<b;B++){var L=B+k;if(!(L<0||L>=l)){var V=F+L*t.strides[2],z=L*v;T===Math.min(i-1,n?Math.round(z):Math.floor(z))&&(D+=d[V+O])}}}}p[I+O]=D}return kn(p,e.shape,e.dtype)},t.prototype.batchNormalization=function(t,e,n,r,o,a){this.assertNotComplex([t,e,n,o,a],\"batchNorm\");for(var i=this.readSync(t.dataId),s=this.readSync(e.dataId),u=this.readSync(n.dataId),c=o?this.readSync(o.dataId):new Float32Array([1]),l=a?this.readSync(a.dataId):new Float32Array([0]),p=new Float32Array(i.length),d=l.length,h=c.length,f=u.length,m=s.length,v=0,g=0,y=0,x=0,b=0;b<i.length;++b)p[b]=l[v++]+(i[b]-s[g++])*c[y++]/Math.sqrt(u[x++]+r),v>=d&&(v=0),g>=m&&(g=0),y>=h&&(y=0),x>=f&&(x=0);return kn(p,t.shape)},t.prototype.localResponseNormalization4D=function(t,e,n,r,o){this.assertNotComplex(t,\"localResponseNormalization4D\");var a=t.shape[3],i=a-1,s=this.readSync(t.dataId),u=t.size,c=new Float32Array(u);function l(t){for(var n=t%a,r=t-n+Math.max(0,n-e),o=t-n+Math.min(n+e,i),u=0;r<=o;r++){var c=s[r];u+=c*c}return u}for(var p=0;p<u;p++){var d=l(p),h=s[p]*Math.pow(n+r*d,-o);c[p]=h}return kn(c,t.shape)},t.prototype.LRNGrad=function(t,e,n,r,o,a,i){this.assertNotComplex(t,\"LRNGrad\");for(var s=t.shape[3],u=this.readSync(t.dataId),c=this.readSync(e.dataId),l=this.readSync(n.dataId),p=new Float32Array(t.size),d=t.size,h=0;h<d;h++){for(var f=h%s,m=h-f+Math.max(0,f-r),v=h-f+Math.min(s,f+r+1),g=0,y=m;y<v;y++)g+=Math.pow(c[y],2);for(g=a*g+o,y=m;y<v;y++){var x=-2*a*i*c[y]*l[h]/g;h===y&&(x+=Math.pow(g,-i)),x*=u[h],p[y]+=x}}return kn(p,t.shape)},t.prototype.multinomial=function(t,e,n,r){this.assertNotComplex(t,\"multinomial\");for(var o=e?t:to(t),a=o.shape[0],i=o.shape[1],s=Mn([a,n],\"int32\"),u=this.readSync(s.dataId),c=this.readSync(o.dataId),l=0;l<a;++l){var p=l*i,d=new Float32Array(i-1);d[0]=c[p];for(var h=1;h<d.length;++h)d[h]=d[h-1]+c[p+h];for(var f=tr(r.toString()),m=l*n,v=0;v<n;++v){var g=f();u[m+v]=d.length;for(var y=0;y<d.length;y++)if(g<d[y]){u[m+v]=y;break}}}return s},t.prototype.oneHot=function(t,e,n,r){this.assertNotComplex(t,\"oneHot\");var o=new Float32Array(t.size*e);o.fill(r);for(var a=this.readSync(t.dataId),i=0;i<t.size;++i)a[i]>=0&&a[i]<e&&(o[i*e+a[i]]=n);return In(o,[t.size,e],\"int32\")},t.prototype.nonMaxSuppression=function(t,e,n,r,o){return this.assertNotComplex(t,\"nonMaxSuppression\"),Io(this.readSync(t.dataId),this.readSync(e.dataId),n,r,o)},t.prototype.fft=function(t){return this.fftBatch(t,!1)},t.prototype.ifft=function(t){return this.fftBatch(t,!0)},t.prototype.fftBatch=function(t,e){for(var n=t.shape[0],r=t.shape[1],o=or(t.shape,\"float32\"),a=or(t.shape,\"float32\"),i=Cn(t).as2D(n,r),s=En(t).as2D(n,r),u=0;u<n;u++)for(var c=i.slice([u,0],[1,r]),l=s.slice([u,0],[1,r]),p=wn(c,l),d=this.readSync(this.fftImpl(p,e).dataId),h=0;h<r;h++){var f=So(d,h);o.values[u*r+h]=f.real,a.values[u*r+h]=f.imag}return wn(o.toTensor(),a.toTensor()).as2D(n,r)},t.prototype.fftImpl=function(t,e){var n=t.as1D(),r=n.size;if(this.isExponentOf2(r)){var o=this.fftRadix2(n,r,e).as2D(t.shape[0],t.shape[1]);return e&&(o=wn(Cn(o).div(Rn(r)),En(o).div(Rn(r)))),o}var a=this.readSync(t.dataId),i=function(t){for(var e=new Float32Array(t.length/2),n=new Float32Array(t.length/2),r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}(this.fourierTransformByMatmul(a,r,e));return wn(i.real,i.imag).as2D(t.shape[0],t.shape[1])},t.prototype.isExponentOf2=function(t){return 0==(t&t-1)},t.prototype.fftRadix2=function(t,e,n){if(1===e)return t;var r=this.readSync(t.dataId),o=e/2,a=function(t){for(var e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e),o=0;o<t.length;o+=4)n[Math.floor(o/4)]=t[o],r[Math.floor(o/4)]=t[o+1];return{real:n,imag:r}}(r),i=wn(a.real,a.imag).as1D(),s=function(t){for(var e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e),o=2;o<t.length;o+=4)n[Math.floor(o/4)]=t[o],r[Math.floor(o/4)]=t[o+1];return{real:n,imag:r}}(r),u=wn(s.real,s.imag).as1D();i=this.fftRadix2(i,o,n),u=this.fftRadix2(u,o,n);var c=function(t,e){for(var n=new Float32Array(t/2),r=new Float32Array(t/2),o=0;o<Math.ceil(t/2);o++){var a=(e?2:-2)*Math.PI*(o/t);n[o]=Math.cos(a),r[o]=Math.sin(a)}return{real:n,imag:r}}(e,n),l=wn(c.real,c.imag).mul(u),p=i.add(l),d=i.sub(l),h=Cn(p).concat(Cn(d)),f=En(p).concat(En(d));return wn(h,f).as1D()},t.prototype.fourierTransformByMatmul=function(t,e,n){for(var r=new Float32Array(2*e),o=0;o<e;o++){for(var a=0,i=0,s=0;s<e;s++){var u=To(o*s,e,n),c=So(t,s);a+=c.real*u.real-c.imag*u.imag,i+=c.real*u.imag+c.imag*u.real}n&&(a/=e,i/=e),Ro(r,a,i,o)}return r},t.prototype.depthToSpace=function(t,e,n){x(\"NHWC\"===n,function(){return\"Only NHWC dataFormat supported on CPU for depthToSpace. Got \"+n}),x(e>1,function(){return\"blockSize should be > 1 for depthToSpace, but was: \"+e});for(var r=t.shape[0],o=t.shape[1],a=t.shape[2],i=t.shape[3],s=o*e,u=a*e,c=i/(e*e),l=this.readSync(t.dataId),p=new Float32Array(r*s*u*c),d=0,h=0;h<r;++h)for(var f=0;f<s;++f)for(var m=Math.floor(f/e),v=f%e,g=0;g<u;++g)for(var y=Math.floor(g/e),b=(v*e+g%e)*c,w=0;w<c;++w){var C=w+b+i*(y+a*(m+o*h));p[d++]=l[C]}return kn(p,[r,s,u,c])},t.prototype.broadcastedBinaryOp=function(t,e,n,r){var o=io(t.shape,e.shape),a=or(o,n),i=this.readSync(t.dataId),s=this.readSync(e.dataId),u=oo(t.shape,o),c=oo(e.shape,o),l=a.values;if(u.length+c.length===0)for(var p=0;p<l.length;++p)l[p]=r(i[p%i.length],s[p%s.length]);else{var d=this.bufferSync(t),h=this.bufferSync(e),f=function(n){var o=a.indexToLoc(n),p=o.slice(-t.rank);u.forEach(function(t){return p[t]=0});var f=d.locToIndex(p),m=o.slice(-e.rank);c.forEach(function(t){return m[t]=0});var v=h.locToIndex(m);l[n]=r(i[f],s[v])};for(p=0;p<l.length;++p)f(p)}return a.toTensor()},t.prototype.broadcastedBinaryComplexOp=function(t,e,n){var r=io(t.shape,e.shape),o=or(r,\"float32\"),a=or(r,\"float32\"),i=this.readSync(t.dataId),s=this.readSync(e.dataId),u=oo(t.shape,r),c=oo(e.shape,r),l=o.values,p=a.values;if(u.length+c.length===0)for(var d=0;d<l.length;d++){var h=d%i.length,f=d%s.length,m=n(i[2*h],i[2*h+1],s[2*f],s[2*f+1]);l[d]=m.real,p[d]=m.imag}else{var v=this.bufferSync(this.data.get(t.dataId).complexTensors.real),g=this.bufferSync(this.data.get(e.dataId).complexTensors.real),y=function(r){var a=o.indexToLoc(r),d=a.slice(-t.rank);u.forEach(function(t){return d[t]=0});var h=v.locToIndex(d),f=a.slice(-e.rank);c.forEach(function(t){return f[t]=0});var m=g.locToIndex(f),y=n(i[2*h],i[2*h+1],s[2*m],s[2*m+1]);l[r]=y.real,p[r]=y.imag};for(d=0;d<l.length;d++)y(d)}return this.complex(o.toTensor(),a.toTensor())},t.prototype.split=function(t,e,n){return ko(t,e,n)},t.prototype.dispose=function(){},t.prototype.floatPrecision=function(){return 32},t.prototype.epsilon=function(){return 1e-7},t.prototype.cropAndResize=function(t,e,n,r,o,a){for(var i=t.shape,s=i[0],u=i[1],c=i[2],l=i[3],p=e.shape[0],d=r[0],h=r[1],f=or([p,d,h,l],t.dtype),m=this.readSync(e.dataId),v=this.readSync(n.dataId),g=this.readSync(t.dataId),y=t.strides,x=f.strides,b=0;b<p;b++){var w=4*b,C=m[w],E=m[w+1],N=m[w+2],S=m[w+3],R=v[b];if(!(R>=s))for(var T=d>1?(N-C)*(u-1)/(d-1):0,I=h>1?(S-E)*(c-1)/(h-1):0,A=0;A<d;A++){var k=d>1?C*(u-1)+A*T:.5*(C+N)*(u-1);if(k<0||k>u-1)for(var O=0;O<h;O++)for(var D=0;D<l;D++){var _=D+O*x[2]+A*x[1]+b*x[0];f.values[_]=a}else if(\"bilinear\"===o){var M=Math.floor(k),F=Math.ceil(k),P=k-M;for(O=0;O<h;O++)if((H=h>1?E*(c-1)+O*I:.5*(E+S)*(c-1))<0||H>c-1)for(D=0;D<l;D++)_=D+O*x[2]+A*x[1]+b*x[0],f.values[_]=a;else{var B=Math.floor(H),L=Math.ceil(H),V=H-B;for(D=0;D<l;D++){var z=g[_=D+B*y[2]+M*y[1]+R*y[0]],W=g[_=D+L*y[2]+M*y[1]+R*y[0]],U=g[_=D+B*y[2]+F*y[1]+R*y[0]],j=z+(W-z)*V,G=U+(g[_=D+L*y[2]+F*y[1]+R*y[0]]-U)*V;_=D+O*x[2]+A*x[1]+b*x[0],f.values[_]=j+(G-j)*P}}}else for(O=0;O<h;++O){var H;if((H=h>1?E*(c-1)+O*I:.5*(E+S)*(c-1))<0||H>c-1)for(D=0;D<l;D++)_=D+O*x[2]+A*x[1]+b*x[0],f.values[_]=a;else{var q=Math.round(H),$=Math.round(k);for(D=0;D<l;D++){var K=D+q*y[2]+$*y[1]+R*y[0],X=D+O*x[2]+A*x[1]+b*x[0];f.values[X]=g[K]}}}}}return f.toTensor()},t.prototype.sparseToDense=function(t,e,n,r){var o=zr(0,t,n),a=o.sliceRank,i=o.numUpdates,s=o.sliceSize,u=o.strides,c=o.outputSize;return this.scatter(t,e,n,c,s,i,a,u,r,!1)},t.prototype.gatherND=function(t,e){var n=e.shape,r=n[n.length-1],o=Br(t,e),a=o[0],i=o[1],s=o[2],u=o[3];if(0===i)return Nn([],a,t.dtype);for(var c=new pt([i,s],t.dtype),l=this.readSync(e.dataId),p=this.readSync(t.dataId),d=0;d<i;d++){for(var h=[],f=0,m=0;m<r;m++){var v=l[d*r+m];f+=v*u[m],h.push(v)}if(f<0||f>=t.size/s)throw new Error(\"Invalid indices: \"+h+\" does not index into \"+t.shape);for(var g=0;g<s;g++)c.values[d*s+g]=p[f*s+g]}return c.toTensor().reshape(a)},t.prototype.scatterND=function(t,e,n){var r=zr(0,t,n),o=r.sliceRank,a=r.numUpdates,i=r.sliceSize,s=r.strides,u=r.outputSize,c=Rn(0);return this.scatter(t,e,n,u,i,a,o,s,c,!0)},t.prototype.fill=function(t,e,n){var r=M(n=n||G(e),E(t));return r.fill(e),mt.make(t,{values:r},n)},t.prototype.onesLike=function(t){if(\"string\"===t.dtype)throw new Error(\"onesLike is not supported for string tensors\");return this.fill(t.shape,1,t.dtype)},t.prototype.zerosLike=function(t){var e=M(t.dtype,E(t.shape));return mt.make(t.shape,{values:e},t.dtype)},t.prototype.linspace=function(t,e,n){return Co(t,e,n)},t.prototype.scatter=function(t,e,n,r,o,a,i,s,u,c){var l=[r/o,o],p=this.readSync(t.dataId),d=this.readSync(e.dataId);if(0===r)return Nn([],n,e.dtype);var h=new pt(l,e.dtype);h.values.fill(this.readSync(u.dataId)[0]);for(var f=0;f<a;f++){for(var m=[],v=0,g=0;g<i;g++){var y=p[f*i+g];m.push(y),v+=y*s[g]}if(v<0||v>=r/o)throw new Error(\"Invalid indices: \"+m+\" does not index into \"+n);for(var x=0;x<o;x++)c?h.values[v*o+x]+=d[f*o+x]:h.values[v*o+x]=0===e.rank?d[0]:d[f*o+x]}return h.toTensor().reshape(n)},t}();_t.registerBackend(\"cpu\",function(){return new $l},1);var Kl=function(){function t(){this.textEncoder=new TextEncoder}return t.prototype.fetch=function(t,e){return fetch(t,e)},t.prototype.now=function(){return performance.now()},t.prototype.encode=function(t,e){if(\"utf-8\"!==e&&\"utf8\"!==e)throw new Error(\"Browser's encoder only supports utf-8, but got \"+e);return this.textEncoder.encode(t)},t.prototype.decode=function(t,e){return new TextDecoder(e).decode(t)},t}();d.get(\"IS_BROWSER\")&&d.setPlatform(\"browser\",new Kl);var Xl,Yl=function(){function t(){this.util=n(12),this.textEncoder=new this.util.TextEncoder}return t.prototype.fetch=function(t,e){return null!=d.global.fetch?d.global.fetch(t,e):(null==Xl&&(Xl=n(11)),Xl(t,e))},t.prototype.now=function(){var t=r.hrtime();return 1e3*t[0]+t[1]/1e6},t.prototype.encode=function(t,e){if(\"utf-8\"!==e&&\"utf8\"!==e)throw new Error(\"Node built-in encoder only supports utf-8, but got \"+e);return this.textEncoder.encode(t)},t.prototype.decode=function(t,e){return 0===t.length?\"\":new this.util.TextDecoder(e).decode(t)},t}();d.get(\"IS_NODE\")&&d.setPlatform(\"node\",new Yl);var Ql={float32:4,int32:4,uint16:2,uint8:1,bool:1},Jl=4;function Zl(t,e){for(var n={},r=0,o=function(e){var o=e.name,a=e.dtype,i=e.shape,s=E(i),u=void 0;if(\"quantization\"in e){var c=e.quantization;if(\"uint8\"!==c.dtype&&\"uint16\"!==c.dtype)throw new Error(\"Weight \"+e.name+\" has unknown quantization dtype \"+c.dtype+\". Supported quantization dtypes are: 'uint8' and 'uint16'.\");var l=Ql[c.dtype],p=t.slice(r,r+s*l),d=\"uint8\"===c.dtype?new Uint8Array(p):new Uint16Array(p);if(\"float32\"===a)u=Float32Array.from(d,function(t){return t*c.scale+c.min});else{if(\"int32\"!==a)throw new Error(\"Unsupported dtype in weight '\"+o+\"': \"+a);u=Int32Array.from(d,function(t){return Math.round(t*c.scale+c.min)})}r+=s*l}else if(\"string\"===a){var h=E(e.shape);u=[];for(var f=0;f<h;f++){var m=new Uint32Array(t.slice(r,r+Jl))[0];r+=Jl;var v=new Uint8Array(t.slice(r,r+m));u.push(v),r+=m}}else{var g=Ql[a];if(p=t.slice(r,r+s*g),\"float32\"===a)u=new Float32Array(p);else if(\"int32\"===a)u=new Int32Array(p);else{if(\"bool\"!==a)throw new Error(\"Unsupported dtype in weight '\"+o+\"': \"+a);u=new Uint8Array(p)}r+=s*g}n[o]=Nn(u,i,a)},a=0,i=e;a<i.length;a++)o(i[a]);return n}function tp(t){if(null===t)throw new Error(\"Invalid input value: \"+JSON.stringify(t));var e=0,n=[];t.forEach(function(t){if(e+=t.byteLength,n.push(t.byteLength===t.buffer.byteLength?t:new t.constructor(t)),!(t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array))throw new Error(\"Unsupported TypedArray subtype: \"+t.constructor.name)});var r=new Uint8Array(e),o=0;return n.forEach(function(t){r.set(new Uint8Array(t.buffer),o),o+=t.byteLength}),r.buffer}var ep=void 0!==o&&(\"undefined\"==typeof Blob||\"undefined\"==typeof atob||\"undefined\"==typeof btoa);function np(t){return ep?o.byteLength(t):new Blob([t]).size}function rp(t){var e=0;t.forEach(function(t){e+=t.byteLength});var n=new Uint8Array(e),r=0;return t.forEach(function(t){n.set(new Uint8Array(t),r),r+=t.byteLength}),n.buffer}function op(t){for(t=t.trim();t.endsWith(\"/\");)t=t.slice(0,t.length-1);var e=t.split(\"/\");return e[e.length-1]}function ap(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error(\"Expected JSON model topology, received ArrayBuffer.\");return{dateSaved:new Date,modelTopologyType:\"JSON\",modelTopologyBytes:null==t.modelTopology?0:np(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:np(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}var ip=function(){function t(){this.saveRouters=[],this.loadRouters=[]}return t.getInstance=function(){return null==t.instance&&(t.instance=new t),t.instance},t.registerSaveRouter=function(e){t.getInstance().saveRouters.push(e)},t.registerLoadRouter=function(e){t.getInstance().loadRouters.push(e)},t.getSaveHandlers=function(e){return t.getHandlers(e,\"save\")},t.getLoadHandlers=function(e,n){return t.getHandlers(e,\"load\",n)},t.getHandlers=function(e,n,r){var o=[];return(\"load\"===n?t.getInstance().loadRouters:t.getInstance().saveRouters).forEach(function(t){var n=t(e,r);null!==n&&o.push(n)}),o},t}(),sp=\"://\",up=function(){function t(){this.managers={}}return t.getInstance=function(){return null==t.instance&&(t.instance=new t),t.instance},t.registerManager=function(e,n){x(null!=e,function(){return\"scheme must not be undefined or null.\"}),e.endsWith(sp)&&(e=e.slice(0,e.indexOf(sp))),x(e.length>0,function(){return\"scheme must not be an empty string.\"});var r=t.getInstance();x(null==r.managers[e],function(){return\"A model store manager is already registered for scheme '\"+e+\"'.\"}),r.managers[e]=n},t.getManager=function(t){var e=this.getInstance().managers[t];if(null==e)throw new Error(\"Cannot find model manager for scheme '\"+t+\"'\");return e},t.getSchemes=function(){return Object.keys(this.getInstance().managers)},t}();function cp(t){if(-1===t.indexOf(sp))throw new Error(\"The url string provided does not contain a scheme. Supported schemes are: \"+up.getSchemes().join(\",\"));return{scheme:t.split(sp)[0],path:t.split(sp)[1]}}function lp(t,e,n){return void 0===n&&(n=!1),u(this,void 0,void 0,function(){var r,o,a,i,s,u,l,p,d;return c(this,function(c){switch(c.label){case 0:return x(t!==e,function(){return\"Old path and new path are the same: '\"+t+\"'\"}),x((r=ip.getLoadHandlers(t)).length>0,function(){return\"Copying failed because no load handler is found for source URL \"+t+\".\"}),x(r.length<2,function(){return\"Copying failed because more than one (\"+r.length+\") load handlers for source URL \"+t+\".\"}),o=r[0],x((a=ip.getSaveHandlers(e)).length>0,function(){return\"Copying failed because no save handler is found for destination URL \"+e+\".\"}),x(a.length<2,function(){return\"Copying failed because more than one (\"+r.length+\") save handlers for destination URL \"+e+\".\"}),i=a[0],s=cp(t).scheme,u=cp(t).path,l=s===cp(t).scheme,[4,o.load()];case 1:return p=c.sent(),n&&l?[4,up.getManager(s).removeModel(u)]:[3,3];case 2:c.sent(),c.label=3;case 3:return[4,i.save(p)];case 4:return d=c.sent(),!n||l?[3,6]:[4,up.getManager(s).removeModel(u)];case 5:c.sent(),c.label=6;case 6:return[2,d.modelArtifactsInfo]}})})}var pp=\"models_store\",dp=\"model_info_store\";function hp(){if(!d.getBool(\"IS_BROWSER\"))throw new Error(\"Failed to obtain IndexedDB factory because the current environmentis not a web browser.\");var t=window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error(\"The current browser does not appear to support IndexedDB.\");return e}function fp(t){var e=t.result;e.createObjectStore(pp,{keyPath:\"modelPath\"}),e.createObjectStore(dp,{keyPath:\"modelPath\"})}var mp=function(){function t(t){if(this.indexedDB=hp(),null==t||!t)throw new Error(\"For IndexedDB, modelPath must not be null, undefined or empty.\");this.modelPath=t}return t.prototype.save=function(t){return u(this,void 0,void 0,function(){return c(this,function(e){if(t.modelTopology instanceof ArrayBuffer)throw new Error(\"BrowserLocalStorage.save() does not support saving model topology in binary formats yet.\");return[2,this.databaseAction(this.modelPath,t)]})})},t.prototype.load=function(){return u(this,void 0,void 0,function(){return c(this,function(t){return[2,this.databaseAction(this.modelPath)]})})},t.prototype.databaseAction=function(t,e){var n=this;return new Promise(function(t,r){var o=n.indexedDB.open(\"tensorflowjs\",1);o.onupgradeneeded=function(){return fp(o)},o.onsuccess=function(){var a=o.result;if(null==e){var i=a.transaction(pp,\"readonly\"),s=i.objectStore(pp).get(n.modelPath);s.onsuccess=function(){if(null==s.result)return a.close(),r(new Error(\"Cannot find model with path '\"+n.modelPath+\"' in IndexedDB.\"));t(s.result.modelArtifacts)},s.onerror=function(t){return a.close(),r(s.error)},i.oncomplete=function(){return a.close()}}else{var u,c=ap(e),l=a.transaction(dp,\"readwrite\"),p=l.objectStore(dp),d=p.put({modelPath:n.modelPath,modelArtifactsInfo:c});d.onsuccess=function(){var o=(u=a.transaction(pp,\"readwrite\")).objectStore(pp).put({modelPath:n.modelPath,modelArtifacts:e,modelArtifactsInfo:c});o.onsuccess=function(){return t({modelArtifactsInfo:c})},o.onerror=function(t){var e=(p=l.objectStore(dp)).delete(n.modelPath);e.onsuccess=function(){return a.close(),r(o.error)},e.onerror=function(t){return a.close(),r(o.error)}}},d.onerror=function(t){return a.close(),r(d.error)},l.oncomplete=function(){null==u?a.close():u.oncomplete=function(){return a.close()}}}},o.onerror=function(t){return r(o.error)}})},t.URL_SCHEME=\"indexeddb://\",t}(),vp=function(t){return d.getBool(\"IS_BROWSER\")&&!Array.isArray(t)&&t.startsWith(mp.URL_SCHEME)?(e=t.slice(mp.URL_SCHEME.length),new mp(e)):null;var e};ip.registerSaveRouter(vp),ip.registerLoadRouter(vp);var gp=function(){function t(){this.indexedDB=hp()}return t.prototype.listModels=function(){return u(this,void 0,void 0,function(){var t=this;return c(this,function(e){return[2,new Promise(function(e,n){var r=t.indexedDB.open(\"tensorflowjs\",1);r.onupgradeneeded=function(){return fp(r)},r.onsuccess=function(){var t=r.result,o=t.transaction(dp,\"readonly\"),a=o.objectStore(dp).getAll();a.onsuccess=function(){for(var t={},n=0,r=a.result;n<r.length;n++){var o=r[n];t[o.modelPath]=o.modelArtifactsInfo}e(t)},a.onerror=function(e){return t.close(),n(a.error)},o.oncomplete=function(){return t.close()}},r.onerror=function(t){return n(r.error)}})]})})},t.prototype.removeModel=function(t){return u(this,void 0,void 0,function(){var e=this;return c(this,function(n){var r;return t=(r=t).startsWith(mp.URL_SCHEME)?r.slice(mp.URL_SCHEME.length):r,[2,new Promise(function(n,r){var o=e.indexedDB.open(\"tensorflowjs\",1);o.onupgradeneeded=function(){return fp(o)},o.onsuccess=function(){var e,a=o.result,i=a.transaction(dp,\"readwrite\"),s=i.objectStore(dp),u=s.get(t);u.onsuccess=function(){if(null==u.result)return a.close(),r(new Error(\"Cannot find model with path '\"+t+\"' in IndexedDB.\"));var o=s.delete(t),i=function(){var o=(e=a.transaction(pp,\"readwrite\")).objectStore(pp).delete(t);o.onsuccess=function(){return n(u.result.modelArtifactsInfo)},o.onerror=function(t){return r(u.error)}};o.onsuccess=i,o.onerror=function(t){return i(),a.close(),r(u.error)}},u.onerror=function(t){return a.close(),r(u.error)},i.oncomplete=function(){null==e?a.close():e.oncomplete=function(){return a.close()}}},o.onerror=function(t){return r(o.error)}})]})})},t}();if(d.getBool(\"IS_BROWSER\"))try{up.registerManager(mp.URL_SCHEME,new gp)}catch(i){}var yp=\"/\",xp=\"tensorflowjs_models\",bp=\"info\",wp=\"model_topology\",Cp=\"weight_specs\",Ep=\"weight_data\",Np=\"model_metadata\";function Sp(t){return{info:[xp,t,bp].join(yp),topology:[xp,t,wp].join(yp),weightSpecs:[xp,t,Cp].join(yp),weightData:[xp,t,Ep].join(yp),modelMetadata:[xp,t,Np].join(yp)}}function Rp(t){var e=t.split(yp);if(e.length<3)throw new Error(\"Invalid key format: \"+t);return e.slice(1,e.length-1).join(yp)}var Tp=function(){function t(t){if(!d.getBool(\"IS_BROWSER\")||void 0===window.localStorage)throw new Error(\"The current environment does not support local storage.\");if(this.LS=window.localStorage,null==t||!t)throw new Error(\"For local storage, modelPath must not be null, undefined or empty.\");this.modelPath=t,this.keys=Sp(this.modelPath)}return t.prototype.save=function(t){return u(this,void 0,void 0,function(){var e,n,r;return c(this,function(a){if(t.modelTopology instanceof ArrayBuffer)throw new Error(\"BrowserLocalStorage.save() does not support saving model topology in binary formats yet.\");e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=ap(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,(i=t.weightData,ep?o.from(i).toString(\"base64\"):btoa(String.fromCharCode.apply(null,new Uint8Array(i))))),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy})),[2,{modelArtifactsInfo:r}]}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(\"Failed to save model '\"+this.modelPath+\"' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=\"+r.modelTopologyBytes+\", weightSpecsBytes=\"+r.weightSpecsBytes+\", weightDataBytes=\"+r.weightDataBytes+\".\")}var i;return[2]})})},t.prototype.load=function(){return u(this,void 0,void 0,function(){var t,e,n,r,a,i,s;return c(this,function(u){if(null==(t=JSON.parse(this.LS.getItem(this.keys.info))))throw new Error(\"In local storage, there is no model with name '\"+this.modelPath+\"'\");if(\"JSON\"!==t.modelTopologyType)throw new Error(\"BrowserLocalStorage does not support loading non-JSON model topology yet.\");if(e={},null==(n=JSON.parse(this.LS.getItem(this.keys.topology))))throw new Error(\"In local storage, the topology of model '\"+this.modelPath+\"' is missing.\");if(e.modelTopology=n,null==(r=JSON.parse(this.LS.getItem(this.keys.weightSpecs))))throw new Error(\"In local storage, the weight specs of model '\"+this.modelPath+\"' are missing.\");if(e.weightSpecs=r,null!=(a=this.LS.getItem(this.keys.modelMetadata))&&(i=JSON.parse(a),e.format=i.format,e.generatedBy=i.generatedBy,e.convertedBy=i.convertedBy),null==(s=this.LS.getItem(this.keys.weightData)))throw new Error(\"In local storage, the binary weight values of model '\"+this.modelPath+\"' are missing.\");return e.weightData=function(t){if(ep){var e=o.from(t,\"base64\");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}for(var n=atob(t),r=new Uint8Array(n.length),a=0;a<n.length;++a)r.set([n.charCodeAt(a)],a);return r.buffer}(s),[2,e]})})},t.URL_SCHEME=\"localstorage://\",t}(),Ip=function(t){return d.getBool(\"IS_BROWSER\")&&!Array.isArray(t)&&t.startsWith(Tp.URL_SCHEME)?(e=t.slice(Tp.URL_SCHEME.length),new Tp(e)):null;var e};ip.registerSaveRouter(Ip),ip.registerLoadRouter(Ip);var Ap=function(){function t(){x(d.getBool(\"IS_BROWSER\"),function(){return\"Current environment is not a web browser\"}),x(void 0!==window.localStorage,function(){return\"Current browser does not appear to support localStorage\"}),this.LS=window.localStorage}return t.prototype.listModels=function(){return u(this,void 0,void 0,function(){var t,e,n,r,o,a;return c(this,function(i){for(t={},e=xp+yp,n=yp+bp,r=0;r<this.LS.length;++r)(o=this.LS.key(r)).startsWith(e)&&o.endsWith(n)&&(a=Rp(o),t[a]=JSON.parse(this.LS.getItem(o)));return[2,t]})})},t.prototype.removeModel=function(t){return u(this,void 0,void 0,function(){var e,n;return c(this,function(r){var o;if(t=(o=t).startsWith(Tp.URL_SCHEME)?o.slice(Tp.URL_SCHEME.length):o,e=Sp(t),null==this.LS.getItem(e.info))throw new Error(\"Cannot find model at path '\"+t+\"'\");return n=JSON.parse(this.LS.getItem(e.info)),this.LS.removeItem(e.info),this.LS.removeItem(e.topology),this.LS.removeItem(e.weightSpecs),this.LS.removeItem(e.weightData),[2,n]})})},t}();if(d.getBool(\"IS_BROWSER\"))try{up.registerManager(Tp.URL_SCHEME,new Ap)}catch(i){}var kp=\"model\",Op=\".json\",Dp=\".weights.bin\";function _p(t){return new Promise(function(t){return setTimeout(t)}).then(t)}var Mp=function(){function t(e){if(!d.getBool(\"IS_BROWSER\"))throw new Error(\"browserDownloads() cannot proceed because the current environment is not a browser.\");e.startsWith(t.URL_SCHEME)&&(e=e.slice(t.URL_SCHEME.length)),null!=e&&0!==e.length||(e=kp),this.modelTopologyFileName=e+Op,this.weightDataFileName=e+Dp}return t.prototype.save=function(t){return u(this,void 0,void 0,function(){var e,n,r,o,a,i;return c(this,function(s){switch(s.label){case 0:if(\"undefined\"==typeof document)throw new Error(\"Browser downloads are not supported in this environment since `document` is not present\");if(e=window.URL.createObjectURL(new Blob([t.weightData],{type:\"application/octet-stream\"})),!(t.modelTopology instanceof ArrayBuffer))return[3,1];throw new Error(\"BrowserDownloads.save() does not support saving model topology in binary formats yet.\");case 1:return n=[{paths:[\"./\"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:\"application/json\"})),(a=null==this.jsonAnchor?document.createElement(\"a\"):this.jsonAnchor).download=this.modelTopologyFileName,a.href=o,[4,_p(function(){return a.dispatchEvent(new MouseEvent(\"click\"))})];case 2:return s.sent(),null==t.weightData?[3,4]:((i=null==this.weightDataAnchor?document.createElement(\"a\"):this.weightDataAnchor).download=this.weightDataFileName,i.href=e,[4,_p(function(){return i.dispatchEvent(new MouseEvent(\"click\"))})]);case 3:s.sent(),s.label=4;case 4:return[2,{modelArtifactsInfo:ap(t)}]}})})},t.URL_SCHEME=\"downloads://\",t}(),Fp=function(){function t(t){if(null==t||t.length<1)throw new Error(\"When calling browserFiles, at least 1 file is required, but received \"+t);this.files=t}return t.prototype.load=function(){return u(this,void 0,void 0,function(){var t,e,n=this;return c(this,function(r){return t=this.files[0],e=this.files.slice(1),[2,new Promise(function(r,o){var a=new FileReader;a.onload=function(a){var i=JSON.parse(a.target.result),s=i.modelTopology;if(null!=s){0===e.length&&r({modelTopology:s});var u=i.weightsManifest;if(null!=u){var c;try{c=n.checkManifestAndWeightFiles(u,e)}catch(t){return void o(t)}var l=[],p=[],d=[];u.forEach(function(t){t.paths.forEach(function(t){p.push(t),d.push(null)}),l.push.apply(l,t.weights)}),u.forEach(function(t){t.paths.forEach(function(t){var e=new FileReader;e.onload=function(e){var n=e.target.result,o=p.indexOf(t);d[o]=n,-1===d.indexOf(null)&&r({modelTopology:s,weightSpecs:l,weightData:rp(d)})},e.onerror=function(e){return o(\"Failed to weights data from file of path '\"+t+\"'.\")},e.readAsArrayBuffer(c[t])})})}else o(new Error(\"weightManifest field is missing from file \"+t.name))}else o(new Error(\"modelTopology field is missing from file \"+t.name))},a.onerror=function(e){return o(\"Failed to read model topology and weights manifest JSON from file '\"+t.name+\"'. BrowserFiles supports loading Keras-style tf.Model artifacts only.\")},a.readAsText(t)})]})})},t.prototype.checkManifestAndWeightFiles=function(t,e){for(var n=[],r=e.map(function(t){return op(t.name)}),o={},a=0,i=t;a<i.length;a++)i[a].paths.forEach(function(t){var a=op(t);if(-1!==n.indexOf(a))throw new Error(\"Duplicate file basename found in weights manifest: '\"+a+\"'\");if(n.push(a),-1===r.indexOf(a))throw new Error(\"Weight file with basename '\"+a+\"' is not provided.\");o[t]=e[r.indexOf(a)]});if(n.length!==e.length)throw new Error(\"Mismatch in the number of files in weights manifest (\"+n.length+\") and the number of weight files provided (\"+e.length+\").\");return o},t}();function Pp(t,e,n,r){!function(t){x(null!=t&&Array.isArray(t)&&t.length>0,function(){return\"promises must be a none empty array\"})}(t),function(t,e){x(t>=0&&t<=1,function(){return\"Progress fraction must be in range [0, 1], but got startFraction \"+t}),x(e>=0&&e<=1,function(){return\"Progress fraction must be in range [0, 1], but got endFraction \"+e}),x(e>=t,function(){return\"startFraction must be no more than endFraction, but got startFraction \"+t+\" and endFraction \"+e})}(n=null==n?0:n,r=null==r?1:r);var o=0;return Promise.all(t.map(function(a){return a.then(function(a){var i=n+ ++o/t.length*(r-n);return e(i),a}),a}))}function Bp(t,e){return u(this,void 0,void 0,function(){var n,r,o,a,i,s,u,l,p;return c(this,function(c){switch(c.label){case 0:return null==e&&(e={}),n=null==e.fetchFunc?d.platform.fetch:e.fetchFunc,r=t.map(function(t){return n(t,e.requestInit,{isBinary:!0})}),o=0,a=.5,null!=e.onProgress?[3,2]:[4,Promise.all(r)];case 1:return i=c.sent(),[3,4];case 2:return[4,Pp(r,e.onProgress,o,a)];case 3:i=c.sent(),c.label=4;case 4:return s=i.map(function(t){return t.arrayBuffer()}),u=.5,l=1,null!=e.onProgress?[3,6]:[4,Promise.all(s)];case 5:return p=c.sent(),[3,8];case 6:return[4,Pp(s,e.onProgress,u,l)];case 7:p=c.sent(),c.label=8;case 8:return[2,p]}})})}function Lp(t){var e=this;return function(n,r,o){return void 0===r&&(r=\"\"),u(e,void 0,void 0,function(){var e,a,i,s,u,l,p,d,h,f;return c(this,function(c){switch(c.label){case 0:if(e=n.map(function(){return!1}),a={},i=null!=o?o.map(function(){return!1}):[],s=[],n.forEach(function(t,n){var r=0;t.weights.forEach(function(t){var u=\"quantization\"in t?t.quantization.dtype:t.dtype,c=Ql[u]*E(t.shape),l=function(){e[n]=!0,null==a[n]&&(a[n]=[]),a[n].push({manifestEntry:t,groupOffset:r,sizeBytes:c})};null!=o?o.forEach(function(e,n){e===t.name&&(l(),i[n]=!0)}):l(),s.push(t.name),r+=c})}),!i.every(function(t){return t}))throw u=o.filter(function(t,e){return!i[e]}),new Error(\"Could not find weights in manifest with names: \"+u.join(\", \")+\". \\nManifest JSON has weights with names: \"+s.join(\", \")+\".\");return l=e.reduce(function(t,e,n){return e&&t.push(n),t},[]),p=[],l.forEach(function(t){n[t].paths.forEach(function(t){var e=r+(r.endsWith(\"/\")?\"\":\"/\")+t;p.push(e)})}),[4,t(p)];case 1:return d=c.sent(),h={},f=0,l.forEach(function(t){for(var e=n[t].paths.length,r=0,o=0;o<e;o++)r+=d[f+o].byteLength;for(var i=new ArrayBuffer(r),s=new Uint8Array(i),u=0,c=0;c<e;c++){var l=new Uint8Array(d[f+c]);s.set(l,u),u+=l.byteLength}a[t].forEach(function(t){var e=Zl(i.slice(t.groupOffset,t.groupOffset+t.sizeBytes),[t.manifestEntry]);for(var n in e)h[n]=e[n]}),f+=e}),[2,h]}})})}}ip.registerSaveRouter(function(t){return d.getBool(\"IS_BROWSER\")&&!Array.isArray(t)&&t.startsWith(Mp.URL_SCHEME)?(void 0===(e=t.slice(Mp.URL_SCHEME.length))&&(e=\"model\"),new Mp(e)):null;var e});var Vp=function(){function t(t,e){if(this.DEFAULT_METHOD=\"POST\",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,null!=e.fetchFunc?(x(\"function\"==typeof e.fetchFunc,function(){return\"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)\"}),this.fetch=e.fetchFunc):this.fetch=d.platform.fetch,x(null!=t&&t.length>0,function(){return\"URL path for http must not be null, undefined or empty.\"}),Array.isArray(t)&&x(2===t.length,function(){return\"URL paths for http must have a length of 2, (actual length is \"+t.length+\").\"}),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error(\"requestInit is expected to have no pre-existing body, but has one.\");this.requestInit=e.requestInit||{}}return t.prototype.save=function(t){return u(this,void 0,void 0,function(){var e,n,r,o;return c(this,function(a){switch(a.label){case 0:if(t.modelTopology instanceof ArrayBuffer)throw new Error(\"BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.\");return(e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit)).body=new FormData,n=[{paths:[\"./model.weights.bin\"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},e.body.append(\"model.json\",new Blob([JSON.stringify(r)],{type:\"application/json\"}),\"model.json\"),null!=t.weightData&&e.body.append(\"model.weights.bin\",new Blob([t.weightData],{type:\"application/octet-stream\"}),\"model.weights.bin\"),[4,this.fetch(this.path,e)];case 1:if((o=a.sent()).ok)return[2,{modelArtifactsInfo:ap(t),responses:[o]}];throw new Error(\"BrowserHTTPRequest.save() failed due to HTTP response status \"+o.status+\".\")}})})},t.prototype.load=function(){return u(this,void 0,void 0,function(){var t,e,n,r,o,a,i,s;return c(this,function(u){switch(u.label){case 0:return[4,this.fetch(this.path,this.requestInit)];case 1:if(!(t=u.sent()).ok)throw new Error(\"Request to \"+this.path+\" failed with status code \"+t.status+\". Please verify this URL points to the model JSON of the model to load.\");u.label=2;case 2:return u.trys.push([2,4,,5]),[4,t.json()];case 3:return e=u.sent(),[3,5];case 4:throw u.sent(),n=\"Failed to parse model JSON of response from \"+this.path+\".\",this.path.endsWith(\".pb\")?n+=\" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.\":n+=\" Please make sure the server is serving valid JSON for this request.\",new Error(n);case 5:if(r=e.modelTopology,o=e.weightsManifest,null==r&&null==o)throw new Error(\"The JSON from HTTP path \"+this.path+\" contains neither model topology or manifest for weights.\");return null==o?[3,7]:[4,this.loadWeights(o)];case 6:s=u.sent(),a=s[0],i=s[1],u.label=7;case 7:return[2,{modelTopology:r,weightSpecs:a,weightData:i}]}})})},t.prototype.loadWeights=function(t){return u(this,void 0,void 0,function(){var e,n,r,o,a,i,s,u,l,p,d;return c(this,function(c){switch(c.label){case 0:for(e=Array.isArray(this.path)?this.path[1]:this.path,n=function(t){var e=t.lastIndexOf(\"/\"),n=t.lastIndexOf(\"?\");return[t.substring(0,e)+\"/\",n>e?t.substring(n):\"\"]}(e),r=n[0],o=n[1],a=this.weightPathPrefix||r,i=[],s=0,u=t;s<u.length;s++)l=u[s],i.push.apply(i,l.weights);return p=[],t.forEach(function(t){t.paths.forEach(function(t){p.push(a+t+o)})}),[4,Bp(p,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress})];case 1:return d=c.sent(),[2,[i,rp(d)]]}})})},t.URL_SCHEME_REGEX=/^https?:\\/\\//,t}();function zp(t){return null!=t.match(Vp.URL_SCHEME_REGEX)}var Wp=function(t,e){return\"undefined\"==typeof fetch?null:(Array.isArray(t)?t.every(function(t){return zp(t)}):zp(t))?Up(t,{onProgress:e}):null};function Up(t,e){return new Vp(t,e)}ip.registerSaveRouter(Wp),ip.registerLoadRouter(Wp);var jp=function(){function t(t){this.modelArtifacts=t}return t.prototype.load=function(){return u(this,void 0,void 0,function(){return c(this,function(t){return[2,this.modelArtifacts]})})},t}(),Gp=function(){function t(t){this.saveHandler=t}return t.prototype.save=function(t){return u(this,void 0,void 0,function(){return c(this,function(e){return[2,this.saveHandler(t)]})})},t}(),Hp=Object.freeze({browserFiles:function(t){return new Fp(t)},browserHTTPRequest:function(t,e){return Up(t,e)},concatenateArrayBuffers:rp,decodeWeights:Zl,encodeWeights:function(t,e){return u(this,void 0,void 0,function(){var n,r,o,a,i,s=this;return c(this,function(l){switch(l.label){case 0:for(n=[],r=[],o=Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t),a=function(a){var i=o[a],l=Array.isArray(t)?t[a].tensor:t[i];if(\"float32\"!==l.dtype&&\"int32\"!==l.dtype&&\"bool\"!==l.dtype&&\"string\"!==l.dtype)throw new Error(\"Unsupported dtype in weight '\"+i+\"': \"+l.dtype);var p={name:i,shape:l.shape,dtype:l.dtype};if(\"string\"===l.dtype){var d=new Promise(function(t){return u(s,void 0,void 0,function(){var e,n,r,o,a,i,s;return c(this,function(u){switch(u.label){case 0:return[4,l.bytes()];case 1:for(e=u.sent(),n=e.reduce(function(t,e){return t+e.length},0)+Jl*e.length,r=new Uint8Array(n),o=0,a=0;a<e.length;a++)i=e[a],s=new Uint8Array(new Uint32Array([i.length]).buffer),r.set(s,o),o+=Jl,r.set(i,o),o+=i.length;return t(r),[2]}})})});r.push(d)}else r.push(l.data());null!=e&&(p.group=e),n.push(p)},i=0;i<o.length;++i)a(i);return[4,Promise.all(r)];case 1:return[2,{data:tp(l.sent()),specs:n}]}})})},fromMemory:function(t,e,n,r){return 1===arguments.length?null!=t.modelTopology||null!=t.weightSpecs?new jp(t):(console.warn(\"Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release.\"),new jp({modelTopology:t})):(console.warn(\"Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release.\"),new jp({modelTopology:t,weightSpecs:e,weightData:n,trainingConfig:r}))},getLoadHandlers:function(t,e){return ip.getLoadHandlers(t,e)},getModelArtifactsInfoForJSON:ap,getSaveHandlers:function(t){return ip.getSaveHandlers(t)},http:Up,isHTTPScheme:zp,loadWeights:function(t,e,n,r){return void 0===e&&(e=\"\"),u(this,void 0,void 0,function(){return c(this,function(o){return[2,Lp(function(t){return Bp(t,{requestInit:r})})(t,e,n)]})})},registerLoadRouter:function(t){return ip.registerLoadRouter(t)},registerSaveRouter:function(t){return ip.registerSaveRouter(t)},weightsLoaderFactory:Lp,withSaveHandler:function(t){return new Gp(t)},copyModel:function(t,e){return u(this,void 0,void 0,function(){return c(this,function(n){return[2,lp(t,e,!1)]})})},listModels:function(){return u(this,void 0,void 0,function(){var t,e,n,r,o,a,i;return c(this,function(s){switch(s.label){case 0:t=up.getSchemes(),e={},n=0,r=t,s.label=1;case 1:return n<r.length?(o=r[n],[4,up.getManager(o).listModels()]):[3,4];case 2:for(i in a=s.sent())e[o+sp+i]=a[i];s.label=3;case 3:return n++,[3,1];case 4:return[2,e]}})})},moveModel:function(t,e){return u(this,void 0,void 0,function(){return c(this,function(n){return[2,lp(t,e,!0)]})})},removeModel:function(t){return u(this,void 0,void 0,function(){var e;return c(this,function(n){return e=cp(t),[2,up.getManager(e.scheme).removeModel(e.path)]})})}}),qp=bn({confusionMatrix_:function(t,e,n){var r=un(t,\"labels\",\"confusionMatrix\"),o=un(e,\"predictions\",\"confusionMatrix\");x(null==n||n>0&&Number.isInteger(n),function(){return\"If provided, numClasses must be a positive integer, but got \"+n}),x(1===r.rank,function(){return\"Expected the rank of labels to be 1, but got \"+r.rank}),x(1===o.rank,function(){return\"Expected the rank of predictions to be 1, but got \"+o.rank}),x(r.shape[0]===o.shape[0],function(){return\"Mismatch in the number of examples: \"+r.shape[0]+\" vs. \"+o.shape[0]+\". Labels and predictions should have the same number of elements.\"}),x(n>0&&Number.isInteger(n),function(){return\"numClasses is required to be a positive integer, but got \"+n});var a=fr(r.asType(\"int32\"),n),i=fr(o.asType(\"int32\"),n);return a.transpose().matMul(i).asType(\"int32\")}}),$p=Object.freeze({confusionMatrix:qp}),Kp=bn({fromPixels_:function(t,e){if(void 0===e&&(e=3),e>4)throw new Error(\"Cannot construct Tensor with more than 4 channels from pixels.\");var n=\"undefined\"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement;if(n&&n&&t.readyState<2)throw new Error(\"The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.\");return _t.fromPixels(t,e)}}),Xp=Object.freeze({toPixels:function(t,e){return u(this,void 0,void 0,function(){var n,r,o,a,i,s,u,l,p,d,h,f,m,v,g,y,x,b,w,C,E,N,S;return c(this,function(c){switch(c.label){case 0:if(n=un(t,\"img\",\"toPixels\"),t instanceof mt||(n=n.toInt()),2!==n.rank&&3!==n.rank)throw new Error(\"toPixels only supports rank 2 or 3 tensors, got rank \"+n.rank+\".\");if(r=n.shape.slice(0,2),o=r[0],a=r[1],(i=2===n.rank?1:n.shape[2])>4||2===i)throw new Error(\"toPixels only supports depth of size 1, 3 or 4 but got \"+i);return[4,n.data()];case 1:return s=c.sent(),u=n.min(),l=n.max(),[4,Promise.all([u.data(),l.data()])];case 2:if(p=c.sent(),d=p[0],h=p[1],f=d[0],m=h[0],u.dispose(),l.dispose(),\"float32\"===n.dtype){if(f<0||m>1)throw new Error(\"Tensor values for a float32 Tensor must be in the range [0 - 1] but got range [\"+f+\" - \"+m+\"].\")}else{if(\"int32\"!==n.dtype)throw new Error(\"Unsupported type for toPixels: \"+n.dtype+\". Please use float32 or int32 tensors.\");if(f<0||m>255)throw new Error(\"Tensor values for a int32 Tensor must be in the range [0 - 255] but got range [\"+f+\" - \"+m+\"].\")}for(v=\"float32\"===n.dtype?255:1,g=new Uint8ClampedArray(a*o*4),y=0;y<o*a;++y)x=void 0,b=void 0,w=void 0,C=void 0,1===i?(x=s[y]*v,b=s[y]*v,w=s[y]*v,C=255):3===i?(x=s[3*y]*v,b=s[3*y+1]*v,w=s[3*y+2]*v,C=255):4===i&&(x=s[4*y]*v,b=s[4*y+1]*v,w=s[4*y+2]*v,C=s[4*y+3]*v),g[0+(E=4*y)]=Math.round(x),g[E+1]=Math.round(b),g[E+2]=Math.round(w),g[E+3]=Math.round(C);return null!=e&&(e.width=a,e.height=o,N=e.getContext(\"2d\"),S=new ImageData(g,a,o),N.putImageData(S,0,0)),n!==t&&n.dispose(),[2,g]}})})},fromPixels:Kp}),Yp=function(){function t(){}return t.prototype.getClassName=function(){return this.constructor.className},t.fromConfig=function(t,e){return new t(e)},t}(),Qp=function(){function t(){this.classNameMap={}}return t.getMap=function(){return null==t.instance&&(t.instance=new t),t.instance},t.register=function(e){t.getMap().classNameMap[e.className]=[e,e.fromConfig]},t}();function Jp(t){x(null!=t.className,function(){return\"Class being registered does not have the static className property defined.\"}),x(\"string\"==typeof t.className,function(){return\"className is required to be a string, but got type \"+typeof t.className}),x(t.className.length>0,function(){return\"Class being registered has an empty-string as its className, which is disallowed.\"}),Qp.register(t)}var Zp=Object.freeze({Serializable:Yp,SerializationMap:Qp,registerClass:Jp}),td=.001,ed=.1;function nd(){return 32===_t.backend.floatPrecision()?td:ed}function rd(t,e,n){var r=!0;if((L(t)||L(e))&&(r=!1),L(t)&&L(e)&&(r=!0),r){var o=t.constructor.name,a=e.constructor.name;if(o!==a)throw new Error(\"Arrays are of different type. Actual: \"+o+\". Expected: \"+a)}if(Array.isArray(t)&&Array.isArray(e)){var i=an(t),s=an(e);if(!N(i,s))throw new Error(\"Arrays have different shapes. Actual: [\"+i+\"]. Expected: [\"+s+\"]\")}var u=L(t)?t:C(t),c=L(e)?e:C(e);if(u.length!==c.length)throw new Error(\"Arrays have different lengths actual: \"+u.length+\" vs expected: \"+c.length+\".\\nActual:   \"+u+\".\\nExpected: \"+c+\".\");for(var l=0;l<c.length;++l){var p=u[l],d=c[l];if(!n(p,d))throw new Error(\"Arrays differ: actual[\"+l+\"] = \"+p+\", expected[\"+l+\"] = \"+d+\".\\nActual:   \"+u+\".\\nExpected: \"+c+\".\")}}function od(t,e,n){return!isFinite(t)&&!isFinite(e)||!(isNaN(t)||isNaN(e)||Math.abs(t-e)>n)}var ad=Object.freeze({TEST_EPSILON_FLOAT16:ed,expectArraysClose:function(t,e,n){return null==n&&(n=nd()),rd(t,e,function(t,e){return od(t,e,n)})},testEpsilon:nd,expectPromiseToFail:function(t,e){t().then(function(){return e.fail()},function(){return e()})},expectArraysEqual:function(t,e){var n=\"string\"==typeof e||\"number\"==typeof e||\"boolean\"==typeof e?[e]:e;return W(t)||W(t[0])||W(e)||W(e[0])?rd(t,n,function(t,e){return t==e}):rd(t,e,function(t,e){return od(t,e,0)})},expectNumbersClose:function(t,e,n){if(null==n&&(n=nd()),!od(t,e,n))throw new Error(\"Numbers differ: actual === \"+t+\", expected === \"+e)},expectValuesInRange:function(t,e,n){for(var r=0;r<t.length;r++)if(t[r]<e||t[r]>n)throw new Error(\"Value out of range:\"+t[r]+\" low: \"+e+\", high: \"+n)},expectArrayBuffersEqual:function(t,e){expect(new Float32Array(t)).toEqual(new Float32Array(e))}}),id=\"1.2.9\",sd=Object.freeze({gpgpu_util:si,webgl_util:Be,forceHalfFloat:function(){d.set(\"WEBGL_FORCE_F16_TEXTURES\",!0)},MathBackendWebGL:fs,setWebGLContext:Vt,GPGPUContext:ui}),ud=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return s(e,t),e.prototype.minimize=function(t,e,n){void 0===e&&(e=!1);var r=this.computeGradients(t,n),o=r.value,a=r.grads;if(null!=n){var i=n.map(function(t){return{name:t.name,tensor:a[t.name]}});this.applyGradients(i)}else this.applyGradients(a);return qe(a),e?o:(o.dispose(),null)},Object.defineProperty(e.prototype,\"iterations\",{get:function(){return null==this.iterations_&&(this.iterations_=0),this.iterations_},enumerable:!0,configurable:!0}),e.prototype.incrementIterations=function(){this.iterations_=this.iterations+1},e.prototype.computeGradients=function(t,e){return Qr(t,e)},e.prototype.dispose=function(){null!=this.iterations_&&qe(this.iterations_)},e.prototype.saveIterations=function(){return u(this,void 0,void 0,function(){return c(this,function(t){return null==this.iterations_&&(this.iterations_=0),[2,{name:\"iter\",tensor:Rn(this.iterations_,\"int32\")}]})})},e.prototype.getWeights=function(){return u(this,void 0,void 0,function(){return c(this,function(t){throw new Error(\"getWeights() is not implemented for this optimizer yet.\")})})},e.prototype.setWeights=function(t){return u(this,void 0,void 0,function(){return c(this,function(t){throw new Error(\"setWeights() is not implemented for this optimizer class \"+this.getClassName())})})},e.prototype.extractIterations=function(t){return u(this,void 0,void 0,function(){var e;return c(this,function(n){switch(n.label){case 0:return e=this,[4,t[0].tensor.data()];case 1:return e.iterations_=n.sent()[0],[2,t.slice(1)]}})})},e}(Yp);Object.defineProperty(ud,Symbol.hasInstance,{value:function(t){return null!=t.minimize&&null!=t.computeGradients&&null!=t.applyGradients}});var cd=function(t){function e(e,n,r){void 0===r&&(r=null);var o=t.call(this)||this;return o.learningRate=e,o.rho=n,o.epsilon=r,o.accumulatedGrads=[],o.accumulatedUpdates=[],null==r&&(o.epsilon=_t.backend.epsilon()),o}return s(e,t),e.prototype.applyGradients=function(t){var e=this;(Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t)).forEach(function(n,r){var o=_t.registeredVariables[n];null==e.accumulatedGrads[r]&&(e.accumulatedGrads[r]={originalName:n+\"/accum_grad\",variable:He(function(){return Vn(o).variable(!1)})}),null==e.accumulatedUpdates[r]&&(e.accumulatedUpdates[r]={originalName:n+\"/accum_var\",variable:He(function(){return Vn(o).variable(!1)})});var a=Array.isArray(t)?t[r].tensor:t[n];if(null!=a){var i=e.accumulatedGrads[r].variable,s=e.accumulatedUpdates[r].variable;He(function(){var t=i.mul(e.rho).add(a.square().mul(1-e.rho)),n=s.add(e.epsilon).sqrt().div(i.add(e.epsilon).sqrt()).mul(a),r=s.mul(e.rho).add(n.square().mul(1-e.rho));i.assign(t),s.assign(r);var u=n.mul(-e.learningRate).add(o);o.assign(u)})}}),this.incrementIterations()},e.prototype.dispose=function(){null!=this.accumulatedUpdates&&(qe(this.accumulatedGrads.map(function(t){return t.variable})),qe(this.accumulatedUpdates.map(function(t){return t.variable})))},e.prototype.getWeights=function(){return u(this,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:return t=this.accumulatedGrads.concat(this.accumulatedUpdates),[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(t.map(function(t){return{name:t.originalName,tensor:t.variable}}))]}})})},e.prototype.setWeights=function(t){return u(this,void 0,void 0,function(){var e;return c(this,function(n){switch(n.label){case 0:return[4,this.extractIterations(t)];case 1:return t=n.sent(),e=t.length/2,this.accumulatedGrads=t.slice(0,e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),this.accumulatedUpdates=t.slice(e,2*e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}},e.fromConfig=function(t,e){return new t(e.learningRate,e.rho,e.epsilon)},e.className=\"Adadelta\",e}(ud);Jp(cd);var ld=function(t){function e(e,n){void 0===n&&(n=.1);var r=t.call(this)||this;return r.learningRate=e,r.initialAccumulatorValue=n,r.accumulatedGrads=[],r}return s(e,t),e.prototype.applyGradients=function(t){var e=this;(Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t)).forEach(function(n,r){var o=_t.registeredVariables[n];null==e.accumulatedGrads[r]&&(e.accumulatedGrads[r]={originalName:n+\"/accumulator\",variable:He(function(){return Fn(o.shape,e.initialAccumulatorValue).variable(!1)})});var a=Array.isArray(t)?t[r].tensor:t[n];if(null!=a){var i=e.accumulatedGrads[r].variable;He(function(){var t=i.add(a.square());i.assign(t);var n=a.div(t.add(_t.backend.epsilon()).sqrt()).mul(-e.learningRate).add(o);o.assign(n)})}}),this.incrementIterations()},e.prototype.dispose=function(){null!=this.accumulatedGrads&&qe(this.accumulatedGrads.map(function(t){return t.variable}))},e.prototype.getWeights=function(){return u(this,void 0,void 0,function(){return c(this,function(t){switch(t.label){case 0:return[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(this.accumulatedGrads.map(function(t){return{name:t.originalName,tensor:t.variable}}))]}})})},e.prototype.setWeights=function(t){return u(this,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return[4,this.extractIterations(t)];case 1:return t=e.sent(),this.accumulatedGrads=t.map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}},e.fromConfig=function(t,e){return new t(e.learningRate,e.initialAccumulatorValue)},e.className=\"Adagrad\",e}(ud);Jp(ld);var pd=function(t){function e(e,n,r,o){void 0===o&&(o=null);var a=t.call(this)||this;return a.learningRate=e,a.beta1=n,a.beta2=r,a.epsilon=o,a.accumulatedFirstMoment=[],a.accumulatedSecondMoment=[],He(function(){a.accBeta1=Rn(n).variable(),a.accBeta2=Rn(r).variable()}),null==o&&(a.epsilon=_t.backend.epsilon()),a}return s(e,t),e.prototype.applyGradients=function(t){var e=this,n=Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t);He(function(){var r=Fu(1,e.accBeta1),o=Fu(1,e.accBeta2);n.forEach(function(n,a){var i=_t.registeredVariables[n];null==e.accumulatedFirstMoment[a]&&(e.accumulatedFirstMoment[a]={originalName:n+\"/m\",variable:He(function(){return Vn(i).variable(!1)})}),null==e.accumulatedSecondMoment[a]&&(e.accumulatedSecondMoment[a]={originalName:n+\"/v\",variable:He(function(){return Vn(i).variable(!1)})});var s=Array.isArray(t)?t[a].tensor:t[n];if(null!=s){var u=e.accumulatedFirstMoment[a].variable,c=e.accumulatedSecondMoment[a].variable,l=u.mul(e.beta1).add(s.mul(1-e.beta1)),p=c.mul(e.beta2).add(s.square().mul(1-e.beta2)),d=l.div(r),h=p.div(o);u.assign(l),c.assign(p);var f=d.div(h.sqrt().add(e.epsilon)).mul(-e.learningRate).add(i);i.assign(f)}}),e.accBeta1.assign(e.accBeta1.mul(e.beta1)),e.accBeta2.assign(e.accBeta2.mul(e.beta2))}),this.incrementIterations()},e.prototype.dispose=function(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&qe(this.accumulatedFirstMoment.map(function(t){return t.variable})),null!=this.accumulatedSecondMoment&&qe(this.accumulatedSecondMoment.map(function(t){return t.variable}))},e.prototype.getWeights=function(){return u(this,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:return t=this.accumulatedFirstMoment.concat(this.accumulatedSecondMoment),[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(t.map(function(t){return{name:t.originalName,tensor:t.variable}}))]}})})},e.prototype.setWeights=function(t){return u(this,void 0,void 0,function(){var e,n=this;return c(this,function(r){switch(r.label){case 0:return[4,this.extractIterations(t)];case 1:return t=r.sent(),He(function(){n.accBeta1.assign(Ou(n.beta1,n.iterations_+1)),n.accBeta2.assign(Ou(n.beta2,n.iterations_+1))}),e=t.length/2,this.accumulatedFirstMoment=t.slice(0,e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),this.accumulatedSecondMoment=t.slice(e,2*e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}},e.fromConfig=function(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon)},e.className=\"Adam\",e}(ud);Jp(pd);var dd=function(t){function e(e,n,r,o,a){void 0===o&&(o=null),void 0===a&&(a=0);var i=t.call(this)||this;return i.learningRate=e,i.beta1=n,i.beta2=r,i.epsilon=o,i.decay=a,i.accumulatedFirstMoment=[],i.accumulatedWeightedInfNorm=[],He(function(){i.iteration=Rn(0).variable(),i.accBeta1=Rn(n).variable()}),null==o&&(i.epsilon=_t.backend.epsilon()),i}return s(e,t),e.prototype.applyGradients=function(t){var e=this,n=Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t);He(function(){var r=Fu(1,e.accBeta1),o=bu(-e.learningRate,e.iteration.mul(e.decay).add(1));n.forEach(function(n,a){var i=_t.registeredVariables[n];null==e.accumulatedFirstMoment[a]&&(e.accumulatedFirstMoment[a]={originalName:n+\"/m\",variable:Vn(i).variable(!1)}),null==e.accumulatedWeightedInfNorm[a]&&(e.accumulatedWeightedInfNorm[a]={originalName:n+\"/v\",variable:Vn(i).variable(!1)});var s=Array.isArray(t)?t[a].tensor:t[n];if(null!=s){var u=e.accumulatedFirstMoment[a].variable,c=e.accumulatedWeightedInfNorm[a].variable,l=u.mul(e.beta1).add(s.mul(1-e.beta1)),p=c.mul(e.beta2),d=s.abs(),h=p.maximum(d);u.assign(l),c.assign(h);var f=o.div(r).mul(l.div(h.add(e.epsilon))).add(i);i.assign(f)}}),e.iteration.assign(e.iteration.add(1)),e.accBeta1.assign(e.accBeta1.mul(e.beta1))}),this.incrementIterations()},e.prototype.dispose=function(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&qe(this.accumulatedFirstMoment.map(function(t){return t.variable})),null!=this.accumulatedWeightedInfNorm&&qe(this.accumulatedWeightedInfNorm.map(function(t){return t.variable}))},e.prototype.getWeights=function(){return u(this,void 0,void 0,function(){return c(this,function(t){throw new Error(\"getWeights() is not implemented for Adamax yet.\")})})},e.prototype.setWeights=function(t){return u(this,void 0,void 0,function(){return c(this,function(t){throw new Error(\"setWeights() is not implemented for Adamax yet.\")})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}},e.fromConfig=function(t,e){return new t(e.learningRate,e.beta1,e.beta2,e.epsilon,e.decay)},e.className=\"Adamax\",e}(ud);Jp(dd);var hd=function(t){function e(e){var n=t.call(this)||this;return n.learningRate=e,n.setLearningRate(e),n}return s(e,t),e.prototype.applyGradients=function(t){var e=this;(Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t)).forEach(function(n,r){var o=Array.isArray(t)?t[r].tensor:t[n];if(null!=o){var a=_t.registeredVariables[n];He(function(){var t=e.c.mul(o).add(a);a.assign(t)})}}),this.incrementIterations()},e.prototype.setLearningRate=function(t){this.learningRate=t,null!=this.c&&this.c.dispose(),this.c=$e(Rn(-t))},e.prototype.dispose=function(){this.c.dispose()},e.prototype.getWeights=function(){return u(this,void 0,void 0,function(){return c(this,function(t){switch(t.label){case 0:return[4,this.saveIterations()];case 1:return[2,[t.sent()]]}})})},e.prototype.setWeights=function(t){return u(this,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return[4,this.extractIterations(t)];case 1:if(0!==(t=e.sent()).length)throw new Error(\"SGD optimizer does not have settable weights.\");return[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate}},e.fromConfig=function(t,e){return new t(e.learningRate)},e.className=\"SGD\",e}(ud);Jp(hd);var fd=function(t){function e(e,n,r){void 0===r&&(r=!1);var o=t.call(this,e)||this;return o.learningRate=e,o.momentum=n,o.useNesterov=r,o.accumulations=[],o.m=Rn(o.momentum),o}return s(e,t),e.prototype.applyGradients=function(t){var e=this;(Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t)).forEach(function(n,r){var o=_t.registeredVariables[n];null==e.accumulations[r]&&(e.accumulations[r]={originalName:n+\"/momentum\",variable:He(function(){return Vn(o).variable(!1)})});var a=e.accumulations[r].variable,i=Array.isArray(t)?t[r].tensor:t[n];null!=i&&He(function(){var t,n=e.m.mul(a).add(i);t=e.useNesterov?e.c.mul(i.add(n.mul(e.m))).add(o):e.c.mul(n).add(o),a.assign(n),o.assign(t)})}),this.incrementIterations()},e.prototype.dispose=function(){this.m.dispose(),null!=this.accumulations&&qe(this.accumulations.map(function(t){return t.variable}))},e.prototype.setMomentum=function(t){this.momentum=t},e.prototype.getWeights=function(){return u(this,void 0,void 0,function(){return c(this,function(t){switch(t.label){case 0:return[4,this.saveIterations()];case 1:return[2,[t.sent()].concat(this.accumulations.map(function(t){return{name:t.originalName,tensor:t.variable}}))]}})})},e.prototype.setWeights=function(t){return u(this,void 0,void 0,function(){return c(this,function(e){switch(e.label){case 0:return[4,this.extractIterations(t)];case 1:return t=e.sent(),this.accumulations=t.map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}},e.fromConfig=function(t,e){return new t(e.learningRate,e.momentum,e.useNesterov)},e.className=\"Momentum\",e}(hd);Jp(fd);var md=function(t){function e(e,n,r,o,a){void 0===n&&(n=.9),void 0===r&&(r=0),void 0===o&&(o=null),void 0===a&&(a=!1);var i=t.call(this)||this;return i.learningRate=e,i.decay=n,i.momentum=r,i.epsilon=o,i.accumulatedMeanSquares=[],i.accumulatedMoments=[],i.accumulatedMeanGrads=[],i.centered=a,null==o&&(i.epsilon=_t.backend.epsilon()),i}return s(e,t),e.prototype.applyGradients=function(t){var e=this;(Array.isArray(t)?t.map(function(t){return t.name}):Object.keys(t)).forEach(function(n,r){var o=_t.registeredVariables[n];null==e.accumulatedMeanSquares[r]&&(e.accumulatedMeanSquares[r]={originalName:n+\"/rms\",variable:He(function(){return Vn(o).variable(!1)})}),null==e.accumulatedMoments[r]&&(e.accumulatedMoments[r]={originalName:n+\"/momentum\",variable:He(function(){return Vn(o).variable(!1)})}),null==e.accumulatedMeanGrads[r]&&e.centered&&(e.accumulatedMeanGrads[r]={originalName:n+\"/mg\",variable:He(function(){return Vn(o).variable(!1)})});var a=Array.isArray(t)?t[r].tensor:t[n];if(null!=a){var i=e.accumulatedMeanSquares[r].variable,s=e.accumulatedMoments[r].variable;He(function(){var t=i.mul(e.decay).add(a.square().mul(1-e.decay));if(e.centered){var n=e.accumulatedMeanGrads[r].variable,u=n.mul(e.decay).add(a.mul(1-e.decay)),c=s.mul(e.momentum).add(a.mul(e.learningRate).div(t.sub(u.square().add(e.epsilon)).sqrt()));i.assign(t),n.assign(u),s.assign(c);var l=o.sub(c);o.assign(l)}else{var p=i.mul(e.decay).add(a.square().mul(1-e.decay));c=s.mul(e.momentum).add(a.mul(e.learningRate).div(p.add(e.epsilon).sqrt())),i.assign(p),s.assign(c),l=o.sub(c),o.assign(l)}})}}),this.incrementIterations()},e.prototype.dispose=function(){null!=this.accumulatedMeanSquares&&qe(this.accumulatedMeanSquares.map(function(t){return t.variable})),null!=this.accumulatedMeanGrads&&this.centered&&qe(this.accumulatedMeanGrads.map(function(t){return t.variable})),null!=this.accumulatedMoments&&qe(this.accumulatedMoments.map(function(t){return t.variable}))},e.prototype.getWeights=function(){return u(this,void 0,void 0,function(){var t;return c(this,function(e){switch(e.label){case 0:return t=this.accumulatedMeanSquares.concat(this.accumulatedMoments),this.centered&&t.push.apply(t,this.accumulatedMeanGrads),[4,this.saveIterations()];case 1:return[2,[e.sent()].concat(t.map(function(t){return{name:t.originalName,tensor:t.variable}}))]}})})},e.prototype.setWeights=function(t){return u(this,void 0,void 0,function(){var e;return c(this,function(n){switch(n.label){case 0:return[4,this.extractIterations(t)];case 1:return t=n.sent(),e=this.centered?t.length/3:t.length/2,this.accumulatedMeanSquares=t.slice(0,e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),this.accumulatedMoments=t.slice(e,2*e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}}),this.centered&&(this.accumulatedMeanGrads=t.slice(2*e,3*e).map(function(t){return{originalName:t.name,variable:t.tensor.variable(!1)}})),[2]}})})},e.prototype.getConfig=function(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}},e.fromConfig=function(t,e){return new t(e.learningRate,e.decay,e.momentum,e.epsilon,e.centered)},e.className=\"RMSProp\",e}(ud);Jp(md);var vd=function(){function t(){}return t.sgd=function(t){return new hd(t)},t.momentum=function(t,e,n){return void 0===n&&(n=!1),new fd(t,e,n)},t.rmsprop=function(t,e,n,r,o){return void 0===e&&(e=.9),void 0===n&&(n=0),void 0===r&&(r=null),void 0===o&&(o=!1),new md(t,e,n,r,o)},t.adam=function(t,e,n,r){return void 0===t&&(t=.001),void 0===e&&(e=.9),void 0===n&&(n=.999),void 0===r&&(r=null),new pd(t,e,n,r)},t.adadelta=function(t,e,n){return void 0===t&&(t=.001),void 0===e&&(e=.95),void 0===n&&(n=null),new cd(t,e,n)},t.adamax=function(t,e,n,r,o){return void 0===t&&(t=.002),void 0===e&&(e=.9),void 0===n&&(n=.999),void 0===r&&(r=null),void 0===o&&(o=0),new dd(t,e,n,r,o)},t.adagrad=function(t,e){return void 0===e&&(e=.1),new ld(t,e)},t}(),gd={sgd:vd.sgd,momentum:vd.momentum,adadelta:vd.adadelta,adagrad:vd.adagrad,rmsprop:vd.rmsprop,adamax:vd.adamax,adam:vd.adam},yd=\"undefined\"!=typeof requestAnimationFrame?requestAnimationFrame:void 0!==a?a:function(t){return t()};function xd(){return new Promise(function(t){return yd(function(){return t()})})}ht=Hl}.call(this,n(1),n(2),n(3).Buffer,n(8).setImmediate)},function(t,e){var n;n=function(){return this}();try{n=n||new Function(\"return this\")()}catch(t){\"object\"==typeof window&&(n=window)}t.exports=n},function(t,e){var n,r,o=t.exports={};function a(){throw new Error(\"setTimeout has not been defined\")}function i(){throw new Error(\"clearTimeout has not been defined\")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===a||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n=\"function\"==typeof setTimeout?setTimeout:a}catch(t){n=a}try{r=\"function\"==typeof clearTimeout?clearTimeout:i}catch(t){r=i}}();var u,c=[],l=!1,p=-1;function d(){l&&u&&(l=!1,u.length?c=u.concat(c):p=-1,c.length&&h())}function h(){if(!l){var t=s(d);l=!0;for(var e=c.length;e;){for(u=c,c=[];++p<e;)u&&u[p].run();p=-1,e=c.length}u=null,l=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===i||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function f(t,e){this.fun=t,this.array=e}function m(){}o.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];c.push(new f(t,e)),1!==c.length||l||s(h)},f.prototype.run=function(){this.fun.apply(null,this.array)},o.title=\"browser\",o.browser=!0,o.env={},o.argv=[],o.version=\"\",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(t){return[]},o.binding=function(t){throw new Error(\"process.binding is not supported\")},o.cwd=function(){return\"/\"},o.chdir=function(t){throw new Error(\"process.chdir is not supported\")},o.umask=function(){return 0}},function(t,e,n){\"use strict\";(function(t){\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nvar r=n(5),o=n(6),a=n(7);function i(){return u.TYPED_ARRAY_SUPPORT?2147483647:1073741823}function s(t,e){if(i()<e)throw new RangeError(\"Invalid typed array length\");return u.TYPED_ARRAY_SUPPORT?(t=new Uint8Array(e)).__proto__=u.prototype:(null===t&&(t=new u(e)),t.length=e),t}function u(t,e,n){if(!(u.TYPED_ARRAY_SUPPORT||this instanceof u))return new u(t,e,n);if(\"number\"==typeof t){if(\"string\"==typeof e)throw new Error(\"If encoding is specified then the first argument must be a string\");return p(this,t)}return c(this,t,e,n)}function c(t,e,n,r){if(\"number\"==typeof e)throw new TypeError('\"value\" argument must not be a number');return\"undefined\"!=typeof ArrayBuffer&&e instanceof ArrayBuffer?function(t,e,n,r){if(e.byteLength,n<0||e.byteLength<n)throw new RangeError(\"'offset' is out of bounds\");if(e.byteLength<n+(r||0))throw new RangeError(\"'length' is out of bounds\");e=void 0===n&&void 0===r?new Uint8Array(e):void 0===r?new Uint8Array(e,n):new Uint8Array(e,n,r);u.TYPED_ARRAY_SUPPORT?(t=e).__proto__=u.prototype:t=d(t,e);return t}(t,e,n,r):\"string\"==typeof e?function(t,e,n){\"string\"==typeof n&&\"\"!==n||(n=\"utf8\");if(!u.isEncoding(n))throw new TypeError('\"encoding\" must be a valid string encoding');var r=0|f(e,n),o=(t=s(t,r)).write(e,n);o!==r&&(t=t.slice(0,o));return t}(t,e,n):function(t,e){if(u.isBuffer(e)){var n=0|h(e.length);return 0===(t=s(t,n)).length?t:(e.copy(t,0,0,n),t)}if(e){if(\"undefined\"!=typeof ArrayBuffer&&e.buffer instanceof ArrayBuffer||\"length\"in e)return\"number\"!=typeof e.length||(r=e.length)!=r?s(t,0):d(t,e);if(\"Buffer\"===e.type&&a(e.data))return d(t,e.data)}var r;throw new TypeError(\"First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.\")}(t,e)}function l(t){if(\"number\"!=typeof t)throw new TypeError('\"size\" argument must be a number');if(t<0)throw new RangeError('\"size\" argument must not be negative')}function p(t,e){if(l(e),t=s(t,e<0?0:0|h(e)),!u.TYPED_ARRAY_SUPPORT)for(var n=0;n<e;++n)t[n]=0;return t}function d(t,e){var n=e.length<0?0:0|h(e.length);t=s(t,n);for(var r=0;r<n;r+=1)t[r]=255&e[r];return t}function h(t){if(t>=i())throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+i().toString(16)+\" bytes\");return 0|t}function f(t,e){if(u.isBuffer(t))return t.length;if(\"undefined\"!=typeof ArrayBuffer&&\"function\"==typeof ArrayBuffer.isView&&(ArrayBuffer.isView(t)||t instanceof ArrayBuffer))return t.byteLength;\"string\"!=typeof t&&(t=\"\"+t);var n=t.length;if(0===n)return 0;for(var r=!1;;)switch(e){case\"ascii\":case\"latin1\":case\"binary\":return n;case\"utf8\":case\"utf-8\":case void 0:return z(t).length;case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return 2*n;case\"hex\":return n>>>1;case\"base64\":return W(t).length;default:if(r)return z(t).length;e=(\"\"+e).toLowerCase(),r=!0}}function m(t,e,n){var r=t[e];t[e]=t[n],t[n]=r}function v(t,e,n,r,o){if(0===t.length)return-1;if(\"string\"==typeof n?(r=n,n=0):n>2147483647?n=2147483647:n<-2147483648&&(n=-2147483648),n=+n,isNaN(n)&&(n=o?0:t.length-1),n<0&&(n=t.length+n),n>=t.length){if(o)return-1;n=t.length-1}else if(n<0){if(!o)return-1;n=0}if(\"string\"==typeof e&&(e=u.from(e,r)),u.isBuffer(e))return 0===e.length?-1:g(t,e,n,r,o);if(\"number\"==typeof e)return e&=255,u.TYPED_ARRAY_SUPPORT&&\"function\"==typeof Uint8Array.prototype.indexOf?o?Uint8Array.prototype.indexOf.call(t,e,n):Uint8Array.prototype.lastIndexOf.call(t,e,n):g(t,[e],n,r,o);throw new TypeError(\"val must be string, number or Buffer\")}function g(t,e,n,r,o){var a,i=1,s=t.length,u=e.length;if(void 0!==r&&(\"ucs2\"===(r=String(r).toLowerCase())||\"ucs-2\"===r||\"utf16le\"===r||\"utf-16le\"===r)){if(t.length<2||e.length<2)return-1;i=2,s/=2,u/=2,n/=2}function c(t,e){return 1===i?t[e]:t.readUInt16BE(e*i)}if(o){var l=-1;for(a=n;a<s;a++)if(c(t,a)===c(e,-1===l?0:a-l)){if(-1===l&&(l=a),a-l+1===u)return l*i}else-1!==l&&(a-=a-l),l=-1}else for(n+u>s&&(n=s-u),a=n;a>=0;a--){for(var p=!0,d=0;d<u;d++)if(c(t,a+d)!==c(e,d)){p=!1;break}if(p)return a}return-1}function y(t,e,n,r){n=Number(n)||0;var o=t.length-n;r?(r=Number(r))>o&&(r=o):r=o;var a=e.length;if(a%2!=0)throw new TypeError(\"Invalid hex string\");r>a/2&&(r=a/2);for(var i=0;i<r;++i){var s=parseInt(e.substr(2*i,2),16);if(isNaN(s))return i;t[n+i]=s}return i}function x(t,e,n,r){return U(z(e,t.length-n),t,n,r)}function b(t,e,n,r){return U(function(t){for(var e=[],n=0;n<t.length;++n)e.push(255&t.charCodeAt(n));return e}(e),t,n,r)}function w(t,e,n,r){return b(t,e,n,r)}function C(t,e,n,r){return U(W(e),t,n,r)}function E(t,e,n,r){return U(function(t,e){for(var n,r,o,a=[],i=0;i<t.length&&!((e-=2)<0);++i)n=t.charCodeAt(i),r=n>>8,o=n%256,a.push(o),a.push(r);return a}(e,t.length-n),t,n,r)}function N(t,e,n){return 0===e&&n===t.length?r.fromByteArray(t):r.fromByteArray(t.slice(e,n))}function S(t,e,n){n=Math.min(t.length,n);for(var r=[],o=e;o<n;){var a,i,s,u,c=t[o],l=null,p=c>239?4:c>223?3:c>191?2:1;if(o+p<=n)switch(p){case 1:c<128&&(l=c);break;case 2:128==(192&(a=t[o+1]))&&(u=(31&c)<<6|63&a)>127&&(l=u);break;case 3:a=t[o+1],i=t[o+2],128==(192&a)&&128==(192&i)&&(u=(15&c)<<12|(63&a)<<6|63&i)>2047&&(u<55296||u>57343)&&(l=u);break;case 4:a=t[o+1],i=t[o+2],s=t[o+3],128==(192&a)&&128==(192&i)&&128==(192&s)&&(u=(15&c)<<18|(63&a)<<12|(63&i)<<6|63&s)>65535&&u<1114112&&(l=u)}null===l?(l=65533,p=1):l>65535&&(l-=65536,r.push(l>>>10&1023|55296),l=56320|1023&l),r.push(l),o+=p}return function(t){var e=t.length;if(e<=R)return String.fromCharCode.apply(String,t);var n=\"\",r=0;for(;r<e;)n+=String.fromCharCode.apply(String,t.slice(r,r+=R));return n}(r)}e.Buffer=u,e.SlowBuffer=function(t){+t!=t&&(t=0);return u.alloc(+t)},e.INSPECT_MAX_BYTES=50,u.TYPED_ARRAY_SUPPORT=void 0!==t.TYPED_ARRAY_SUPPORT?t.TYPED_ARRAY_SUPPORT:function(){try{var t=new Uint8Array(1);return t.__proto__={__proto__:Uint8Array.prototype,foo:function(){return 42}},42===t.foo()&&\"function\"==typeof t.subarray&&0===t.subarray(1,1).byteLength}catch(t){return!1}}(),e.kMaxLength=i(),u.poolSize=8192,u._augment=function(t){return t.__proto__=u.prototype,t},u.from=function(t,e,n){return c(null,t,e,n)},u.TYPED_ARRAY_SUPPORT&&(u.prototype.__proto__=Uint8Array.prototype,u.__proto__=Uint8Array,\"undefined\"!=typeof Symbol&&Symbol.species&&u[Symbol.species]===u&&Object.defineProperty(u,Symbol.species,{value:null,configurable:!0})),u.alloc=function(t,e,n){return function(t,e,n,r){return l(e),e<=0?s(t,e):void 0!==n?\"string\"==typeof r?s(t,e).fill(n,r):s(t,e).fill(n):s(t,e)}(null,t,e,n)},u.allocUnsafe=function(t){return p(null,t)},u.allocUnsafeSlow=function(t){return p(null,t)},u.isBuffer=function(t){return!(null==t||!t._isBuffer)},u.compare=function(t,e){if(!u.isBuffer(t)||!u.isBuffer(e))throw new TypeError(\"Arguments must be Buffers\");if(t===e)return 0;for(var n=t.length,r=e.length,o=0,a=Math.min(n,r);o<a;++o)if(t[o]!==e[o]){n=t[o],r=e[o];break}return n<r?-1:r<n?1:0},u.isEncoding=function(t){switch(String(t).toLowerCase()){case\"hex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},u.concat=function(t,e){if(!a(t))throw new TypeError('\"list\" argument must be an Array of Buffers');if(0===t.length)return u.alloc(0);var n;if(void 0===e)for(e=0,n=0;n<t.length;++n)e+=t[n].length;var r=u.allocUnsafe(e),o=0;for(n=0;n<t.length;++n){var i=t[n];if(!u.isBuffer(i))throw new TypeError('\"list\" argument must be an Array of Buffers');i.copy(r,o),o+=i.length}return r},u.byteLength=f,u.prototype._isBuffer=!0,u.prototype.swap16=function(){var t=this.length;if(t%2!=0)throw new RangeError(\"Buffer size must be a multiple of 16-bits\");for(var e=0;e<t;e+=2)m(this,e,e+1);return this},u.prototype.swap32=function(){var t=this.length;if(t%4!=0)throw new RangeError(\"Buffer size must be a multiple of 32-bits\");for(var e=0;e<t;e+=4)m(this,e,e+3),m(this,e+1,e+2);return this},u.prototype.swap64=function(){var t=this.length;if(t%8!=0)throw new RangeError(\"Buffer size must be a multiple of 64-bits\");for(var e=0;e<t;e+=8)m(this,e,e+7),m(this,e+1,e+6),m(this,e+2,e+5),m(this,e+3,e+4);return this},u.prototype.toString=function(){var t=0|this.length;return 0===t?\"\":0===arguments.length?S(this,0,t):function(t,e,n){var r=!1;if((void 0===e||e<0)&&(e=0),e>this.length)return\"\";if((void 0===n||n>this.length)&&(n=this.length),n<=0)return\"\";if((n>>>=0)<=(e>>>=0))return\"\";for(t||(t=\"utf8\");;)switch(t){case\"hex\":return A(this,e,n);case\"utf8\":case\"utf-8\":return S(this,e,n);case\"ascii\":return T(this,e,n);case\"latin1\":case\"binary\":return I(this,e,n);case\"base64\":return N(this,e,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return k(this,e,n);default:if(r)throw new TypeError(\"Unknown encoding: \"+t);t=(t+\"\").toLowerCase(),r=!0}}.apply(this,arguments)},u.prototype.equals=function(t){if(!u.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");return this===t||0===u.compare(this,t)},u.prototype.inspect=function(){var t=\"\",n=e.INSPECT_MAX_BYTES;return this.length>0&&(t=this.toString(\"hex\",0,n).match(/.{2}/g).join(\" \"),this.length>n&&(t+=\" ... \")),\"<Buffer \"+t+\">\"},u.prototype.compare=function(t,e,n,r,o){if(!u.isBuffer(t))throw new TypeError(\"Argument must be a Buffer\");if(void 0===e&&(e=0),void 0===n&&(n=t?t.length:0),void 0===r&&(r=0),void 0===o&&(o=this.length),e<0||n>t.length||r<0||o>this.length)throw new RangeError(\"out of range index\");if(r>=o&&e>=n)return 0;if(r>=o)return-1;if(e>=n)return 1;if(this===t)return 0;for(var a=(o>>>=0)-(r>>>=0),i=(n>>>=0)-(e>>>=0),s=Math.min(a,i),c=this.slice(r,o),l=t.slice(e,n),p=0;p<s;++p)if(c[p]!==l[p]){a=c[p],i=l[p];break}return a<i?-1:i<a?1:0},u.prototype.includes=function(t,e,n){return-1!==this.indexOf(t,e,n)},u.prototype.indexOf=function(t,e,n){return v(this,t,e,n,!0)},u.prototype.lastIndexOf=function(t,e,n){return v(this,t,e,n,!1)},u.prototype.write=function(t,e,n,r){if(void 0===e)r=\"utf8\",n=this.length,e=0;else if(void 0===n&&\"string\"==typeof e)r=e,n=this.length,e=0;else{if(!isFinite(e))throw new Error(\"Buffer.write(string, encoding, offset[, length]) is no longer supported\");e|=0,isFinite(n)?(n|=0,void 0===r&&(r=\"utf8\")):(r=n,n=void 0)}var o=this.length-e;if((void 0===n||n>o)&&(n=o),t.length>0&&(n<0||e<0)||e>this.length)throw new RangeError(\"Attempt to write outside buffer bounds\");r||(r=\"utf8\");for(var a=!1;;)switch(r){case\"hex\":return y(this,t,e,n);case\"utf8\":case\"utf-8\":return x(this,t,e,n);case\"ascii\":return b(this,t,e,n);case\"latin1\":case\"binary\":return w(this,t,e,n);case\"base64\":return C(this,t,e,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return E(this,t,e,n);default:if(a)throw new TypeError(\"Unknown encoding: \"+r);r=(\"\"+r).toLowerCase(),a=!0}},u.prototype.toJSON=function(){return{type:\"Buffer\",data:Array.prototype.slice.call(this._arr||this,0)}};var R=4096;function T(t,e,n){var r=\"\";n=Math.min(t.length,n);for(var o=e;o<n;++o)r+=String.fromCharCode(127&t[o]);return r}function I(t,e,n){var r=\"\";n=Math.min(t.length,n);for(var o=e;o<n;++o)r+=String.fromCharCode(t[o]);return r}function A(t,e,n){var r=t.length;(!e||e<0)&&(e=0),(!n||n<0||n>r)&&(n=r);for(var o=\"\",a=e;a<n;++a)o+=V(t[a]);return o}function k(t,e,n){for(var r=t.slice(e,n),o=\"\",a=0;a<r.length;a+=2)o+=String.fromCharCode(r[a]+256*r[a+1]);return o}function O(t,e,n){if(t%1!=0||t<0)throw new RangeError(\"offset is not uint\");if(t+e>n)throw new RangeError(\"Trying to access beyond buffer length\")}function D(t,e,n,r,o,a){if(!u.isBuffer(t))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(e>o||e<a)throw new RangeError('\"value\" argument is out of bounds');if(n+r>t.length)throw new RangeError(\"Index out of range\")}function _(t,e,n,r){e<0&&(e=65535+e+1);for(var o=0,a=Math.min(t.length-n,2);o<a;++o)t[n+o]=(e&255<<8*(r?o:1-o))>>>8*(r?o:1-o)}function M(t,e,n,r){e<0&&(e=4294967295+e+1);for(var o=0,a=Math.min(t.length-n,4);o<a;++o)t[n+o]=e>>>8*(r?o:3-o)&255}function F(t,e,n,r,o,a){if(n+r>t.length)throw new RangeError(\"Index out of range\");if(n<0)throw new RangeError(\"Index out of range\")}function P(t,e,n,r,a){return a||F(t,0,n,4),o.write(t,e,n,r,23,4),n+4}function B(t,e,n,r,a){return a||F(t,0,n,8),o.write(t,e,n,r,52,8),n+8}u.prototype.slice=function(t,e){var n,r=this.length;if((t=~~t)<0?(t+=r)<0&&(t=0):t>r&&(t=r),(e=void 0===e?r:~~e)<0?(e+=r)<0&&(e=0):e>r&&(e=r),e<t&&(e=t),u.TYPED_ARRAY_SUPPORT)(n=this.subarray(t,e)).__proto__=u.prototype;else{var o=e-t;n=new u(o,void 0);for(var a=0;a<o;++a)n[a]=this[a+t]}return n},u.prototype.readUIntLE=function(t,e,n){t|=0,e|=0,n||O(t,e,this.length);for(var r=this[t],o=1,a=0;++a<e&&(o*=256);)r+=this[t+a]*o;return r},u.prototype.readUIntBE=function(t,e,n){t|=0,e|=0,n||O(t,e,this.length);for(var r=this[t+--e],o=1;e>0&&(o*=256);)r+=this[t+--e]*o;return r},u.prototype.readUInt8=function(t,e){return e||O(t,1,this.length),this[t]},u.prototype.readUInt16LE=function(t,e){return e||O(t,2,this.length),this[t]|this[t+1]<<8},u.prototype.readUInt16BE=function(t,e){return e||O(t,2,this.length),this[t]<<8|this[t+1]},u.prototype.readUInt32LE=function(t,e){return e||O(t,4,this.length),(this[t]|this[t+1]<<8|this[t+2]<<16)+16777216*this[t+3]},u.prototype.readUInt32BE=function(t,e){return e||O(t,4,this.length),16777216*this[t]+(this[t+1]<<16|this[t+2]<<8|this[t+3])},u.prototype.readIntLE=function(t,e,n){t|=0,e|=0,n||O(t,e,this.length);for(var r=this[t],o=1,a=0;++a<e&&(o*=256);)r+=this[t+a]*o;return r>=(o*=128)&&(r-=Math.pow(2,8*e)),r},u.prototype.readIntBE=function(t,e,n){t|=0,e|=0,n||O(t,e,this.length);for(var r=e,o=1,a=this[t+--r];r>0&&(o*=256);)a+=this[t+--r]*o;return a>=(o*=128)&&(a-=Math.pow(2,8*e)),a},u.prototype.readInt8=function(t,e){return e||O(t,1,this.length),128&this[t]?-1*(255-this[t]+1):this[t]},u.prototype.readInt16LE=function(t,e){e||O(t,2,this.length);var n=this[t]|this[t+1]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt16BE=function(t,e){e||O(t,2,this.length);var n=this[t+1]|this[t]<<8;return 32768&n?4294901760|n:n},u.prototype.readInt32LE=function(t,e){return e||O(t,4,this.length),this[t]|this[t+1]<<8|this[t+2]<<16|this[t+3]<<24},u.prototype.readInt32BE=function(t,e){return e||O(t,4,this.length),this[t]<<24|this[t+1]<<16|this[t+2]<<8|this[t+3]},u.prototype.readFloatLE=function(t,e){return e||O(t,4,this.length),o.read(this,t,!0,23,4)},u.prototype.readFloatBE=function(t,e){return e||O(t,4,this.length),o.read(this,t,!1,23,4)},u.prototype.readDoubleLE=function(t,e){return e||O(t,8,this.length),o.read(this,t,!0,52,8)},u.prototype.readDoubleBE=function(t,e){return e||O(t,8,this.length),o.read(this,t,!1,52,8)},u.prototype.writeUIntLE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||D(this,t,e,n,Math.pow(2,8*n)-1,0);var o=1,a=0;for(this[e]=255&t;++a<n&&(o*=256);)this[e+a]=t/o&255;return e+n},u.prototype.writeUIntBE=function(t,e,n,r){(t=+t,e|=0,n|=0,r)||D(this,t,e,n,Math.pow(2,8*n)-1,0);var o=n-1,a=1;for(this[e+o]=255&t;--o>=0&&(a*=256);)this[e+o]=t/a&255;return e+n},u.prototype.writeUInt8=function(t,e,n){return t=+t,e|=0,n||D(this,t,e,1,255,0),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),this[e]=255&t,e+1},u.prototype.writeUInt16LE=function(t,e,n){return t=+t,e|=0,n||D(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):_(this,t,e,!0),e+2},u.prototype.writeUInt16BE=function(t,e,n){return t=+t,e|=0,n||D(this,t,e,2,65535,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):_(this,t,e,!1),e+2},u.prototype.writeUInt32LE=function(t,e,n){return t=+t,e|=0,n||D(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e+3]=t>>>24,this[e+2]=t>>>16,this[e+1]=t>>>8,this[e]=255&t):M(this,t,e,!0),e+4},u.prototype.writeUInt32BE=function(t,e,n){return t=+t,e|=0,n||D(this,t,e,4,4294967295,0),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):M(this,t,e,!1),e+4},u.prototype.writeIntLE=function(t,e,n,r){if(t=+t,e|=0,!r){var o=Math.pow(2,8*n-1);D(this,t,e,n,o-1,-o)}var a=0,i=1,s=0;for(this[e]=255&t;++a<n&&(i*=256);)t<0&&0===s&&0!==this[e+a-1]&&(s=1),this[e+a]=(t/i>>0)-s&255;return e+n},u.prototype.writeIntBE=function(t,e,n,r){if(t=+t,e|=0,!r){var o=Math.pow(2,8*n-1);D(this,t,e,n,o-1,-o)}var a=n-1,i=1,s=0;for(this[e+a]=255&t;--a>=0&&(i*=256);)t<0&&0===s&&0!==this[e+a+1]&&(s=1),this[e+a]=(t/i>>0)-s&255;return e+n},u.prototype.writeInt8=function(t,e,n){return t=+t,e|=0,n||D(this,t,e,1,127,-128),u.TYPED_ARRAY_SUPPORT||(t=Math.floor(t)),t<0&&(t=255+t+1),this[e]=255&t,e+1},u.prototype.writeInt16LE=function(t,e,n){return t=+t,e|=0,n||D(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8):_(this,t,e,!0),e+2},u.prototype.writeInt16BE=function(t,e,n){return t=+t,e|=0,n||D(this,t,e,2,32767,-32768),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>8,this[e+1]=255&t):_(this,t,e,!1),e+2},u.prototype.writeInt32LE=function(t,e,n){return t=+t,e|=0,n||D(this,t,e,4,2147483647,-2147483648),u.TYPED_ARRAY_SUPPORT?(this[e]=255&t,this[e+1]=t>>>8,this[e+2]=t>>>16,this[e+3]=t>>>24):M(this,t,e,!0),e+4},u.prototype.writeInt32BE=function(t,e,n){return t=+t,e|=0,n||D(this,t,e,4,2147483647,-2147483648),t<0&&(t=4294967295+t+1),u.TYPED_ARRAY_SUPPORT?(this[e]=t>>>24,this[e+1]=t>>>16,this[e+2]=t>>>8,this[e+3]=255&t):M(this,t,e,!1),e+4},u.prototype.writeFloatLE=function(t,e,n){return P(this,t,e,!0,n)},u.prototype.writeFloatBE=function(t,e,n){return P(this,t,e,!1,n)},u.prototype.writeDoubleLE=function(t,e,n){return B(this,t,e,!0,n)},u.prototype.writeDoubleBE=function(t,e,n){return B(this,t,e,!1,n)},u.prototype.copy=function(t,e,n,r){if(n||(n=0),r||0===r||(r=this.length),e>=t.length&&(e=t.length),e||(e=0),r>0&&r<n&&(r=n),r===n)return 0;if(0===t.length||0===this.length)return 0;if(e<0)throw new RangeError(\"targetStart out of bounds\");if(n<0||n>=this.length)throw new RangeError(\"sourceStart out of bounds\");if(r<0)throw new RangeError(\"sourceEnd out of bounds\");r>this.length&&(r=this.length),t.length-e<r-n&&(r=t.length-e+n);var o,a=r-n;if(this===t&&n<e&&e<r)for(o=a-1;o>=0;--o)t[o+e]=this[o+n];else if(a<1e3||!u.TYPED_ARRAY_SUPPORT)for(o=0;o<a;++o)t[o+e]=this[o+n];else Uint8Array.prototype.set.call(t,this.subarray(n,n+a),e);return a},u.prototype.fill=function(t,e,n,r){if(\"string\"==typeof t){if(\"string\"==typeof e?(r=e,e=0,n=this.length):\"string\"==typeof n&&(r=n,n=this.length),1===t.length){var o=t.charCodeAt(0);o<256&&(t=o)}if(void 0!==r&&\"string\"!=typeof r)throw new TypeError(\"encoding must be a string\");if(\"string\"==typeof r&&!u.isEncoding(r))throw new TypeError(\"Unknown encoding: \"+r)}else\"number\"==typeof t&&(t&=255);if(e<0||this.length<e||this.length<n)throw new RangeError(\"Out of range index\");if(n<=e)return this;var a;if(e>>>=0,n=void 0===n?this.length:n>>>0,t||(t=0),\"number\"==typeof t)for(a=e;a<n;++a)this[a]=t;else{var i=u.isBuffer(t)?t:z(new u(t,r).toString()),s=i.length;for(a=0;a<n-e;++a)this[a+e]=i[a%s]}return this};var L=/[^+\\/0-9A-Za-z-_]/g;function V(t){return t<16?\"0\"+t.toString(16):t.toString(16)}function z(t,e){var n;e=e||1/0;for(var r=t.length,o=null,a=[],i=0;i<r;++i){if((n=t.charCodeAt(i))>55295&&n<57344){if(!o){if(n>56319){(e-=3)>-1&&a.push(239,191,189);continue}if(i+1===r){(e-=3)>-1&&a.push(239,191,189);continue}o=n;continue}if(n<56320){(e-=3)>-1&&a.push(239,191,189),o=n;continue}n=65536+(o-55296<<10|n-56320)}else o&&(e-=3)>-1&&a.push(239,191,189);if(o=null,n<128){if((e-=1)<0)break;a.push(n)}else if(n<2048){if((e-=2)<0)break;a.push(n>>6|192,63&n|128)}else if(n<65536){if((e-=3)<0)break;a.push(n>>12|224,n>>6&63|128,63&n|128)}else{if(!(n<1114112))throw new Error(\"Invalid code point\");if((e-=4)<0)break;a.push(n>>18|240,n>>12&63|128,n>>6&63|128,63&n|128)}}return a}function W(t){return r.toByteArray(function(t){if((t=function(t){return t.trim?t.trim():t.replace(/^\\s+|\\s+$/g,\"\")}(t).replace(L,\"\")).length<2)return\"\";for(;t.length%4!=0;)t+=\"=\";return t}(t))}function U(t,e,n,r){for(var o=0;o<r&&!(o+n>=e.length||o>=t.length);++o)e[o+n]=t[o];return o}}).call(this,n(1))},function(t,e,n){\"use strict\";(function(t){n.d(e,\"a\",function(){return wt});var r,o,a,i=n(0),s=function(){return(s=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};\n/**\n * @license\n * Copyright 2019 Google LLC. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * =============================================================================\n */function u(t,e,n,r){return new(n||(n=Promise))(function(o,a){function i(t){try{u(r.next(t))}catch(t){a(t)}}function s(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){t.done?o(t.value):new n(function(e){e(t.value)}).then(i,s)}u((r=r.apply(t,e||[])).next())})}function c(t,e){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},\"function\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError(\"Generator is already executing.\");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}}(a=r||(r={}))[a.DT_INVALID=0]=\"DT_INVALID\",a[a.DT_FLOAT=1]=\"DT_FLOAT\",a[a.DT_DOUBLE=2]=\"DT_DOUBLE\",a[a.DT_INT32=3]=\"DT_INT32\",a[a.DT_UINT8=4]=\"DT_UINT8\",a[a.DT_INT16=5]=\"DT_INT16\",a[a.DT_INT8=6]=\"DT_INT8\",a[a.DT_STRING=7]=\"DT_STRING\",a[a.DT_COMPLEX64=8]=\"DT_COMPLEX64\",a[a.DT_INT64=9]=\"DT_INT64\",a[a.DT_BOOL=10]=\"DT_BOOL\",a[a.DT_QINT8=11]=\"DT_QINT8\",a[a.DT_QUINT8=12]=\"DT_QUINT8\",a[a.DT_QINT32=13]=\"DT_QINT32\",a[a.DT_BFLOAT16=14]=\"DT_BFLOAT16\",a[a.DT_FLOAT_REF=101]=\"DT_FLOAT_REF\",a[a.DT_DOUBLE_REF=102]=\"DT_DOUBLE_REF\",a[a.DT_INT32_REF=103]=\"DT_INT32_REF\",a[a.DT_UINT8_REF=104]=\"DT_UINT8_REF\",a[a.DT_INT16_REF=105]=\"DT_INT16_REF\",a[a.DT_INT8_REF=106]=\"DT_INT8_REF\",a[a.DT_STRING_REF=107]=\"DT_STRING_REF\",a[a.DT_COMPLEX64_REF=108]=\"DT_COMPLEX64_REF\",a[a.DT_INT64_REF=109]=\"DT_INT64_REF\",a[a.DT_BOOL_REF=110]=\"DT_BOOL_REF\",a[a.DT_QINT8_REF=111]=\"DT_QINT8_REF\",a[a.DT_QUINT8_REF=112]=\"DT_QUINT8_REF\",a[a.DT_QINT32_REF=113]=\"DT_QINT32_REF\",a[a.DT_BFLOAT16_REF=114]=\"DT_BFLOAT16_REF\",function(t){!function(t){t[t.LEGACY=0]=\"LEGACY\",t[t.V1=1]=\"V1\",t[t.V2=2]=\"V2\"}(t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(o||(o={}));var l={};function p(t){return l[t]}function d(t,e,n,r){var o=e.inputParams[t];if(o&&void 0!==o.inputIndexStart){var a=o.inputIndexStart,i=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?a+1:o.inputIndexEnd;if(\"tensor\"===o.type)return h(e.inputNames[o.inputIndexStart],n,r);if(\"tensors\"===o.type)return e.inputNames.slice(a,i).map(function(t){return h(t,n,r)});var s=Array.prototype.slice.call(h(e.inputNames.slice(a)[0],n,r).dataSync());return\"number\"===o.type?s[0]:s}var u=e.attrParams[t];return u&&u.value}function h(t,e,n){var r=v(t),o=r[0],a=r[1],i=n.currentContextIds.find(function(t){return!!e[m(o,t)]});return void 0!==i?e[m(o,i)][a]:void 0}function f(t,e){var n=v(t),r=n[0],o=n[1];return[m(r,e&&e.currentContextId),o]}function m(t,e){return e?t+\"-\"+e:t}function v(t){var e=t.lastIndexOf(\":\");return-1===e?[t,0]:[t.substring(0,e),Number(t.substring(e+1))]}function g(t,e){for(var n=[],r=0;r<t.length;r+=e)n.push(t.slice(r,r+e));return n}var y=Object.freeze({json:[{tfOpName:\"Add\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"AddV2\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"AddN\",category:\"arithmetic\",inputs:[{start:0,end:0,name:\"tensors\",type:\"tensors\"}]},{tfOpName:\"BiasAdd\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Sub\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"RealDiv\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Div\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"FloorDiv\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Mul\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Maximum\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}]},{tfOpName:\"Minimum\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}]},{tfOpName:\"Pow\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"SquaredDifference\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Mod\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"FloorMod\",category:\"arithmetic\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]}]}),x=Object.freeze({json:[{tfOpName:\"Abs\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Acos\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Asin\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Atan\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Atan2\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"y\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Ceil\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"ClipByValue\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"clip_value_min\",name:\"clipValueMin\",type:\"number\"},{tfName:\"clip_value_max\",name:\"clipValueMax\",type:\"number\"}]},{tfOpName:\"Complex\",category:\"basic_math\",inputs:[{start:0,name:\"real\",type:\"tensor\"},{start:1,name:\"imag\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"ComplexAbs\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Cos\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Cosh\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Elu\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Exp\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Floor\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Log\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Imag\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0},{tfName:\"Tout\",name:\"outputType\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Neg\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Real\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0},{tfName:\"Tout\",name:\"outputType\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Prelu\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"alpha\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Relu\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Relu6\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0},{tfName:\"clipValueMin\",name:\"clipValueMin\",type:\"number\",defaultValue:0},{tfName:\"clipValueMax\",name:\"clipValueMax\",type:\"number\",defaultValue:6}]},{tfOpName:\"Selu\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Sigmoid\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Sin\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Sinh\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Sqrt\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Rsqrt\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Square\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Tan\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Tanh\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Sign\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Round\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Expm1\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Log1p\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Reciprocal\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Softplus\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Asinh\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Acosh\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Atanh\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Erf\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Prod\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"axes\",type:\"number[]\"}],attrs:[{tfName:\"keep_dims\",name:\"keepDims\",type:\"bool\",notSupported:!0},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"LeakyRelu\",category:\"basic_math\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"alpha\",name:\"alpha\",type:\"number\",defaultValue:.2},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]}]}),b=Object.freeze({json:[{tfOpName:\"LoopCond\",category:\"control\",inputs:[{start:0,name:\"pred\",type:\"tensor\"}]},{tfOpName:\"Switch\",category:\"control\",inputs:[{start:0,name:\"data\",type:\"tensor\"},{start:1,name:\"pred\",type:\"tensor\"}]},{tfOpName:\"Merge\",category:\"control\",inputs:[{start:0,end:0,name:\"tensors\",type:\"tensors\"}]},{tfOpName:\"Enter\",category:\"control\",inputs:[{start:0,name:\"tensor\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0},{tfName:\"frame_name\",name:\"frameName\",type:\"string\"},{tfName:\"is_constant\",name:\"isConstant\",type:\"bool\"}]},{tfOpName:\"Exit\",category:\"control\",inputs:[{start:0,name:\"tensor\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"NextIteration\",category:\"control\",inputs:[{start:0,name:\"tensor\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"TensorArrayV3\",category:\"control\",inputs:[{start:0,name:\"size\",type:\"number\"}],attrs:[{tfName:\"dtype\",name:\"dtype\",type:\"dtype\"},{tfName:\"element_shape\",name:\"elementShape\",type:\"shape\"},{tfName:\"dynamic_size\",name:\"dynamicSize\",type:\"bool\"},{tfName:\"clear_after_read\",name:\"clearAfterRead\",type:\"bool\"},{tfName:\"identical_element_shapes\",name:\"identicalElementShapes\",type:\"bool\"},{tfName:\"tensor_array_name\",name:\"name\",type:\"string\"}]},{tfOpName:\"TensorArrayWriteV3\",category:\"control\",inputs:[{start:0,name:\"tensorArrayId\",type:\"number\"},{start:1,name:\"index\",type:\"number\"},{start:2,name:\"tensor\",type:\"tensor\"},{start:3,name:\"flowIn\",type:\"number\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"TensorArrayReadV3\",category:\"control\",inputs:[{start:0,name:\"tensorArrayId\",type:\"number\"},{start:1,name:\"index\",type:\"number\"},{start:2,name:\"flowIn\",type:\"number\"}],attrs:[{tfName:\"dtype\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"TensorArrayGatherV3\",category:\"control\",inputs:[{start:0,name:\"tensorArrayId\",type:\"number\"},{start:1,name:\"indices\",type:\"number[]\"},{start:2,name:\"flowIn\",type:\"number\"}],attrs:[{tfName:\"dtype\",name:\"dtype\",type:\"dtype\"},{tfName:\"element_shape\",name:\"elementShape\",type:\"shape\"}]},{tfOpName:\"TensorArrayScatterV3\",category:\"control\",inputs:[{start:0,name:\"tensorArrayId\",type:\"number\"},{start:1,name:\"indices\",type:\"number[]\"},{start:2,name:\"tensor\",type:\"tensor\"},{start:3,name:\"flowIn\",type:\"number\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\"}]},{tfOpName:\"TensorArrayConcatV3\",category:\"control\",inputs:[{start:0,name:\"tensorArrayId\",type:\"number\"},{start:1,name:\"flowIn\",type:\"number\"}],attrs:[{tfName:\"dtype\",name:\"dtype\",type:\"dtype\"},{tfName:\"element_shape_except0\",name:\"elementShapeExcept0\",type:\"shape\",notSupported:!0}]},{tfOpName:\"TensorArraySplitV3\",category:\"control\",inputs:[{start:0,name:\"tensorArrayId\",type:\"number\"},{start:1,name:\"tensor\",type:\"tensor\"},{start:2,name:\"lengths\",type:\"number[]\"},{start:3,name:\"flowIn\",type:\"number\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\"}]},{tfOpName:\"TensorArraySizeV3\",category:\"control\",inputs:[{start:0,name:\"tensorArrayId\",type:\"number\"},{start:1,name:\"flowIn\",type:\"number\"}]},{tfOpName:\"TensorArrayCloseV3\",category:\"control\",inputs:[{start:0,name:\"tensorArrayId\",type:\"number\"}]}]}),w=Object.freeze({json:[{tfOpName:\"AvgPool\",category:\"convolution\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"strides\",name:\"strides\",type:\"number[]\"},{tfName:\"padding\",name:\"pad\",type:\"string\"},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",notSupported:!0},{tfName:\"ksize\",name:\"kernelSize\",type:\"number[]\"},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"MaxPool\",category:\"convolution\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"strides\",name:\"strides\",type:\"number[]\"},{tfName:\"padding\",name:\"pad\",type:\"string\"},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",notSupported:!0},{tfName:\"ksize\",name:\"kernelSize\",type:\"number[]\"},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"AvgPool3D\",category:\"convolution\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"strides\",name:\"strides\",type:\"number[]\"},{tfName:\"padding\",name:\"pad\",type:\"string\"},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",notSupported:!0},{tfName:\"ksize\",name:\"kernelSize\",type:\"number[]\"},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"MaxPool3D\",category:\"convolution\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"strides\",name:\"strides\",type:\"number[]\"},{tfName:\"padding\",name:\"pad\",type:\"string\"},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",notSupported:!0},{tfName:\"ksize\",name:\"kernelSize\",type:\"number[]\"},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Conv1D\",category:\"convolution\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"filter\",type:\"tensor\"}],attrs:[{tfName:\"stride\",name:\"stride\",type:\"number\"},{tfName:\"padding\",name:\"pad\",type:\"string\"},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",defaultValue:\"NWC\"},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0},{tfName:\"dilation\",name:\"dilation\",type:\"number\",defaultValue:1}]},{tfOpName:\"Conv2D\",category:\"convolution\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"filter\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0},{tfName:\"strides\",name:\"strides\",type:\"number[]\"},{tfName:\"padding\",name:\"pad\",type:\"string\"},{tfName:\"useCudnnOnGpu\",name:\"useCudnnOnGpu\",type:\"bool\"},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",defaultValue:\"NHWC\"},{tfName:\"dilations\",name:\"dilations\",type:\"number[]\"}]},{tfOpName:\"_FusedConv2D\",category:\"convolution\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"filter\",type:\"tensor\"},{start:2,end:0,name:\"args\",type:\"tensors\"}],attrs:[{tfName:\"num_args\",name:\"numArgs\",type:\"number\"},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0},{tfName:\"strides\",name:\"strides\",type:\"number[]\"},{tfName:\"padding\",name:\"pad\",type:\"string\"},{tfName:\"explicit_paddings\",name:\"explicitPaddings\",type:\"number[]\",defaultValue:[]},{tfName:\"use_cudnn_on_gpu\",name:\"useCudnnOnGpu\",type:\"bool\",defaultValue:!0},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",defaultValue:\"NHWC\"},{tfName:\"dilations\",name:\"dilations\",type:\"number[]\",defaultValue:[1,1,1,1]},{tfName:\"fused_ops\",name:\"fusedOps\",type:\"string[]\",defaultValue:[]},{tfName:\"epsilon\",name:\"epsilon\",type:\"number\",defaultValue:1e-4}]},{tfOpName:\"Conv2DBackpropInput\",category:\"convolution\",inputs:[{start:2,name:\"x\",type:\"tensor\"},{start:1,name:\"filter\",type:\"tensor\"},{start:0,name:\"outputShape\",type:\"number[]\"}],attrs:[{tfName:\"strides\",name:\"strides\",type:\"number[]\"},{tfName:\"padding\",name:\"pad\",type:\"string\"},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",notSupported:!0}]},{tfOpName:\"DepthwiseConv2d\",category:\"convolution\",inputs:[{start:0,name:\"input\",type:\"tensor\"},{start:1,name:\"filter\",type:\"tensor\"}],attrs:[{tfName:\"strides\",name:\"strides\",type:\"number[]\"},{tfName:\"padding\",name:\"pad\",type:\"string\"},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",defaultValue:\"NHWC\"},{tfName:\"dilations\",name:\"dilations\",type:\"number[]\"}]},{tfOpName:\"DepthwiseConv2dNative\",category:\"convolution\",inputs:[{start:0,name:\"input\",type:\"tensor\"},{start:1,name:\"filter\",type:\"tensor\"}],attrs:[{tfName:\"strides\",name:\"strides\",type:\"number[]\"},{tfName:\"padding\",name:\"pad\",type:\"string\"},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",defaultValue:\"NHWC\"},{tfName:\"dilations\",name:\"dilations\",type:\"number[]\"}]},{tfOpName:\"Conv3D\",category:\"convolution\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"filter\",type:\"tensor\"}],attrs:[{tfName:\"strides\",name:\"strides\",type:\"number[]\"},{tfName:\"padding\",name:\"pad\",type:\"string\"},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",defaultValue:\"NHWC\"},{tfName:\"dilations\",name:\"dilations\",type:\"number[]\"}]}]}),C=Object.freeze({json:[{tfOpName:\"Fill\",category:\"creation\",inputs:[{start:0,name:\"shape\",type:\"number[]\"},{start:1,name:\"value\",type:\"number\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\"}]},{tfOpName:\"LinSpace\",category:\"creation\",inputs:[{start:0,name:\"start\",type:\"number\"},{start:1,name:\"stop\",type:\"number\"},{start:2,name:\"num\",type:\"number\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"OneHot\",category:\"creation\",inputs:[{start:0,name:\"indices\",type:\"tensor\"},{start:1,name:\"depth\",type:\"number\"},{start:2,name:\"onValue\",type:\"number\",defaultValue:1},{start:3,name:\"offValue\",type:\"number\",defaultValue:0}],attrs:[{tfName:\"axis\",name:\"axis\",type:\"number\",notSupported:!0},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Ones\",category:\"creation\",inputs:[{start:0,name:\"shape\",type:\"number[]\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\"}]},{tfOpName:\"OnesLike\",category:\"creation\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"dtype\",name:\"dtype\",type:\"dtype\"}]},{tfOpName:\"RandomUniform\",category:\"creation\",inputs:[{start:0,name:\"shape\",type:\"number[]\"}],attrs:[{tfName:\"minval\",name:\"minval\",type:\"number\",defaultValue:0},{tfName:\"maxval\",name:\"maxval\",type:\"number\",defaultValue:1},{tfName:\"dtype\",name:\"dtype\",type:\"dtype\"},{tfName:\"seed\",name:\"seed\",type:\"number\",defaultValue:0},{tfName:\"seed2\",name:\"seed2\",type:\"number\",defaultValue:0,notSupported:!0},{tfName:\"T\",name:\"T\",type:\"number\",notSupported:!0}]},{tfOpName:\"Range\",category:\"creation\",inputs:[{start:0,name:\"start\",type:\"number\"},{start:1,name:\"stop\",type:\"number\"},{start:2,name:\"step\",type:\"number\",defaultValue:0}],attrs:[{tfName:\"Tidx\",name:\"dtype\",type:\"dtype\"}]},{tfOpName:\"TruncatedNormal\",category:\"creation\",inputs:[{start:0,name:\"shape\",type:\"number[]\"}],attrs:[{tfName:\"means\",name:\"mean\",type:\"number\",defaultValue:0},{tfName:\"stddev\",name:\"stdDev\",type:\"number\",defaultValue:1},{tfName:\"seed\",name:\"seed\",type:\"number\"},{tfName:\"seed2\",name:\"seed2\",type:\"number\",defaultValue:0,notSupported:!0},{tfName:\"dtype\",name:\"dtype\",type:\"dtype\"},{tfName:\"T\",name:\"T\",type:\"number\",notSupported:!0}]},{tfOpName:\"Zeros\",category:\"creation\",inputs:[{start:0,name:\"shape\",type:\"number[]\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\"}]},{tfOpName:\"ZerosLike\",category:\"creation\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\"}]},{tfOpName:\"Multinomial\",category:\"creation\",inputs:[{start:0,name:\"logits\",type:\"tensor\"},{start:1,name:\"numSamples\",type:\"number\"}],attrs:[{tfName:\"seed\",name:\"seed\",type:\"number\"},{tfName:\"seed2\",name:\"seed2\",type:\"number\"},{tfName:\"T\",name:\"dtype\",type:\"dtype\"},{tfName:\"output_dtype\",name:\"output_dtype\",type:\"dtype\"}]}]}),E=Object.freeze({json:[{tfOpName:\"NonMaxSuppressionV2\",category:\"dynamic\",inputs:[{start:0,name:\"boxes\",type:\"tensor\"},{start:1,name:\"scores\",type:\"tensor\"},{start:2,name:\"maxOutputSize\",type:\"number\"},{start:3,name:\"iouThreshold\",type:\"number\"}]},{tfOpName:\"NonMaxSuppressionV3\",category:\"dynamic\",inputs:[{start:0,name:\"boxes\",type:\"tensor\"},{start:1,name:\"scores\",type:\"tensor\"},{start:2,name:\"maxOutputSize\",type:\"number\"},{start:3,name:\"iouThreshold\",type:\"number\"},{start:4,name:\"scoreThreshold\",type:\"number\"}]},{tfOpName:\"Where\",category:\"dynamic\",inputs:[{start:0,name:\"condition\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"ListDiff\",category:\"dynamic\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"y\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]}]}),N=Object.freeze({json:[{tfOpName:\"TopKV2\",category:\"evaluation\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"k\",type:\"number\"}],attrs:[{tfName:\"sorted\",name:\"sorted\",type:\"bool\"}]}]}),S=Object.freeze({json:[{tfOpName:\"PlaceholderWithDefault\",category:\"graph\",inputs:[{start:0,name:\"default\",type:\"tensor\"}],attrs:[{tfName:\"shape\",name:\"shape\",type:\"shape\"},{tfName:\"dtype\",name:\"dtype\",type:\"dtype\"}]},{tfOpName:\"Placeholder\",category:\"graph\",attrs:[{tfName:\"shape\",name:\"shape\",type:\"shape\"},{tfName:\"dtype\",name:\"dtype\",type:\"dtype\"}]},{tfOpName:\"Const\",category:\"graph\"},{tfOpName:\"Identity\",category:\"graph\",inputs:[{start:0,name:\"x\",type:\"tensor\"}]},{tfOpName:\"IdentityN\",category:\"graph\",inputs:[{start:0,end:0,name:\"x\",type:\"tensors\"}]},{tfOpName:\"Snapshot\",category:\"graph\",inputs:[{start:0,name:\"x\",type:\"tensor\"}]},{tfOpName:\"Rank\",category:\"graph\",inputs:[{start:0,name:\"x\",type:\"tensor\"}]},{tfOpName:\"Size\",category:\"graph\",inputs:[{start:0,name:\"x\",type:\"tensor\"}]},{tfOpName:\"Shape\",category:\"graph\",inputs:[{start:0,name:\"x\",type:\"tensor\"}]},{tfOpName:\"ShapeN\",category:\"graph\",inputs:[{start:0,end:0,name:\"x\",type:\"tensors\"}]},{tfOpName:\"Print\",category:\"graph\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"data\",type:\"tensors\"}],attrs:[{tfName:\"message\",name:\"message\",type:\"string\"},{tfName:\"first_n\",name:\"firstN\",type:\"number\",notSupported:!0},{tfName:\"summarize\",name:\"summarize\",type:\"number\",defaultValue:3}]},{tfOpName:\"NoOp\",category:\"graph\",inputs:[]},{tfOpName:\"StopGradient\",category:\"graph\",inputs:[{start:0,name:\"x\",type:\"tensor\"}]},{tfOpName:\"FakeQuantWithMinMaxVars\",category:\"graph\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"min\",name:\"min\",type:\"number\"},{tfName:\"max\",name:\"max\",type:\"number\"}]}]}),R=Object.freeze({json:[{tfOpName:\"ResizeBilinear\",category:\"image\",inputs:[{start:0,name:\"images\",type:\"tensor\"},{start:1,name:\"size\",type:\"number[]\"}],attrs:[{tfName:\"align_corners\",name:\"alignCorners\",type:\"bool\"},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"ResizeNearestNeighbor\",category:\"image\",inputs:[{start:0,name:\"images\",type:\"tensor\"},{start:1,name:\"size\",type:\"number[]\"}],attrs:[{tfName:\"align_corners\",name:\"alignCorners\",type:\"bool\"},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"CropAndResize\",category:\"image\",inputs:[{start:0,name:\"image\",type:\"tensor\"},{start:1,name:\"boxes\",type:\"tensor\"},{start:2,name:\"boxInd\",type:\"tensor\"},{start:3,name:\"cropSize\",type:\"number[]\"}],attrs:[{tfName:\"method\",name:\"method\",type:\"string\"},{tfName:\"extrapolation_value\",name:\"extrapolationValue\",type:\"number\"}]}]}),T=Object.freeze({json:[{tfOpName:\"Equal\",category:\"logical\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"NotEqual\",category:\"logical\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Greater\",category:\"logical\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"GreaterEqual\",category:\"logical\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Less\",category:\"logical\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"LessEqual\",category:\"logical\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"LogicalAnd\",category:\"logical\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"LogicalNot\",category:\"logical\",inputs:[{start:0,name:\"a\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"LogicalOr\",category:\"logical\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Select\",category:\"logical\",inputs:[{start:0,name:\"condition\",type:\"tensor\"},{start:1,name:\"a\",type:\"tensor\"},{start:2,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]}]}),I=Object.freeze({json:[{tfOpName:\"MatMul\",category:\"matrices\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"transpose_a\",name:\"transposeA\",type:\"bool\",defaultValue:!1},{tfName:\"transpose_b\",name:\"transposeB\",type:\"bool\",defaultValue:!1},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"BatchMatMul\",category:\"matrices\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"adj_x\",name:\"transposeA\",type:\"bool\",defaultValue:!1},{tfName:\"adj_y\",name:\"transposeB\",type:\"bool\",defaultValue:!1},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"BatchMatMulV2\",category:\"matrices\",inputs:[{start:0,name:\"a\",type:\"tensor\"},{start:1,name:\"b\",type:\"tensor\"}],attrs:[{tfName:\"adj_x\",name:\"transposeA\",type:\"bool\",defaultValue:!1},{tfName:\"adj_y\",name:\"transposeB\",type:\"bool\",defaultValue:!1},{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]},{tfOpName:\"Transpose\",category:\"matrices\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"perm\",type:\"number[]\"}],attrs:[{tfName:\"T\",name:\"dtype\",type:\"dtype\",notSupported:!0}]}]}),A=Object.freeze({json:[{tfOpName:\"FusedBatchNorm\",category:\"normalization\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"scale\",type:\"tensor\"},{start:2,name:\"offset\",type:\"tensor\"},{start:3,name:\"mean\",type:\"tensor\"},{start:4,name:\"variance\",type:\"tensor\"}],attrs:[{tfName:\"epsilon\",name:\"epsilon\",type:\"number\",defaultValue:.001},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",notSupported:!0}]},{tfOpName:\"FusedBatchNormV2\",category:\"normalization\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"scale\",type:\"tensor\"},{start:2,name:\"offset\",type:\"tensor\"},{start:3,name:\"mean\",type:\"tensor\"},{start:4,name:\"variance\",type:\"tensor\"}],attrs:[{tfName:\"epsilon\",name:\"epsilon\",type:\"number\",defaultValue:.001},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",notSupported:!0}]},{tfOpName:\"FusedBatchNormV3\",category:\"normalization\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"scale\",type:\"tensor\"},{start:2,name:\"offset\",type:\"tensor\"},{start:3,name:\"mean\",type:\"tensor\"},{start:4,name:\"variance\",type:\"tensor\"}],attrs:[{tfName:\"epsilon\",name:\"epsilon\",type:\"number\",defaultValue:.001},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\",notSupported:!0}]},{tfOpName:\"LRN\",category:\"normalization\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"depth_radius\",name:\"radius\",type:\"number\",defaultValue:5},{tfName:\"bias\",name:\"bias\",type:\"number\",defaultValue:1},{tfName:\"alpha\",name:\"alpha\",type:\"number\",defaultValue:1},{tfName:\"beta\",name:\"beta\",type:\"number\",defaultValue:.5}]},{tfOpName:\"Softmax\",category:\"normalization\",inputs:[{start:0,name:\"x\",type:\"tensor\"}]},{tfOpName:\"LogSoftmax\",category:\"normalization\",inputs:[{start:0,name:\"x\",type:\"tensor\"}]},{tfOpName:\"SparseToDense\",category:\"normalization\",inputs:[{start:0,name:\"sparseIndices\",type:\"tensor\"},{start:1,name:\"outputShape\",type:\"number[]\"},{start:2,name:\"sparseValues\",type:\"tensor\"},{start:3,name:\"defaultValue\",type:\"tensor\"}],attrs:[{tfName:\"validate_indices\",name:\"validateIndices\",type:\"bool\",defaultValue:!0,notSupported:!0}]}]}),k=Object.freeze({json:[{tfOpName:\"Max\",category:\"reduction\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"axis\",type:\"number[]\"}],attrs:[{tfName:\"keep_dims\",name:\"keepDims\",type:\"bool\"}]},{tfOpName:\"Mean\",category:\"reduction\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"axis\",type:\"number[]\"}],attrs:[{tfName:\"keep_dims\",name:\"keepDims\",type:\"bool\"}]},{tfOpName:\"Min\",category:\"reduction\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"axis\",type:\"number[]\"}],attrs:[{tfName:\"keep_dims\",name:\"keepDims\",type:\"bool\"}]},{tfOpName:\"Sum\",category:\"reduction\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"axis\",type:\"number[]\"}],attrs:[{tfName:\"keep_dims\",name:\"keepDims\",type:\"bool\"}]},{tfOpName:\"All\",category:\"reduction\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"axis\",type:\"number[]\"}],attrs:[{tfName:\"keep_dims\",name:\"keepDims\",type:\"bool\"}]},{tfOpName:\"Any\",category:\"reduction\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"axis\",type:\"number[]\"}],attrs:[{tfName:\"keep_dims\",name:\"keepDims\",type:\"bool\"}]},{tfOpName:\"ArgMax\",category:\"reduction\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"axis\",type:\"number\"}]},{tfOpName:\"ArgMin\",category:\"reduction\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"axis\",type:\"number\"}]},{tfOpName:\"Prod\",category:\"reduction\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"axis\",type:\"number[]\"}],attrs:[{tfName:\"keep_dims\",name:\"keepDims\",type:\"bool\"}]}]}),O=Object.freeze({json:[{tfOpName:\"ConcatV2\",category:\"slice_join\",inputs:[{start:0,end:-1,name:\"tensors\",type:\"tensors\"},{start:-1,name:\"axis\",type:\"number\"}]},{tfOpName:\"Concat\",category:\"slice_join\",inputs:[{start:1,end:0,name:\"tensors\",type:\"tensors\"},{start:0,name:\"axis\",type:\"number\"}]},{tfOpName:\"GatherV2\",category:\"slice_join\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"indices\",type:\"tensor\"},{start:2,name:\"axis\",type:\"number\",defaultValue:0}]},{tfOpName:\"Gather\",category:\"slice_join\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"indices\",type:\"tensor\"}],attrs:[{tfName:\"axis\",name:\"axis\",type:\"number\",defaultValue:0},{tfName:\"validate_indices\",name:\"validateIndices\",type:\"bool\",notSupported:!0}]},{tfOpName:\"Reverse\",category:\"slice_join\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"dims\",type:\"bool\",notSupported:!0}]},{tfOpName:\"ReverseV2\",category:\"slice_join\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"axis\",type:\"number[]\"}]},{tfOpName:\"Slice\",category:\"slice_join\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"begin\",type:\"number[]\"},{start:2,name:\"size\",type:\"number[]\"}]},{tfOpName:\"StridedSlice\",category:\"slice_join\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"begin\",type:\"number[]\"},{start:2,name:\"end\",type:\"number[]\"},{start:3,name:\"strides\",type:\"number[]\"}],attrs:[{tfName:\"begin_mask\",name:\"beginMask\",type:\"number\",defaultValue:0},{tfName:\"end_mask\",name:\"endMask\",type:\"number\",defaultValue:0},{tfName:\"new_axis_mask\",name:\"newAxisMask\",type:\"number\",defaultValue:0},{tfName:\"ellipsis_mask\",name:\"ellipsisMask\",type:\"number\",defaultValue:0},{tfName:\"shrink_axis_mask\",name:\"shrinkAxisMask\",type:\"number\",defaultValue:0}]},{tfOpName:\"Pack\",category:\"slice_join\",inputs:[{start:0,end:0,name:\"tensors\",type:\"tensors\"}],attrs:[{tfName:\"axis\",name:\"axis\",type:\"number\",defaultValue:0}]},{tfOpName:\"Unpack\",category:\"slice_join\",inputs:[{start:0,name:\"tensor\",type:\"tensor\"}],attrs:[{tfName:\"axis\",name:\"axis\",type:\"number\",defaultValue:0},{tfName:\"num\",name:\"num\",type:\"number\",defaultValue:0,notSupported:!0}]},{tfOpName:\"Tile\",category:\"slice_join\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"reps\",type:\"number[]\"}]},{tfOpName:\"Split\",category:\"slice_join\",inputs:[{start:0,name:\"axis\",type:\"number\",defaultValue:0},{start:1,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"num_split\",name:\"numOrSizeSplits\",type:\"number\",defaultValue:1}]},{tfOpName:\"SplitV\",category:\"slice_join\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"numOrSizeSplits\",type:\"number[]\"},{start:2,name:\"axis\",type:\"number\",defaultValue:0}]},{tfOpName:\"ScatterNd\",category:\"slice_join\",inputs:[{start:0,name:\"indices\",type:\"tensor\"},{start:1,name:\"values\",type:\"tensor\"},{start:2,name:\"shape\",type:\"number[]\"}]},{tfOpName:\"GatherNd\",category:\"slice_join\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"indices\",type:\"tensor\"}]},{tfOpName:\"SparseToDense\",category:\"slice_join\",inputs:[{start:0,name:\"sparseIndices\",type:\"tensor\"},{start:1,name:\"outputShape\",type:\"number[]\"},{start:2,name:\"sparseValues\",type:\"tensor\"},{start:3,name:\"defaultValue\",type:\"tensor\"}],attrs:[{tfName:\"validate_indices\",name:\"validateIndices\",type:\"bool\",defaultValue:!1,notSupported:!0}]}]}),D=Object.freeze({json:[{tfOpName:\"FFT\",category:\"spectral\",inputs:[{start:0,name:\"x\",type:\"tensor\"}]},{tfOpName:\"IFFT\",category:\"spectral\",inputs:[{start:0,name:\"x\",type:\"tensor\"}]},{tfOpName:\"RFFT\",category:\"spectral\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"fft_length\",type:\"number\",notSupported:!0}]},{tfOpName:\"IRFFT\",category:\"spectral\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"fft_length\",type:\"number\",notSupported:!0}]}]}),_=Object.freeze({json:[{tfOpName:\"Cast\",category:\"transformation\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"SrcT\",name:\"sdtype\",type:\"dtype\",notSupported:!0},{tfName:\"DstT\",name:\"dtype\",type:\"dtype\"}]},{tfOpName:\"ExpandDims\",category:\"transformation\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"axis\",type:\"number\"}]},{tfOpName:\"Pad\",category:\"transformation\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"padding\",type:\"number[]\"}],attrs:[{tfName:\"constant_value\",name:\"constantValue\",type:\"number\",defaultValue:0}]},{tfOpName:\"PadV2\",category:\"transformation\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"padding\",type:\"number[]\"},{start:2,name:\"constantValue\",type:\"number\",defaultValue:0}]},{tfOpName:\"Reshape\",category:\"transformation\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"shape\",type:\"number[]\"}]},{tfOpName:\"Squeeze\",category:\"transformation\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"axis\",tfDeprecatedName:\"squeeze_dims\",name:\"axis\",type:\"number[]\"}]},{tfOpName:\"SpaceToBatchND\",category:\"transformation\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"blockShape\",type:\"number[]\"},{start:2,name:\"paddings\",type:\"number[]\"}]},{tfOpName:\"BatchToSpaceND\",category:\"transformation\",inputs:[{start:0,name:\"x\",type:\"tensor\"},{start:1,name:\"blockShape\",type:\"number[]\"},{start:2,name:\"crops\",type:\"number[]\"}]},{tfOpName:\"DepthToSpace\",category:\"transformation\",inputs:[{start:0,name:\"x\",type:\"tensor\"}],attrs:[{tfName:\"block_size\",name:\"blockSize\",type:\"number\"},{tfName:\"data_format\",name:\"dataFormat\",type:\"string\"}]}]}),M=function(){function t(){var t=[y,x,b,w,C,E,N,T,R,S,I,A,k,O,D,_],e=[].concat.apply([],t.map(function(t){return t.json}));this.opMappers=e.reduce(function(t,e){return t[e.tfOpName]=e,t},{})}return Object.defineProperty(t,\"Instance\",{get:function(){return this._instance||(this._instance=new this)},enumerable:!0,configurable:!0}),t.prototype.transformGraph=function(t){var e=this,n=[],r=[],o=t.node.reduce(function(t,o){return t[o.name]=e.mapNode(o),\"Placeholder\"===o.op&&n.push(t[o.name]),\"Const\"===o.op&&r.push(t[o.name]),t},{}),a=[],i=[],s=Object.keys(o);return s.forEach(function(t){var e=o[t];e.inputNames.forEach(function(t){var n=f(t)[0];e.inputs.push(o[n]),o[n].children.push(e)}),0===e.inputs.length&&a.push(e)}),s.forEach(function(t){var e=o[t];0===e.children.length&&i.push(e)}),{nodes:o,inputs:a,outputs:i,weights:r,placeholders:n}},t.prototype.mapNode=function(t){var e=p(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});var n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map(function(t){return t.startsWith(\"^\")?t.substr(1):t}),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(function(t,e){return t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t},{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(function(e,n){var r=n.type,o=void 0;switch(n.type){case\"string\":void 0===(o=P(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(o=P(t.attr,n.tfDeprecatedName,n.defaultValue));break;case\"string[]\":void 0===(o=H(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(o=H(t.attr,n.tfDeprecatedName,n.defaultValue));break;case\"number\":void 0===(o=L(t.attr,n.tfName,n.defaultValue||0))&&n.tfDeprecatedName&&(o=L(t.attr,n.tfDeprecatedName,n.defaultValue));break;case\"number[]\":void 0===(o=G(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(o=G(t.attr,n.tfDeprecatedName,n.defaultValue));break;case\"bool\":void 0===(o=B(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(o=B(t.attr,n.tfDeprecatedName,n.defaultValue));break;case\"bool[]\":void 0===(o=$(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(o=$(t.attr,n.tfDeprecatedName,n.defaultValue));break;case\"shape\":void 0===(o=j(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(o=j(t.attr,n.tfDeprecatedName,n.defaultValue));break;case\"shape[]\":void 0===(o=q(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(o=q(t.attr,n.tfDeprecatedName,n.defaultValue));break;case\"dtype\":void 0===(o=z(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(o=z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case\"dtype[]\":void 0===(o=W(t.attr,n.tfName,n.defaultValue))&&n.tfDeprecatedName&&(o=W(t.attr,n.tfDeprecatedName,n.defaultValue));break;case\"tensor\":case\"tensors\":break;default:throw new Error(\"Unsupported param type: \"+n.type+\" for op: \"+t.op)}return e[n.name]={value:o,type:r},e},{})),n},t}();function F(e,n){var r=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){var n=i.ENV.global;if(void 0!==n.atob)return n.atob(e);if(void 0!==t)return new t(e,\"base64\").toString();throw new Error(\"Unable to decode base64 in this environment. Missing built-in atob() or Buffer()\")}(e);return n?r:r.toLowerCase()}function P(t,e,n,r){void 0===r&&(r=!1);var o=t[e];return null!=o?F(o.s,r):n}function B(t,e,n){var r=t[e];return r?r.b:n}function L(t,e,n){var r=t[e]||{},o=null!=r.i?r.i:null!=r.f?r.f:n;return\"number\"==typeof o?o:parseInt(o,10)}function V(t){switch(\"string\"==typeof t&&(t=r[t]),t){case r.DT_FLOAT:return\"float32\";case r.DT_INT32:return\"int32\";case r.DT_BOOL:return\"bool\";case r.DT_DOUBLE:return\"float32\";case r.DT_STRING:return\"string\";default:return null}}function z(t,e,n){var r=t[e];return r&&r.type?V(r.type):n}function W(t,e,n){var r=t[e];return r&&r.list&&r.list.type?r.list.type.map(function(t){return V(t)}):n}function U(t){if(!t.unknownRank)return null!=t.dim?t.dim.map(function(t){return\"number\"==typeof t.size?t.size:parseInt(t.size,10)}):[]}function j(t,e,n){var r=t[e];return r&&r.shape?U(r.shape):n}function G(t,e,n){var r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(function(t){return\"number\"==typeof t?t:parseInt(t,10)}):n}function H(t,e,n,r){void 0===r&&(r=!1);var o=t[e];return o&&o.list&&o.list.s?o.list.s.map(function(t){return F(t,r)}):n}function q(t,e,n){var r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map(function(t){return U(t)}):n}function $(t,e,n){var r=t[e];return r&&r.list&&r.list.b?r.list.b:n}var K=function(){function t(t,e,n){var r=this;this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map(function(t){return r.getInput(t)}),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(function(t,e){return t[e]=r.getAttr(e),t},{}))}return t.prototype.getInput=function(t){return h(t,this.tensorMap,this.context)},t.prototype.getAttr=function(t,e){var n=this.node.rawAttrs[t];if(null!=n.tensor)return h(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return L(this.node.rawAttrs,t,e);if(null!=n.s)return P(this.node.rawAttrs,t,e);if(null!=n.b)return B(this.node.rawAttrs,t,e);if(null!=n.shape)return j(this.node.rawAttrs,t,e);if(null!=n.type)return z(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return G(this.node.rawAttrs,t,e);if(null!=n.list.s)return H(this.node.rawAttrs,t,e);if(null!=n.list.shape)return q(this.node.rawAttrs,t,e);if(null!=n.list.b)return $(this.node.rawAttrs,t,e);if(null!=n.list.type)return W(this.node.rawAttrs,t,e)}return e},t}(),X=function(t,e,n){switch(t.op){case\"BiasAdd\":case\"AddV2\":case\"Add\":return[Object(i.add)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"AddN\":return[Object(i.addN)(d(\"tensors\",t,e,n))];case\"FloorMod\":case\"Mod\":return[Object(i.mod)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"Mul\":return[Object(i.mul)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"RealDiv\":case\"Div\":return[Object(i.div)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"FloorDiv\":return[Object(i.floorDiv)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"Sub\":return[Object(i.sub)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"Minimum\":return[Object(i.minimum)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"Maximum\":return[Object(i.maximum)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"Pow\":return[Object(i.pow)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"SquaredDifference\":return[Object(i.squaredDifference)(d(\"a\",t,e,n),d(\"b\",t,e,n))];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}},Y=function(t,e,n){switch(t.op){case\"Abs\":case\"ComplexAbs\":return[Object(i.abs)(d(\"x\",t,e,n))];case\"Acos\":return[Object(i.acos)(d(\"x\",t,e,n))];case\"Acosh\":return[Object(i.acosh)(d(\"x\",t,e,n))];case\"Asin\":return[Object(i.asin)(d(\"x\",t,e,n))];case\"Asinh\":return[Object(i.asinh)(d(\"x\",t,e,n))];case\"Atan\":return[Object(i.atan)(d(\"x\",t,e,n))];case\"Atan2\":return[Object(i.atan2)(d(\"x\",t,e,n),d(\"y\",t,e,n))];case\"Atanh\":return[Object(i.atanh)(d(\"x\",t,e,n))];case\"Ceil\":return[Object(i.ceil)(d(\"x\",t,e,n))];case\"Complex\":return[Object(i.complex)(d(\"real\",t,e,n),d(\"imag\",t,e,n))];case\"Cos\":return[Object(i.cos)(d(\"x\",t,e,n))];case\"Cosh\":return[Object(i.cosh)(d(\"x\",t,e,n))];case\"Elu\":return[Object(i.elu)(d(\"x\",t,e,n))];case\"Erf\":return[Object(i.erf)(d(\"x\",t,e,n))];case\"Exp\":return[Object(i.exp)(d(\"x\",t,e,n))];case\"Expm1\":return[Object(i.expm1)(d(\"x\",t,e,n))];case\"Floor\":return[Object(i.floor)(d(\"x\",t,e,n))];case\"Log\":return[Object(i.log)(d(\"x\",t,e,n))];case\"Log1p\":return[Object(i.log1p)(d(\"x\",t,e,n))];case\"Imag\":return[Object(i.imag)(d(\"x\",t,e,n))];case\"Neg\":return[Object(i.neg)(d(\"x\",t,e,n))];case\"Reciprocal\":return[Object(i.reciprocal)(d(\"x\",t,e,n))];case\"Real\":return[Object(i.real)(d(\"x\",t,e,n))];case\"Relu\":return[Object(i.relu)(d(\"x\",t,e,n))];case\"Round\":return[Object(i.round)(d(\"x\",t,e,n))];case\"Selu\":return[Object(i.selu)(d(\"x\",t,e,n))];case\"Sigmoid\":return[Object(i.sigmoid)(d(\"x\",t,e,n))];case\"Sin\":return[Object(i.sin)(d(\"x\",t,e,n))];case\"Sign\":return[Object(i.sign)(d(\"x\",t,e,n))];case\"Sinh\":return[Object(i.sinh)(d(\"x\",t,e,n))];case\"Softplus\":return[Object(i.softplus)(d(\"x\",t,e,n))];case\"Sqrt\":return[Object(i.sqrt)(d(\"x\",t,e,n))];case\"Square\":return[Object(i.square)(d(\"x\",t,e,n))];case\"Tanh\":return[Object(i.tanh)(d(\"x\",t,e,n))];case\"Tan\":return[Object(i.tan)(d(\"x\",t,e,n))];case\"Relu6\":case\"ClipByValue\":return[Object(i.clipByValue)(d(\"x\",t,e,n),d(\"clipValueMin\",t,e,n),d(\"clipValueMax\",t,e,n))];case\"Rsqrt\":return[Object(i.rsqrt)(h(t.inputNames[0],e,n))];case\"Prod\":return[Object(i.prod)(d(\"x\",t,e,n),d(\"axes\",t,e,n))];case\"LeakyRelu\":return[Object(i.leakyRelu)(d(\"x\",t,e,n),d(\"alpha\",t,e,n))];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}},Q=function(){function t(e,n,r,o,a,i,s){this.name=e,this.dtype=n,this.maxSize=r,this.elementShape=o,this.identicalElementShapes=a,this.dynamicSize=i,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.id=t.nextId++}return Object.defineProperty(t.prototype,\"closed\",{get:function(){return this.closed_},enumerable:!0,configurable:!0}),t.prototype.clearAndClose=function(){this.tensors.forEach(function(t){return t.tensor.dispose()}),this.tensors=[],this.closed_=!0},t.prototype.size=function(){return this.tensors.length},t.prototype.read=function(t){if(this.closed_)throw new Error(\"TensorArray \"+this.name+\" has already been closed.\");if(t<0||t>=this.tensors.length)throw new Error(\"Tried to read from index \"+t+\", but array size is: \"+this.tensors.length);var e=this.tensors[t];if(e.cleared)throw new Error(\"TensorArray \"+this.name+\": Could not read index \"+t+\" twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).\");return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor},t.prototype.readMany=function(t){var e=this;return t.map(function(t){return e.read(t)})},t.prototype.write=function(t,e){if(this.closed_)throw new Error(\"TensorArray \"+this.name+\" has already been closed.\");if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(\"Tried to write to index \"+t+\", but array is not resizeable and size is: \"+this.maxSize);var n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(\"TensorArray \"+this.name+\": Could not write to TensorArray index \"+t+\",\\n          because the value dtype is \"+e.dtype+\", but TensorArray dtype is \"+this.dtype+\".\");if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),this.assertShapesMatchAllowUndefinedSize(this.elementShape,e.shape,\"TensorArray \"+this.name+\": Could not write to TensorArray index \"+t+\".\"),n&&n.read)throw new Error(\"TensorArray \"+this.name+\": Could not write to TensorArray index \"+t+\", because it has already been read.\");if(n&&n.written)throw new Error(\"TensorArray \"+this.name+\": Could not write to TensorArray index \"+t+\", because it has already been written.\");n.tensor=e,n.written=!0,this.tensors[t]=n},t.prototype.writeMany=function(t,e){var n=this;if(t.length!==e.length)throw new Error(\"TensorArray \"+this.name+\": could not write multiple tensors,because the index size: \"+t.length+\" is not the same as tensors size: \"+e.length+\".\");t.forEach(function(t,r){return n.write(t,e[r])})},t.prototype.gather=function(t,e){if(e&&e!==this.dtype)throw new Error(\"TensorArray dtype is \"+this.dtype+\" but gather requested dtype \"+e);if(!t){t=[];for(var n=0;n<this.size();n++)t.push(n)}if(0===t.length)return Object(i.tensor)([],[0].concat(this.elementShape));var r=this.readMany(t);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,r[0].shape,\"TensorArray shape mismatch: \"),Object(i.stack)(r,0)},t.prototype.concat=function(t){if(t&&t!==this.dtype)throw new Error(\"TensorArray dtype is \"+this.dtype+\" but concat requested dtype \"+t);if(0===this.size())return Object(i.tensor)([],[0].concat(this.elementShape));for(var e=[],n=0;n<this.size();n++)e.push(n);var r=this.readMany(e);return this.assertShapesMatchAllowUndefinedSize(this.elementShape,r[0].shape,\"TensorArray shape mismatch: tensor array shape (\"+this.elementShape+\") vs first tensor shape (\"+r[0].shape+\")\"),Object(i.concat)(r,0)},t.prototype.scatter=function(t,e){if(e.dtype!==this.dtype)throw new Error(\"TensorArray dtype is \"+this.dtype+\" but tensor has dtype \"+e.dtype);if(t.length!==e.shape[0])throw new Error(\"Expected len(indices) == tensor.shape[0], but saw: \"+t.length+\" vs. \"+e.shape[0]);var n=Math.max.apply(Math,t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(\"Max index must be < array size (\"+n+\"  vs. \"+this.maxSize+\")\");this.writeMany(t,Object(i.unstack)(e,0))},t.prototype.split=function(t,e){var n=this;if(e.dtype!==this.dtype)throw new Error(\"TensorArray dtype is \"+this.dtype+\" but tensor has dtype \"+e.dtype);var r=0,o=t.map(function(t){return r+=t});if(r!==e.shape[0])throw new Error(\"Expected sum of lengths to be equal to\\n          tensor.shape[0], but sum of lengths is\\n        \"+r+\", and tensor's shape is: \"+e.shape);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(\"TensorArray's size is not equal to the size of lengths (\"+this.maxSize+\" vs. \"+t.length+\"), and the TensorArray is not marked as dynamically resizeable\");var a=0===r?0:e.size/r,s=[];Object(i.tidy)(function(){e=e.reshape([1,r,a]);for(var u=0;u<t.length;++u){var c=[0,0===u?0:o[u-1],0],l=[1,t[u],a];s[u]=Object(i.slice)(e,c,l).reshape(n.elementShape)}return s});for(var u=[],c=0;c<t.length;c++)u[c]=c;this.writeMany(u,s)},t.prototype.assertShapesMatchAllowUndefinedSize=function(t,e,n){void 0===n&&(n=\"\"),i.util.assert(this.shapesEqualAllowUndefinedSize(t,e),function(){return n+\" Shapes \"+t+\" and \"+e+\" must match\"})},t.prototype.shapesEqualAllowUndefinedSize=function(t,e){if(t.length!==e.length)return!1;for(var n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0},t.nextId=0,t}();var J=function(t,e,n){var r,o;switch(t.op){case\"Conv1D\":var a=d(\"stride\",t,e,n),s=d(\"pad\",t,e,n),u=d(\"dataFormat\",t,e,n).toUpperCase(),c=d(\"dilation\",t,e,n);return[Object(i.conv1d)(d(\"x\",t,e,n),d(\"filter\",t,e,n),a,s,u,c)];case\"Conv2D\":a=d(\"strides\",t,e,n),s=d(\"pad\",t,e,n),u=d(\"dataFormat\",t,e,n).toUpperCase();var l=d(\"dilations\",t,e,n);return[Object(i.conv2d)(d(\"x\",t,e,n),d(\"filter\",t,e,n),[a[1],a[2]],s,u,[l[1],l[2]])];case\"_FusedConv2D\":var p=(r=d(\"fusedOps\",t,e,n))[0],h=r[1],f=\"biasadd\"===p,m=\"prelu\"===h,v=\"fusedbatchnorm\"===p,g=d(\"numArgs\",t,e,n);if(f){if(m&&2!==g)throw new Error(\"Fused Conv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.\");if(!m&&1!==g)throw new Error(\"Fused Conv2d with BiasAdd must have one extra argument: bias.\")}if(v)throw new Error(\"Fused Conv2d with FusedBatchNorm is not supported.\");a=d(\"strides\",t,e,n),s=d(\"pad\",t,e,n),u=d(\"dataFormat\",t,e,n).toUpperCase(),l=d(\"dilations\",t,e,n);var y=(o=d(\"args\",t,e,n))[0],x=o[1];return[i.fused.conv2d({x:d(\"x\",t,e,n),filter:d(\"filter\",t,e,n),strides:[a[1],a[2]],pad:s,dataFormat:u,dilations:[l[1],l[2]],bias:y,activation:h,preluActivationWeights:x})];case\"Conv2DBackpropInput\":case\"Conv2dTranspose\":var b=d(\"outputShape\",t,e,n);return a=d(\"strides\",t,e,n),s=d(\"pad\",t,e,n),[Object(i.conv2dTranspose)(d(\"x\",t,e,n),d(\"filter\",t,e,n),b,[a[1],a[2]],s)];case\"DepthwiseConv2dNative\":case\"DepthwiseConv2d\":return a=d(\"strides\",t,e,n),s=d(\"pad\",t,e,n),l=d(\"dilations\",t,e,n),u=d(\"dataFormat\",t,e,n).toUpperCase(),[Object(i.depthwiseConv2d)(d(\"input\",t,e,n),d(\"filter\",t,e,n),[a[1],a[2]],s,u,[l[1],l[2]])];case\"Conv3D\":return a=d(\"strides\",t,e,n),s=d(\"pad\",t,e,n),u=d(\"dataFormat\",t,e,n).toUpperCase(),l=d(\"dilations\",t,e,n),[Object(i.conv3d)(d(\"x\",t,e,n),d(\"filter\",t,e,n),[a[1],a[2],a[3]],s,u,[l[1],l[2],l[3]])];case\"AvgPool\":a=d(\"strides\",t,e,n),s=d(\"pad\",t,e,n);var w=d(\"kernelSize\",t,e,n);return[Object(i.avgPool)(d(\"x\",t,e,n),[w[1],w[2]],[a[1],a[2]],s)];case\"MaxPool\":return a=d(\"strides\",t,e,n),s=d(\"pad\",t,e,n),w=d(\"kernelSize\",t,e,n),[Object(i.maxPool)(d(\"x\",t,e,n),[w[1],w[2]],[a[1],a[2]],s)];case\"AvgPool3D\":return a=d(\"strides\",t,e,n),s=d(\"pad\",t,e,n),w=d(\"kernelSize\",t,e,n),[Object(i.avgPool3d)(d(\"x\",t,e,n),[w[1],w[2],w[3]],[a[1],a[2],a[3]],s)];case\"MaxPool3D\":return a=d(\"strides\",t,e,n),s=d(\"pad\",t,e,n),w=d(\"kernelSize\",t,e,n),[Object(i.maxPool3d)(d(\"x\",t,e,n),[w[1],w[2],w[3]],[a[1],a[2],a[3]],s)];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}},Z=function(t,e,n){switch(t.op){case\"Fill\":var r=d(\"shape\",t,e,n),o=d(\"dtype\",t,e,n),a=d(\"value\",t,e,n);return[Object(i.fill)(r,a,o)];case\"LinSpace\":var s=d(\"start\",t,e,n),u=d(\"stop\",t,e,n),c=d(\"num\",t,e,n);return[Object(i.linspace)(s,u,c)];case\"Multinomial\":var l=d(\"logits\",t,e,n),p=d(\"numSamples\",t,e,n),h=d(\"seed\",t,e,n);return[Object(i.multinomial)(l,p,h)];case\"OneHot\":var f=d(\"indices\",t,e,n),m=d(\"depth\",t,e,n),v=d(\"onValue\",t,e,n),g=d(\"offValue\",t,e,n);return[Object(i.oneHot)(f,m,v,g)];case\"Ones\":return[Object(i.ones)(d(\"shape\",t,e,n),d(\"dtype\",t,e,n))];case\"OnesLike\":return[Object(i.onesLike)(d(\"x\",t,e,n))];case\"RandomUniform\":return[Object(i.randomUniform)(d(\"shape\",t,e,n),d(\"minval\",t,e,n),d(\"maxval\",t,e,n),d(\"dtype\",t,e,n))];case\"Range\":s=d(\"start\",t,e,n);var y=d(\"stop\",t,e,n),x=d(\"step\",t,e,n);return[Object(i.range)(s,y,x,d(\"dtype\",t,e,n))];case\"TruncatedNormal\":r=d(\"shape\",t,e,n);var b=d(\"mean\",t,e,n),w=d(\"stdDev\",t,e,n);return h=d(\"seed\",t,e,n),[Object(i.truncatedNormal)(r,b,w,d(\"dtype\",t,e,n),h)];case\"Zeros\":return[Object(i.zeros)(d(\"shape\",t,e,n),d(\"dtype\",t,e,n))];case\"ZerosLike\":return[Object(i.zerosLike)(d(\"x\",t,e,n))];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}};var tt=function(t,e,n){switch(t.op){case\"TopKV2\":var r=d(\"x\",t,e,n),o=d(\"k\",t,e,n),a=d(\"sorted\",t,e,n),s=Object(i.topk)(r,o,a);return[s.values,s.indices];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}},et=function(t,e,n){switch(t.op){case\"Const\":return e[t.name];case\"PlaceholderWithDefault\":var r=d(\"default\",t,e,n);return[h(t.name,e,n)||r];case\"Placeholder\":return[h(t.name,e,n)];case\"Identity\":case\"StopGradient\":case\"FakeQuantWithMinMaxVars\":return[d(\"x\",t,e,n).clone()];case\"IdentityN\":return d(\"x\",t,e,n).map(function(t){return t.clone()});case\"Snapshot\":return[d(\"x\",t,e,n).clone()];case\"Shape\":return[Object(i.tensor1d)(d(\"x\",t,e,n).shape,\"int32\")];case\"ShapeN\":return d(\"x\",t,e,n).map(function(t){return Object(i.tensor1d)(t.shape)});case\"Size\":return[Object(i.scalar)(d(\"x\",t,e,n).size,\"int32\")];case\"Rank\":return[Object(i.scalar)(d(\"x\",t,e,n).rank,\"int32\")];case\"NoOp\":return[];case\"Print\":var o=d(\"x\",t,e,n),a=d(\"data\",t,e,n),s=d(\"message\",t,e,n),u=d(\"summarize\",t,e,n);console.warn(\"The graph has a tf.print() operation,usually used for debugging, which slows down performance.\"),console.log(s);for(var c=0;c<a.length;c++)console.log(Array.prototype.slice.call(a[c].dataSync()).slice(0,u));return[o];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}},nt=function(t,e,n){switch(t.op){case\"ResizeBilinear\":var r=d(\"images\",t,e,n),o=d(\"size\",t,e,n),a=d(\"alignCorners\",t,e,n);return[i.image.resizeBilinear(r,[o[0],o[1]],a)];case\"ResizeNearestNeighbor\":return r=d(\"images\",t,e,n),o=d(\"size\",t,e,n),a=d(\"alignCorners\",t,e,n),[i.image.resizeNearestNeighbor(r,[o[0],o[1]],a)];case\"CropAndResize\":var s=d(\"image\",t,e,n),u=d(\"boxes\",t,e,n),c=d(\"boxInd\",t,e,n),l=d(\"cropSize\",t,e,n),p=d(\"method\",t,e,n),h=d(\"extrapolationValue\",t,e,n);return[i.image.cropAndResize(s,u,c,l,p,h)];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}},rt=function(t,e,n){switch(t.op){case\"Equal\":return[Object(i.equal)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"NotEqual\":return[Object(i.notEqual)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"Greater\":return[Object(i.greater)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"GreaterEqual\":return[Object(i.greaterEqual)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"Less\":return[Object(i.less)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"LessEqual\":return[Object(i.lessEqual)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"LogicalAnd\":return[Object(i.logicalAnd)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"LogicalNot\":return[Object(i.logicalNot)(d(\"a\",t,e,n))];case\"LogicalOr\":return[Object(i.logicalOr)(d(\"a\",t,e,n),d(\"b\",t,e,n))];case\"Select\":return[Object(i.where)(d(\"condition\",t,e,n),d(\"a\",t,e,n),d(\"b\",t,e,n))];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}},ot=function(t,e,n){switch(t.op){case\"BatchMatMul\":case\"BatchMatMulV2\":case\"MatMul\":return[Object(i.matMul)(d(\"a\",t,e,n),d(\"b\",t,e,n),d(\"transposeA\",t,e,n),d(\"transposeB\",t,e,n))];case\"Transpose\":return[Object(i.transpose)(d(\"x\",t,e,n),d(\"perm\",t,e,n))];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}},at=function(t,e,n){switch(t.op){case\"FusedBatchNorm\":case\"FusedBatchNormV2\":case\"FusedBatchNormV3\":return[Object(i.batchNorm)(d(\"x\",t,e,n),d(\"mean\",t,e,n),d(\"variance\",t,e,n),d(\"offset\",t,e,n),d(\"scale\",t,e,n),d(\"epsilon\",t,e,n))];case\"LRN\":return[Object(i.localResponseNormalization)(d(\"x\",t,e,n),d(\"radius\",t,e,n),d(\"bias\",t,e,n),d(\"alpha\",t,e,n),d(\"beta\",t,e,n))];case\"Softmax\":return[Object(i.softmax)(d(\"x\",t,e,n))];case\"LogSoftmax\":return[Object(i.logSoftmax)(d(\"x\",t,e,n))];case\"SparseToDense\":return[Object(i.sparseToDense)(d(\"sparseIndices\",t,e,n),d(\"outputShape\",t,e,n),d(\"sparseValues\",t,e,n),d(\"defaultValue\",t,e,n))];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}},it=function(t,e,n){switch(t.op){case\"Max\":var r=d(\"axis\",t,e,n),o=d(\"keepDims\",t,e,n);return[Object(i.max)(d(\"x\",t,e,n),r,o)];case\"Mean\":return r=d(\"axis\",t,e,n),o=d(\"keepDims\",t,e,n),[Object(i.mean)(d(\"x\",t,e,n),r,o)];case\"Min\":return r=d(\"axis\",t,e,n),o=d(\"keepDims\",t,e,n),[Object(i.min)(d(\"x\",t,e,n),r,o)];case\"Sum\":return r=d(\"axis\",t,e,n),o=d(\"keepDims\",t,e,n),[Object(i.sum)(d(\"x\",t,e,n),r,o)];case\"All\":return r=d(\"axis\",t,e,n),o=d(\"keepDims\",t,e,n),[Object(i.all)(d(\"x\",t,e,n),r,o)];case\"Any\":return r=d(\"axis\",t,e,n),o=d(\"keepDims\",t,e,n),[Object(i.any)(d(\"x\",t,e,n),r,o)];case\"ArgMax\":return r=d(\"axis\",t,e,n),[Object(i.argMax)(d(\"x\",t,e,n),r)];case\"ArgMin\":return r=d(\"axis\",t,e,n),[Object(i.argMin)(d(\"x\",t,e,n),r)];case\"Prod\":return r=d(\"axis\",t,e,n),o=d(\"keepDims\",t,e,n),[Object(i.prod)(d(\"x\",t,e,n),r,o)];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}},st=function(t,e,n){switch(t.op){case\"ConcatV2\":case\"Concat\":var r=d(\"axis\",t,e,n),o=d(\"tensors\",t,e,n);return[Object(i.concat)(o,r)];case\"GatherV2\":case\"Gather\":r=d(\"axis\",t,e,n);var a=d(\"x\",t,e,n),s=d(\"indices\",t,e,n);return[Object(i.gather)(a,s.asType(\"int32\"),r)];case\"ReverseV2\":case\"Reverse\":return r=d(\"axis\",t,e,n),a=d(\"x\",t,e,n),[Object(i.reverse)(a,r)];case\"Slice\":var u=d(\"begin\",t,e,n),c=d(\"size\",t,e,n);return[Object(i.slice)(d(\"x\",t,e,n),u,c)];case\"StridedSlice\":u=d(\"begin\",t,e,n);var l=d(\"end\",t,e,n),p=d(\"strides\",t,e,n),h=d(\"beginMask\",t,e,n),f=d(\"endMask\",t,e,n),m=d(\"ellipsisMask\",t,e,n),v=d(\"newAxisMask\",t,e,n),g=d(\"shrinkAxisMask\",t,e,n),y=d(\"x\",t,e,n);if(1===u.length&&y.shape.length>1)for(var x=1;x<y.shape.length;x++)u.push(0),l.push(y.shape[x]),p.push(p[0]);return[Object(i.stridedSlice)(y,u,l,p,h,f,m,v,g)];case\"Pack\":return Object(i.tidy)(function(){var r=d(\"axis\",t,e,n),o=d(\"tensors\",t,e,n),a=o[0].shape,s=o[0].squeeze().shape,u=o.map(function(t){var e=i.util.arraysEqual(t.shape,a);if(!e&&!i.util.arraysEqual(t.squeeze().shape,s))throw new Error(\"the input tensors shape does not match\");return e?t:t.reshape(a)});return[Object(i.stack)(u,r)]});case\"Unpack\":return Object(i.tidy)(function(){var r=d(\"axis\",t,e,n),o=d(\"tensor\",t,e,n);return Object(i.unstack)(o,r)});case\"Tile\":var b=d(\"reps\",t,e,n);return[Object(i.tile)(d(\"x\",t,e,n),b)];case\"Split\":case\"SplitV\":r=d(\"axis\",t,e,n);var w=d(\"numOrSizeSplits\",t,e,n);return Object(i.split)(d(\"x\",t,e,n),w,r);case\"ScatterNd\":s=d(\"indices\",t,e,n);var C=d(\"values\",t,e,n),E=d(\"shape\",t,e,n);return[Object(i.scatterND)(s,C,E)];case\"GatherNd\":var N=d(\"x\",t,e,n);return s=d(\"indices\",t,e,n),[Object(i.gatherND)(N,s)];case\"SparseToDense\":s=d(\"sparseIndices\",t,e,n),E=d(\"outputShape\",t,e,n);var S=d(\"sparseValues\",t,e,n),R=d(\"defaultValue\",t,e,n);return[Object(i.sparseToDense)(s,S,E,S.dtype===R.dtype?R:R.asType(S.dtype))];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}},ut=function(t,e,n){switch(t.op){case\"FFT\":return[Object(i.fft)(d(\"x\",t,e,n))];case\"IFFT\":return[Object(i.ifft)(d(\"x\",t,e,n))];case\"RFFT\":return[Object(i.rfft)(d(\"x\",t,e,n))];case\"IRFFT\":return[Object(i.irfft)(d(\"x\",t,e,n))];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}},ct=function(t,e,n){switch(t.op){case\"Cast\":return[Object(i.cast)(d(\"x\",t,e,n),d(\"dtype\",t,e,n))];case\"ExpandDims\":var r=d(\"axis\",t,e,n);return[Object(i.expandDims)(d(\"x\",t,e,n),r)];case\"Squeeze\":return r=d(\"axis\",t,e,n),[Object(i.squeeze)(d(\"x\",t,e,n),r)];case\"Reshape\":return[Object(i.reshape)(d(\"x\",t,e,n),d(\"shape\",t,e,n))];case\"PadV2\":case\"Pad\":return[Object(i.pad)(d(\"x\",t,e,n),g(d(\"padding\",t,e,n),2),d(\"constantValue\",t,e,n))];case\"SpaceToBatchND\":var o=d(\"blockShape\",t,e,n),a=g(d(\"paddings\",t,e,n),2);return[Object(i.spaceToBatchND)(d(\"x\",t,e,n),o,a)];case\"BatchToSpaceND\":o=d(\"blockShape\",t,e,n);var s=g(d(\"crops\",t,e,n),2);return[Object(i.batchToSpaceND)(d(\"x\",t,e,n),o,s)];case\"DepthToSpace\":var u=d(\"blockSize\",t,e,n),c=d(\"dataFormat\",t,e,n).toUpperCase();return[Object(i.depthToSpace)(d(\"x\",t,e,n),u,c)];default:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}};function lt(t,e,n){var r=function(t,e,n){switch(t.category){case\"arithmetic\":return X(t,e,n);case\"basic_math\":return Y(t,e,n);case\"control\":return function(t,e,n){return u(this,void 0,void 0,function(){var r,o,a,s,u,l,p,f,m,v,g,y,x,b,w,C,E,N,S,R,T,I,A,k,O,D,_,M,F,P,B,L,V,z,W;return c(this,function(c){switch(c.label){case 0:switch(t.op){case\"LoopCond\":return[3,1];case\"Switch\":return[3,2];case\"Merge\":return[3,4];case\"Enter\":return[3,5];case\"Exit\":return[3,6];case\"NextIteration\":return[3,7];case\"TensorArrayV3\":return[3,8];case\"TensorArrayWriteV3\":return[3,9];case\"TensorArrayReadV3\":return[3,10];case\"TensorArrayGatherV3\":return[3,11];case\"TensorArrayScatterV3\":return[3,12];case\"TensorArrayConcatV3\":return[3,13];case\"TensorArraySplitV3\":return[3,14];case\"TensorArraySizeV3\":return[3,15];case\"TensorArrayCloseV3\":return[3,16]}return[3,17];case 1:return[2,[d(\"pred\",t,e,n).clone()]];case 2:return r=d(\"pred\",t,e,n),o=d(\"data\",t,e,n),[4,r.data()];case 3:return[2,c.sent()[0]?[void 0,o.clone()]:[o.clone(),void 0]];case 4:return[2,(a=t.inputNames.find(function(t){return void 0!==h(t,e,n)}))?[h(a,e,n).clone()]:void 0];case 5:return s=d(\"frameName\",t,e,n),u=d(\"tensor\",t,e,n),n.enterFrame(s),[2,[u.clone()]];case 6:return l=d(\"tensor\",t,e,n),n.exitFrame(),[2,[l.clone()]];case 7:return p=d(\"tensor\",t,e,n),n.nextIteration(),[2,[p.clone()]];case 8:return f=d(\"size\",t,e,n),m=d(\"dtype\",t,e,n),v=d(\"elementShape\",t,e,n),g=d(\"dynamicSize\",t,e,n),y=d(\"clearAfterRead\",t,e,n),x=d(\"identicalElementShapes\",t,e,n),b=d(\"name\",t,e,n),w=new Q(b,m,f,v,x,g,y),n.addTensorArray(w),[2,[Object(i.scalar)(w.id),Object(i.scalar)(1)]];case 9:return C=d(\"tensorArrayId\",t,e,n),E=d(\"index\",t,e,n),N=d(\"tensor\",t,e,n),n.getTensorArray(C).write(E,N),[2,[Object(i.scalar)(1)]];case 10:return S=d(\"tensorArrayId\",t,e,n),R=d(\"index\",t,e,n),[2,[n.getTensorArray(S).read(R)]];case 11:return T=d(\"tensorArrayId\",t,e,n),I=d(\"indices\",t,e,n),A=d(\"dtype\",t,e,n),[2,[n.getTensorArray(T).gather(I,A)]];case 12:return k=d(\"tensorArrayId\",t,e,n),O=d(\"indices\",t,e,n),D=d(\"tensor\",t,e,n),n.getTensorArray(k).scatter(O,D),[2,[Object(i.scalar)(1)]];case 13:return _=d(\"tensorArrayId\",t,e,n),M=n.getTensorArray(_),F=d(\"dtype\",t,e,n),[2,[M.concat(F)]];case 14:return P=d(\"tensorArrayId\",t,e,n),B=d(\"tensor\",t,e,n),L=d(\"lengths\",t,e,n),n.getTensorArray(P).split(L,B),[2,[Object(i.scalar)(1)]];case 15:return V=d(\"tensorArrayId\",t,e,n),z=n.getTensorArray(V),[2,[Object(i.scalar)(z.size(),\"int32\")]];case 16:return W=d(\"tensorArrayId\",t,e,n),n.getTensorArray(W).clearAndClose(),[2,[]];case 17:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}})})}(t,e,n);case\"convolution\":return J(t,e,n);case\"creation\":return Z(t,e,n);case\"dynamic\":return function(t,e,n){return u(this,void 0,void 0,function(){var r,o,a,s,u;return c(this,function(c){switch(c.label){case 0:switch(t.op){case\"NonMaxSuppressionV3\":case\"NonMaxSuppressionV2\":return[3,1];case\"Where\":return[3,3];case\"ListDiff\":return[3,5]}return[3,6];case 1:return r=d(\"boxes\",t,e,n),o=d(\"scores\",t,e,n),a=d(\"maxOutputSize\",t,e,n),s=d(\"iouThreshold\",t,e,n),u=d(\"scoreThreshold\",t,e,n),[4,i.image.nonMaxSuppressionAsync(r,o,a,s,u)];case 2:return[2,[c.sent()]];case 3:return[4,Object(i.whereAsync)(d(\"condition\",t,e,n))];case 4:return[2,[c.sent()]];case 5:return[2,Object(i.setdiff1dAsync)(d(\"x\",t,e,n),d(\"y\",t,e,n))];case 6:throw TypeError(\"Node type \"+t.op+\" is not implemented\")}})})}(t,e,n);case\"evaluation\":return tt(t,e,n);case\"image\":return nt(t,e,n);case\"graph\":return et(t,e,n);case\"logical\":return rt(t,e,n);case\"matrices\":return ot(t,e,n);case\"normalization\":return at(t,e,n);case\"reduction\":return it(t,e,n);case\"slice_join\":return st(t,e,n);case\"spectral\":return ut(t,e,n);case\"transformation\":return ct(t,e,n);case\"custom\":var r=p(t.op);if(r&&r.customExecutor)return r.customExecutor(new K(t,e,n));throw TypeError(\"Custom op \"+t.op+\" is not registered.\");default:throw TypeError(\"Unknown op '\"+t.op+\"'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()\")}}(t,e,n);return r instanceof Promise?r.then(function(t){return[].concat(t)}):[].concat(r)}var pt=function(){function t(t,e){this.weightMap=t,this.tensorArrayMap=e,this.rootContext={id:0,frameName:\"\",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}return t.prototype.newFrame=function(t,e){return{id:t,frameName:e,iterationId:0}},Object.defineProperty(t.prototype,\"currentContext\",{get:function(){return this.contexts},set:function(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"currentContextId\",{get:function(){return this._currentContextIds[0]},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"currentContextIds\",{get:function(){return this._currentContextIds},enumerable:!0,configurable:!0}),t.prototype.generateCurrentContextIds=function(){for(var t=[],e=0;e<this.contexts.length-1;e++){var n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(\"\"),this._currentContextIds=t},t.prototype.contextIdforContexts=function(t){return t?t.map(function(t){return 0===t.id&&0===t.iterationId?\"\":t.frameName+\"-\"+t.iterationId}).join(\"/\"):\"\"},t.prototype.enterFrame=function(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))},t.prototype.exitFrame=function(){if(!(this.contexts&&this.contexts.length>1))throw new Error(\"Cannot exit frame, the context is empty\");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()},t.prototype.nextIteration=function(){if(!(this.contexts&&this.contexts.length>0))throw new Error(\"Cannot increase frame iteration, the context is empty\");this.contexts=this.contexts.slice(),this.lastId++;var t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))},t.prototype.getWeight=function(t){return this.weightMap[t]},t.prototype.addTensorArray=function(t){this.tensorArrayMap[t.id]=t},t.prototype.getTensorArray=function(t){return this.tensorArrayMap[t]},t}();function dt(t,e,n){for(var r=new Set,o=[],a=null,i=null,s=new Set,u=e.slice();u.length>0;){var c=u.pop();(mt(c)||vt(c))&&null==a&&(i=(a=c).children.map(function(t){return t.name}).filter(function(t){return r.has(t)})),r.add(c.name),null==n[c.name]&&null==t[c.name]&&(0!==c.inputs.length?c.inputs.forEach(function(t){s.has(t.name)||(s.add(t.name),u.push(t))}):o.push(c.name))}return{inputs:t,outputs:e,usedNodes:r,missingInputs:o,dynamicNode:a,syncInputs:i}}var ht=[\"Switch\",\"Merge\",\"Enter\",\"Exit\",\"NextIteration\"],ft=[\"NonMaxSuppressionV2\",\"NonMaxSuppressionV3\",\"Where\"];function mt(t){return ht.indexOf(t.op)>=0}function vt(t){return ft.indexOf(t.op)>=0}var gt=function(){function t(t){this.graph=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=\",\",this.placeholders=t.placeholders,this._outputs=t.outputs}return Object.defineProperty(t.prototype,\"weightMap\",{get:function(){return this._weightMap},set:function(t){var e=Object.keys(t).map(function(e){return t[e].map(function(t){return t.id})});this.weightIds=[].concat.apply([],e),this._weightMap=t},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"inputs\",{get:function(){return this.placeholders.map(function(t){return{name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"outputs\",{get:function(){return this._outputs.map(function(t){return{name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0}})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"inputNodes\",{get:function(){return this.placeholders.map(function(t){return t.name})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"outputNodes\",{get:function(){return this.outputs.map(function(t){return t.name})},enumerable:!0,configurable:!0}),t.prototype.getCompilationKey=function(t,e){var n=t.map(function(t){return t.name}).sort(),r=e.map(function(t){return t.name}).sort();return n.join(this.SEPERATOR)+\"--\"+r.join(this.SEPERATOR)},t.prototype.compile=function(t,e){var n=dt(t,e,this.weightMap),r=n.missingInputs,o=n.dynamicNode,a=n.syncInputs;if(null!=o)throw new Error(\"This execution contains the node '\"+o.name+\"', which has the dynamic op '\"+o.op+\"'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [\"+a+\"]\");if(r.length>0){var i=e.map(function(t){return t.name}),s=Object.keys(t);throw new Error(\"Cannot compute the outputs [\"+i+\"] from the provided inputs [\"+s+\"]. Missing the following inputs: [\"+r+\"]\")}return function(t,e,n){var r=n.usedNodes,o=n.inputs,a=[];Object.keys(o).map(function(e){return t.nodes[e]}).forEach(function(t){r.has(t.name)&&a.push(t)}),t.weights.forEach(function(t){r.has(t.name)&&a.push(t)});for(var i=new Set,s=[];a.length>0;){var u=a.pop();i.add(u.name),e[u.name]||s.push(u),u.children.forEach(function(t){!i.has(t.name)&&r.has(t.name)&&t.inputs.every(function(t){return i.has(t.name)})&&a.push(t)})}return s}(this.graph,this.weightMap,n)},t.prototype.execute=function(t,e){var n=this,r=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),this.checkOutputs(e);var o=r.map(function(t){return n.graph.nodes[t]}),a=e.map(function(t){return n.graph.nodes[v(t)[0]]}),u=this.getCompilationKey(o,a),c=this.compiledMap.get(u);null==c&&(c=this.compile(t,a),this.compiledMap.set(u,c));var l={};return Object(i.tidy)(function(){var r=new pt(n._weightMap,l),o=s({},n.weightMap);Object.keys(t).forEach(function(e){o[e]=[t[e]]});for(var a=n.getFrozenTensorIds(o),i={},u=0;u<c.length;u++){var p=c[u];if(!o[p.name]){var d=lt(p,o,r);if(d instanceof Promise)throw new Error(\"The execution of the op '\"+p.op+\"' returned a promise. Please use model.executeAsync() instead.\");o[p.name]=d,n.checkTensorForDisposal(p.name,p,o,r,a,e,i)}}return e.map(function(t){return h(t,o,r)})})},t.prototype.getFrozenTensorIds=function(t){var e=[].concat.apply([],Object.keys(t).map(function(e){return t[e]}).map(function(t){return t.map(function(t){return t.id})}));return new Set(e)},t.prototype.checkTensorForDisposal=function(t,e,n,r,o,a,i){\"control\"!==e.category&&-1===a.indexOf(t)&&(n[t].forEach(function(t){null!=t&&(i[t.id]=(i[t.id]||0)+e.children.length)}),e.inputs.forEach(function(t){if(\"control\"!==t.category){var e=function(t,e,n){return e[m(t,n.currentContextId)]}(t.name,n,r);null!=e&&e.forEach(function(t){if(t&&!o.has(t.id)){var e=i[t.id];1===e?(t.dispose(),delete i[t.id]):null!=e&&i[t.id]--}})}}))},t.prototype.executeAsync=function(t,e){return u(this,void 0,void 0,function(){var n,r,o,a,i,s,u=this;return c(this,function(c){switch(c.label){case 0:return this.checkInputs(t),this.checkInputShapeAndType(t),this.checkOutputs(e),n={},r=new pt(this._weightMap,n),[4,this.executeWithControlFlow(t,r,e)];case 1:return o=c.sent(),a=e.map(function(t){return h(t,o,r)}),i=new Set(a.map(function(t){return t.id})),s=new Set(Object.keys(t).map(function(e){return t[e].id})),Object.keys(o).forEach(function(t){o[t].forEach(function(t){!t||t.isDisposed||i.has(t.id)||s.has(t.id)||-1!==u.weightIds.indexOf(t.id)||t.dispose()})}),[2,a]}})})},t.prototype.executeWithControlFlow=function(t,e,n){return u(this,void 0,void 0,function(){var r,o,a,i,u,l,p,d,f,m,g,y,x,b,w,C,E=this;return c(this,function(c){switch(c.label){case 0:r=Object.keys(t),o=r.map(function(t){return E.graph.nodes[t]}),a=n.map(function(t){return E.graph.nodes[v(t)[0]]}),i=dt(t,a,this.weightMap),u=i.usedNodes,l=i.missingInputs,p=i.dynamicNode,d=i.syncInputs,f=o.concat(this.graph.weights).map(function(t){return{node:t,contexts:e.currentContext}}),m=s({},this.weightMap),Object.keys(t).forEach(function(e){m[e]=[t[e]]}),g={},y=this.getFrozenTensorIds(m),x={},c.label=1;case 1:return f.length>0?(b=this.processStack(o,f,e,m,x,y,n,g,u),[4,Promise.all(b)]):[3,3];case 2:return c.sent(),[3,1];case 3:if(null==p&&console.warn(\"This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.\"),(w=a.filter(function(t){return!mt(t)&&!h(t.name,m,e)}).map(function(t){return t.name})).length>0)throw C=\"\",null!=p&&(C=\"Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [\"+d+\"]\"),new Error(\"Cannot compute the outputs [\"+w+\"] from the provided inputs [\"+r+\"]. Consider providing the following inputs: [\"+l+\"]. \"+C);return[2,m]}})})},t.prototype.processStack=function(t,e,n,r,o,a,i,s,u){for(var c=this,l=[],p=function(){var p=e.pop();n.currentContext=p.contexts;var m=\"\";if(\"Enter\"===p.node.op&&d(\"isConstant\",p.node,r,n)&&(m=f(p.node.name,n)[0]),-1===t.indexOf(p.node)){var v=lt(p.node,r,n);m||(m=f(p.node.name,n)[0]);var g=n.currentContext;v instanceof Promise?l.push(v.then(function(t){return r[m]=t,n.currentContext=g,c.checkTensorForDisposal(m,p.node,r,n,a,i,s),c.processChildNodes(p.node,e,n,r,o,u),t})):(r[m]=v,h.checkTensorForDisposal(m,p.node,r,n,a,i,s),h.processChildNodes(p.node,e,n,r,o,u))}else h.processChildNodes(p.node,e,n,r,o,u)},h=this;e.length>0;)p();return l},t.prototype.processChildNodes=function(t,e,n,r,o,a){t.children.forEach(function(t){var i=f(t.name,n)[0];!o[i]&&a.has(t.name)&&(\"Merge\"===t.op?t.inputNames.some(function(t){return!!h(t,r,n)})&&(o[i]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every(function(t){return!!h(t,r,n)})&&(o[i]=!0,e.push({contexts:n.currentContext,node:t})))})},t.prototype.dispose=function(){var t=this;Object.keys(this.weightMap).forEach(function(e){return t.weightMap[e].forEach(function(t){return t.dispose()})})},t.prototype.checkInputShapeAndType=function(t){var e=this;Object.keys(t).forEach(function(n){var r=t[n],o=e.graph.nodes[n];if(o.attrParams.shape&&o.attrParams.shape.value){var a=o.attrParams.shape.value,s=a.length===r.shape.length&&r.shape.every(function(t,e){return-1===a[e]||a[e]===t});i.util.assert(s,function(){return\"The shape of dict['\"+o.name+\"'] provided in model.execute(dict) must be [\"+a+\"], but was [\"+r.shape+\"]\"})}o.attrParams.dtype&&o.attrParams.dtype.value&&i.util.assert(r.dtype===o.attrParams.dtype.value,function(){return\"The dtype of dict['\"+o.name+\"'] provided in model.execute(dict) must be \"+o.attrParams.dtype.value+\", but was \"+r.dtype})})},t.prototype.checkInputs=function(t){var e=this,n=Object.keys(t).filter(function(t){return!e.graph.nodes[t]});if(n.length>0)throw new Error(\"The dict provided in model.execute(dict) has keys: [\"+n+\"] that are not part of graph\")},t.prototype.checkOutputs=function(t){var e=this;t.forEach(function(t){var n=v(t)[0];if(!e.graph.nodes[n])throw new Error(\"The output '\"+t+\"' is not found in the graph\")})},t}(),yt=\"?tfjs-format=file\",xt=\"model.json\",bt=function(){function t(t,e){void 0===e&&(e={}),this.modelUrl=t,this.loadOptions=e,this.version=\"n/a\",null==e&&(this.loadOptions={})}return Object.defineProperty(t.prototype,\"modelVersion\",{get:function(){return this.version},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"inputNodes\",{get:function(){return this.executor.inputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"outputNodes\",{get:function(){return this.executor.outputNodes},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"inputs\",{get:function(){return this.executor.inputs},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"outputs\",{get:function(){return this.executor.outputs},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,\"weights\",{get:function(){return this.executor.weightMap},enumerable:!0,configurable:!0}),t.prototype.findIOHandler=function(){var t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=i.io.browserHTTPRequest(t,this.loadOptions);else{var e=i.io.getLoadHandlers(t,this.loadOptions.onProgress);if(0===e.length)e.push(i.io.browserHTTPRequest(t,this.loadOptions));else if(e.length>1)throw new Error(\"Found more than one (\"+e.length+\") load handlers for URL '\"+[t]+\"'\");this.handler=e[0]}},t.prototype.load=function(){return u(this,void 0,void 0,function(){var t,e,n;return c(this,function(r){switch(r.label){case 0:if(this.findIOHandler(),null==this.handler.load)throw new Error(\"Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.\");return[4,this.handler.load()];case 1:return t=r.sent(),e=t.modelTopology,this.version=e.versions.producer+\".\"+e.versions.minConsumer,n=i.io.decodeWeights(t.weightData,t.weightSpecs),this.executor=new gt(M.Instance.transformGraph(e)),this.executor.weightMap=this.convertTensorMapToTensorsMap(n),[2,!0]}})})},t.prototype.predict=function(t,e){return this.execute(t,this.outputNodes)},t.prototype.normalizeInputs=function(t){if(!(t instanceof i.Tensor||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(\"Input tensor count mismatch,the graph model has \"+this.inputNodes.length+\" placeholders, while there are \"+t.length+\" input tensors.\");return this.inputNodes.reduce(function(e,n,r){return e[n]=t[r],e},{})},t.prototype.normalizeOutputs=function(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]},t.prototype.execute=function(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);var n=this.executor.execute(t,e);return n.length>1?n:n[0]},t.prototype.executeAsync=function(t,e){return u(this,void 0,void 0,function(){var n;return c(this,function(r){switch(r.label){case 0:return t=this.normalizeInputs(t),e=this.normalizeOutputs(e),[4,this.executor.executeAsync(t,e)];case 1:return[2,(n=r.sent()).length>1?n:n[0]]}})})},t.prototype.convertTensorMapToTensorsMap=function(t){return Object.keys(t).reduce(function(e,n){return e[n]=[t[n]],e},{})},t.prototype.dispose=function(){this.executor.dispose()},t}();function wt(t,e){return void 0===e&&(e={}),u(this,void 0,void 0,function(){var n;return c(this,function(r){switch(r.label){case 0:if(null==t)throw new Error(\"modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model\");return null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith(\"/\")||(t+=\"/\"),t=\"\"+t+xt+yt),[4,(n=new bt(t,e)).load()];case 1:return r.sent(),[2,n]}})})}}).call(this,n(3).Buffer)},function(t,e,n){\"use strict\";e.byteLength=function(t){return 3*t.length/4-c(t)},e.toByteArray=function(t){var e,n,r,i,s,u=t.length;i=c(t),s=new a(3*u/4-i),n=i>0?u-4:u;var l=0;for(e=0;e<n;e+=4)r=o[t.charCodeAt(e)]<<18|o[t.charCodeAt(e+1)]<<12|o[t.charCodeAt(e+2)]<<6|o[t.charCodeAt(e+3)],s[l++]=r>>16&255,s[l++]=r>>8&255,s[l++]=255&r;2===i?(r=o[t.charCodeAt(e)]<<2|o[t.charCodeAt(e+1)]>>4,s[l++]=255&r):1===i&&(r=o[t.charCodeAt(e)]<<10|o[t.charCodeAt(e+1)]<<4|o[t.charCodeAt(e+2)]>>2,s[l++]=r>>8&255,s[l++]=255&r);return s},e.fromByteArray=function(t){for(var e,n=t.length,o=n%3,a=\"\",i=[],s=0,u=n-o;s<u;s+=16383)i.push(l(t,s,s+16383>u?u:s+16383));1===o?(e=t[n-1],a+=r[e>>2],a+=r[e<<4&63],a+=\"==\"):2===o&&(e=(t[n-2]<<8)+t[n-1],a+=r[e>>10],a+=r[e>>4&63],a+=r[e<<2&63],a+=\"=\");return i.push(a),i.join(\"\")};for(var r=[],o=[],a=\"undefined\"!=typeof Uint8Array?Uint8Array:Array,i=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\",s=0,u=i.length;s<u;++s)r[s]=i[s],o[i.charCodeAt(s)]=s;function c(t){var e=t.length;if(e%4>0)throw new Error(\"Invalid string. Length must be a multiple of 4\");return\"=\"===t[e-2]?2:\"=\"===t[e-1]?1:0}function l(t,e,n){for(var o,a,i=[],s=e;s<n;s+=3)o=(t[s]<<16&16711680)+(t[s+1]<<8&65280)+(255&t[s+2]),i.push(r[(a=o)>>18&63]+r[a>>12&63]+r[a>>6&63]+r[63&a]);return i.join(\"\")}o[\"-\".charCodeAt(0)]=62,o[\"_\".charCodeAt(0)]=63},function(t,e){e.read=function(t,e,n,r,o){var a,i,s=8*o-r-1,u=(1<<s)-1,c=u>>1,l=-7,p=n?o-1:0,d=n?-1:1,h=t[e+p];for(p+=d,a=h&(1<<-l)-1,h>>=-l,l+=s;l>0;a=256*a+t[e+p],p+=d,l-=8);for(i=a&(1<<-l)-1,a>>=-l,l+=r;l>0;i=256*i+t[e+p],p+=d,l-=8);if(0===a)a=1-c;else{if(a===u)return i?NaN:1/0*(h?-1:1);i+=Math.pow(2,r),a-=c}return(h?-1:1)*i*Math.pow(2,a-r)},e.write=function(t,e,n,r,o,a){var i,s,u,c=8*a-o-1,l=(1<<c)-1,p=l>>1,d=23===o?Math.pow(2,-24)-Math.pow(2,-77):0,h=r?0:a-1,f=r?1:-1,m=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(s=isNaN(e)?1:0,i=l):(i=Math.floor(Math.log(e)/Math.LN2),e*(u=Math.pow(2,-i))<1&&(i--,u*=2),(e+=i+p>=1?d/u:d*Math.pow(2,1-p))*u>=2&&(i++,u/=2),i+p>=l?(s=0,i=l):i+p>=1?(s=(e*u-1)*Math.pow(2,o),i+=p):(s=e*Math.pow(2,p-1)*Math.pow(2,o),i=0));o>=8;t[n+h]=255&s,h+=f,s/=256,o-=8);for(i=i<<o|s,c+=o;c>0;t[n+h]=255&i,h+=f,i/=256,c-=8);t[n+h-f]|=128*m}},function(t,e){var n={}.toString;t.exports=Array.isArray||function(t){return\"[object Array]\"==n.call(t)}},function(t,e,n){(function(t){var r=void 0!==t&&t||\"undefined\"!=typeof self&&self||window,o=Function.prototype.apply;function a(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new a(o.call(setTimeout,r,arguments),clearTimeout)},e.setInterval=function(){return new a(o.call(setInterval,r,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},a.prototype.unref=a.prototype.ref=function(){},a.prototype.close=function(){this._clearFn.call(r,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},n(9),e.setImmediate=\"undefined\"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate=\"undefined\"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,n(1))},function(t,e,n){(function(t,e){!function(t,n){\"use strict\";if(!t.setImmediate){var r,o,a,i,s,u=1,c={},l=!1,p=t.document,d=Object.getPrototypeOf&&Object.getPrototypeOf(t);d=d&&d.setTimeout?d:t,\"[object process]\"==={}.toString.call(t.process)?r=function(t){e.nextTick(function(){f(t)})}:!function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage(\"\",\"*\"),t.onmessage=n,e}}()?t.MessageChannel?((a=new MessageChannel).port1.onmessage=function(t){f(t.data)},r=function(t){a.port2.postMessage(t)}):p&&\"onreadystatechange\"in p.createElement(\"script\")?(o=p.documentElement,r=function(t){var e=p.createElement(\"script\");e.onreadystatechange=function(){f(t),e.onreadystatechange=null,o.removeChild(e),e=null},o.appendChild(e)}):r=function(t){setTimeout(f,0,t)}:(i=\"setImmediate$\"+Math.random()+\"$\",s=function(e){e.source===t&&\"string\"==typeof e.data&&0===e.data.indexOf(i)&&f(+e.data.slice(i.length))},t.addEventListener?t.addEventListener(\"message\",s,!1):t.attachEvent(\"onmessage\",s),r=function(e){t.postMessage(i+e,\"*\")}),d.setImmediate=function(t){\"function\"!=typeof t&&(t=new Function(\"\"+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var o={callback:t,args:e};return c[u]=o,r(u),u++},d.clearImmediate=h}function h(t){delete c[t]}function f(t){if(l)setTimeout(f,0,t);else{var e=c[t];if(e){l=!0;try{!function(t){var e=t.callback,r=t.args;switch(r.length){case 0:e();break;case 1:e(r[0]);break;case 2:e(r[0],r[1]);break;case 3:e(r[0],r[1],r[2]);break;default:e.apply(n,r)}}(e)}finally{h(t),l=!1}}}}}(\"undefined\"==typeof self?void 0===t?this:t:self)}).call(this,n(1),n(2))},function(t,e){},function(t,e){},function(t,e){},function(t,e,n){\"use strict\";n.r(e);var r=n(0),o=n(4);\n/**\n    * @license\n    * Copyright 2019 Google LLC. All Rights Reserved.\n    * Licensed under the Apache License, Version 2.0 (the \"License\");\n    * you may not use this file except in compliance with the License.\n    * You may obtain a copy of the License at\n    *\n    * http://www.apache.org/licenses/LICENSE-2.0\n    *\n    * Unless required by applicable law or agreed to in writing, software\n    * distributed under the License is distributed on an \"AS IS\" BASIS,\n    * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    * See the License for the specific language governing permissions and\n    * limitations under the License.\n    * =============================================================================\n    */\nfunction a(t,e,n,r){return new(n||(n=Promise))(function(o,a){function i(t){try{u(r.next(t))}catch(t){a(t)}}function s(t){try{u(r.throw(t))}catch(t){a(t)}}function u(t){t.done?o(t.value):new n(function(e){e(t.value)}).then(i,s)}u((r=r.apply(t,e||[])).next())})}function i(t,e){var n,r,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:s(0),throw:s(1),return:s(2)},\"function\"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function s(a){return function(s){return function(a){if(n)throw new TypeError(\"Generator is already executing.\");for(;i;)try{if(n=1,r&&(o=2&a[0]?r.return:a[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,a[1])).done)return o;switch(r=0,o&&(a=[2&a[0],o.value]),a[0]){case 0:case 1:o=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!(o=(o=i.trys).length>0&&o[o.length-1])&&(6===a[0]||2===a[0])){i=0;continue}if(3===a[0]&&(!o||a[1]>o[0]&&a[1]<o[3])){i.label=a[1];break}if(6===a[0]&&i.label<o[1]){i.label=o[1],o=a;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(a);break}o[2]&&i.ops.pop(),i.trys.pop();continue}a=e.call(t,i)}catch(t){a=[6,t],r=0}finally{n=o=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,s])}}}var s=[[\"conv2d\",2],[\"separableConv\",1],[\"separableConv\",2],[\"separableConv\",1],[\"separableConv\",2],[\"separableConv\",1],[\"separableConv\",2],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1]],u=[8,16,32];function c(t){r.util.assert(\"number\"==typeof t,function(){return\"outputStride is not a number\"}),r.util.assert(u.indexOf(t)>=0,function(){return\"outputStride of \"+t+\" is invalid. It must be either 8, 16, or 32\"})}var l={100:[[\"conv2d\",2],[\"separableConv\",1],[\"separableConv\",2],[\"separableConv\",1],[\"separableConv\",2],[\"separableConv\",1],[\"separableConv\",2],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",2],[\"separableConv\",1]],75:[[\"conv2d\",2],[\"separableConv\",1],[\"separableConv\",2],[\"separableConv\",1],[\"separableConv\",2],[\"separableConv\",1],[\"separableConv\",2],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1],[\"separableConv\",1]],50:s,25:s};var p=function(){function t(t,e){this.PREPROCESS_DIVISOR=Object(r.scalar)(127.5),this.ONE=Object(r.scalar)(1),this.modelWeights=t,this.convolutionDefinitions=e}return t.prototype.predict=function(t,e){var n=this,o=Object(r.div)(t.toFloat(),this.PREPROCESS_DIVISOR),a=Object(r.sub)(o,this.ONE);return function(t,e){var n=1,r=1;return t.map(function(t,o){var a,i,s=t[0],u=t[1];return n===e?(a=1,i=r,r*=u):(a=u,i=1,n*=u),{blockId:o,convType:s,stride:a,rate:i,outputStride:n}})}(this.convolutionDefinitions,e).reduce(function(t,e){var r=e.blockId,o=e.stride,a=e.convType,i=e.rate;if(\"conv2d\"===a)return n.conv(t,o,r);if(\"separableConv\"===a)return n.separableConv(t,o,r,i);throw Error(\"Unknown conv type of \"+a)},a)},t.prototype.convToOutput=function(t,e){return t.conv2d(this.weights(e),1,\"same\").add(this.convBias(e,!1))},t.prototype.conv=function(t,e,n){var r=this.weights(\"Conv2d_\"+String(n));return t.conv2d(r,e,\"same\").add(this.convBias(\"Conv2d_\"+String(n))).clipByValue(0,6)},t.prototype.separableConv=function(t,e,n,r){void 0===r&&(r=1);var o=\"Conv2d_\"+String(n)+\"_depthwise\",a=\"Conv2d_\"+String(n)+\"_pointwise\";return t.depthwiseConv2D(this.depthwiseWeights(o),e,\"same\",\"NHWC\",r).add(this.depthwiseBias(o)).clipByValue(0,6).conv2d(this.weights(a),[1,1],\"same\").add(this.convBias(a)).clipByValue(0,6)},t.prototype.weights=function(t){return this.modelWeights.weights(t)},t.prototype.convBias=function(t,e){return void 0===e&&(e=!0),this.modelWeights.convBias(t,e)},t.prototype.depthwiseBias=function(t){return this.modelWeights.depthwiseBias(t)},t.prototype.depthwiseWeights=function(t){return this.modelWeights.depthwiseWeights(t)},t.prototype.dispose=function(){this.modelWeights.dispose()},t}(),d=\"https://storage.googleapis.com/tfjs-models/savedmodel/\",h={1:{url:d+\"posenet_mobilenet_100_partmap/\",architecture:l[100]},.75:{url:d+\"posenet_mobilenet_075_partmap/\",architecture:l[75]},.5:{url:d+\"posenet_mobilenet_050_partmap/\",architecture:l[50]},.25:{url:d+\"posenet_mobilenet_025_partmap/\",architecture:l[25]}};function f(t,e){return Object(r.tidy)(function(){return t.greater(Object(r.scalar)(e)).toInt()})}function m(t,e){var n=e.shape,o=n[0],a=n[1],i=n[2];return Object(r.tidy)(function(){var n=function(t){var e=t.shape[2],n=t.argMax(2).reshape([-1]);return Object(r.oneHot)(n,e)}(e),s=Object(r.range)(0,i,1,\"int32\").expandDims(1);return function(t,e){return t.mul(e)}(n.matMul(s).toInt().reshape([o,a]).add(Object(r.scalar)(1,\"int32\")),t).sub(Object(r.scalar)(1,\"int32\"))})}var v=function(){function t(t){this.graphModel=t}return t.prototype.weights=function(t){return this.getVariable(\"MobilenetV1/\"+t+\"/weights\")},t.prototype.convBias=function(t,e){return void 0===e&&(e=!0),this.getVariable(\"MobilenetV1/\"+t+\"/Conv2D_bias\")},t.prototype.depthwiseBias=function(t){return this.getVariable(\"MobilenetV1/\"+t+\"/depthwise_bias\")},t.prototype.depthwiseWeights=function(t){return this.getVariable(\"MobilenetV1/\"+t+\"/depthwise_weights\")},t.prototype.getVariable=function(t){return this.graphModel.weights[\"\"+t][0]},t.prototype.dispose=function(){this.graphModel.dispose()},t}();function g(t){return t instanceof r.Tensor?t:r.browser.fromPixels(t)}function y(t,e,n){var o=e[0],a=e[1];void 0===n&&(n=!1);var i,s,u,c,l,p,d=t.shape,h=d[0],f=d[1]/h;if(f>a/o){i=a;var m=o-(s=Math.ceil(i/f));u=0,c=0,l=Math.floor(m/2),p=o-(s+l)}else{s=o;var v=a-(i=Math.ceil(o*f));u=Math.floor(v/2),c=a-(i+u),l=0,p=0}return{resizedAndPadded:Object(r.tidy)(function(){var e;return e=n?t.reverse(1).resizeBilinear([s,i]):t.resizeBilinear([s,i]),Object(r.pad3d)(e,[[l,p],[u,c],[0,0]])}),paddedBy:[[l,p],[u,c]]}}function x(t,e,n,o){var a=e[0],i=e[1],s=n[0],u=n[1],c=o[0],l=c[0],p=c[1],d=o[1],h=d[0],f=d[1];return Object(r.tidy)(function(){return function(t,e,n){var o=e[0],a=e[1],i=n[0],s=i[0],u=i[1],c=n[1],l=c[0],p=c[1],d=t.shape,h=d[0],f=d[1],m=h-(s+u),v=f-(l+p);return Object(r.tidy)(function(){return Object(r.slice3d)(t,[s,l,0],[m,v,t.shape[2]]).resizeBilinear([o,a],!0)})}(t.resizeBilinear([s,u],!0),[a,i],[[l,p],[h,f]])})}var b=[353,257],w=function(){function t(t){this.mobileNet=t}return t.prototype.predictForSegmentation=function(t,e){var n=this;return void 0===e&&(e=16),c(e),Object(r.tidy)(function(){var r=n.mobileNet.predict(t,e);return n.mobileNet.convToOutput(r,\"segment_2\").sigmoid()})},t.prototype.predictForPartMap=function(t,e){var n=this;return void 0===e&&(e=16),c(e),Object(r.tidy)(function(){var r=n.mobileNet.predict(t,e),o=n.mobileNet.convToOutput(r,\"segment_2\"),a=n.mobileNet.convToOutput(r,\"part_heatmap_2\");return{segmentScores:o.sigmoid(),partHeatmapScores:a.sigmoid()}})},t.prototype.estimatePersonSegmentationActivation=function(t,e,n){var o=this;return void 0===e&&(e=16),void 0===n&&(n=.5),c(e),Object(r.tidy)(function(){var r=g(t),a=y(r,b),i=a.resizedAndPadded,s=a.paddedBy,u=o.predictForSegmentation(i,e),c=i.shape,l=c[0],p=c[1],d=r.shape;return f(x(u,[d[0],d[1]],[l,p],s).squeeze(),n)})},t.prototype.estimatePersonSegmentation=function(t,e,n){return void 0===e&&(e=16),void 0===n&&(n=.5),a(this,void 0,void 0,function(){var r,o,a,s,u;return i(this,function(i){switch(i.label){case 0:return r=this.estimatePersonSegmentationActivation(t,e,n),o=r.shape,a=o[0],s=o[1],[4,r.data()];case 1:return u=i.sent(),r.dispose(),[2,{height:a,width:s,data:u}]}})})},t.prototype.estimatePartSegmentationActivation=function(t,e,n){var o=this;return void 0===e&&(e=16),void 0===n&&(n=.5),c(e),Object(r.tidy)(function(){var r=g(t),a=y(r,b),i=a.resizedAndPadded,s=a.paddedBy,u=o.predictForPartMap(i,e),c=u.segmentScores,l=u.partHeatmapScores,p=i.shape,d=p[0],h=p[1],v=r.shape,w=v[0],C=v[1],E=x(c,[w,C],[d,h],s),N=x(l,[w,C],[d,h],s);return m(f(E.squeeze(),n),N)})},t.prototype.estimatePartSegmentation=function(t,e,n){return void 0===e&&(e=16),void 0===n&&(n=.5),a(this,void 0,void 0,function(){var r,o,a,s,u;return i(this,function(i){switch(i.label){case 0:return r=this.estimatePartSegmentationActivation(t,e,n),o=r.shape,a=o[0],s=o[1],[4,r.data()];case 1:return u=i.sent(),r.dispose(),[2,{height:a,width:s,data:u}]}})})},t.prototype.dispose=function(){this.mobileNet.dispose()},t}();var C={load:function(t){return a(void 0,void 0,void 0,function(){var e,n,r,a;return i(this,function(i){switch(i.label){case 0:return e=h[t],n=e.url,[4,Object(o.a)(n+\"model.json\")];case 1:return r=i.sent(),a=new v(r),[2,new p(a,e.architecture)]}})})}};var E={};function N(t,e,n,r){var o=t.width,a=t.height,i=e.width,s=e.height;if(o!==i||a!==s)throw new Error(\"error: dimensions must match. \"+n+\" has dimensions \"+o+\"x\"+a+\", \"+r+\" has dimensions \"+i+\"x\"+s)}function S(t){var e=t.getContext(\"2d\");e.scale(-1,1),e.translate(-t.width,0)}function R(t,e,n){t.globalCompositeOperation=n,t.drawImage(e,0,0)}function T(t){return E[t]||(E[t]=document.createElement(\"canvas\")),E[t]}function I(t,e,n){var r=t.height,o=t.width,a=n.getContext(\"2d\");n.width=o,n.height=r,a.clearRect(0,0,o,r),a.save(),/^((?!chrome|android).)*safari/i.test(navigator.userAgent)?function(t,e,n){for(var r=t.getContext(\"2d\"),o=0,a=1/(2*Math.PI*5*5),i=n<3?1:2,s=-n;s<=n;s+=i)for(var u=-n;u<=n;u+=i)o+=a*Math.exp(-(u*u+s*s)/50);for(s=-n;s<=n;s+=i)for(u=-n;u<=n;u+=i)r.globalAlpha=a*Math.exp(-(u*u+s*s)/50)/o*n,r.drawImage(e,u,s);r.globalAlpha=1}(n,t,e):(a.filter=\"blur(\"+e+\"px)\",a.drawImage(t,0,0,o,r)),a.restore()}function A(t,e,n){var r=T(n);return 0===e?function(t,e){var n=t.width,r=t.height;e.width=n,e.height=r,e.getContext(\"2d\").drawImage(t,0,0,n,r)}(t,r):I(t,e,r),r}function k(t,e){var n=T(e);return function(t,e){e.width=t.width,e.height=t.height,e.getContext(\"2d\").putImageData(t,0,0)}(t,n),n}var O={blurred:\"blurred\",blurredMask:\"blurred-mask\",mask:\"mask\",lowresPartMask:\"lowres-part-mask\"};function D(t,e){var n=k(function(t,e){void 0===e&&(e=!0);for(var n=t.width,r=t.height,o=t.data,a=new Uint8ClampedArray(n*r*4),i=0;i<r*n;++i){var s=255*(e?1-o[i]:o[i]),u=4*i;a[u+0]=0,a[u+1]=0,a[u+2]=0,a[u+3]=Math.round(s)}return new ImageData(a,n,r)}(t,!1),O.mask);return 0===e?n:A(n,e,O.blurredMask)}const _=1,M=2,F=3,P=`\\n    var timer;\\n\\n    onmessage = function(request) {\\n        switch (request.data.id) {\\n        case ${_}: {\\n            timer = setInterval(() => {\\n                postMessage({ id: ${F} });\\n            }, request.data.timeMs);\\n            break;\\n        }\\n        case ${M}: {\\n            if (timer) {\\n                clearInterval(timer);\\n            }\\n            break;\\n        }\\n        }\\n    };\\n`,B=URL.createObjectURL(new Blob([P],{type:\"application/javascript\"}));class L{constructor(t){this._bpModel=t,this._onMaskFrameTimer=this._onMaskFrameTimer.bind(this),this._onVideoFrameTimer=this._onVideoFrameTimer.bind(this),this._outputCanvasElement=document.createElement(\"canvas\"),this._outputCanvasElement.getContext(\"2d\"),this._maskCanvasElement=document.createElement(\"canvas\"),this._inputVideoElement=document.createElement(\"video\"),this._videoFrameTimerWorker=new Worker(B),this._maskFrameTimerWorker=new Worker(B),this._videoFrameTimerWorker.onmessage=this._onVideoFrameTimer,this._maskFrameTimerWorker.onmessage=this._onMaskFrameTimer}_onVideoFrameTimer(t){t.data.id===F&&this._renderVideo()}_onMaskFrameTimer(t){t.data.id===F&&this._renderMask()}startEffect(t){const e=t.getVideoTracks()[0],{height:n,frameRate:r,width:o}=e.getSettings?e.getSettings():e.getConstraints();return this._frameRate=r,this._height=n,this._width=o,this._outputCanvasElement.width=o,this._outputCanvasElement.height=n,this._maskCanvasElement.width=o,this._maskCanvasElement.height=n,this._maskCanvasContext=this._maskCanvasElement.getContext(\"2d\"),this._inputVideoElement.width=o,this._inputVideoElement.height=n,this._inputVideoElement.autoplay=!0,this._inputVideoElement.srcObject=t,this._videoFrameTimerWorker.postMessage({id:_,timeMs:1e3/this._frameRate}),this._maskFrameTimerWorker.postMessage({id:_,timeMs:50}),this._outputCanvasElement.captureStream(this._frameRate)}stopEffect(){this._videoFrameTimerWorker.postMessage({id:M}),this._maskFrameTimerWorker.postMessage({id:M})}_renderVideo(){this._maskCanvasContext.drawImage(this._inputVideoElement,0,0,this._width,this._height),this._segmentationData&&(!function(t,e,n,r,o,a){void 0===r&&(r=3),void 0===o&&(o=3),void 0===a&&(a=!1),N(e,n,\"image\",\"segmentation\");var i=A(e,r,O.blurred),s=D(n,o),u=t.getContext(\"2d\");u.save(),a&&S(t),u.drawImage(e,0,0),R(u,s,\"destination-in\"),R(u,i,\"destination-over\"),u.restore()}(this._outputCanvasElement,this._inputVideoElement,this._segmentationData,7,7),this._segmentationData=null)}_renderMask(){this._bpModel.estimatePersonSegmentation(this._maskCanvasElement,32,.75).then(t=>{this._segmentationData=t})}isEnabled(t){return t.isVideoTrack()&&\"camera\"===t.videoType}}n.d(e,\"createBlurEffect\",function(){return W});const V=function(t){return void 0===t&&(t=.75),a(this,void 0,void 0,function(){var e,n;return i(this,function(o){switch(o.label){case 0:if(null==r)throw new Error(\"Cannot find TensorFlow.js. If you are using a <script> tag, please also include @tensorflow/tfjs on the page before using this model.\");return e=Object.keys(h),r.util.assert(\"number\"==typeof t,function(){return\"got multiplier type of \"+typeof t+\" when it should be a number.\"}),r.util.assert(e.indexOf(t.toString())>=0,function(){return\"invalid multiplier value of \"+t+\".  No checkpoint exists for that multiplier. Must be one of \"+e.join(\",\")+\".\"}),[4,C.load(t)];case 1:return n=o.sent(),[2,new w(n)]}})})}(.25),z=\"webgl\";function W(){if(!MediaStreamTrack.prototype.getSettings&&!MediaStreamTrack.prototype.getConstraints)return Promise.reject(new Error(\"JitsiStreamBlurEffect not supported!\"));return new Promise((t,e)=>{if(r.getBackend()!==z)return r.setBackend(z).then(t,e);t()}).then(()=>V).then(t=>new L(t))}}]);","extractedComments":[]}