{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/home/akshayk/jitsi/Meetings/react/features/analytics/handlers/AbstractHandler.js\",\"/home/akshayk/jitsi/Meetings/react/features/analytics/handlers/GoogleAnalyticsHandler.js\",\"/home/akshayk/jitsi/Meetings/react/features/base/util/helpers.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"AbstractHandler\",\"constructor\",\"options\",\"this\",\"_enabled\",\"_whiteListedEvents\",\"whiteListedEvents\",\"_blackListedEvents\",\"blackListedEvents\",\"_extractName\",\"event\",\"type\",\"action\",\"actionSubject\",\"source\",\"_shouldIgnore\",\"Array\",\"isArray\",\"indexOf\",\"globalNS\",\"window\",\"JitsiMeetJS\",\"app\",\"analyticsHandlers\",\"push\",\"super\",\"_userProperties\",\"googleAnalyticsTrackingId\",\"Error\",\"_initGoogleAnalytics\",\"a\",\"document\",\"q\",\"arguments\",\"Date\",\"createElement\",\"getElementsByTagName\",\"async\",\"src\",\"parentNode\",\"insertBefore\",\"ga\",\"_extractValue\",\"attributes\",\"Math\",\"round\",\"parseFloat\",\"_extractLabel\",\"labelsArray\",\"keys\",\"map\",\"_userPropertiesString\",\"join\",\"setUserProperties\",\"userProps\",\"filter\",\"sendEvent\",\"gaEvent\",\"eventCategory\",\"eventAction\",\"eventLabel\",\"isNaN\",\"eventValue\"],\"mappings\":\"aACA,IAAAA,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,GAAA,CACAG,EAAAH,EACAI,GAAA,EACAH,QAAA,IAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,EAAAA,EAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,QAAAA,OAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,aAAA,CAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,GAAA,EAAAE,GAAA,iBAAAF,GAAAA,GAAAA,EAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,UAAA,CAAyCT,YAAA,EAAAK,MAAAA,IACzC,EAAAE,GAAA,iBAAAF,EAAA,IAAA,IAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,GAAAA,EAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,SAIAlC,EAAAA,EAAAmC,EAAA,yCC/Ee,MAAMC,EAMjBC,YAAYC,EAAU,IAClBC,KAAKC,UAAW,EAChBD,KAAKE,mBAAqBH,EAAQI,kBAMlCH,KAAKI,mBAAqB,IAClBL,EAAQM,mBAAqB,GACjC,UAAW,YAAa,gBAAiB,mBAAoB,sBAAuB,oBACpF,gBAURC,aAAaC,GAET,GAAmB,SAAfA,EAAMC,KACN,OAAOD,EAAMnC,KAGjB,MAAMqC,OACFA,EADEC,cAEFA,EAFEC,OAGFA,GACAJ,EASJ,IAAInC,EAAOqC,EASX,OAPIC,GAAiBA,IAAkBD,IACnCrC,KAAUsC,KAAiBD,KAE3BE,GAAUA,IAAWF,IACrBrC,KAAUuC,KAAUvC,KAGjBA,EASXwC,cAAcL,GACV,IAAKA,IAAUP,KAAKC,SAChB,OAAO,EAGX,MAAM7B,EAAO4B,KAAKM,aAAaC,GAE/B,OAAIM,MAAMC,QAAQd,KAAKE,qBAC+B,IAA3CF,KAAKE,mBAAmBa,QAAQ3C,KAGvCyC,MAAMC,QAAQd,KAAKI,sBAC+B,IAA3CJ,KAAKI,mBAAmBW,QAAQ3C,ICgEnD,MAAM4C,GChFGC,OAAOC,cACRD,OAAOC,YAAc,IAGpBD,OAAOC,YAAYC,MACpBF,OAAOC,YAAYC,IAAM,IAGtBF,OAAOC,YAAYC,KD0E9BH,EAASI,kBAAoBJ,EAASI,mBAAqB,GAC3DJ,EAASI,kBAAkBC,KAzI3B,cAAqCxB,EASjCC,YAAYC,GAKR,GAJAuB,MAAMvB,GAENC,KAAKuB,gBAAkB,IAElBxB,EAAQyB,0BACT,MAAM,IAAIC,MAAM,iEAGpBzB,KAAKC,UAAW,EAChBD,KAAK0B,qBAAqB3B,GAW9B2B,qBAAqB3B,GAKjB,IAAUlC,EAAE+B,EAAEtB,EAAIK,EAAEgD,EAAE1D,EAAZJ,EAEPoD,OAFSrB,EAEFgC,SAFItD,EAEK,SAFDK,EAEoD,KAF7Cd,EAAC,sBAA0Bc,EAAEd,EAAC,GAAIA,EAAC,IAAK,YAC5DA,EAAC,GAAIgE,EAAEhE,EAAC,GAAIgE,GAAG,IAAIR,KAAKS,YAAYjE,EAAC,GAAIC,EAAE,EAAE,IAAIiE,KAAOJ,EAAE/B,EAAEoC,cAAc1D,GAAGL,EAAE2B,EAAEqC,qBAAqB3D,GAAG,GAAGqD,EAAEO,MAAM,EAAEP,EAAEQ,IACjG,0CADuGlE,EAAEmE,WAAWC,aAAaV,EAAE1D,GAG/JqE,GAAG,SAAUvC,EAAQyB,0BAA2B,QAChDc,GAAG,OAAQ,YAafC,cAAchC,GACV,IAAIzB,EAAQyB,GAASA,EAAMiC,YAAcjC,EAAMiC,WAAW1D,MAK1D,OAFAA,EAAQ2D,KAAKC,MAAMC,WAAW7D,IAclC8D,cAAcrC,GACV,MAAMiC,WAAEA,EAAa,IAAOjC,EACtBsC,EACAtE,OAAOuE,KAAKN,GAAYO,IAAI3D,MAAUA,KAAOoD,EAAWpD,MAI9D,OAFAyD,EAAYxB,KAAKrB,KAAKgD,uBAEfH,EAAYI,KAAK,KAS5BC,kBAAkBC,EAAY,IAC1B,IAAKnD,KAAKC,SACN,OAMJ,MAAMmD,EAAS,CAAE,aAAc,kBAE/BpD,KAAKgD,sBACCzE,OAAOuE,KAAKK,GACTC,OAAOhE,IAAgC,IAAzBgE,EAAOrC,QAAQ3B,IAC7B2D,IAAI3D,gBAAoBA,KAAO+D,EAAU/D,MACzC6D,KAAK,KAYlBI,UAAU9C,GACN,GAAIP,KAAKY,cAAcL,GACnB,OAGJ,MAAM+C,EAAU,CACZC,cAAiB,aACjBC,YAAexD,KAAKM,aAAaC,GACjCkD,WAAczD,KAAK4C,cAAcrC,IAE/BzB,EAAQkB,KAAKuC,cAAchC,GAE5BmD,MAAM5E,KACPwE,EAAQK,WAAa7E,GAGzBwD,GAAG,OAAQ,QAASgB\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"/libs/\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 0);\\n\",\"/**\\n * Abstract implementation of analytics handler\\n */\\nexport default class AbstractHandler {\\n    /**\\n     * Creates new instance.\\n     *\\n     * @param {Object} options - Optional parameters.\\n     */\\n    constructor(options = {}) {\\n        this._enabled = false;\\n        this._whiteListedEvents = options.whiteListedEvents;\\n\\n        // FIXME:\\n        // Keeping the list with the very noisy events so that we don't flood with events whoever hasn't configured\\n        // white/black lists yet. We need to solve this issue properly by either making these events not so noisy or\\n        // by removing them completely from the code.\\n        this._blackListedEvents = [\\n            ...(options.blackListedEvents || []), // eslint-disable-line no-extra-parens\\n            'e2e_rtt', 'rtp.stats', 'rtt.by.region', 'available.device', 'stream.switch.delay', 'ice.state.changed',\\n            'ice.duration'\\n        ];\\n    }\\n\\n    /**\\n     * Extracts a name for the event from the event properties.\\n     *\\n     * @param {Object} event - The analytics event.\\n     * @returns {string} - The extracted name.\\n     */\\n    _extractName(event) {\\n        // Page events have a single 'name' field.\\n        if (event.type === 'page') {\\n            return event.name;\\n        }\\n\\n        const {\\n            action,\\n            actionSubject,\\n            source\\n        } = event;\\n\\n        // All events have action, actionSubject, and source fields. All\\n        // three fields are required, and often jitsi-meet and\\n        // lib-jitsi-meet use the same value when separate values are not\\n        // necessary (i.e. event.action == event.actionSubject).\\n        // Here we concatenate these three fields, but avoid adding the same\\n        // value twice, because it would only make the event's name harder\\n        // to read.\\n        let name = action;\\n\\n        if (actionSubject && actionSubject !== action) {\\n            name = `${actionSubject}.${action}`;\\n        }\\n        if (source && source !== action) {\\n            name = `${source}.${name}`;\\n        }\\n\\n        return name;\\n    }\\n\\n    /**\\n     * Checks if an event should be ignored or not.\\n     *\\n     * @param {Object} event - The event.\\n     * @returns {boolean}\\n     */\\n    _shouldIgnore(event) {\\n        if (!event || !this._enabled) {\\n            return true;\\n        }\\n\\n        const name = this._extractName(event);\\n\\n        if (Array.isArray(this._whiteListedEvents)) {\\n            return this._whiteListedEvents.indexOf(name) === -1;\\n        }\\n\\n        if (Array.isArray(this._blackListedEvents)) {\\n            return this._blackListedEvents.indexOf(name) !== -1;\\n        }\\n\\n        return false;\\n    }\\n}\\n\",\"/* global ga */\\n\\nimport { getJitsiMeetGlobalNS } from '../../base/util';\\n\\nimport AbstractHandler from './AbstractHandler';\\n\\n/**\\n * Analytics handler for Google Analytics.\\n */\\nclass GoogleAnalyticsHandler extends AbstractHandler {\\n\\n    /**\\n     * Creates new instance of the GA analytics handler.\\n     *\\n     * @param {Object} options -\\n     * @param {string} options.googleAnalyticsTrackingId - The GA track id\\n     * required by the GA API.\\n     */\\n    constructor(options) {\\n        super(options);\\n\\n        this._userProperties = {};\\n\\n        if (!options.googleAnalyticsTrackingId) {\\n            throw new Error('Failed to initialize Google Analytics handler, no tracking ID');\\n        }\\n\\n        this._enabled = true;\\n        this._initGoogleAnalytics(options);\\n    }\\n\\n    /**\\n     * Initializes the ga object.\\n     *\\n     * @param {Object} options -\\n     * @param {string} options.googleAnalyticsTrackingId - The GA track id\\n     * required by the GA API.\\n     * @returns {void}\\n     */\\n    _initGoogleAnalytics(options) {\\n        /**\\n         * TODO: Keep this local, there's no need to add it to window.\\n         */\\n        /* eslint-disable */\\n        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\\n            (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\\n        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');\\n        /* eslint-enable */\\n        ga('create', options.googleAnalyticsTrackingId, 'auto');\\n        ga('send', 'pageview');\\n    }\\n\\n    /**\\n     * Extracts the integer to use for a Google Analytics event's value field\\n     * from a lib-jitsi-meet analytics event.\\n     *\\n     * @param {Object} event - The lib-jitsi-meet analytics event.\\n     * @returns {number} - The integer to use for the 'value' of a Google\\n     * analytics event, or NaN if the lib-jitsi-meet event doesn't contain a\\n     * suitable value.\\n     * @private\\n     */\\n    _extractValue(event) {\\n        let value = event && event.attributes && event.attributes.value;\\n\\n        // Try to extract an integer from the \\\"value\\\" attribute.\\n        value = Math.round(parseFloat(value));\\n\\n        return value;\\n    }\\n\\n    /**\\n     * Extracts the string to use for a Google Analytics event's label field\\n     * from a lib-jitsi-meet analytics event.\\n     *\\n     * @param {Object} event - The lib-jitsi-meet analytics event.\\n     * @returns {string} - The string to use for the 'label' of a Google\\n     * analytics event.\\n     * @private\\n     */\\n    _extractLabel(event) {\\n        const { attributes = {} } = event;\\n        const labelsArray\\n            = Object.keys(attributes).map(key => `${key}=${attributes[key]}`);\\n\\n        labelsArray.push(this._userPropertiesString);\\n\\n        return labelsArray.join('&');\\n    }\\n\\n    /**\\n     * Sets the permanent properties for the current session.\\n     *\\n     * @param {Object} userProps - The permanent portperties.\\n     * @returns {void}\\n     */\\n    setUserProperties(userProps = {}) {\\n        if (!this._enabled) {\\n            return;\\n        }\\n\\n        // The label field is limited to 500B. We will concatenate all\\n        // attributes of the event, except the user agent because it may be\\n        // lengthy and is probably included from elsewhere.\\n        const filter = [ 'user_agent', 'callstats_name' ];\\n\\n        this._userPropertiesString\\n            = Object.keys(userProps)\\n                .filter(key => filter.indexOf(key) === -1)\\n                .map(key => `permanent_${key}=${userProps[key]}`)\\n                .join('&');\\n    }\\n\\n    /**\\n     * This is the entry point of the API. The function sends an event to\\n     * google analytics. The format of the event is described in\\n     * analyticsAdapter in lib-jitsi-meet.\\n     *\\n     * @param {Object} event - The event in the format specified by\\n     * lib-jitsi-meet.\\n     * @returns {void}\\n     */\\n    sendEvent(event) {\\n        if (this._shouldIgnore(event)) {\\n            return;\\n        }\\n\\n        const gaEvent = {\\n            'eventCategory': 'jitsi-meet',\\n            'eventAction': this._extractName(event),\\n            'eventLabel': this._extractLabel(event)\\n        };\\n        const value = this._extractValue(event);\\n\\n        if (!isNaN(value)) {\\n            gaEvent.eventValue = value;\\n        }\\n\\n        ga('send', 'event', gaEvent);\\n    }\\n\\n}\\n\\nconst globalNS = getJitsiMeetGlobalNS();\\n\\nglobalNS.analyticsHandlers = globalNS.analyticsHandlers || [];\\nglobalNS.analyticsHandlers.push(GoogleAnalyticsHandler);\\n\",\"// @flow\\n\\n/**\\n * Creates a deferred object.\\n *\\n * @returns {{promise, resolve, reject}}\\n */\\nexport function createDeferred(): Object {\\n    const deferred = {};\\n\\n    deferred.promise = new Promise((resolve, reject) => {\\n        deferred.resolve = resolve;\\n        deferred.reject = reject;\\n    });\\n\\n    return deferred;\\n}\\n\\nconst MATCH_OPERATOR_REGEXP = /[|\\\\\\\\{}()[\\\\]^$+*?.-]/g;\\n\\n/**\\n * Escape RegExp special characters.\\n *\\n * Based on https://github.com/sindresorhus/escape-string-regexp.\\n *\\n * @param {string} s - The regexp string to escape.\\n * @returns {string}\\n */\\nexport function escapeRegexp(s: string) {\\n    if (typeof s !== 'string') {\\n        throw new TypeError('Expected a string');\\n    }\\n\\n    return s.replace(MATCH_OPERATOR_REGEXP, '\\\\\\\\$&');\\n}\\n\\n/**\\n * Returns the base URL of the app.\\n *\\n * @param {Object} w - Window object to use instead of the built in one.\\n * @returns {string}\\n */\\nexport function getBaseUrl(w: Object = window) {\\n    const doc = w.document;\\n    const base = doc.querySelector('base');\\n\\n    if (base && base.href) {\\n        return base.href;\\n    }\\n\\n    const { protocol, host } = w.location;\\n\\n    return `${protocol}//${host}`;\\n}\\n\\n/**\\n * Returns the namespace for all global variables, functions, etc that we need.\\n *\\n * @returns {Object} The namespace.\\n *\\n * NOTE: After React-ifying everything this should be the only global.\\n */\\nexport function getJitsiMeetGlobalNS() {\\n    if (!window.JitsiMeetJS) {\\n        window.JitsiMeetJS = {};\\n    }\\n\\n    if (!window.JitsiMeetJS.app) {\\n        window.JitsiMeetJS.app = {};\\n    }\\n\\n    return window.JitsiMeetJS.app;\\n}\\n\\n/**\\n * A helper function that behaves similar to Object.assign, but only reassigns a\\n * property in target if it's defined in source.\\n *\\n * @param {Object} target - The target object to assign the values into.\\n * @param {Object} source - The source object.\\n * @returns {Object}\\n */\\nexport function assignIfDefined(target: Object, source: Object) {\\n    const to = Object(target);\\n\\n    for (const nextKey in source) {\\n        if (source.hasOwnProperty(nextKey)) {\\n            const value = source[nextKey];\\n\\n            if (typeof value !== 'undefined') {\\n                to[nextKey] = value;\\n            }\\n        }\\n    }\\n\\n    return to;\\n}\\n\\n/**\\n * Prints the error and reports it to the global error handler.\\n *\\n * @param {Error} e - The error object.\\n * @param {string} msg - A custom message to print in addition to the error.\\n * @returns {void}\\n */\\nexport function reportError(e: Object, msg: string = '') {\\n    console.error(msg, e);\\n    window.onerror && window.onerror(msg, null, null, null, e);\\n}\\n\"]}","code":"!function(e){var t={};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)n.d(r,i,function(t){return e[t]}.bind(null,i));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"/libs/\",n(n.s=0)}([function(e,t,n){\"use strict\";n.r(t);class r{constructor(e={}){this._enabled=!1,this._whiteListedEvents=e.whiteListedEvents,this._blackListedEvents=[...e.blackListedEvents||[],\"e2e_rtt\",\"rtp.stats\",\"rtt.by.region\",\"available.device\",\"stream.switch.delay\",\"ice.state.changed\",\"ice.duration\"]}_extractName(e){if(\"page\"===e.type)return e.name;const{action:t,actionSubject:n,source:r}=e;let i=t;return n&&n!==t&&(i=`${n}.${t}`),r&&r!==t&&(i=`${r}.${i}`),i}_shouldIgnore(e){if(!e||!this._enabled)return!0;const t=this._extractName(e);return Array.isArray(this._whiteListedEvents)?-1===this._whiteListedEvents.indexOf(t):!!Array.isArray(this._blackListedEvents)&&-1!==this._blackListedEvents.indexOf(t)}}const i=(window.JitsiMeetJS||(window.JitsiMeetJS={}),window.JitsiMeetJS.app||(window.JitsiMeetJS.app={}),window.JitsiMeetJS.app);i.analyticsHandlers=i.analyticsHandlers||[],i.analyticsHandlers.push(class extends r{constructor(e){if(super(e),this._userProperties={},!e.googleAnalyticsTrackingId)throw new Error(\"Failed to initialize Google Analytics handler, no tracking ID\");this._enabled=!0,this._initGoogleAnalytics(e)}_initGoogleAnalytics(e){var t,n,r,i,a,s;t=window,n=document,r=\"script\",i=\"ga\",t.GoogleAnalyticsObject=i,t.ga=t.ga||function(){(t.ga.q=t.ga.q||[]).push(arguments)},t.ga.l=1*new Date,a=n.createElement(r),s=n.getElementsByTagName(r)[0],a.async=1,a.src=\"//www.google-analytics.com/analytics.js\",s.parentNode.insertBefore(a,s),ga(\"create\",e.googleAnalyticsTrackingId,\"auto\"),ga(\"send\",\"pageview\")}_extractValue(e){let t=e&&e.attributes&&e.attributes.value;return t=Math.round(parseFloat(t))}_extractLabel(e){const{attributes:t={}}=e,n=Object.keys(t).map(e=>`${e}=${t[e]}`);return n.push(this._userPropertiesString),n.join(\"&\")}setUserProperties(e={}){if(!this._enabled)return;const t=[\"user_agent\",\"callstats_name\"];this._userPropertiesString=Object.keys(e).filter(e=>-1===t.indexOf(e)).map(t=>`permanent_${t}=${e[t]}`).join(\"&\")}sendEvent(e){if(this._shouldIgnore(e))return;const t={eventCategory:\"jitsi-meet\",eventAction:this._extractName(e),eventLabel:this._extractLabel(e)},n=this._extractValue(e);isNaN(n)||(t.eventValue=n),ga(\"send\",\"event\",t)}})}]);","extractedComments":[]}